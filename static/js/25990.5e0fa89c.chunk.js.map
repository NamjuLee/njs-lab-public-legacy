{"version":3,"file":"static/js/25990.5e0fa89c.chunk.js","mappings":"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","sources":["njslab/LabStarter/AppNGL3d/NGL3dApp_09/Mesh/Geometry/index.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_09/Mesh/Meshes/Core/Base.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_09/Mesh/Meshes/Primatives/MulitQuad.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_09/Utility/Matrix4.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_09/Utility/Vector3.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_09/WebGL/Model.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_09/WebGL/Shader.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_09/WebGL/Transform.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_09/WebGL/VAO.ts"],"sourcesContent":["\r\nexport class Geometry {\r\n\r\n    vert: number[] = [];\r\n    UV: number[] = [];\r\n    index: number[] = [];\r\n    normal: number[] = [];\r\n\r\n    static GetPlan() {\r\n        let geo = new Geometry();\r\n        geo.vert = [-0.5, 0.5, 0, -0.5, -0.5, 0, 0.5, -0.5, 0, 0.5, 0.5, 0];\r\n        geo.UV = [0., 0., 0., 1., 1., 1., 1., 0.];\r\n        geo.index = [0, 1, 2, 2, 3, 0];\r\n        return geo;\r\n    }\r\n    static GetQuad() {\r\n        let geo = new Geometry();\r\n        geo.vert = [-0.5, 0.5, 0, -0.5, -0.5, 0, 0.5, -0.5, 0, 0.5, 0.5, 0];\r\n        geo.UV = [0., 0., 0., 1., 1., 1., 1., 0.];\r\n        geo.index = [0, 1, 2, 2, 3, 0];\r\n        return geo;\r\n    }\r\n    static GetMulitQuad() {\r\n        let geo = new Geometry();\r\n\r\n        // geo.vert = [ -0.5, 0.5, 0, -0.5, -0.5, 0, 0.5, -0.5, 0, 0.5, 0.5, 0 ];\r\n\r\n        // geo.UV = [ 0., 0., 0., 1., 1., 1., 1., 0. ];\r\n        // geo.index = [ 0, 1, 2,  2, 3, 0 ];\r\n\r\n        geo.vert = [];\r\n        geo.index = []; // 0,1,2, 2,3,0\r\n        geo.UV = []; // 0,0, 0,1, 1,1, 1,0\r\n\r\n        for (let i = 0; i < 10; i++) {\r\n            // Calculate a random size, y rotation and position for the quad\r\n            let size = 0.2 + (0.8 * Math.random()),\t\t// Random Quad Size in the range of 0.2 - 1.0\r\n                half = size * 0.5,\t\t\t\t\t\t// Half of size, this is the radius for rotation\r\n                angle = Math.PI * 2 * Math.random(),\t// Random angle between 0 - 360 degrees in radians\r\n                dx = half * Math.cos(angle),\t\t\t// Calc the x distance, used as an offset for the random position\r\n                dy = half * Math.sin(angle),\t\t\t// Calc the y distance, for same offset but used in z\r\n                x = -2.5 + (Math.random() * 5),\t\t\t// Random position between -2.5 - 2.5\r\n                y = -2.5 + (Math.random() * 5),\r\n                z = 2.5 - (Math.random() * 5),\r\n                p = i * 4;\t\t\t\t\t\t\t\t// Index of the first vertex of a quad\r\n\r\n            // Build the 4 points of the quad\r\n            geo.vert.push(x - dx, y + half, z - dy);\t\t// TOP LEFT\r\n            geo.vert.push(x - dx, y - half, z - dy);\t\t// BOTTOM LEFT\r\n            geo.vert.push(x + dx, y - half, z + dy);\t\t// BOTTOM RIGHT\r\n            geo.vert.push(x + dx, y + half, z + dy);\t\t// TOP RIGHT\r\n\r\n            geo.UV.push(0, 0, 0, 1, 1, 1, 1, 0);\t\t// Quad's UV\r\n            geo.index.push(p, p + 1, p + 2, p + 2, p + 3, p);\t// Quad's Index\r\n        }\r\n        return geo;\r\n    }\r\n    static GetCube(width: number, height: number, depth: number, x: number, y: number, z: number) {\r\n        let geo = new Geometry();\r\n        let w = width * 0.5, h = height * 0.5, d = depth * 0.5;\r\n        let x0 = x - w, x1 = x + w, y0 = y - h, y1 = y + h, z0 = z - d, z1 = z + d;\r\n\r\n        // Starting bottom left corner, then working counter clockwise to create the front face.\r\n        // Backface is the first face but in reverse (3,2,1,0)\r\n        // keep each quad face built the same way to make index and uv easier to assign\r\n        geo.vert = [\r\n            x0, y1, z1, 0,\t// 0 Front\r\n            x0, y0, z1, 0,\t// 1\r\n            x1, y0, z1, 0,\t// 2\r\n            x1, y1, z1, 0,\t// 3\r\n\r\n            x1, y1, z0, 1,\t// 4 Back\r\n            x1, y0, z0, 1,\t// 5\r\n            x0, y0, z0, 1,\t// 6\r\n            x0, y1, z0, 1,\t// 7\r\n\r\n            x0, y1, z0, 2,\t// 7 Left\r\n            x0, y0, z0, 2,\t// 6\r\n            x0, y0, z1, 2,\t// 1\r\n            x0, y1, z1, 2,\t// 0\r\n\r\n            x0, y0, z1, 3,\t// 1 Bottom\r\n            x0, y0, z0, 3,\t// 6\r\n            x1, y0, z0, 3,\t// 5\r\n            x1, y0, z1, 3,\t// 2\r\n\r\n            x1, y1, z1, 4,\t// 3 Right\r\n            x1, y0, z1, 4,\t// 2\r\n            x1, y0, z0, 4,\t// 5\r\n            x1, y1, z0, 4,\t// 4\r\n\r\n            x0, y1, z0, 5,\t// 7 Top\r\n            x0, y1, z1, 5,\t// 0\r\n            x1, y1, z1, 5,\t// 3\r\n            x1, y1, z0, 5\t// 4\r\n        ];\r\n\r\n        // Build the index of each quad [0,1,2, 2,3,0]\r\n        for (let i = 0; i < geo.vert.length / 4; i += 2) {\r\n            geo.index.push(i, i + 1, (Math.floor(i / 4) * 4) + ((i + 2) % 4));\r\n        }\r\n\r\n        // Build UV data for each vertex\r\n        for (let i = 0; i < 6; i++) {\r\n            geo.UV.push(0, 0, 0, 1, 1, 1, 1, 0);\r\n        }\r\n\r\n        // Build Normal data for each vertex\r\n        geo.normal = [\r\n            0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1,\t\t// Front\r\n            0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1,\t\t// Back\r\n            -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0,\t\t// Left\r\n            0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1, 0,\t\t// Bottom\r\n            1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,\t\t// Right\r\n            0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0\t\t// Top\r\n        ];\r\n\r\n        // let mesh = gl.fCreateMeshVAO(\"Cube\",aIndex,aVert,aNorm,aUV,4);\r\n        // mesh.noCulling = true;\t// TODO Only setting this true to view animations better.\r\n        // return mesh;\r\n        return geo;\r\n    }\r\n    constructor() {\r\n        //\r\n    }\r\n\r\n}","import { Scene } from '../../../Core/Scene';\r\n\r\nexport class MeshBase {\r\n    scene: Scene;\r\n    constructor(scene: Scene) {\r\n        this.scene = scene;\r\n        this.scene.add(this);\r\n    }\r\n    render() {\r\n        //\r\n    }\r\n}","import { Vector3 } from '../../../Utility/Vector3';\r\n\r\nimport { VAO } from '../../../WebGL/VAO';\r\nimport { Model } from '../../../WebGL/Model';\r\n\r\nimport { NGL3dApp } from '../../..';\r\n\r\nimport { Geometry } from '../../Geometry';\r\nimport { Shader } from '../../../WebGL/Shader';\r\nimport { MeshBase } from '../Core/Base';\r\n\r\nclass ShaderQuad extends Shader {\r\n\r\n    uPointSize: WebGLUniformLocation | null;\r\n    uAngle: WebGLUniformLocation | null;\r\n\r\n    pMatrix: Float32Array;\r\n    constructor(gl: WebGL2RenderingContext, vertSrc: string, fragSrc: string, pMatrix: Float32Array) {\r\n        super(gl, vertSrc, fragSrc);\r\n        this.pMatrix = pMatrix;\r\n\r\n        // Our shader uses custom uniforms, this is the time to get its location for future use.\r\n        if (this.program) {\r\n            this.setPerspective(pMatrix);\r\n\r\n            this.uPointSize = gl.getUniformLocation(this.program, 'uPointSize');\r\n            this.uAngle = gl.getUniformLocation(this.program, 'uAngle');\r\n\r\n            // gl.useProgram(this.program);\r\n            gl.useProgram(null); // Done setting up shader\r\n        }\r\n    }\r\n    // Simple function that passes in Angle and Pointsize uniform data to the shader program.\r\n    set(size: number, angle: number) {\r\n        // this.gl.useProgram(null);\r\n        this.gl.uniform1f(this.uAngle, angle);\r\n        this.gl.uniform1f(this.uPointSize, size);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class MulitQuad extends MeshBase {\r\n    v = `#version 300 es\r\n\r\n        in vec3 a_position;\t//Standard position data.\r\n        in vec2 a_uv;\r\n\r\n        uniform mat4 uPMatrix;\r\n        uniform mat4 uMVMatrix;\r\n        uniform mat4 uCameraMatrix;\r\n\r\n        out vec2 uv;\r\n\r\n        void main(void) {\r\n            uv = a_uv;\r\n            gl_Position = uPMatrix * uCameraMatrix * uMVMatrix * vec4(a_position, 1.0);\r\n        }\r\n    `;\r\n\r\n    f = `#version 300 es\r\n\r\n    precision mediump float;\r\n    in vec2 uv;\r\n\r\n    out vec4 finalColor;\r\n\r\n    void main(void) {\r\n\r\n        //Square Border\r\n        // float c = (uv.x <= 0.1 || uv.x >=0.9 || uv.y <= 0.1 || uv.y >= 0.9)? 0.0 : 1.0;\r\n\r\n        // finalColor = vec4(c,c,c,1.0-c);\r\n        // finalColor = vec4(1.0, 0.0, 1.0, 1.0);\r\n\r\n        // //Circle\r\n        // //  /*\r\n        vec2 delta = uv - vec2(0.5,0.5); //delta position from center;\r\n        float dist = 0.5 - sqrt(delta.x*delta.x + delta.y*delta.y);\r\n\r\n        float border = 0.01;\r\n        float a = 0.0;\r\n\r\n        if(dist > border) a = 1.0;\r\n        else if(dist > 0.0) a = dist / border;\r\n\r\n        finalColor = vec4(0.0, 0.0, 0.0, a);\r\n        // //  */\r\n    }\r\n    `;\r\n    app: NGL3dApp;\r\n    vao: VAO;\r\n    shader: ShaderQuad;\r\n    model: Model;\r\n\r\n    geometry: Geometry;\r\n\r\n    size: number = 20.5;\r\n    rotation: number = 0.0;\r\n\r\n    constructor(app: NGL3dApp) {\r\n        super(app.scene);\r\n        this.app = app;\r\n\r\n        this.geometry = Geometry.GetMulitQuad();\r\n\r\n        // var mesh = this.app.canvas.gl.fCreateMeshVAO('MultiQuad', aIndex, aVert, null, aUV);\r\n        // mesh.noCulling = true;\r\n        // mesh.doBlending = true;\r\n        // return mesh;\r\n\r\n        this.shader = new ShaderQuad(this.app.canvas.gl, this.v, this.f, this.app.camera.projectionMatrix);\r\n        this.vao = new VAO(app.canvas.gl, 'MultiQuad', this.geometry.vert, this.geometry.index, undefined, this.geometry.UV);\r\n        this.vao.noCulling = true;\r\n        this.vao.doBlending = true;\r\n\r\n        this.model = new Model(this.vao);\r\n\r\n    }\r\n    render() {\r\n        // console.log(this);\r\n        this.size += 0.01;\r\n        // let size = (Math.sin(this.size) * 10.0) + 20.0;\r\n\r\n        this.model.transform.position = new Vector3(0, 0, this.model.transform.position.z + -0.01);\r\n\r\n        this.shader.activate();\r\n        this.shader.setPerspective(this.shader.pMatrix);\r\n        // this.shader.set(size,  this.rotation);\r\n        // this.shader.activate().setCameraMatrix(this.app.camera.viewMatrix).renderModel(this.model.preRender());\r\n        this.shader.setCameraMatrix(this.app.camera.viewMatrix);\r\n        this.shader.renderModel(this.model.preRender());\r\n\r\n    }\r\n}","import { Vector3 } from './Vector3';\r\n\r\nexport class Matrix4 {\r\n    raw: Float32Array;\r\n    // ....................................................................\r\n    // Static Data Methods\r\n    static identity() {\r\n        let a = new Float32Array(16);\r\n        a[0] = a[5] = a[10] = a[15] = 1;\r\n        return a;\r\n    }\r\n\r\n    // from glMatrix\r\n    static perspective(out: Float32Array, fovy: number, aspect: number, near: number, far: number) {\r\n        let f = 1.0 / Math.tan(fovy / 2), nf = 1 / (near - far);\r\n        out[0] = f / aspect;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = f;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = (far + near) * nf;\r\n        out[11] = -1;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = (2 * far * near) * nf;\r\n        out[15] = 0;\r\n    }\r\n\r\n    static ortho(out: number[], left: number, right: number, bottom: number, top: number, near: number, far: number) {\r\n        let lr = 1 / (left - right),\r\n            bt = 1 / (bottom - top),\r\n            nf = 1 / (near - far);\r\n        out[0] = -2 * lr;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = -2 * bt;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = 2 * nf;\r\n        out[11] = 0;\r\n        out[12] = (left + right) * lr;\r\n        out[13] = (top + bottom) * bt;\r\n        out[14] = (far + near) * nf;\r\n        out[15] = 1;\r\n    }\r\n    // https:// github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js\r\n    // make the rows into the columns\r\n    static transpose(out: number[], a: number[]) {\r\n        // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n        if (out === a) {\r\n            let a01 = a[1], a02 = a[2], a03 = a[3], a12 = a[6], a13 = a[7], a23 = a[11];\r\n            out[1] = a[4];\r\n            out[2] = a[8];\r\n            out[3] = a[12];\r\n            out[4] = a01;\r\n            out[6] = a[9];\r\n            out[7] = a[13];\r\n            out[8] = a02;\r\n            out[9] = a12;\r\n            out[11] = a[14];\r\n            out[12] = a03;\r\n            out[13] = a13;\r\n            out[14] = a23;\r\n        } else {\r\n            out[0] = a[0];\r\n            out[1] = a[4];\r\n            out[2] = a[8];\r\n            out[3] = a[12];\r\n            out[4] = a[1];\r\n            out[5] = a[5];\r\n            out[6] = a[9];\r\n            out[7] = a[13];\r\n            out[8] = a[2];\r\n            out[9] = a[6];\r\n            out[10] = a[10];\r\n            out[11] = a[14];\r\n            out[12] = a[3];\r\n            out[13] = a[7];\r\n            out[14] = a[11];\r\n            out[15] = a[15];\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    // Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n    static normalMat3(out: Float32Array, a: Float32Array) {\r\n        let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n            a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n            a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n            a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\r\n\r\n            b00 = a00 * a11 - a01 * a10,\r\n            b01 = a00 * a12 - a02 * a10,\r\n            b02 = a00 * a13 - a03 * a10,\r\n            b03 = a01 * a12 - a02 * a11,\r\n            b04 = a01 * a13 - a03 * a11,\r\n            b05 = a02 * a13 - a03 * a12,\r\n            b06 = a20 * a31 - a21 * a30,\r\n            b07 = a20 * a32 - a22 * a30,\r\n            b08 = a20 * a33 - a23 * a30,\r\n            b09 = a21 * a32 - a22 * a31,\r\n            b10 = a21 * a33 - a23 * a31,\r\n            b11 = a22 * a33 - a23 * a32,\r\n\r\n            //  Calculate the determinant\r\n            det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) { return null; }\r\n\r\n        det = 1.0 / det;\r\n\r\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n        out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n        out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        return out;\r\n    }\r\n\r\n    // ....................................................................\r\n    // Static Operation\r\n\r\n    // https:// github.com/gregtatum/mdn-model-view-projection/blob/master/shared/matrices.js\r\n    static multiplyVector(mat4: Matrix4, v: number[]) {\r\n        let x = v[0], y = v[1], z = v[2], w = v[3];\r\n        let c1r1 = mat4[0], c2r1 = mat4[1], c3r1 = mat4[2], c4r1 = mat4[3],\r\n            c1r2 = mat4[4], c2r2 = mat4[5], c3r2 = mat4[6], c4r2 = mat4[7],\r\n            c1r3 = mat4[8], c2r3 = mat4[9], c3r3 = mat4[10], c4r3 = mat4[11],\r\n            c1r4 = mat4[12], c2r4 = mat4[13], c3r4 = mat4[14], c4r4 = mat4[15];\r\n\r\n        return [\r\n            x * c1r1 + y * c1r2 + z * c1r3 + w * c1r4,\r\n            x * c2r1 + y * c2r2 + z * c2r3 + w * c2r4,\r\n            x * c3r1 + y * c3r2 + z * c3r3 + w * c3r4,\r\n            x * c4r1 + y * c4r2 + z * c4r3 + w * c4r4\r\n        ];\r\n    }\r\n\r\n    // https:// github.com/toji/gl-matrix/blob/master/src/gl-matrix/vec4.js, vec4.transformMat4\r\n    static transformVec4(out: Float32Array, v: number[], m: Float32Array) {\r\n        out[0] = m[0] * v[0] + m[4] * v[1] + m[8] * v[2] + m[12] * v[3];\r\n        out[1] = m[1] * v[0] + m[5] * v[1] + m[9] * v[2] + m[13] * v[3];\r\n        out[2] = m[2] * v[0] + m[6] * v[1] + m[10] * v[2] + m[14] * v[3];\r\n        out[3] = m[3] * v[0] + m[7] * v[1] + m[11] * v[2] + m[15] * v[3];\r\n        return out;\r\n    }\r\n\r\n    // From glMatrix\r\n    // Multiple two mat4 together\r\n    static mult(out: Float32Array, a: Float32Array, b: Float32Array) {\r\n        let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n            a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n            a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n            a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n        //  Cache only the current line of the second matrix\r\n        let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\r\n        out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\r\n        out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\r\n        out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\r\n        out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        return out;\r\n    }\r\n\r\n    // ....................................................................\r\n    // Static Transformation\r\n    static scale(out: Float32Array, x: number, y: number, z: number) {\r\n        out[0] *= x;\r\n        out[1] *= x;\r\n        out[2] *= x;\r\n        out[3] *= x;\r\n        out[4] *= y;\r\n        out[5] *= y;\r\n        out[6] *= y;\r\n        out[7] *= y;\r\n        out[8] *= z;\r\n        out[9] *= z;\r\n        out[10] *= z;\r\n        out[11] *= z;\r\n        return out;\r\n    }\r\n\r\n    static rotateY(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a00 = out[0],\r\n            a01 = out[1],\r\n            a02 = out[2],\r\n            a03 = out[3],\r\n            a20 = out[8],\r\n            a21 = out[9],\r\n            a22 = out[10],\r\n            a23 = out[11];\r\n\r\n        //  Perform axis-specific matrix multiplication\r\n        out[0] = a00 * c - a20 * s;\r\n        out[1] = a01 * c - a21 * s;\r\n        out[2] = a02 * c - a22 * s;\r\n        out[3] = a03 * c - a23 * s;\r\n        out[8] = a00 * s + a20 * c;\r\n        out[9] = a01 * s + a21 * c;\r\n        out[10] = a02 * s + a22 * c;\r\n        out[11] = a03 * s + a23 * c;\r\n        return out;\r\n    }\r\n\r\n    static rotateX(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a10 = out[4],\r\n            a11 = out[5],\r\n            a12 = out[6],\r\n            a13 = out[7],\r\n            a20 = out[8],\r\n            a21 = out[9],\r\n            a22 = out[10],\r\n            a23 = out[11];\r\n\r\n        //  Perform axis-specific matrix multiplication\r\n        out[4] = a10 * c + a20 * s;\r\n        out[5] = a11 * c + a21 * s;\r\n        out[6] = a12 * c + a22 * s;\r\n        out[7] = a13 * c + a23 * s;\r\n        out[8] = a20 * c - a10 * s;\r\n        out[9] = a21 * c - a11 * s;\r\n        out[10] = a22 * c - a12 * s;\r\n        out[11] = a23 * c - a13 * s;\r\n        return out;\r\n    }\r\n\r\n    static rotateZ(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a00 = out[0],\r\n            a01 = out[1],\r\n            a02 = out[2],\r\n            a03 = out[3],\r\n            a10 = out[4],\r\n            a11 = out[5],\r\n            a12 = out[6],\r\n            a13 = out[7];\r\n\r\n        //  Perform axis-specific matrix multiplication\r\n        out[0] = a00 * c + a10 * s;\r\n        out[1] = a01 * c + a11 * s;\r\n        out[2] = a02 * c + a12 * s;\r\n        out[3] = a03 * c + a13 * s;\r\n        out[4] = a10 * c - a00 * s;\r\n        out[5] = a11 * c - a01 * s;\r\n        out[6] = a12 * c - a02 * s;\r\n        out[7] = a13 * c - a03 * s;\r\n        return out;\r\n    }\r\n\r\n    static rotate(out: Float32Array, rad: number, axis: number) {\r\n        let x = axis[0], y = axis[1], z = axis[2],\r\n            len = Math.sqrt(x * x + y * y + z * z),\r\n            s, c, t,\r\n            a00, a01, a02, a03,\r\n            a10, a11, a12, a13,\r\n            a20, a21, a22, a23,\r\n            b00, b01, b02,\r\n            b10, b11, b12,\r\n            b20, b21, b22;\r\n\r\n        if (Math.abs(len) < 0.000001) { return null; }\r\n\r\n        len = 1 / len;\r\n        x *= len;\r\n        y *= len;\r\n        z *= len;\r\n\r\n        s = Math.sin(rad);\r\n        c = Math.cos(rad);\r\n        t = 1 - c;\r\n\r\n        a00 = out[0]; a01 = out[1]; a02 = out[2]; a03 = out[3];\r\n        a10 = out[4]; a11 = out[5]; a12 = out[6]; a13 = out[7];\r\n        a20 = out[8]; a21 = out[9]; a22 = out[10]; a23 = out[11];\r\n\r\n        //  Construct the elements of the rotation matrix\r\n        b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\r\n        b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\r\n        b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\r\n\r\n        //  Perform rotation-specific matrix multiplication\r\n        out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n        out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n        out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n        out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n        out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n        out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n        out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n        out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n        out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n        out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n        out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n        out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n        return out;\r\n    }\r\n\r\n    static invert(out: Float32Array, mat?: Float32Array) {\r\n        if (mat === undefined) { mat = out; }// If input isn't sent, then output is also input\r\n\r\n        let a00 = mat[0], a01 = mat[1], a02 = mat[2], a03 = mat[3],\r\n            a10 = mat[4], a11 = mat[5], a12 = mat[6], a13 = mat[7],\r\n            a20 = mat[8], a21 = mat[9], a22 = mat[10], a23 = mat[11],\r\n            a30 = mat[12], a31 = mat[13], a32 = mat[14], a33 = mat[15],\r\n\r\n            b00 = a00 * a11 - a01 * a10,\r\n            b01 = a00 * a12 - a02 * a10,\r\n            b02 = a00 * a13 - a03 * a10,\r\n            b03 = a01 * a12 - a02 * a11,\r\n            b04 = a01 * a13 - a03 * a11,\r\n            b05 = a02 * a13 - a03 * a12,\r\n            b06 = a20 * a31 - a21 * a30,\r\n            b07 = a20 * a32 - a22 * a30,\r\n            b08 = a20 * a33 - a23 * a30,\r\n            b09 = a21 * a32 - a22 * a31,\r\n            b10 = a21 * a33 - a23 * a31,\r\n            b11 = a22 * a33 - a23 * a32,\r\n\r\n            //  Calculate the determinant\r\n            det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) { return false; }\r\n        det = 1.0 / det;\r\n\r\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n        out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n        out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n        out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n        out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n        out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n        out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n        return true;\r\n    }\r\n\r\n    // https:// github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js  mat4.scalar.translate = function (out, a, v) {\r\n    static translate(out: Float32Array, x: number, y: number, z: number) {\r\n        out[12] = out[0] * x + out[4] * y + out[8] * z + out[12];\r\n        out[13] = out[1] * x + out[5] * y + out[9] * z + out[13];\r\n        out[14] = out[2] * x + out[6] * y + out[10] * z + out[14];\r\n        out[15] = out[3] * x + out[7] * y + out[11] * z + out[15];\r\n    }\r\n    constructor() {\r\n        this.raw = Matrix4.identity();\r\n    }\r\n    // ....................................................................\r\n    // Transformations Methods\r\n    vtranslate(v: Vector3) {\r\n        Matrix4.translate(this.raw, v.x, v.y, v.z);\r\n        return this;\r\n    }\r\n    translate(x: number, y: number, z: number) {\r\n        Matrix4.translate(this.raw, x, y, z);\r\n        return this;\r\n    }\r\n    rotateY(rad: number) { Matrix4.rotateY(this.raw, rad); return this; }\r\n    rotateX(rad: number) { Matrix4.rotateX(this.raw, rad); return this; }\r\n    rotateZ(rad: number) { Matrix4.rotateZ(this.raw, rad); return this; }\r\n\r\n    vscale(vec3: Vector3) { Matrix4.scale(this.raw, vec3.x, vec3.y, vec3.z); return this; }\r\n    scale(x: number, y: number, z: number) {\r\n        Matrix4.scale(this.raw, x, y, z);\r\n        return this;\r\n    }\r\n\r\n    invert() {\r\n        Matrix4.invert(this.raw);\r\n        return this;\r\n    }\r\n\r\n    // ....................................................................\r\n    // Methods\r\n    // Bring is back to identity without changing the transform values.\r\n    resetRotation() {\r\n        for (let i = 0; i < this.raw.length; i++) {\r\n            if (i >= 12 && i <= 14) { continue; }\r\n            this.raw[i] = (i % 5 === 0) ? 1 : 0;  // only positions 0,5,10,15 need to be 1 else 0.\r\n        }\r\n        return this;\r\n    }\r\n\r\n    // reset data back to identity.\r\n    reset() {\r\n        for (let i = 0; i < this.raw.length; i++) { this.raw[i] = (i % 5 === 0) ? 1 : 0; } // only positions 0,5,10,15 need to be 1 else 0.\r\n        return this;\r\n    }\r\n}","\r\nexport class Vector3 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    magnitude(v?: Vector3) {\r\n        if (v === undefined) { return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z); }\r\n        let x = v.x - this.x, y = v.y - this.y, z = v.y - this.z;\r\n        return Math.sqrt(x * x + y * y + z * z);\r\n    }\r\n\r\n    normalize() {\r\n        let mag = this.magnitude();\r\n        this.x /= mag; this.y /= mag; this.z /= mag;\r\n        return this;\r\n    }\r\n    set(x: number, y: number, z: number) {\r\n        this.x = x; this.y = y; this.z = z;\r\n        return this;\r\n    }\r\n    multiScalar(v: number) {\r\n        this.x *= v; this.y *= v; this.z *= v; return this;\r\n    }\r\n    getArray() {\r\n        return [this.x, this.y, this.z];\r\n    }\r\n    getFloatArray() {\r\n        return new Float32Array([this.x, this.y, this.z]);\r\n    }\r\n    clone() {\r\n        return new Vector3(this.x, this.y, this.z);\r\n    }\r\n} ","import { VAO } from './VAO';\r\nimport { Transform } from './Transform';\r\n\r\nexport class Model {\r\n    vao: VAO;\r\n    transform: Transform;\r\n    constructor(vao: VAO) {\r\n        this.transform = new Transform();\r\n        this.vao = vao;\r\n    }\r\n\r\n    setScale(x: number, y: number, z: number) {\r\n        this.transform.scale.set(x, y, z);\r\n        return this;\r\n    }\r\n    setPosition(x: number, y: number, z: number) {\r\n        this.transform.position.set(x, y, z);\r\n        return this;\r\n    }\r\n    setRotation(x: number, y: number, z: number) {\r\n        this.transform.rotation.set(x, y, z);\r\n        return this;\r\n    }\r\n\r\n    addScale(x: number, y: number, z: number) {\r\n        this.transform.scale.x += x; this.transform.scale.y += y; this.transform.scale.y += y;\r\n        return this;\r\n    }\r\n    addPosition(x: number, y: number, z: number) {\r\n        this.transform.position.x += x; this.transform.position.y += y; this.transform.position.z += z;\r\n        return this;\r\n    }\r\n    addRotation(x: number, y: number, z: number) {\r\n        this.transform.rotation.x += x; this.transform.rotation.y += y; this.transform.rotation.z += z;\r\n        return this;\r\n    }\r\n\r\n    preRender() {\r\n        this.transform.updateMatrix();\r\n        return this;\r\n    }\r\n}","//  import { GLShaderCommon } from '../Utility/GLShaderCommon';\r\nimport { Model } from './Model';\r\n\r\nexport enum ATTR {\r\n    ATTR_POSITION_NAME = 'a_position',\r\n    ATTR_POSITION_LOC = 0,\r\n\r\n    ATTR_NORMAL_NAME = 'a_norm',\r\n    ATTR_NORMAL_LOC = 1,\r\n\r\n    ATTR_UV_NAME = 'a_uv',\r\n    ATTR_UV_LOC = 2,\r\n\r\n    ATTR_COLOR_NAME = 'a_color',\r\n    ATTR_COLOR_LOC = 4,\r\n}\r\n\r\nexport class AttribLocations {\r\n\r\n    position: number;\r\n    norm: number;\r\n    uv: number;\r\n\r\n    constructor(gl: WebGL2RenderingContext, program: WebGLProgram) {\r\n        this.position = gl.getAttribLocation(program, ATTR.ATTR_POSITION_NAME);\r\n        this.norm = gl.getAttribLocation(program, ATTR.ATTR_NORMAL_NAME);\r\n        this.uv = gl.getAttribLocation(program, ATTR.ATTR_UV_NAME);\r\n    }\r\n}\r\n\r\nexport class UniformLocations {\r\n\r\n    perspective: WebGLUniformLocation | null;\r\n    modelMatrix: WebGLUniformLocation | null;\r\n    cameraMatrix: WebGLUniformLocation | null;\r\n    mainTexture: WebGLUniformLocation | null;\r\n\r\n    constructor(gl: WebGL2RenderingContext, program: WebGLProgram) {\r\n        this.perspective = gl.getUniformLocation(program, 'uPMatrix');\r\n        this.modelMatrix = gl.getUniformLocation(program, 'uMVMatrix');\r\n        this.cameraMatrix = gl.getUniformLocation(program, 'uCameraMatrix');\r\n        this.mainTexture = gl.getUniformLocation(program, 'uMainTex');\r\n    }\r\n}\r\n\r\nexport class Shader {\r\n\r\n    gl: WebGL2RenderingContext;\r\n    program: WebGLProgram | null;\r\n\r\n    attribLoc: AttribLocations;\r\n    uniformLoc: UniformLocations;\r\n\r\n    vShader: WebGLShader | null;\r\n    fShader: WebGLShader | null;\r\n\r\n    constructor(gl: WebGL2RenderingContext, vertShaderSrc: string, fragShaderSrc: string, needValidate: boolean = true) {\r\n        this.gl = gl;\r\n        this.vShader = ShaderUtility.CreateShader(gl, gl.VERTEX_SHADER as unknown as WebGLShader, vertShaderSrc);\r\n        this.fShader = ShaderUtility.CreateShader(gl, gl.FRAGMENT_SHADER as unknown as WebGLShader, fragShaderSrc);\r\n\r\n        if (this.vShader && this.fShader) {\r\n            let program = ShaderUtility.CreateProgram(gl, this.vShader, this.fShader, needValidate);\r\n\r\n            if (program) {\r\n                this.program = program;\r\n                gl.useProgram(this.program);\r\n                this.attribLoc = new AttribLocations(gl, this.program);\r\n                this.uniformLoc = new UniformLocations(gl, this.program);\r\n                return;\r\n\r\n            } else {\r\n                console.error('vertex fragment shader error'); return;\r\n            }\r\n        } else {\r\n            console.error('vertex fragment shader error'); return;\r\n        }\r\n        // Note :: Extended shaders should deactivate shader when done calling super and setting up custom parts in the constructor.\r\n    }\r\n\r\n    // ...................................................\r\n    // Methods\r\n    activate() {\r\n        this.gl.useProgram(this.program); return this;\r\n    }\r\n    deactivate() {\r\n        this.gl.useProgram(null); return this;\r\n    }\r\n\r\n    // function helps clean up resources when shader is no longer needed.\r\n    dispose() {\r\n        // unbind the program if its currently active\r\n        if (this.gl.getParameter(this.gl.CURRENT_PROGRAM) === this.program) { this.gl.useProgram(null); }\r\n        this.gl.deleteProgram(this.program);\r\n    }\r\n    setPerspective(matData: Float32Array) {\r\n        this.gl.uniformMatrix4fv(this.uniformLoc.perspective, false, matData);\r\n        return this;\r\n    }\r\n    setModelMatrix(matData: Float32Array) {\r\n        this.gl.uniformMatrix4fv(this.uniformLoc.modelMatrix, false, matData);\r\n        return this;\r\n    }\r\n    setCameraMatrix(matData: Float32Array) {\r\n        this.gl.uniformMatrix4fv(this.uniformLoc.cameraMatrix, false, matData);\r\n        return this;\r\n    }\r\n    // ...................................................\r\n    // RENDER RELATED METHODS\r\n\r\n    // Setup custom properties\r\n    preRender() {\r\n        //\r\n    }\r\n    // Handle rendering a model\r\n    renderModel(model: Model) {\r\n        this.setModelMatrix(model.transform.getViewMatrix());\t// Set the transform, so the shader knows where the model exists in 3d space\r\n        this.gl.bindVertexArray(model.vao.vao);\t// Enable VAO, this will set all the predefined attributes for the shader\r\n\r\n        if (model.vao.noCulling) { this.gl.disable(this.gl.CULL_FACE); }\r\n        if (model.vao.doBlending) { this.gl.enable(this.gl.BLEND); }\r\n\r\n        if (model.vao.indexCount) {\r\n            // console.log(model.vao.indexCount);\r\n            this.gl.drawElements(model.vao.drawMode, model.vao.indexCount, this.gl.UNSIGNED_SHORT, 0);\r\n        } else {\r\n            this.gl.drawArrays(model.vao.drawMode, 0, model.vao.vertexCount);\r\n        }\r\n\r\n        this.gl.bindVertexArray(null);\r\n        if (model.vao.noCulling) { this.gl.enable(this.gl.CULL_FACE); }\r\n        if (model.vao.doBlending) { this.gl.disable(this.gl.BLEND); }\r\n\r\n        return this;\r\n\r\n    }\r\n}\r\n\r\nexport class ShaderUtility {\r\n    static CreateProgram(gl: WebGL2RenderingContext, vertexShader: WebGLShader, fragmentShader: WebGLShader, needValidate: boolean = true): WebGLProgram | null {\r\n        const program = gl.createProgram();\r\n        if (program === null) { return null; }\r\n        gl.attachShader(program, vertexShader);\r\n        gl.attachShader(program, fragmentShader);\r\n\r\n        gl.bindAttribLocation(program, ATTR.ATTR_POSITION_LOC, ATTR.ATTR_POSITION_NAME);\r\n        gl.bindAttribLocation(program, ATTR.ATTR_NORMAL_LOC, ATTR.ATTR_NORMAL_NAME);\r\n        gl.bindAttribLocation(program, ATTR.ATTR_UV_LOC, ATTR.ATTR_UV_NAME);\r\n\r\n        gl.linkProgram(program);\r\n\r\n        // Check that shader program was able to link to WebGL\r\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n            const error = gl.getProgramInfoLog(program);\r\n            console.log('Failed to link program: ' + error);\r\n            gl.deleteProgram(program);\r\n            gl.deleteShader(fragmentShader);\r\n            gl.deleteShader(vertexShader);\r\n            return null;\r\n        }\r\n        if (needValidate) {\r\n            gl.validateProgram(program);\r\n            if (!gl.getProgramParameter(program, gl.VALIDATE_STATUS)) {\r\n                console.error('Failed to validate program', gl.getProgramInfoLog(program));\r\n                gl.deleteProgram(program);\r\n                gl.deleteShader(fragmentShader);\r\n                gl.deleteShader(vertexShader);\r\n                return null;\r\n            }\r\n        }\r\n        gl.deleteShader(fragmentShader);\r\n        gl.deleteShader(vertexShader);\r\n        return program;\r\n    }\r\n    static CreateShader(gl: WebGL2RenderingContext, type: WebGLShader, shaderString: string) {\r\n        // console.log(type);\r\n        const shader = gl.createShader(type as unknown as number);\r\n        if (shader === null) { return null; }\r\n        gl.shaderSource(shader, shaderString);\r\n        gl.compileShader(shader);\r\n        const suc = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n        if (suc) { return shader; }\r\n        console.log(gl.getShaderInfoLog(shader));\r\n        gl.deleteShader(shader);\r\n        return null;\r\n    }\r\n    static LoadTexture(gl: WebGL2RenderingContext, img: HTMLImageElement, doYFlip: boolean) {\r\n        let tex = gl.createTexture();\r\n        if (doYFlip === true) { gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1); } // true); }\t// Flip the texture by the Y Position, So 0,0 is bottom left corner.\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, tex);\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Set text buffer for work\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img);\t\t\t// Push image to GPU.\r\n\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\t\t\t\t\t// Setup up scaling\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\t// Setup down scaling\r\n        gl.generateMipmap(gl.TEXTURE_2D);\t// Precalc different sizes of texture for better quality rendering.\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, null); // Unbind\r\n\r\n        // gl.mTextureCache[name] = tex;\t\t\t\t\t\t\t\t\t\t\t// Save ID for later unloading\r\n\r\n        if (doYFlip === true) { gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1); }\t// Stop flipping textures\r\n        return tex;\r\n    }\r\n}","import { Vector3 } from '../Utility/Vector3';\r\nimport { Matrix4 } from '../Utility/Matrix4';\r\n\r\nexport class Transform {\r\n    static deg2Rad = Math.PI / 180; // Cache result, one less operation to do for each update.\r\n\r\n    position: Vector3;\r\n    scale: Vector3;\r\n    rotation: Vector3;\r\n    matView: Matrix4;\r\n    matNormal: Float32Array;\r\n\r\n    forward: Float32Array;\r\n    up: Float32Array;\r\n    right: Float32Array;\r\n\r\n    constructor() {\r\n        this.position = new Vector3(0, 0, 0);\t// Traditional X,Y,Z 3d position\r\n        this.scale = new Vector3(1, 1, 1);\t// How much to scale a mesh. Having a 1 means no scaling is done.\r\n        this.rotation = new Vector3(0, 0, 0);\t// Hold rotation values based on degrees, Object will translate it to radians\r\n        this.matView = new Matrix4();\t\t// Cache the results when calling updateMatrix\r\n        this.matNormal = new Float32Array(9);\t// This is a Mat3, raw array to hold the values is enough for what its used for\r\n\r\n        // Direction Vectors\r\n        this.forward = new Float32Array(4);\t// When rotating, keep track of what the forward direction is\r\n        this.up = new Float32Array(4);\t// what the up direction is, invert to get bottom\r\n        this.right = new Float32Array(4);\t// what the right direction is, invert to get left\r\n    }\r\n    updateMatrix() {\r\n        this.matView.reset() // Order is very important!!\r\n            .vtranslate(this.position)\r\n            .rotateX(this.rotation.x * Transform.deg2Rad)\r\n            .rotateZ(this.rotation.z * Transform.deg2Rad)\r\n            .rotateY(this.rotation.y * Transform.deg2Rad)\r\n            .vscale(this.scale);\r\n\r\n        // Calcuate the Normal Matrix which doesn't need translate, then transpose and inverses the mat4 to mat3\r\n        Matrix4.normalMat3(this.matNormal, this.matView.raw);\r\n\r\n        // Determine Direction after all the transformations.\r\n        Matrix4.transformVec4(this.forward, [0, 0, 1, 0], this.matView.raw); // Z\r\n        Matrix4.transformVec4(this.up, [0, 1, 0, 0], this.matView.raw); // Y\r\n        Matrix4.transformVec4(this.right, [1, 0, 0, 0], this.matView.raw); // X\r\n\r\n        return this.matView.raw;\r\n    }\r\n\r\n    updateDirection() {\r\n        Matrix4.transformVec4(this.forward, [0, 0, 1, 0], this.matView.raw);\r\n        Matrix4.transformVec4(this.up, [0, 1, 0, 0], this.matView.raw);\r\n        Matrix4.transformVec4(this.right, [1, 0, 0, 0], this.matView.raw);\r\n        return this;\r\n    }\r\n\r\n    getViewMatrix() { return this.matView.raw; }\r\n    getNormalMatrix() { return this.matNormal; }\r\n\r\n    reset() {\r\n        this.position.set(0, 0, 0);\r\n        this.scale.set(1, 1, 1);\r\n        this.rotation.set(0, 0, 0);\r\n    }\r\n}\r\n","import { ATTR } from './Shader';\r\n\r\nexport enum DRAW_MODE {\r\n    //\r\n}\r\n\r\nexport class VAO {\r\n    name: string;\r\n\r\n    noCulling: boolean = true;\r\n    doBlending: boolean = true;\r\n\r\n    vao: WebGLVertexArrayObject | null;\r\n    bufVertices: WebGLBuffer | null;\r\n    bufNormals: WebGLBuffer | null;\r\n    bufUV: WebGLBuffer | null;\r\n    bufIndex: WebGLBuffer | null;\r\n\r\n    vertexComponentLen: number;\r\n    vertexCount: number;\r\n    indexCount: number;\r\n    drawMode: number;\r\n\r\n    constructor(gl: WebGL2RenderingContext, name: string, aryVert: number[], aryInd?: number[] | null, aryNorm?: number[] | null, aryUV?: number[] | null, vertexComponentLen: number = 3) {\r\n        this.name = name;\r\n        this.drawMode = gl.TRIANGLES;\r\n\r\n        this.vao = gl.createVertexArray();\r\n        gl.bindVertexArray(this.vao);\t//  Bind it so all the calls to vertexAttribPointer/enableVertexAttribArray is saved to the vao.\r\n\r\n        // .......................................................\r\n        // Set up vertices\r\n        if (aryVert !== undefined && aryVert != null) {\r\n            this.bufVertices = gl.createBuffer();\t\t\t\t\t\t\t\t\t\t\t\t\t// Create buffer...\r\n            this.vertexComponentLen = vertexComponentLen;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// How many floats make up a vertex\r\n            this.vertexCount = aryVert.length / this.vertexComponentLen;\t\t\t\t\t\t\t\t// How many vertices in the array\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.bufVertices);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(aryVert), gl.STATIC_DRAW);\t\t// then push array into it.\r\n            gl.enableVertexAttribArray(ATTR.ATTR_POSITION_LOC);\t\t\t\t\t\t\t\t\t\t// Enable Attribute location\r\n            gl.vertexAttribPointer(ATTR.ATTR_POSITION_LOC, this.vertexComponentLen, gl.FLOAT, false, 0, 0);\t // Put buffer at location of the vao\r\n        }\r\n\r\n        // .......................................................\r\n        // Setup normals\r\n        if (aryNorm !== undefined && aryNorm !== null) {\r\n            this.bufNormals = gl.createBuffer();\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.bufNormals);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(aryNorm), gl.STATIC_DRAW);\r\n            gl.enableVertexAttribArray(ATTR.ATTR_NORMAL_LOC);\r\n            gl.vertexAttribPointer(ATTR.ATTR_NORMAL_LOC, 3, gl.FLOAT, false, 0, 0);\r\n        }\r\n\r\n        // .......................................................\r\n        // Setup UV\r\n        if (aryUV !== undefined && aryUV !== null) {\r\n            // console.log(aryUV);\r\n            this.bufUV = gl.createBuffer();\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.bufUV);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(aryUV), gl.STATIC_DRAW);\r\n            // console.log(this);\r\n            gl.enableVertexAttribArray(ATTR.ATTR_UV_LOC);\r\n            gl.vertexAttribPointer(ATTR.ATTR_UV_LOC, 2, gl.FLOAT, false, 0, 0);\t// UV only has two floats per component\r\n        }\r\n\r\n        // .......................................................\r\n        // Setup Index.\r\n        if (aryInd !== undefined && aryInd !== null) {\r\n            this.bufIndex = gl.createBuffer();\r\n            this.indexCount = aryInd.length;\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.bufIndex);\r\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(aryInd), gl.STATIC_DRAW);\r\n            // gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n\r\n        }\r\n        // console.log(this);\r\n\r\n        // Clean up\r\n        gl.bindVertexArray(null);\t\t\t\t\t// Unbind the VAO, very Important. always unbind when your done using one.\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\t// Unbind any buffers that might be set\r\n\r\n        // this.mMeshCache[name] = rtn;\r\n    }\r\n\r\n}"],"names":["Geometry","static","geo","vert","UV","index","i","half","Math","random","angle","PI","dx","cos","dy","sin","x","y","z","p","push","width","height","depth","w","h","d","x0","x1","y0","y1","z0","z1","length","floor","normal","constructor","MeshBase","scene","this","add","render","ShaderQuad","Shader","gl","vertSrc","fragSrc","pMatrix","super","uPointSize","uAngle","program","setPerspective","getUniformLocation","useProgram","set","size","uniform1f","MulitQuad","app","v","f","vao","shader","model","geometry","rotation","canvas","camera","projectionMatrix","VAO","undefined","noCulling","doBlending","Model","transform","position","Vector3","activate","setCameraMatrix","viewMatrix","renderModel","preRender","Matrix4","a","Float32Array","out","fovy","aspect","near","far","tan","nf","left","right","bottom","top","lr","bt","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","mat4","c1r1","c2r1","c3r1","c4r1","c1r2","c2r2","c3r2","c4r2","c1r3","c2r3","c3r3","c4r3","m","b","b0","b1","b2","b3","rad","s","c","axis","t","b12","b20","b21","b22","len","sqrt","abs","mat","raw","identity","vtranslate","translate","rotateY","rotateX","rotateZ","vscale","vec3","scale","invert","resetRotation","reset","magnitude","normalize","mag","multiScalar","getArray","getFloatArray","clone","Transform","setScale","setPosition","setRotation","addScale","addPosition","addRotation","updateMatrix","ATTR","AttribLocations","norm","uv","getAttribLocation","ATTR_POSITION_NAME","ATTR_NORMAL_NAME","ATTR_UV_NAME","UniformLocations","perspective","modelMatrix","cameraMatrix","mainTexture","vertShaderSrc","fragShaderSrc","needValidate","attribLoc","uniformLoc","vShader","fShader","ShaderUtility","CreateShader","VERTEX_SHADER","FRAGMENT_SHADER","CreateProgram","console","error","deactivate","dispose","getParameter","CURRENT_PROGRAM","deleteProgram","matData","uniformMatrix4fv","setModelMatrix","getViewMatrix","bindVertexArray","disable","CULL_FACE","enable","BLEND","indexCount","drawElements","drawMode","UNSIGNED_SHORT","drawArrays","vertexCount","vertexShader","fragmentShader","createProgram","attachShader","bindAttribLocation","ATTR_POSITION_LOC","ATTR_NORMAL_LOC","ATTR_UV_LOC","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","log","deleteShader","validateProgram","VALIDATE_STATUS","type","shaderString","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","img","doYFlip","tex","createTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_NEAREST","generateMipmap","matView","matNormal","forward","up","deg2Rad","updateDirection","getNormalMatrix","DRAW_MODE","name","aryVert","aryInd","aryNorm","aryUV","vertexComponentLen","bufVertices","bufNormals","bufUV","bufIndex","TRIANGLES","createVertexArray","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","ELEMENT_ARRAY_BUFFER","Uint16Array"],"sourceRoot":""}