{"version":3,"file":"static/js/52473.fe92160b.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-vector-dynamics/base/util.ts","njslab/Workshop/workshop-vector-dynamics/workshop-vector-dynamic-1.ts"],"sourcesContent":["export const getCheckBox = (title: string) => {\n    const div = document.createElement('div');\n    div.style.display = 'flex';\n\n    const checkBox = document.createElement('input');\n    checkBox.type = 'checkbox';\n    checkBox.defaultChecked = false;\n    const text = document.createElement('div');\n    text.textContent = title;\n    text.style.color = '#aaa';\n    div.appendChild(checkBox);\n    div.appendChild(text);\n\n    return {\n        div, checkBox\n    }\n};","// import { RendererThree } from './base/RendererThree';\r\nimport { getCheckBox } from './base/util'\r\n\r\nimport NRenderer, { Point3 } from '../workshop-vector-Sandbox/NRenderer';\r\n\r\nexport class Solution {\r\n\r\n    div: HTMLDivElement\r\n    renderer: NRenderer;\r\n    m: number[] = [0, 0];\r\n    t: number = 0.0;\r\n    pts: Point[] = [];\r\n    p: Point = undefined;\r\n    constructor(id: string) {\r\n        this.div = document.getElementById(id) as HTMLDivElement;\r\n        this.renderer = new NRenderer(id);\r\n        this.renderer.updateBinding = () => this.render();\r\n        this.renderer.onMouseClick = (e) => this.mouseClick(e);\r\n\r\n        this.initDom();\r\n        this.init();\r\n    }\r\n    public initDom() {\r\n        const div = document.createElement('div');\r\n        div.style.position = 'absolute'\r\n        this.div.appendChild(div);\r\n\r\n        const resetBtn = document.createElement('button');\r\n        resetBtn.textContent = 'reset';\r\n        resetBtn.onclick = () => {\r\n            this.reset();\r\n            this.init();\r\n        }\r\n        div.append(resetBtn);\r\n\r\n\r\n        const cBox = getCheckBox('grid');\r\n        div.append(cBox.div);\r\n        cBox.checkBox.checked = true;\r\n        cBox.checkBox.onchange = () => {\r\n            this.renderer.showGrid = cBox.checkBox.checked;\r\n        }\r\n\r\n        const axis = getCheckBox('axis');\r\n        div.append(axis.div);\r\n        axis.checkBox.checked = true;\r\n        axis.checkBox.onchange = () => {\r\n            this.renderer.showAxis = axis.checkBox.checked;\r\n        }\r\n    }\r\n    public reset() {\r\n        this.renderer.reset();\r\n        this.t = 0.0;\r\n        this.pts = [];\r\n        this.p = undefined;\r\n    }\r\n    public init() {\r\n        this.p = new Point(0, 0, 3, 0, -2, 2)\r\n        this.pts.push(this.p);\r\n\r\n    }\r\n    public render(): void {\r\n        if (this.p){\r\n            this.p.move(this.t, 0.985)\r\n        }\r\n\r\n        this.pts.forEach((v)=>{\r\n            v.move(this.t, 0.985)\r\n        });\r\n\r\n\r\n        this.t +=0.001\r\n    }\r\n    public mouseMove(e: MouseEvent): void {\r\n        // this.m[0] = x - this.canvas.width * 0.5;\r\n        // this.m[1] = y - this.canvas.height * 0.5;\r\n    }\r\n    public renderMouse(ctx) {\r\n        // ctx.fillStyle = '#eee';\r\n        // ctx.beginPath();\r\n        // ctx.arc(this.m[0], this.m[1], 3, 0, Math.PI * 2.0)\r\n        // ctx.closePath();\r\n        // ctx.fill();\r\n    }\r\n    public mouseClick(e: MouseEvent): void {\r\n        // const v = new Point(x - this.canvas.width * 0.5, y - this.canvas.height * 0.5, 0);\r\n        // this.pts.push(v);\r\n\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n    }\r\n}\r\n\r\nclass Point {\r\n    public vec: Vector3;\r\n    public velocity: Vector3;\r\n    public force: Vector3 = new Vector3(0,0,0);\r\n    public mass = 10;\r\n    public r: number = 10;\r\n\r\n    public pt: Point3;\r\n\r\n    constructor(x, y, z ,ux = 0, uy = 0, uz = 0) {\r\n        this.vec =      new Vector3(x, y, z)\r\n        this.velocity = new Vector3(ux, uy, uz)\r\n\r\n        this.pt = new Point3(this.vec);\r\n        this.pt.onClick = (e) => this.onClick(e)\r\n    }\r\n    public onClick(e) {\r\n        console.log(e);\r\n    }\r\n    // public render(ctx: CanvasRenderingContext2D) {\r\n    //     ctx.beginPath();\r\n    //     ctx.arc(this.vec.x, this.vec.y, this.r, 0, Math.PI * 2.0)\r\n    //     ctx.closePath();\r\n    //     ctx.fill()\r\n    // }\r\n    public move(dt: number, damping: number = 1) {\r\n\r\n        this.force = new Vector3(0.0, 0, -9.81)\r\n\r\n        // u *= damping;\r\n        // u += f * (dt / m);\r\n        // p += u * dt;\r\n\r\n        // u *= damping;\r\n        // u = u + (f * (dt / m));\r\n        // p = p + (u * dt);\r\n\r\n        /*\r\n        this.velocity.x = this.velocity.x * damping;\r\n        this.velocity.y = this.velocity.y * damping;\r\n        this.velocity.z = this.velocity.z * damping;\r\n        \r\n        this.velocity.x = this.velocity.x + (this.force.x * (dt/ this.mass))\r\n        this.velocity.y = this.velocity.y + (this.force.y * (dt/ this.mass))\r\n        this.velocity.z = this.velocity.z + (this.force.z * (dt/ this.mass))\r\n\r\n        this.vec.x = this.vec.x + (this.velocity.x * dt)\r\n        this.vec.y = this.vec.y + (this.velocity.y * dt)\r\n        this.vec.z = this.vec.z + (this.velocity.z * dt)\r\n        */\r\n\r\n        this.velocity = multiply(this.velocity, damping);\r\n        this.velocity = add(this.velocity,  multiply(this.force, (dt / this.mass )))\r\n        const v = add(this.vec, multiply(this.velocity, dt));\r\n\r\n        this.vec.x = v.x;\r\n        this.vec.y = v.y;\r\n        this.vec.z = v.z;\r\n\r\n        if (this.vec.z < 0) {\r\n            this.vec.z = 0;\r\n            if (this.velocity.z < 0) {\r\n                this.velocity.z = -this.velocity.z;\r\n            }\r\n        }\r\n\r\n        this.pt.update();\r\n    }\r\n}\r\n\r\n\r\n// ......................\r\nconst xAxis = () => {\r\n    return new Vector3(1, 0, 0);\r\n}\r\nconst yAxis = () => {\r\n    return new Vector3(0, 1, 0);\r\n}\r\nconst zAxis = () => {\r\n    return new Vector3(0, 0, 1);\r\n}\r\nconst zero = () => {\r\n    return new Vector3(0, 0, 0);\r\n}\r\nconst origin = () => {\r\n    return new Vector3(0, 0, 0);\r\n}\r\n// ......................\r\n\r\nconst distance = (v0: Vector3, v1: Vector3) => {\r\n    return Math.sqrt(distance2(v0, v1));\r\n}\r\nconst distance2 = (v0: Vector3, v1: Vector3) => {\r\n    return (v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z);\r\n}\r\nconst dotProduct = (v1: Vector3, v2: Vector3) => {\r\n    return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;\r\n}\r\nconst crossProduct = (v1: Vector3, v2: Vector3) => {\r\n    return new Vector3(\r\n        v1.y * v2.z - v1.z * v2.y,\r\n        v1.z * v2.x - v1.x * v2.z,\r\n        v1.x * v2.y - v1.y * v2.x\r\n    );\r\n}\r\nconst normalize = (v: Vector3) => {\r\n    let len: number = Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\r\n    if (len < 0.0001) {\r\n        return new Vector3(v.x, v.y, v.z);\r\n    }\r\n    return new Vector3(v.x / len, v.y / len, v.z / len);\r\n}\r\nconst length = (v: Vector3) => {\r\n    return Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\r\n}\r\n\r\n// ......................\r\nconst multiply = (v: Vector3, s: number) => {\r\n    return scale(v, s);\r\n}\r\nconst scale = (v: Vector3, s: number) => {\r\n    return new Vector3(v.x * s, v.y * s, v.z * s);\r\n}\r\nconst sub = (v0: Vector3, v1: Vector3) => {\r\n    return new Vector3(v0.x - v1.x, v0.y - v1.y, v0.z - v1.z);\r\n}\r\nconst add = (v0: Vector3, v1: Vector3) => {\r\n    return new Vector3(v0.x + v1.x, v0.y + v1.y, v0.z + v1.z);\r\n}\r\n\r\nclass Vector3 {\r\n    public x: number = 0.0;\r\n    public y: number = 0.0;\r\n    public z: number = 0.0;\r\n    constructor(x, y, z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    // public multiply(v: number) {\r\n    //     this.x *= v;\r\n    //     this.y *= v;\r\n    //     this.z *= v;\r\n    // }\r\n    // public add(v: Vector3) {\r\n    //     this.x += v.x;\r\n    //     this.y += v.y;\r\n    //     this.z += v.z;\r\n    // }\r\n}\r\n"],"names":["getCheckBox","title","div","document","createElement","style","display","checkBox","type","defaultChecked","text","textContent","color","appendChild","Solution","constructor","id","renderer","m","t","pts","p","undefined","this","getElementById","NRenderer","updateBinding","render","onMouseClick","e","mouseClick","initDom","init","position","resetBtn","onclick","reset","append","cBox","checked","onchange","showGrid","axis","showAxis","Point","push","move","forEach","v","mouseMove","renderMouse","ctx","destroy","x","y","z","ux","uy","uz","vec","velocity","force","Vector3","mass","r","pt","Point3","onClick","console","log","dt","damping","multiply","add","update","s","scale","v0","v1"],"sourceRoot":""}