{"version":3,"file":"static/js/45881.c12130be.chunk.js","mappings":"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","sources":["njslab/Tools/Boid/BoidContollerWander0.ts","njslab/Tools/Boid/index.ts"],"sourcesContent":["import { MathUtility, NVector3 } from '../../../lib/NJSCore';\r\n\r\nimport { Vector3, isInsideOfVecs } from '../../../lib';\r\n// import { Vector3, MathUtility } from '../../../../../lib';\r\n\r\nexport class BoidContollerWander0 {\r\n\r\n  boids: Boid[] = [];\r\n\r\n  boundary: Vector3[];\r\n\r\n  _toggleTargetRendering = false;\r\n\r\n  constructor() {\r\n    this.boids = [];\r\n    this.boundary = [\r\n      new Vector3(50, 50, 0),\r\n      new Vector3(300, 70, 0),\r\n      new Vector3(400, 400, 0),\r\n      new Vector3(50, 300, 0),\r\n      new Vector3(50, 50, 0),\r\n    ]\r\n  }\r\n  public toggleTargetRendering(v: boolean) {\r\n    this._toggleTargetRendering = v;\r\n  }\r\n  public updateTargetDelay(n: number) {\r\n    for (let i = 0; i < this.boids.length; ++i) {this.boids[i].targetDelay = n;}\r\n  }\r\n  public updateMass(n: number) {\r\n    for (let i = 0; i < this.boids.length; ++i) {this.boids[i].mass = n;}\r\n  }\r\n  public updateVelocity(n: number) {\r\n    for (let i = 0; i < this.boids.length; ++i) {this.boids[i].maxVelocity = n;}\r\n  }\r\n  public AddAgent(x: number, y: number, w: number, h: number) {\r\n    let boid = new Boid(this, new Vector3(x, y), new Vector3(0, 0), new Vector3(w, h), this.boundary);\r\n    this.boids.push(boid);\r\n  }\r\n  public Update() {\r\n    for (let b of this.boids) {\r\n      b.Update();\r\n    }\r\n\r\n  }\r\n  public GetPoint() {\r\n    let pts: Vector3[] = [];\r\n    for (let b of this.boids) {\r\n      if (b.isRenderable) {\r\n        pts.push(b.p);\r\n      }\r\n    }\r\n    return pts;\r\n  }\r\n\r\n  // .......................................................................................................................\r\n\r\n  public Render(ctx: CanvasRenderingContext2D) {\r\n    this.boids.forEach((b) => {\r\n      b.Render(ctx);\r\n    });\r\n\r\n    ctx.beginPath()\r\n    ctx.moveTo(this.boundary[0].x, this.boundary[0].y)\r\n    for (let i = 1; i < this.boundary.length; ++i) {\r\n      ctx.lineTo(this.boundary[i].x, this.boundary[i].y)\r\n    }\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nexport class Boid {\r\n\r\n  static list: Boid[] = [];\r\n\r\n  maxForce = 2; // 1; // 5;\r\n  maxVelocity = 2; // 1; // 8;\r\n  maxSpeed = 0.9; // 1; // 13.0;\r\n  mass = 100.2;\r\n\r\n  isRenderable = true;\r\n\r\n  p: Vector3;\r\n  p0: Vector3;\r\n  p1: Vector3;\r\n  targets: Vector3[];\r\n  target: Vector3;\r\n  targetID = 0;\r\n\r\n  col: boolean = false;\r\n  desiredVelocity: Vector3;\r\n  steering: Vector3;\r\n  velocity: Vector3 = new Vector3(0, 0, 0);\r\n\r\n  // .......................\r\n  wanderAngle: number = 0;\r\n  CIRCLE_DISTANCE = 50;\r\n  CIRCLE_RADIUS = 50;\r\n  ANGLE_CHANGE = 15;\r\n\r\n  t: number = 0.0;\r\n\r\n  MAX_QUEUE_AHEAD = 15;\r\n  MAX_QUEUE_RADIUS = 10;\r\n  trajectory: Vector3[] = [];\r\n  timerTrajectory = 0.0;\r\n\r\n  scaleBounding = 0.0;\r\n  boundary: Vector3[];\r\n  controller: BoidContollerWander0;\r\n\r\n  targetDelay: number = 3;\r\n\r\n  constructor(controller: BoidContollerWander0, p: Vector3, p0: Vector3, p1: Vector3, boundary?: Vector3[]) {\r\n    this.controller = controller;\r\n    Boid.list.push(this);\r\n    this.p = p;\r\n    this.p0 = p0;\r\n    this.p1 = p1;\r\n    if (boundary) {\r\n      this.boundary = boundary;\r\n    }\r\n    this.UpdateTarget();\r\n  }\r\n  public Update() {\r\n    // this.UpdateVec0();\r\n    this.UpdateVec1();\r\n    // this.UpdateVecSlowDown1();\r\n    // this.UpdateVecSlowDown2();\r\n\r\n  }\r\n  public UpdateTarget() {\r\n    let vec = this.getRandomVecInSide();\r\n\r\n    if (this.boundary !== undefined) {\r\n      while (!isInsideOfVecs(vec, this.boundary)) {\r\n        vec = this.getRandomVecInSide();\r\n      }\r\n    }\r\n\r\n    this.target = vec;\r\n  }\r\n  public getRandomVecInSide() {\r\n    let x = MathUtility.GetRandomInt(this.p0.x, this.p1.x);\r\n    let y = MathUtility.GetRandomInt(this.p0.y, this.p1.y);\r\n    return new Vector3(x, y);\r\n  }\r\n  public UpdateVec1() {\r\n    this.desiredVelocity = new Vector3(this.target.x - this.p.x, this.target.y - this.p.y, this.target.z - this.p.z);\r\n    this.desiredVelocity.unitize();\r\n    this.desiredVelocity.x *= this.maxVelocity;\r\n    this.desiredVelocity.y *= this.maxVelocity;\r\n    this.desiredVelocity.z *= this.maxVelocity;\r\n\r\n    let x = (this.desiredVelocity.x - this.velocity.x) < this.maxForce ? this.desiredVelocity.x - this.velocity.x : this.maxForce;\r\n    let y = (this.desiredVelocity.y - this.velocity.y) < this.maxForce ? this.desiredVelocity.y - this.velocity.y : this.maxForce;\r\n    let z = (this.desiredVelocity.z - this.velocity.z) < this.maxForce ? this.desiredVelocity.z - this.velocity.z : this.maxForce;\r\n\r\n    this.steering = new Vector3(x / this.mass, y / this.mass, z / this.mass);\r\n\r\n    this.velocity.x = (this.velocity.x + this.steering.x) < this.maxSpeed ? this.velocity.x + this.steering.x : this.maxSpeed;\r\n    this.velocity.y = (this.velocity.y + this.steering.y) < this.maxSpeed ? this.velocity.y + this.steering.y : this.maxSpeed;\r\n    this.velocity.z = (this.velocity.z + this.steering.z) < this.maxSpeed ? this.velocity.z + this.steering.z : this.maxSpeed;\r\n\r\n    this.Queue();\r\n\r\n    this.p.x += this.velocity.x;\r\n    this.p.y += this.velocity.y;\r\n    this.p.z += this.velocity.z;\r\n    this.t += 0.01;\r\n    if (this.t > this.targetDelay) {\r\n      this.t = 0.0;\r\n      this.UpdateTarget();\r\n    }\r\n  }\r\n  public UpdateVec0() {\r\n    // this.desiredVelocity = new Vector3(this.target.x - this.p.x, this.target.y - this.p.y, this.target.z - this.p.z);\r\n    // this.desiredVelocity.Unitize();\r\n    // this.desiredVelocity.x *= this.maxVelocity;\r\n    // this.desiredVelocity.y *= this.maxVelocity;\r\n    // this.desiredVelocity.z *= this.maxVelocity;\r\n\r\n    // let x = (this.desiredVelocity.x - this.velocity.x) < this.maxForce ? this.desiredVelocity.x - this.velocity.x : this.maxForce;\r\n    // let y = (this.desiredVelocity.y - this.velocity.y) < this.maxForce ? this.desiredVelocity.y - this.velocity.y : this.maxForce;\r\n    // let z = (this.desiredVelocity.z - this.velocity.z) < this.maxForce ? this.desiredVelocity.z - this.velocity.z : this.maxForce;\r\n\r\n    // this.steering = ;\r\n\r\n    this.steering = this.Wander(new Vector3(this.velocity.x, this.velocity.y, this.velocity.z));\r\n\r\n    this.steering.x = this.steering.x < this.maxForce ? this.steering.x : this.maxForce;\r\n    this.steering.y = this.steering.y < this.maxForce ? this.steering.y : this.maxForce;\r\n    this.steering.z = this.steering.z < this.maxForce ? this.steering.z : this.maxForce;\r\n\r\n    this.steering.x /= this.mass;\r\n    this.steering.y /= this.mass;\r\n    this.steering.z /= this.mass;\r\n\r\n    if (this.velocity.x + this.steering.x < this.maxSpeed) {\r\n      this.velocity.x = this.velocity.x + this.steering.x;\r\n    } else {\r\n      this.velocity.x = this.maxSpeed;\r\n    }\r\n    if (this.velocity.y + this.steering.y < this.maxSpeed) {\r\n      this.velocity.y = this.velocity.y + this.steering.y;\r\n    } else {\r\n      this.velocity.y = this.maxSpeed;\r\n    }\r\n    if (this.velocity.z + this.steering.z < this.maxSpeed) {\r\n      this.velocity.z = this.velocity.z + this.steering.z;\r\n    } else {\r\n      this.velocity.z = this.maxSpeed;\r\n    }\r\n    // this.velocity.x = this.velocity.x + this.steering.x < this.maxSpeed ? this.velocity.x + this.steering.x : this.maxSpeed;\r\n    // this.velocity.y = this.velocity.y + this.steering.y < this.maxSpeed ? this.velocity.y + this.steering.y : this.maxSpeed;\r\n    // this.velocity.z = this.velocity.z + this.steering.z < this.maxSpeed ? this.velocity.z + this.steering.z : this.maxSpeed;\r\n\r\n    // steering = wander()\r\n    // steering = truncate (steering, max_force)\r\n    // steering = steering / mass\r\n    // velocity = truncate (velocity + steering , max_speed)\r\n    // position = position + velocity\r\n    this.Queue();\r\n\r\n    console.log(this.maxSpeed);\r\n\r\n    this.p.x += this.velocity.x;\r\n    this.p.y += this.velocity.y;\r\n    this.p.z += this.velocity.z;\r\n\r\n  }\r\n  public Wander(velocity: Vector3) {\r\n    // Calculate the circle center\r\n    let circleCenter = new Vector3(velocity.x, velocity.y, velocity.z);\r\n    circleCenter.normalize();\r\n    circleCenter.scale(this.CIRCLE_DISTANCE);\r\n    //\r\n    // Calculate the displacement force\r\n    let displacement = new Vector3(0, -1);\r\n    displacement.scale(this.CIRCLE_RADIUS);\r\n    //\r\n    // Randomly change the vector direction\r\n    // by making it change its current angle\r\n    displacement = this.setAngle(displacement, this.wanderAngle);\r\n    //\r\n    // Change wanderAngle just a bit, so it\r\n    // won't have the same value in the\r\n    // next game frame.\r\n    this.wanderAngle += Math.random() * this.ANGLE_CHANGE - this.ANGLE_CHANGE * .5;\r\n    //\r\n    // Finally calculate and return the wander force\r\n    var wanderForce: Vector3;\r\n    wanderForce = circleCenter.add(displacement);\r\n    return wanderForce;\r\n  }\r\n  public setAngle(v: Vector3, value: number) {\r\n    let len: number = v.length();\r\n    v.x = Math.cos(value) * len;\r\n    v.y = Math.sin(value) * len;\r\n    return v;\r\n  }\r\n  public GetNeighborAhead() {\r\n    // var i:int;\r\n    var ret: Boid | undefined = undefined;\r\n    var qa: Vector3 = this.velocity.clone();\r\n\r\n    qa.normalize();\r\n    qa.scale(this.MAX_QUEUE_AHEAD);\r\n\r\n    let ahead = this.p.clone().add(qa);\r\n\r\n    for (let i = 0; i < Boid.list.length; i++) {\r\n      let neighbor: Boid = Boid.list[i];\r\n      let d = Vector3.distanceTo(ahead, neighbor.p);\r\n      if (neighbor !== this && d <= this.MAX_QUEUE_RADIUS) {\r\n        ret = neighbor;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return ret;\r\n  }\r\n  public Queue() {\r\n    var neighbor = this.GetNeighborAhead();\r\n\r\n    if (neighbor !== undefined) {\r\n      this.velocity.scale(0.3);\r\n    }\r\n\r\n    return new Vector3(0, 0);\r\n  }\r\n\r\n  // .......................................................................................................................\r\n  public Render(ctx: CanvasRenderingContext2D) {\r\n    // this.RenderDesiredVelocity(ctx);\r\n    // this.RenderCurrentVelocity(ctx);\r\n    this.RenderCircle(ctx);\r\n  }\r\n  public RenderDesiredVelocity(ctx: CanvasRenderingContext2D) {\r\n    // let scale = 20;\r\n    // ctx.lineWidth = 0.5;\r\n    // ctx.strokeStyle = '#00ff00';\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(this.p.x, this.p.y);\r\n    // ctx.lineTo(this.p.x + this.desiredVelocity.x * scale, this.p.y + this.desiredVelocity.y * scale);\r\n    // ctx.closePath();\r\n    // ctx.stroke();\r\n  }\r\n  public RenderCurrentVelocity(ctx: CanvasRenderingContext2D) {\r\n    // let scale = 20;\r\n    // ctx.lineWidth = 0.5;\r\n    // ctx.strokeStyle = '#ff0000';\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(this.p.x, this.p.y);\r\n    // ctx.lineTo(this.p.x + this.velocity.x * scale, this.p.y + this.velocity.y * scale);\r\n    // ctx.closePath();\r\n    // ctx.stroke();\r\n  }\r\n  public RenderCircle(ctx: CanvasRenderingContext2D) {\r\n    this.t += 0.05\r\n    this.timerTrajectory += 1;\r\n    if (this.timerTrajectory % 5 === 0) {\r\n      if (this.trajectory.length > 30) {\r\n        this.trajectory.shift();\r\n      }\r\n      this.trajectory.push(new Vector3(this.p.x, this.p.y));\r\n\r\n      this.timerTrajectory = 0;\r\n    }\r\n    for (let i = 0; i < this.trajectory.length; ++i) {\r\n      ctx.fillStyle = 'rgba(100, 100, 100 ,0.1)';\r\n      ctx.beginPath();\r\n      ctx.arc(this.trajectory[i].x, this.trajectory[i].y, (i) * 0.2, 0, 3.14 * 2);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.strokeStyle = '#000000';\r\n    ctx.lineWidth = 0.5;\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(this.targets[0].x , this.targets[0].y);\r\n    // for (let i = 1 ; i < this.targets.length; ++i) {\r\n    //   ctx.lineTo(this.targets[i].x , this.targets[i].y);\r\n    // }\r\n    // ctx.closePath();\r\n    // ctx.stroke();\r\n\r\n    if (this.controller._toggleTargetRendering) {\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(this.p.x, this.p.y);\r\n      ctx.lineTo(this.target.x, this.target.y);\r\n      ctx.stroke();\r\n\r\n      ctx.fillStyle = '#000000';\r\n      ctx.beginPath();\r\n      ctx.arc(this.target.x, this.target.y, 2.5, 0, 3.14 * 2);\r\n      ctx.closePath();\r\n      ctx.fill();\r\n\r\n    }\r\n\r\n\r\n    ctx.fillStyle = '#000000';\r\n    ctx.beginPath();\r\n    ctx.arc(this.p.x, this.p.y, 2.5, 0, 3.14 * 2);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.beginPath();\r\n    ctx.arc(this.p.x, this.p.y, 10 + Math.sin(this.t) * 5, 0, 3.14 * 2);\r\n    ctx.closePath();\r\n    // ctx.fill();\r\n    ctx.stroke();\r\n\r\n    // animation\r\n    ctx.lineWidth = 0.5\r\n    ctx.strokeStyle = `rgba(${255}, ${255}, ${0}, ${1 - this.scaleBounding * 0.07})`\r\n    ctx.beginPath();\r\n    ctx.arc(this.p.x, this.p.y, this.scaleBounding, 0, 3.14 * 2);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n    this.scaleBounding += 0.2;\r\n    if (1 - this.scaleBounding * 0.07 < 0) {\r\n      this.scaleBounding = 0;\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\n/*\r\nprivate function queue() :Vector3 {\r\n  var v :Vector3 = velocity.clone();\r\n  var brake :Vector3 = new Vector3();\r\n\r\n  var neighbor :Boid = getNeighborAhead();\r\n\r\n  if (neighbor != null) {\r\n    brake.x = -steering.x * 0.8;\r\n    brake.y = -steering.y * 0.8;\r\n\r\n    v.scaleBy(-1);\r\n    brake = brake.add(v);\r\n\r\n    if (distance(position, neighbor.position) <= MAX_QUEUE_RADIUS) {\r\n      velocity.scaleBy(0.3);\r\n    }\r\n  }\r\n\r\n  return brake;\r\n}\r\n*/","import { RendererCanvas, getCheckBox, getSlider } from '../../../lib'\r\n\r\nimport { BoidContollerWander0 } from './BoidContollerWander0';\r\nimport { BoidContollerWander1 } from './BoidContollerWander1';\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n    constructor(id: string) {\r\n        this.divHost = divHost;\r\n\r\n        // Center align\r\n        // this.divHost.style.display = 'flex';\r\n        // this.divHost.style.alignItems = 'center';\r\n\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#333';\r\n        div.style.width = '500px';\r\n        div.style.height = '500px';\r\n        this.divHost.appendChild(div);\r\n\r\n        this.renderer = new Renderer(div);\r\n\r\n        const text = document.createElement('div');\r\n        div.append(text);\r\n        text.textContent = 'Click or drag on canvas to populate agents'\r\n\r\n        const ui = document.createElement('div');\r\n        div.append(ui);\r\n\r\n        const sl1 = getSlider('Delay', 1, 10);\r\n        div.appendChild(sl1.div);\r\n        sl1.slider.defaultValue = '3';\r\n        sl1.slider.oninput = () => {\r\n            this.renderer.BoidContoller.updateTargetDelay(+sl1.slider.value)\r\n        };\r\n\r\n        const sl2 = getSlider('Mass', 1, 500);\r\n        div.appendChild(sl2.div);\r\n        sl2.slider.defaultValue = '3';\r\n        sl2.slider.oninput = () => {\r\n            this.renderer.BoidContoller.updateMass(+sl2.slider.value)\r\n        };\r\n\r\n        const sl3 = getSlider('Velocity', 1, 10);\r\n        div.appendChild(sl3.div);\r\n        sl3.slider.defaultValue = '3';\r\n        sl3.slider.oninput = () => {\r\n            this.renderer.BoidContoller.updateVelocity(+sl3.slider.value)\r\n        };\r\n\r\n        const cBox = getCheckBox('target');\r\n        ui.appendChild(cBox.div)\r\n        cBox.checkBox.checked = false;\r\n        cBox.checkBox.onchange = () => {\r\n            // console.log(cBox.checkBox.checked)\r\n            if (cBox.checkBox.checked === true) {\r\n                this.renderer.toggleTargetRendering(true);\r\n            } else {\r\n                this.renderer.toggleTargetRendering(false);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Renderer extends RendererCanvas {\r\n\r\n    BoidContoller: BoidContollerWander0;\r\n    dragTime = 0;\r\n\r\n    constructor(div: any) {\r\n        super(div);\r\n        this.canvas.style.position = 'relative';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n        // \r\n\r\n        this.BoidContoller = new BoidContollerWander0();\r\n        this.start();\r\n    }\r\n    public toggleTargetRendering(v: boolean) {\r\n        this.BoidContoller.toggleTargetRendering(v);\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n\r\n    }\r\n    public mouseUp(x: number, y: number): void {\r\n        this.BoidContoller.AddAgent(x, y, this.canvas.width, this.canvas.height);\r\n    }\r\n    public mouseDrag(x: number, y: number): void {\r\n        if (this.dragTime > 5) {\r\n            this.BoidContoller.AddAgent(x, y, this.canvas.width, this.canvas.height);\r\n            this.dragTime = 0;\r\n        }\r\n        this.dragTime++;\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n\r\n        this.BoidContoller.Update();\r\n        this.BoidContoller.Render(ctx);\r\n    }\r\n}"],"names":["BoidContollerWander0","constructor","boids","boundary","_toggleTargetRendering","this","Vector3","toggleTargetRendering","v","updateTargetDelay","n","i","length","targetDelay","updateMass","mass","updateVelocity","maxVelocity","AddAgent","x","y","w","h","boid","Boid","push","Update","b","GetPoint","pts","isRenderable","p","Render","ctx","forEach","beginPath","moveTo","lineTo","stroke","controller","p0","p1","maxForce","maxSpeed","targets","target","targetID","col","desiredVelocity","steering","velocity","wanderAngle","CIRCLE_DISTANCE","CIRCLE_RADIUS","ANGLE_CHANGE","t","MAX_QUEUE_AHEAD","MAX_QUEUE_RADIUS","trajectory","timerTrajectory","scaleBounding","list","UpdateTarget","UpdateVec1","vec","getRandomVecInSide","undefined","isInsideOfVecs","MathUtility","z","unitize","Queue","UpdateVec0","Wander","console","log","circleCenter","normalize","scale","displacement","setAngle","Math","random","add","value","len","cos","sin","GetNeighborAhead","ret","qa","clone","ahead","neighbor","d","RenderCircle","RenderDesiredVelocity","RenderCurrentVelocity","shift","fillStyle","arc","closePath","fill","strokeStyle","lineWidth","Solution","id","divHost","renderer","div","document","createElement","style","marginLeft","marginRight","backgroundColor","width","height","appendChild","Renderer","text","append","textContent","ui","sl1","getSlider","slider","defaultValue","oninput","BoidContoller","sl2","sl3","cBox","getCheckBox","checkBox","checked","onchange","destroy","lastElementChild","removeChild","RendererCanvas","super","dragTime","canvas","position","start","mouseDown","mouseUp","mouseDrag","render"],"sourceRoot":""}