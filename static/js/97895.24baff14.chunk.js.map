{"version":3,"file":"static/js/97895.24baff14.chunk.js","mappings":"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","sources":["njslab/Lab/AppParticle/ParticleWrapperPan/Core/Node.ts","njslab/Lab/AppParticle/ParticleWrapperPan/ParticleWrapperPan.ts","njslab/Lab/AppParticle/index.ts"],"sourcesContent":["import { NVector3 } from '../../../../../lib/NJSCore';\r\nexport class Node {\r\n    v: NVector3;\r\n    u: NVector3 = new NVector3(0, 0, 0);\r\n    f: NVector3 = new NVector3(0, 0, 0);\r\n    r: number = 10;\r\n    mass: number = 1;\r\n    isHover: boolean = false;\r\n    constructor(x: number, y: number) {\r\n        this.v = new NVector3(x, y);\r\n    }\r\n    translate(x: number, y: number) {\r\n        // this.v.x = x;\r\n        // this.v.y = y;\r\n    }\r\n    isInside(m: NVector3) {\r\n        if (this.v.Distance(m) < this.r) { this.isHover = true; return true; }\r\n        else { this.isHover = false; return false; }\r\n    }\r\n    Update(dt: number, damping: number) {\r\n        // u *= damping;\r\n        // u += f * (dt / m);\r\n        // p += u * dt;\r\n        this.u.Mult(damping);\r\n        this.f.Mult(dt / this.mass);\r\n        this.u.Add(this.f);\r\n        this.u.Mult(dt);\r\n    //     console.log(this.u);\r\n        this.v.Add(this.u);\r\n\r\n        // this.v.x += this.u.x;\r\n    }\r\n    // ........................................................................\r\n    render(ctx: CanvasRenderingContext2D) {\r\n        if (this.isHover) {\r\n            ctx.fillStyle = '#ff';\r\n        } else {\r\n            ctx.fillStyle = '#000';\r\n        }\r\n        ctx.beginPath();\r\n        ctx.arc(this.v.x, this.v.y, this.r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    RenderVec(ctx: CanvasRenderingContext2D) {\r\n\r\n    }\r\n}","import { Node } from './Core/Node';\r\nimport { NVector3 } from '../../../../lib/NJSCore';\r\n\r\n// https://cs.stanford.edu/people/eroberts/courses/soco/projects/2008-09/modeling-natural-systems/boids.html\r\n// http://www.red3d.com/cwr/steer/\r\n\r\n// https://Flockdevelopment.tutsplus.com/tutorials/understanding-steering-behaviors-path-following--Flockdev-8769\r\n// https://Flockdevelopment.tutsplus.com/tutorials/understanding-steering-behaviors-leader-following--Flockdev-10810\r\n// https://Flockdevelopment.tutsplus.com/tutorials/understanding-steering-behaviors-queue--Flockdev-14365\r\n\r\n// https://gamedevelopment.tutsplus.com/series/understanding-steering-behaviors--gamedev-12732\r\n\r\nexport class ParticleWrapperPan {\r\n    nodes: Node[] = [];\r\n    capture: Node | undefined;\r\n    m: NVector3 = new NVector3(0, 0);\r\n    constructor() {\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.nodes.push(new Node(100, 100));\r\n    }\r\n    update() {\r\n        let atr = new NVector3(this.m.x, this.m.y);\r\n        let damping = 0.2;\r\n        // let g = 0.0;\r\n        let dt = 0.75;\r\n\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            const dv = NVector3.Sub(atr, this.nodes[i].v);\r\n            const L = dv.Length();\r\n            dv.Unitize();\r\n            this.nodes[i].f = dv.Mult(Math.exp(-0.000001 * L * L) * 10);\r\n            this.nodes[i].Update(dt, damping);\r\n        }\r\n    }\r\n    //     foreach(Node n in nodes) {\r\n    //       Vector3d dv = atr - n.p;\r\n    //       double L = dv.Length;\r\n    //       dv.Unitize();\r\n    //       n.f = dv * Math.Exp(-0.001 * L * L) * 0.1;\r\n    //       n.Move(dt, damping);\r\n    //     }\r\n    render(ctx: CanvasRenderingContext2D) {\r\n        this.update();\r\n        for (let i = 0; i < this.nodes.length; ++i) { this.nodes[i].render(ctx); }\r\n    }\r\n    mouseDown(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            if (this.nodes[i].isInside(this.m)) {\r\n                this.capture = this.nodes[i];\r\n                return;\r\n            }\r\n        }\r\n        this.capture = undefined;\r\n    }\r\n    mouseUp(x: number, y: number) {\r\n        if (this.capture) { this.capture = undefined; }\r\n\r\n    }\r\n    mouseMove(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n        if (this.capture) {\r\n            this.mouseDrag(x, y);\r\n        }\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            if (this.nodes[i].isInside(this.m)) {\r\n            //     console.log('IsInside');\r\n            }\r\n        }\r\n    }\r\n    mouseDrag(x: number, y: number) {\r\n\r\n        if (this.capture) {\r\n            this.capture.translate(x, y);\r\n        }\r\n    }\r\n}\r\n","import { RendererCanvas } from '../../../lib';\r\nimport { ParticleWrapper } from './ParticleWrapperBoid/ParticleWrapperBoid';\r\nimport { ParticleWrapperPan } from './ParticleWrapperPan/ParticleWrapperPan';\r\nexport class Solution extends RendererCanvas {\r\n    particleWrapperPan: ParticleWrapperPan | ParticleWrapper;\r\n    constructor(id: string) {\r\n        const div = document.getElementById(id) as HTMLDivElement;\r\n        super(div);\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.particleWrapperPan = new ParticleWrapperPan();\r\n        // this.particleWrapperPan = new ParticleWrapper();\r\n\r\n        // !! you should execute it for rendering\r\n        this.start();\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5, 300, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fillStyle = '#fff';\r\n        ctx.fill()\r\n\r\n        this.particleWrapperPan.render(ctx);\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n        this.particleWrapperPan.mouseDown(x, y)\r\n    }\r\n    public mouseUp(x: number, y: number): void {\r\n        this.particleWrapperPan.mouseUp(x, y)\r\n    }\r\n    public mouseDrag(x: number, y: number): void {\r\n        // TODO\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n        // TODO\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n        // TODO\r\n    }\r\n    public keyDown(k: KeyboardEvent): void {\r\n        // TODO\r\n    }\r\n}\r\n"],"names":["Node","constructor","x","y","v","u","NVector3","f","r","mass","isHover","this","translate","isInside","m","Distance","Update","dt","damping","Mult","Add","render","ctx","fillStyle","beginPath","arc","Math","PI","closePath","fill","RenderVec","ParticleWrapperPan","nodes","capture","init","push","update","atr","i","length","dv","L","Length","Unitize","exp","mouseDown","undefined","mouseUp","mouseMove","mouseDrag","Solution","RendererCanvas","id","super","document","getElementById","particleWrapperPan","start","canvas","width","height","mouseClick","keyDown","k"],"sourceRoot":""}