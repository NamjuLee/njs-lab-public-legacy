{"version":3,"file":"static/js/30017.503a95ce.chunk.js","mappings":"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","sources":["njslab/Tools/BlockGame/Implementation/BlockSystem/Core/Vec.ts","njslab/Tools/BlockGame/Implementation/BlockSystem/Core/BlockGame.ts","njslab/Tools/BlockGame/Implementation/BlockSystem/CanvasCore/index.ts","njslab/Tools/BlockGame/Implementation/BlockSystem/index.ts","njslab/Tools/BlockGame/Implementation/index.ts","njslab/Tools/BlockGame/index.ts"],"sourcesContent":["// import { ConcaveCore } from './ConcaveCore';\n// import { CPoint } from '../../AppDrawing/Canvas/CGeometry/CPoint';\n// import { UNIT, MathUtility } from '../Utilities/MathUtility';\n\n// import { NWebassemblyController } from '../../../Webassembly/Core/NWebassemblyController/NWebassemblyController';\nexport class NVector3 {\n    public static eps: number = 0.0000001;\n    public static origin: NVector3 = new NVector3(0, 0, 0);\n    x: number = 0.0;\n    y: number = 0.0;\n    z: number = 0.0;\n    w: number = 0.0;\n    long: number = 0.0;\n    lat: number = 0.0;\n    ele: number = 0.0;\n    proX: number = 0.0;\n    proY: number = 0.0;\n    proZ: number = 0.0;\n    alt: number = 0.0;\n    d: boolean = true;\n    isModified: boolean = false;\n    color: string = '#000000';\n    isVisited: boolean = false;\n    // tslint:disable-next-line:no-any\n    parent: any;\n    public static GetVecforGraphicApp(long: number, lat: number, ele: number, proX: number, proY: number, proZ: number) {\n      let v = new NVector3(0, 0, 0);\n      v.long = long; v.lat = lat; v.ele = ele; v.proX = proX; v.proY = proY; v.proZ = proZ;\n      return v;\n    }\n    public static DeepCopy(v: NVector3): NVector3 {\n      const out = new NVector3(v.x, v.y, v.z);\n      out.long = v.long; out.lat = v.lat;\n      out.proX = v.proX; out.proY = v.proY; out.proZ = v.proZ;\n      return out;\n    }\n    public static Dot(a: NVector3, b: NVector3) {\n      return a.x * b.x + a.y * b.y + a.z * b.z;\n    }\n    // https://en.wikipedia.org/wiki/Shoelace_formula\n    // https://stackoverflow.com/questions/25122185/measuring-area-with-n-amount-of-gps-coordinates // no concave\n    public static GetAreayConvexGPS(vec: NVector3[]) {\n      let lats = [], longs = [];\n      for (let i = 0; i < vec.length; ++i) {\n        lats.push(vec[i].lat); longs.push(vec[i].long);\n      }\n      lats.push(vec[0].lat); longs.push(vec[0].long); // make sure to add the first term to the end of both arrays\n  \n      let latsSum = 0, longSum = 0; // get the average center point of the polygon\n  \n      for (let i = lats.length; i--;) {\n        latsSum += lats[i]; longSum += longs[i];\n      }\n  \n      let latOrigin = latsSum / lats.length;\n      let lonOrigin = longSum / longs.length;\n  \n      // translate origin to (0,0) by shifting lat long and calculate the standard angle of the point\n      let angles = new Array(lats.length);\n  \n      for (let j = lats.length; j--;) {\n        lats[j] -= latOrigin;\n        longs[j] -= lonOrigin;\n  \n        if (longs[j] >= 0 && lats[j] >= 0) {\n          angles[j] = Math.abs(Math.atan(lats[j] / longs[j]) * 180 / Math.PI);\n        } else if (longs[j] < 0 && lats[j] >= 0) {\n          angles[j] = 90 + Math.abs(Math.atan(lats[j] / longs[j]) * 180 / Math.PI);\n        } else if (longs[j] < 0 && lats[j] < 0) {\n          angles[j] = 180 + Math.abs(Math.atan(lats[j] / longs[j]) * 180 / Math.PI);\n        } else if (longs[j] >= 0 && lats[j] < 0) {\n          angles[j] = 270 + Math.abs(Math.atan(lats[j] / longs[j]) * 180 / Math.PI);\n        }\n      }\n  \n      // re-arrange the points from least to greatest angle\n      let curAng, curLat, curLon;\n  \n      for (let l = 0; l < angles.length; l++) {\n        for (let k = 0; k < angles.length - 1; k++) {\n          curAng = angles[k];\n          curLat = lats[k];\n          curLon = longs[k];\n  \n          if (curAng < angles[k + 1]) {\n            angles[k] = angles[k + 1];\n            lats[k] = lats[k + 1];\n            longs[k] = longs[k + 1];\n  \n            angles[k + 1] = curAng;\n            lats[k + 1] = curLat;\n            longs[k + 1] = curLon;\n          }\n        }\n      }\n  \n      // calculate area for irregular polygon\n      let sum1 = 0, sum2 = 0;\n  \n      for (let t = 0; t < lats.length; t++) {\n        if (t !== lats.length - 1) {\n          sum1 += lats[t] * longs[t + 1];\n          sum2 += longs[t] * lats[t + 1];\n        } else {\n          sum1 += lats[t] * longs[0];\n          sum2 += longs[t] * lats[0];\n        }\n      }\n  \n      let area = (sum1 - sum2) / 2.0;\n      // console.log('Area: ' + area * 6378137.0 * 6378137.0 / 2.0);\n      return area * 20; // * 6378137.0 * 6378137.0 / 2.0;\n    }\n    public static ScalarRev_V_S_OUT(v: NVector3, s: number, out: NVector3) {\n      out.x = s * v.x;\n      out.y = s * v.y;\n      out.z = s * v.z;\n      return out;\n    }\n    public static Add(v0: NVector3, v1: NVector3): NVector3 {\n      return new NVector3(v0.x + v1.x, v0.y + v1.y, v0.z + v1.z);\n    }\n    public static Sub(v0: NVector3, v1: NVector3): NVector3 {\n      return new NVector3(v0.x - v1.x, v0.y - v1.y, v0.z - v1.z);\n    }\n    public static Clone(v: NVector3): NVector3 {\n      return NVector3.DeepCopy(v);\n    }\n    public static ZAxis(): NVector3 {\n      return new NVector3(0, 0, 1);\n    }\n    public static YAxis(): NVector3 {\n      return new NVector3(0, 1, 0);\n    }\n    public static Zero(): NVector3 {\n      return new NVector3(0, 0, 0);\n    }\n    public static Origin(): NVector3 {\n      return new NVector3(0, 0, 0);\n    }\n    public static Plus(v1: NVector3, v2: NVector3): NVector3 {\n      return new NVector3(v1.x + v2.x, v1.y + v2.y, v1.z + v2.z);\n    }\n    public static Scale(v: NVector3, s: number): NVector3 {\n      return new NVector3(v.x * s, v.y * s, v.z * s);\n    }\n    public static MidVec(v0: NVector3, v1: NVector3): NVector3 {\n      return new NVector3(v0.x + ((v1.x - v0.x) * 0.5), v0.y + ((v1.y - v0.y) * 0.5), v0.z + ((v1.z - v0.z) * 0.5));\n    }\n    public static CompareTwoVectors(v0: NVector3, v1: NVector3): boolean {\n      if (v0.x !== v1.x || v0.y !== v1.y || v0.z !== v1.z) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n    public static CompareTwoVectorsByGeoPos(v0: NVector3, v1: NVector3, toFixed: number = 4): boolean {\n      if (v0.long.toFixed(toFixed) !== v1.long.toFixed(toFixed) || v0.lat.toFixed(toFixed) !== v1.lat.toFixed(toFixed)) {\n        return false;\n      } else {\n        return true;\n      }\n      // let tor = 0.00000000001;\n      // if ((v1.long - v0.long) >  tor  || (v1.lat - v0.lat) > tor ) {\n      //   return false;\n      // } else {\n      //   return true;\n      // }\n    }\n    public static Length(v: NVector3): number {\n      return Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\n    }\n    public static Normalize(v: NVector3): NVector3 {\n      let len: number = Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\n      if (len < 0.0001) {\n        return new NVector3(v.x, v.y, v.z);\n      }\n      return new NVector3(v.x / len, v.y / len, v.z / len);\n    }\n    // https://web.archive.org/web/20090214201206/http://valis.cs.uiuc.edu:80/~sariel/research/CG/compgeom/msg00827.html\n    public static GetArea(vs: NVector3[]) {\n      let area = 0;\n      // // double center2dx = 0;\n      // // double center2dy = 0;\n      // for (let i = 0; i < vs.length - 1; i++) {\n      //   // tmreal t = 2 * vs[i].X * vs[i + 0].Y + vs[i].Y * vs[i + 1].X + vs[i].X * vs[i + 1].Y + 2 * vs[i + 1].X * vs[i + 1].Y;\n      //   area += (vs[i].x - vs[i + 1].x) * (vs[i].y + vs[i + 1].y);\n      //   // center2d.x += (+vs[i].X - vs[i + 1].X) * t;\n      //   // center2d.y += (-vs[i].Y + vs[i + 1].Y) * t;\n      // }\n      // area *= 0.5;\n      // // center2dx *= 1 / (6 * area);\n      // // center2dy *= 1 / (6 * area);\n      // return area;\n  \n      for (let i = 0, l = vs.length; i < l; i++) {\n        let addX = vs[i].x;\n        let addY = vs[i === vs.length - 1 ? 0 : i + 1].y;\n        let subX = vs[i === vs.length - 1 ? 0 : i + 1].x;\n        let subY = vs[i].y;\n  \n        area += (addX * addY * 0.5);\n        area -= (subX * subY * 0.5);\n      }\n  \n      return Math.abs(area);\n    }\n    public static GetAreaByLongLat(vs: NVector3[]) {\n      let area = 0;\n      // double center2dx = 0;\n      // double center2dy = 0;\n      for (let i = 0; i < vs.length - 1; i++) {\n        // tmreal t = 2 * vs[i].X * vs[i + 0].Y + vs[i].Y * vs[i + 1].X + vs[i].X * vs[i + 1].Y + 2 * vs[i + 1].X * vs[i + 1].Y;\n        area += (vs[i].long - vs[i + 1].long) * (vs[i].lat + vs[i + 1].lat);\n        // center2d.x += (+vs[i].X - vs[i + 1].X) * t;\n        // center2d.y += (-vs[i].Y + vs[i + 1].Y) * t;\n      }\n      area *= 0.5;\n      // center2dx *= 1 / (6 * area);\n      // center2dy *= 1 / (6 * area);\n      return area;\n    }\n    public static GetGeoArea(vs: NVector3[]) {\n      let area = 0;\n      for (let i = 0; i < vs.length - 1; i++) {\n        area += (vs[i].x - vs[i + 1].x) * (vs[i].y + vs[i + 1].y);\n      }\n      area *= 0.5;\n      return Math.abs(area);\n    }\n    public static GetGeoAreaBbyLongLat(vs: NVector3[]) {\n      let area = 0;\n      for (let i = 0; i < vs.length - 1; i++) {\n        area += (vs[i].long - vs[i + 1].long) * (vs[i].lat + vs[i + 1].lat);\n      }\n      area *= 0.5;\n      return Math.abs(area);\n    }\n    public static GetIndexByShortDistance(v: NVector3, vs: NVector3[]): number[] {\n      let index = -1;\n      let dis = Number.MAX_SAFE_INTEGER;\n      for (let i = 0; i < vs.length; ++i) {\n        let distance = NVector3.Distance(v, vs[i]);\n        if (distance < dis) {\n          dis = distance;\n          index = i;\n        }\n      }\n      return [index, dis];\n    }\n    public static Distance(v0: NVector3, v1: NVector3): number {\n      return Math.sqrt((v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z));\n      // return NWebassemblyController.ctrller.Distance(v0.x, v0.y, v0.z, v1.x, v1.y, v1.z);\n    }\n    public static DistanceByArray(v0: number[], v1: number[]): number {\n      return Math.sqrt((v0[0] - v1[0]) * (v0[0] - v1[0]) + (v0[1] - v1[1]) * (v0[1] - v1[1]) + (v0[2] - v1[2]) * (v0[2] - v1[2]));\n    }\n    public static Distance2(v1: NVector3, v2: NVector3): number {\n      let d: number =\n        (v1.x - v2.x) * (v1.x - v2.x) +\n        (v1.y - v2.y) * (v1.y - v2.y) +\n        (v1.z - v2.z) * (v1.z - v2.z);\n      return d;\n    }\n    public static DotProduct(v1: NVector3, v2: NVector3): number {\n      return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z;\n    }\n    public static CrossProduct(v1: NVector3, v2: NVector3): NVector3 {\n      return new NVector3(\n        v1.y * v2.z - v1.z * v2.y,\n        v1.z * v2.x - v1.x * v2.z,\n        v1.x * v2.y - v1.y * v2.x\n      );\n    }\n    public static DivideByNum(v0: NVector3, v1: NVector3, n: number = 5): NVector3[] {\n      let vs: NVector3[] = [];\n      let xOff = (v1.x - v0.x) / n;\n      let yOff = (v1.y - v0.y) / n;\n      let zOff = (v1.z - v0.z) / n;\n      for (let j = 0; j < n; ++j) {\n        let x = v0.x + xOff * j;\n        let y = v0.y + yOff * j;\n        let z = v0.z + zOff * j;\n        vs.push(new NVector3(x, y, z));\n      }\n      return vs;\n    }\n    // static DistancefromGeoV(v0: NVector3, v1: NVector3, unit: UNIT = CGeometry.appDrawing.activeCommands.unit): number {\n    //   let dis = NVector3.KMeterFromGeoGPSPos(v0, v1);\n    //   if (unit === UNIT.METER) { return dis * 1000; }\n    //   if (unit === UNIT.KM) { return dis; }\n    //   if (unit === UNIT.MILE) { return MathUtility.MilesFromKM(dis); }\n    //   return -1;\n    // }\n    public static KMeterFromGeoGPSPos(gV0: NVector3, gV1: NVector3): number {\n      let R = 6378.137; // Radius of earth in KM // a = Equatorial radius (6,378.1370 km) // b = Polar radius (6,356.7523 km)\n      let dLat = gV1.lat * Math.PI / 180 - gV0.lat * Math.PI / 180;\n      let dLon = gV1.long * Math.PI / 180 - gV0.long * Math.PI / 180;\n      let a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(gV0.lat * Math.PI / 180) * Math.cos(gV1.lat * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n      let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      let d = R * c;\n      return d; // * 1000; // meters\n    }\n    public static KMeterByTwoGeoPos(long0: number, lat0: number, long1: number, lat1: number) {\n      let v0 = new NVector3(0, 0); v0.long = long0; v0.lat = lat0;\n      let v1 = new NVector3(0, 0); v1.long = long1; v1.lat = lat1;\n      return NVector3.KMeterFromGeoGPSPos(v0, v1);\n    }\n    public static KMeterFromGPSPos(gV0: NVector3, gV1: NVector3): number {\n      let R = 6378.137; // Radius of earth in KM // a = Equatorial radius (6,378.1370 km) // b = Polar radius (6,356.7523 km)\n      let dLat = gV1.y * Math.PI / 180 - gV0.y * Math.PI / 180;\n      let dLon = gV1.x * Math.PI / 180 - gV0.x * Math.PI / 180;\n      let a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(gV0.y * Math.PI / 180) *\n        Math.cos(gV1.y * Math.PI / 180) *\n        Math.sin(dLon / 2) *\n        Math.sin(dLon / 2);\n      let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      let d = R * c;\n      return d; // * 1000; // meters\n    }\n    public static Get1KM_Long_ByGeoUnit(long: number = 0, lat: number = 0): number {\n      let v = new NVector3(long, lat, 0);\n      let addition = 0.0;\n      for (let i = 0; i < 10000; ++i) {\n        let dis = NVector3.KMeterFromGPSPos(v, new NVector3(v.x + addition, v.y, v.z));\n        if (1 < dis && dis < 1.001) {\n          // console.log('result long', i, dis);\n          return v.x + addition;\n        }\n        addition += 0.00001;\n      }\n      return -1;\n    }\n    public static Get1KM_lat_ByGeoUnit(long: number = 0, lat: number = 0): number {\n      let v = new NVector3(long, lat, 0);\n      let addition = 0.0;\n      for (let i = 0; i < 10000; ++i) {\n        let dis = NVector3.KMeterFromGPSPos(v, new NVector3(v.x, v.y + addition, v.z));\n        if (1 < dis && dis < 1.001) {\n          // console.log('result lat', i, dis);\n          return v.y + addition;\n        }\n        addition += 0.00001;\n      }\n      return -1;\n    }\n    public static Get1KM_Lat_Long_GeoUnit(long: number = 0, lat: number = 0): NVector3 {\n      let lng = NVector3.Get1KM_Long_ByGeoUnit(long, lat);\n      let la = NVector3.Get1KM_lat_ByGeoUnit(long, lat);\n      return new NVector3(lng, la, 0);\n    }\n    // ............................................................................ vec compute\n    // static CalculateFalloff(pts: NVector3[], pt: NVector3, s: number, f: number): number {\n    //   let newValue = 0.0;\n    //   for (let i = 0; i < pts.length; ++i) {\n    //     // let v = NJS.PointUtils.CalculateFalloff(pt, pts[i], s, f);\n    //     // newValue += v;\n    //   }\n    //   return newValue;\n    // }\n    public static CalculateFalloff(pt: NVector3, attractor: NVector3, strength: number, falloff: number): number {\n      let v: NVector3 = NVector3.Sub(attractor, pt);\n      let dist: number = v.Length();\n      return dist * (strength * Math.exp(-falloff * dist * dist));\n    }\n    public static Attractor(pt: NVector3, attractor: NVector3, strength: number, falloff: number): NVector3 {\n      let v: NVector3 = NVector3.Sub(attractor, pt);\n      let dist = v.Length();\n      v.Unitize();\n      return v.Mult(strength * Math.exp(-falloff * dist * dist));\n    }\n    public static Explosion(pt: NVector3, Explosion: NVector3, strength: number, falloff: number): NVector3 {\n      let v = NVector3.Sub(Explosion, pt);\n      let dist = v.Length();\n      v.Unitize();\n      return v.Mult(-(strength * Math.exp(-falloff * dist * dist)));\n    }\n    public static Rotor(pt: NVector3, rotor: NVector3, strength: number, falloff: number): NVector3 {\n      let v = NVector3.Sub(rotor, pt);\n      v.Unitize();\n      // v.Rotate(3.141592 / 2, NVector3.zAxis);\n      // let dist: number = v.Length;\n      // return (v.Mult (strength * (Math.exp(-falloff * dist * dist))));\n      return NVector3.Origin();\n    }\n  \n    // ............................................................................ vec angle\n    public static GetAngleBetween(v0: NVector3, v1: NVector3) {\n      return Math.atan2(v1.x - v0.x, v1.y - v0.y);\n    }\n    // .................................................\n    public static GetCosAngleByTwoVectors(v0: NVector3, v1: NVector3): number {\n      return NVector3.DotProduct(NVector3.Normalize(v0), NVector3.Normalize(v1));\n    }\n    public static GetAngleByTwoVectorsRadian(v0: NVector3, v1: NVector3): number {\n      return Math.acos(NVector3.GetCosAngleByTwoVectors(v0, v1));\n    }\n    public static GetAngleByTwoVectors(v0: NVector3, v1: NVector3): number {\n      return NVector3.GetAngleByTwoVectorsRadian(v0, v1) * 180.0 / Math.PI;\n    }\n    public static GetRotationByWorldCoodinate(v: NVector3): number {\n      let origin = new NVector3(1, 0, 0);\n      return NVector3.GetAngleByTwoVectors(origin, v);\n    }\n    public static GetRotationByWorldCoodinateByTwo(v0: NVector3, v1: NVector3): number {\n      let v = v1.Sub(v0);\n      let origin = new NVector3(1, 0, 0);\n      if (v.y > 0) {\n        return NVector3.GetAngleByTwoVectors(origin, v) * -1;\n      } else {\n        return NVector3.GetAngleByTwoVectors(origin, v);\n      }\n    }\n    // ............................................................................\n    // static ToJSon(v) {\n    // var p = {\n    //             'point': [],\n    //             'primitive': 'point',\n    //             'units': {\n    //             'point': 'meters'\n    //         }\n    // }\n    // p.point = [v.x , v.y, v.z];\n    // return p;\n    // }\n    public static ComputeDotProducts(vs: NVector3[]) {\n      let out = [];\n      for (let i = 0; i < vs.length; ++i) {\n        // let v0: NVector3 = NVector3.Origin();\n        // let v1: NVector3;\n        if (i < vs.length - 1) {\n          let v0 = new NVector3(vs[i].x, vs[i].y, vs[i].z);\n          let v1 = new NVector3(vs[i + 1].x, vs[i + 1].y, vs[i + 1].z);\n  \n          v1.x -= v0.x;\n          v1.y -= v0.y;\n          v1.z -= v0.z;\n  \n          let dot = NVector3.DotProduct(new NVector3(1, 0, 0), NVector3.Normalize(v1));\n          out.push(dot);\n        } else {\n          let v0 = new NVector3(vs[i].x, vs[i].y, vs[i].z);\n          let v1 = new NVector3(vs[0].x, vs[0].y, vs[0].z);\n  \n          v1.x -= v0.x;\n          v1.y -= v0.y;\n          v1.z -= v0.z;\n  \n          let dot = NVector3.DotProduct(new NVector3(1, 0, 0), NVector3.Normalize(v1));\n          out.push(dot);\n        }\n      }\n      return out;\n    }\n    public static ComputeDotProductsWithCenter(vs: NVector3[]) {\n      let cp = NVector3.GetCenterVecFromVecs(vs);\n      let out = [];\n      for (let i = 0; i < vs.length; ++i) {\n        let v0: NVector3;\n        let v1: NVector3;\n        if (i < vs.length - 1) {\n          v0 = new NVector3(vs[i].x - cp.x, vs[i].y - cp.y, vs[i].z - cp.z);\n          v1 = new NVector3(vs[i + 1].x - cp.x, vs[i + 1].y - cp.y, vs[i + 1].z - cp.z);\n        } else {\n          v0 = new NVector3(vs[i].x - cp.x, vs[i].y - cp.y, vs[i].z - cp.z);\n          v1 = new NVector3(vs[0].x - cp.x, vs[0].y - cp.y, vs[0].z - cp.z);\n        }\n        let dot = NVector3.DotProduct(NVector3.Normalize(v0), NVector3.Normalize(v1));\n        out.push(dot);\n      }\n      return out;\n    }\n    public static GetXYDimForCircle(vs: NVector3[]) {\n      let cp = NVector3.GetCenterVecFromVecs(vs);\n      // let out = [];\n      let xx: number = 0;\n      let yy: number = 0;\n      let len = vs.length;\n      for (let i = 0; i < len; ++i) {\n  \n        // if (i < vs.length - 1) {\n        xx += Math.abs(vs[i].x - cp.x);\n        yy += Math.abs(vs[i].y - cp.y);\n        // v0 = new NVector3(vs[i].x - cp.x, vs[i].y - cp.y, vs[i].z - cp.z);\n        // v1 = new NVector3(vs[i + 1].x - cp.x, vs[i + 1].y - cp.y, vs[i + 1].z - cp.z);\n        // } else {\n        // v0 = new NVector3(vs[i].x - cp.x, vs[i].y - cp.y, vs[i].z - cp.z);\n        // v1 = new NVector3(vs[0].x - cp.x, vs[0].y - cp.y, vs[0].z - cp.z);\n        // }\n        // let dot = NVector3.DotProduct(NVector3.Normalize(v0), NVector3.Normalize(v1));\n        // out.push(dot);\n      }\n      len += 2;\n      return [xx / len, yy / len];\n    }\n  \n    public static DistanceMouseWithTwoVecs(m: NVector3, v0: NVector3, v1: NVector3): number {\n      v0.x += 0.00001;\n      v0.y += 0.00001;\n      let boundary = NVector3.GetBoundingVecs(v0, v1);\n      let vec = NVector3.GetCloseVec(v0, v1, m.x, m.y, boundary, true);\n      return NVector3.Distance(m, vec);\n    }\n    public static GetCloseVec(p0: NVector3, p1: NVector3, x: number, y: number, vecsBound: NVector3[], OnLine: boolean = true): NVector3 {\n      let pp1: NVector3 = new NVector3(p0.x, p0.y, p0.z);\n      let pp2: NVector3 = new NVector3(p1.x, p1.y, p1.z);\n      let v1: NVector3 = pp2.Sub(pp1);\n      let p: NVector3 = new NVector3(x, y, 0);\n      let v2: NVector3 = p.Sub(pp1);\n      v1.Unitize();\n      let cp = pp1.Add(v1.Mult(v2.DotProduct(v1)));\n      if (OnLine) {\n        if (NVector3.IsInsideOfVecs(cp, vecsBound)) {\n          return cp;\n        } else {\n          if (p0.Distance(cp) < p1.Distance(cp)) {\n            return new NVector3(p0.x, p0.y, p0.z);\n          } else {\n            return new NVector3(p1.x, p1.y, p1.z);\n          }\n        }\n      } else {\n        return cp;\n      }\n    }\n    public static GetBoundingVecs(v0: NVector3, v1: NVector3): NVector3[] {\n      let listOfVec: NVector3[] = [];\n      let x: number = 0;\n      let y: number = 0;\n      let z: number = 0;\n      if (v0.x < v1.x) { x = v0.x; } else { x = v1.x; }\n      if (v0.y < v1.y) { y = v0.y; } else { y = v1.y; }\n      if (v0.z < v1.z) { z = v0.z; } else { z = v1.z; }\n      let nv0 = new NVector3(x, y, z);\n      if (v0.x > v1.x) { x = v0.x; } else { x = v1.x; }\n      if (v0.y > v1.y) { y = v0.y; } else { y = v1.y; }\n      if (v0.z > v1.z) { z = v0.z; } else { z = v1.z; }\n      let nv1 = new NVector3(x, y, z);\n      listOfVec.push(new NVector3(nv0.x, nv0.y, nv0.z));\n      listOfVec.push(new NVector3(nv1.x, nv0.y, nv0.z));\n      listOfVec.push(new NVector3(nv1.x, nv1.y, nv0.z));\n      listOfVec.push(new NVector3(nv0.x, nv1.y, nv0.z));\n      return listOfVec;\n    }\n    public static GetBoundaryByVecWidthHeight(v: NVector3, width: number, height: number): NVector3[] {\n      let boundarVecsSub = [];\n      boundarVecsSub.push(new NVector3(v.x, v.y, v.z));\n      boundarVecsSub.push(new NVector3(v.x + width, v.y, v.z));\n      boundarVecsSub.push(new NVector3(v.x + width, v.y + height, v.z));\n      boundarVecsSub.push(new NVector3(v.x, v.y + height, v.z));\n      return boundarVecsSub;\n    }\n    public static GetBoundingByVecs(vs: NVector3[]): NVector3[] {\n      let listOfVec: NVector3[] = [];\n      let xMin: number = Number.MAX_SAFE_INTEGER;\n      let yMin: number = Number.MAX_SAFE_INTEGER;\n      let zMin: number = Number.MAX_SAFE_INTEGER;\n  \n      let xMax: number = Number.MIN_SAFE_INTEGER;\n      let yMax: number = Number.MIN_SAFE_INTEGER;\n      let zMax: number = Number.MIN_SAFE_INTEGER;\n      for (let i = 0; i < vs.length; ++i) {\n  \n        if (xMin > vs[i].x) { xMin = vs[i].x; }\n        if (yMin > vs[i].y) { yMin = vs[i].y; }\n        if (zMin > vs[i].z) { zMin = vs[i].z; }\n  \n        if (xMax < vs[i].x) { xMax = vs[i].x; }\n        if (yMax < vs[i].y) { yMax = vs[i].y; }\n        if (zMax < vs[i].z) { zMax = vs[i].z; }\n  \n      }\n      listOfVec.push(new NVector3(xMin, yMin, zMin));\n      listOfVec.push(new NVector3(xMax, yMax, zMax));\n      return listOfVec;\n    }\n    public static GetMinMaxVecFromVecs(vec: NVector3[]): NVector3[] {\n      let minX = Number.MAX_VALUE, minY = Number.MAX_VALUE, minZ = Number.MAX_VALUE;\n      let maxX = Number.MIN_VALUE, maxY = Number.MIN_VALUE, maxZ = Number.MIN_VALUE;\n      for (let v of vec) {\n        if (minX > v.x) { minX = v.x; } if (minY > v.y) { minY = v.y; } if (minZ > v.z) { minZ = v.z; }\n        if (maxX < v.x) { maxX = v.x; } if (maxY < v.y) { maxY = v.y; } if (maxZ < v.z) { maxZ = v.z; }\n      }\n      return [new NVector3(minX, minY, minZ), new NVector3(maxX, maxY, maxZ)];\n    }\n    public static RemoveVecsWithinDis(vs: NVector3[], tor: number = 10): NVector3[] {\n      let vecs: NVector3[] = [];\n      for (let i = 0; i < vs.length - 1; ++i) {\n        let v0 = vs[i];\n        if (v0.d === false) { continue; }\n        for (let j = i + 1; j < vs.length; ++j) {\n          if (NVector3.Distance(v0, vs[j]) < tor) { vs[j].d = false; }\n        }\n      }\n      for (let i = 0; i < vs.length; ++i) { if (vs[i].d === true) { vecs.push(vs[i]); } }\n      // vecs.push(vs[vs.length - 1]);\n      return vecs;\n    }\n    // ...............................................................................\n    public static IsInsideOfVecsWtihVecs(vs: NVector3[], vecs: NVector3[]): boolean {\n      let inside: boolean = true;\n      for (let i = 0; i < vs.length; i++) {\n        inside = NVector3.IsInsideOfVecs(vs[i], vecs);\n        if (!inside) {\n          return false;\n        }\n      }\n      return true;\n    }\n    public static IsInsideOfVecWithHeight(mv: NVector3, tv: NVector3, width: number, height: number) {\n      if (tv.x < mv.x && mv.x < tv.x + width && tv.y < mv.y && mv.y < tv.y + height) { return true; }\n      return false;\n    }\n    // intersect\n  \n    public static orientation(p: NVector3, q: NVector3, r: NVector3): number {\n      // See https://www.geeksforgeeks.org/orientation-3-ordered-points/\n      // for details of below formula.\n      const val = (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n  \n      if (val === 0) { return 0; } // colinear\n  \n      return (val > 0) ? 1 : 2; // clock or counterclock wise\n    }\n    public static onSegment(p: NVector3, q: NVector3, r: NVector3): boolean {\n      if (q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y)) { return true; }\n      return false;\n    }\n    public static isIntersect(p1: NVector3, q1: NVector3, p2: NVector3, q2: NVector3): boolean {\n      // Find the four orientations needed for general and\n      // special cases\n      const o1 = this.orientation(p1, q1, p2);\n      const o2 = this.orientation(p1, q1, q2);\n      const o3 = this.orientation(p2, q2, p1);\n      const o4 = this.orientation(p2, q2, q1);\n  \n      // General case\n      if (o1 !== o2 && o3 !== o4) { return true; }\n  \n      // Special Cases\n      // p1, q1 and p2 are colinear and p2 lies on segment p1q1\n      if (o1 === 0 && this.onSegment(p1, p2, q1)) { return true; }\n  \n      // p1, q1 and q2 are colinear and q2 lies on segment p1q1\n      if (o2 === 0 && this.onSegment(p1, q2, q1)) { return true; }\n  \n      // p2, q2 and p1 are colinear and p1 lies on segment p2q2\n      if (o3 === 0 && this.onSegment(p2, p1, q2)) { return true; }\n  \n      // p2, q2 and q1 are colinear and q1 lies on segment p2q2\n      if (o4 === 0 && this.onSegment(p2, q1, q2)) { return true; }\n  \n      return false; // Doesn't fall in any of the above cases\n    }\n  \n  \n    // end intersect\n    public static IsInsideOfVecs(v: NVector3, vecs: NVector3[]): boolean {\n      // ray-casting algorithm based on https://github.com/substack/point-in-polygon\n      // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n      let x = v.x, y = v.y;\n      let inside = false;\n      for (let i = 0, j = vecs.length - 1; i < vecs.length; j = i++) {\n        let xi = vecs[i].x, yi = vecs[i].y;\n        let xj = vecs[j].x, yj = vecs[j].y;\n        let intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n        if (intersect) {\n          inside = !inside;\n        }\n      }\n      return inside;\n    }\n    public static IsInsideOfVecsByArray(v: number[], vecs: number[][]): boolean {\n      // ray-casting algorithm based on https://github.com/substack/point-in-polygon\n      // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n      let x = v[0], y = v[1];\n      let inside = false;\n      for (let i = 0, j = vecs.length - 1; i < vecs.length; j = i++) {\n        let xi = vecs[i][0], yi = vecs[i][1];\n        let xj = vecs[j][0], yj = vecs[j][1];\n        let intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n        if (intersect) {\n          inside = !inside;\n        }\n      }\n      return inside;\n    }\n    public static IsInsideOfVecsByCrossing(v: NVector3, w: number, h: number, vs: NVector3[]) {\n      if (this.IsInsideOfVecs(new NVector3(v.x - w * 0.5, v.y - h * 0.5), vs)) { return true; }\n      if (this.IsInsideOfVecs(new NVector3(v.x + w * 0.5, v.y - h * 0.5), vs)) { return true; }\n      if (this.IsInsideOfVecs(new NVector3(v.x + w * 0.5, v.y + h * 0.5), vs)) { return true; }\n      if (this.IsInsideOfVecs(new NVector3(v.x - w * 0.5, v.y + h * 0.5), vs)) { return true; }\n      return false;\n    }\n    public static IsInsideOfVecsByConcaveHull(v: NVector3, vs: NVector3[]) {\n      // let vsNum: number[][] = [];\n      // for (let i = 0; i < vs.length; ++i) {\n      //   vsNum.push([vs[i].x, vs[i].y]);\n      // }\n  \n      // let result = ConcaveCore.hull(vsNum, 20)\n      // console.log(vs.length);\n      // console.log(result);\n  \n      // for (let i = 0; i < result.length; ++i) {\n      //   new CPoint(result[i][0], result[i][1]);\n      // }\n    }\n    // Convex hull\n    // https://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Convex_hull/Monotone_chain\n    public static IsInsideOfVecsByConvexHull(v: NVector3, vecs: NVector3[]): boolean {\n      vecs = NVector3.ConvexHull(vecs);\n      if (NVector3.IsInsideOfVecs(v, vecs)) { return true; } else { return false; }\n    }\n    public static ConvexHull(vs: NVector3[]): NVector3[] {\n      vs.sort(function (a: NVector3, b: NVector3) {\n        return a.x === b.x ? a.y - b.y : a.x - b.x;\n      });\n      let lower: NVector3[] = [];\n      for (let i = 0; i < vs.length; i++) {\n        while (lower.length >= 2 && NVector3.Cross(lower[lower.length - 2], lower[lower.length - 1], vs[i]) <= 0) { lower.pop(); }\n        lower.push(vs[i]);\n      }\n      let upper: NVector3[] = [];\n      for (let i = vs.length - 1; i >= 0; i--) {\n        while (upper.length >= 2 && NVector3.Cross(upper[upper.length - 2], upper[upper.length - 1], vs[i]) <= 0) { upper.pop(); }\n        upper.push(vs[i]);\n      }\n      upper.pop(); lower.pop();\n      for (let i = 0; i < upper.length; ++i) { lower.push(upper[i]); }\n      return lower;\n    }\n    public static Cross(O: NVector3, A: NVector3, B: NVector3): number {\n      return (A.x - O.x) * (B.y - O.y) - (A.y - O.y) * (B.x - O.x);\n    }\n    public static Cross_A_B_OUT(a: NVector3, b: NVector3, out: NVector3) {\n      const ax = a.x, ay = a.y, az = a.z, bx = b.x, by = b.y, bz = b.z;\n      out.x = ay * bz - az * by;\n      out.y = az * bx - ax * bz;\n      out.z = ax * by - ay * bx;\n      return out;\n    }\n    public static CheckBoundIntersection(vs: NVector3[], p0: NVector3, p1: NVector3) {\n      for (let i = 0; i < vs.length - 1; ++i) {\n        if (this.CheckLineIntersection(vs[i], vs[i + 1], p0, p1)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    // http://jsfiddle.net/justin_c_rounds/Gd2S2/light/\n    public static CheckLineIntersection(p0: NVector3, p1: NVector3, p2: NVector3, p3: NVector3) {\n      // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\n      let denominator: number = 0, a: number = 0, b: number = 0, numerator1: number = 0, numerator2: number = 0;\n      let onLine0: boolean = false, onLine1: boolean = false;\n      denominator = ((p3.y - p2.y) * (p1.x - p0.x)) - ((p3.x - p2.x) * (p1.y - p0.y));\n      let result: NVector3 = new NVector3(0, 0, 0);\n      if (denominator === 0) { return undefined; }\n      a = p0.y - p2.y;\n      b = p0.x - p2.x;\n      numerator1 = ((p3.x - p2.x) * a) - ((p3.y - p2.y) * b);\n      numerator2 = ((p1.x - p0.x) * a) - ((p1.y - p0.y) * b);\n      a = numerator1 / denominator;\n      b = numerator2 / denominator;\n  \n      // if we cast these lines infinitely in both directions, they intersect here:\n      result.x = p0.x + (a * (p1.x - p0.x));\n      result.y = p0.y + (a * (p1.y - p0.y));\n      /*\n              // it is worth noting that this should be the same as:\n              x = p2.x + (b * (p3.x - p2.x));\n              y = p2.x + (b * (p3.y - p2.y));\n              */\n      // if line1 is a segment and line2 is infinite, they intersect if:\n      if (a > 0 && a < 1) {\n        onLine0 = true;\n      }\n      // if line2 is a segment and line1 is infinite, they intersect if:\n      if (b > 0 && b < 1) {\n        onLine1 = true;\n      }\n      // if line1 and line2 are segments, they intersect if both of the above are true\n      if (onLine0 && onLine1) {\n        return result;\n      } else { return undefined; }\n    }\n    // http://www.sunshine2k.de/coding/java/Polygon/Convex/polygon.htm\n    public static CheckConvexity(vs: NVector3[]) {\n      if (vs.length < 3) { return false; }\n  \n      let p: NVector3;\n      let v: NVector3;\n      let u: NVector3;\n      let res = 0;\n  \n      for (let i = 0; i < vs.length; i++) {\n        p = vs[i];\n        let tmp = vs[(i + 1) % vs.length];\n        v = new NVector3(tmp.x - p.x, tmp.y - p.y, 0);\n        u = vs[(i + 2) % vs.length];\n  \n        if (i === 0) { // in first loop direction is unknown, so save it in res\n          res = u.x * v.y - u.y * v.x + v.x * p.y - v.y * p.x;\n        } else {\n          let newres = u.x * v.y - u.y * v.x + v.x * p.y - v.y * p.x;\n          if ((newres > 0 && res < 0) || (newres < 0 && res > 0)) { return false; }\n        }\n      }\n      return true;\n    }\n    //////////////////////////////////////////////////////////////////////////////// translation Utility\n    public static MoveVecs(vecs: NVector3[], dir: NVector3): NVector3[] {\n      let temp: NVector3[] = [];\n      for (let i = 0; i < vecs.length; ++i) {\n        //\n        temp.push(NVector3.MoveVec(vecs[i], dir));\n      }\n      return temp;\n    }\n    public static MoveVec(v: NVector3, dir: NVector3): NVector3 {\n      return new NVector3(v.x + dir.x, v.y + dir.y, v.z + dir.z);\n    }\n    public static RotateVecsLoal(vecs: NVector3[], angle: number): NVector3[] {\n      let cptToLocal = NVector3.GetCenterVecFromVecs(vecs);\n      let cptToWorld = new NVector3(-cptToLocal.x, -cptToLocal.y, -cptToLocal.z);\n      let temp: NVector3[] = NVector3.MoveVecs(vecs, cptToWorld);\n      temp = NVector3.RotateVecs(temp, angle);\n      temp = NVector3.MoveVecs(temp, cptToLocal);\n      return temp;\n    }\n    public static RotateVecs(vecs: NVector3[], angle: number) {\n      let temp: NVector3[] = [];\n      for (let i = 0; i < vecs.length; ++i) {\n        temp.push(NVector3.RotateVec(vecs[i], angle));\n      }\n      return temp;\n    }\n    public static Reflect(v: NVector3, n: NVector3, strength: number = 1): NVector3 {\n      // http://www.3dkingdoms.com/weekly/weekly.php?a=2\n      // (2 * (v * n) * n - v ) * strength;\n  \n      v.x *= -1;\n      v.y *= -1;\n      v.z *= -1;\n  \n      const dot = this.DotProduct(v, n);\n      return new NVector3(\n        (2 * dot * n.x - v.x) *  strength,\n        (2 * dot * n.y - v.y) *  strength,\n        (2 * dot * n.z - v.z) *  strength,\n      );\n    }\n    public static RotateVec(v: NVector3, angle: number): NVector3 {\n      let cos = Math.cos(angle * (3.14159265358979 / 180.0));\n      let sin = Math.sin(angle * (3.14159265358979 / 180.0));\n      let x = v.x * cos - v.y * sin;\n      let y = v.x * sin + v.y * cos;\n      return new NVector3(x, y, v.z);\n    }\n    public static GetCenterVecFromVecs(vecs: NVector3[]): NVector3 {\n      let nv = new NVector3(0, 0, 0);\n      for (let i = 0, c = vecs.length; i < c; ++i) {\n        nv.Add(vecs[i]);\n      }\n      nv.Mult(1.0 / vecs.length);\n      return nv;\n    }\n    // .............................................................................\n    public static MidVecGeo(p1: NVector3, p2: NVector3): NVector3 {\n      // return new NVector3(p1.screenX + p2.screenX * 0.5, p1.screenY + p2.screenY * 0.5, 0);\n      // return new NVector3(p1.x + p2.x * 0.5, p1.y + p2.y * 0.5, 0);\n      return new NVector3(p1.x + ((p2.x + p1.x) * 0.5), p1.y + ((p2.y + p1.y) * 0.5), p1.z + ((p2.z + p1.z) * 0.5));\n    }\n    // intersection // https://gist.github.com/gordonwoodhull/50eb65d2f048789f9558\n    // https://stackoverflow.com/questions/563198/whats-the-most-efficent-way-to-calculate-where-two-line-segments-intersect/1968345#1968345\n    public static GetVecFromIntersection(vs: NVector3[]): NVector3[] | undefined {\n      let newVes: NVector3[] = [];\n      for (let j = 0; j < vs.length - 1; ++j) {\n        for (let k = j + 1; k < vs.length - 1; ++k) {\n          let v = NVector3.CheckLineIntersection(vs[j], vs[j + 1], vs[k], vs[k + 1]);\n          if (v) { newVes.push(v); }\n        }\n      }\n      if (newVes.length === 0) { return undefined; } else { return newVes; }\n    }\n    public static between(a: number, b: number, c: number) {\n      return a - NVector3.eps <= b && b <= c + NVector3.eps;\n    }\n    public static segment_intersection(v0: NVector3, v1: NVector3, v2: NVector3, v3: NVector3) {\n      var x = ((v0.x * v1.y - v0.y * v1.x) * (v2.x - v3.x) - (v0.x - v1.x) * (v2.x * v3.y - v2.y * v3.x)) /\n        ((v0.x - v1.x) * (v2.y - v3.y) - (v0.y - v1.y) * (v2.x - v3.x));\n      var y = ((v0.x * v1.y - v0.y * v1.x) * (v2.y - v3.y) - (v0.y - v1.y) * (v2.x * v3.y - v2.y * v3.x)) /\n        ((v0.x - v1.x) * (v2.y - v3.y) - (v0.y - v1.y) * (v2.x - v3.x));\n      if (isNaN(x) || isNaN(y)) {\n        return false;\n      } else {\n        if (v0.x >= v1.x) {\n          if (!NVector3.between(v1.x, x, v0.x)) { return false; }\n        } else {\n          if (!NVector3.between(v0.x, x, v1.x)) { return false; }\n        }\n        if (v0.y >= v1.y) {\n          if (!NVector3.between(v1.y, y, v0.y)) { return false; }\n        } else {\n          if (!NVector3.between(v0.y, y, v1.y)) { return false; }\n        }\n        if (v2.x >= v3.x) {\n          if (!NVector3.between(v3.x, x, v2.x)) { return false; }\n        } else {\n          if (!NVector3.between(v2.x, x, v3.x)) { return false; }\n        }\n        if (v2.y >= v3.y) {\n          if (!NVector3.between(v3.y, y, v2.y)) { return false; }\n        } else {\n          if (!NVector3.between(v2.y, y, v3.y)) { return false; }\n        }\n      }\n      return new NVector3(x, y);\n    }\n    // ............................................................................. end static\n    constructor(x: number, y: number, z: number = 0) {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n    }\n    public Set(x: number, y: number, z: number): NVector3 {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      return new NVector3(this.x, this.y, this.z);\n    }\n    public Scale(v: number): NVector3 {\n      this.x *= v;\n      this.y *= v;\n      this.z *= v;\n      return new NVector3(this.x, this.y, this.z);\n    }\n    public Mult(v: number): NVector3 {\n      this.x *= v;\n      this.y *= v;\n      this.z *= v;\n      return new NVector3(this.x, this.y, this.z);\n    }\n    public DivByVal(v: number): NVector3 {\n      this.x /= v;\n      this.y /= v;\n      this.z /= v;\n      return new NVector3(this.x, this.y, this.z);\n    }\n    public DivByVec(v: NVector3): NVector3 {\n      this.x /= v.x;\n      this.y /= v.y;\n      this.z /= v.z;\n      return new NVector3(this.x, this.y, this.z);\n    }\n    public Add(v: NVector3): NVector3 {\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n      return new NVector3(this.x, this.y, this.z);\n    }\n    public Sub(v: NVector3): NVector3 {\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n      return new NVector3(this.x, this.y, this.z);\n    }\n    public Negate() {\n      this.x *= -1;\n      this.y *= -1;\n      this.z *= -1;\n      return new NVector3(this.x, this.y, this.z);\n    }\n    public Equals(v: NVector3) {\n      return this.x === v.x && this.y === v.y && this.z === v.z;\n    }\n    public Clone(): NVector3 {\n      const other = new NVector3(this.x, this.y, this.z);\n      other.long = this.long; other.lat = this.lat; other.ele = this.ele;\n      other.proX = this.proX; other.proY = this.proY; other.proZ = this.proZ;\n      return other;\n    }\n    public Length(): number {\n      const len = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n      if (len < 0.00001) {\n        return 0.00001;\n      }\n      return len;\n    }\n    public Unitize(): NVector3 {\n      return this.Normalize();\n    }\n    public IsOverlap(v: NVector3, tor: number = 0.1) {\n      if (this.Distance(v) < tor) { return true; } else { return false; }\n    }\n    public Normalize(): NVector3 {\n      let len: number = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n      if (len < 0.0001) {\n        return this;\n      }\n      this.x = this.x / len;\n      this.y = this.y / len;\n      this.z = this.z / len;\n      return this;\n    }\n    public Distance(v: NVector3): number {\n      return NVector3.Distance(new NVector3(this.x, this.y, this.z), v);\n    }\n    public DistanceByArray(vs: number[]) {\n      return NVector3.DistanceByArray([this.x, this.y, this.z], vs);\n    }\n    public Distance2(v: NVector3): number {\n      return NVector3.Distance2(new NVector3(this.x, this.y, this.z), v);\n    }\n    public DotProduct(v: NVector3): number {\n      return NVector3.DotProduct(new NVector3(this.x, this.y, this.z), v);\n    }\n    public CrossProduct(v: NVector3): NVector3 {\n      return NVector3.CrossProduct(new NVector3(this.x, this.y, this.z), v);\n    }\n    public SquareLength(): number {\n      let len: number = NVector3.Length(new NVector3(this.x, this.y, this.z));\n      return len * len;\n    }\n    public FadeExp(attr: NVector3, dVal: number) {\n      let v = new NVector3(this.x, this.y, this.z);\n      v.Sub(attr);\n      return Math.exp(-dVal * v.SquareLength());\n    }\n    public GetAngle(): number {\n      return Math.atan2(this.y, this.x);\n    }\n    public GetAngleDegree() {\n      return 180 * this.GetAngle() / Math.PI;\n    }\n    public ToJSON() {\n      /* */\n    }\n    public ToString(): string {\n      let t: string = 'x: ' + this.x.toFixed(3).toString() + ' , y: ' + this.y.toFixed(3).toString() + ', z: ' + this.z.toFixed(3).toString();\n      return t;\n    }\n    public ToFloat32Array() {\n      return new Float32Array([this.x, this.y, this.z]);\n    }\n  }\n  \n  export const isInsideEllipse = (cv: NVector3, m: NVector3, r0: number, r1: number, threshold = 5) => {\n    const x = Math.pow((m.x - cv.x),2) / Math.pow(threshold + r0, 2);\n    const y = Math.pow((m.y - cv.y),2) / Math.pow(threshold + r1, 2);\n    if(x + y <= 1) {\n        return true;\n    }\n    return false;\n  }","import { NVector3 } from './Vec';\r\nimport { BlockSystem } from '..';\r\nexport class BlockGame {\r\n    BlockSystem: BlockSystem;\r\n    ball: Ball;\r\n    bricks: Brick[][] = [];\r\n    canvas: HTMLCanvasElement;\r\n    dx = 2;\r\n    dy = -2;\r\n    paddleHeight = 10;\r\n    paddleWidth = 75;\r\n    paddleX = 10;\r\n    rightPressed = false;\r\n    leftPressed = false;\r\n    brickRowCount = 3;\r\n    brickColumnCount = 5;\r\n    brickWidth = 75;\r\n    brickHeight = 20;\r\n    brickPadding = 10;\r\n    brickOffsetTop = 30;\r\n    brickOffsetLeft = 30;\r\n\r\n    constructor(BlockSystem: BlockSystem) {\r\n        this.BlockSystem = BlockSystem;\r\n        this.canvas = this.BlockSystem.CanvasCore.canvas;\r\n        this.paddleX = (this.canvas.width - this.paddleWidth) / 2;\r\n        this.ball = new Ball(this.canvas.width / 2, this.canvas.height - 30);\r\n        this.bricks = [];\r\n        for (var c = 0; c < this.brickColumnCount; c++) {\r\n            this.bricks[c] = [];\r\n            for (var r = 0; r < this.brickRowCount; r++) {\r\n                this.bricks[c][r] = new Brick(0, 0, 1);\r\n            }\r\n        }\r\n        document.onkeydown = (e: KeyboardEvent) => this.keyDownHandler(e);\r\n        document.onkeyup = (e: KeyboardEvent) => this.keyUpHandler(e);\r\n\r\n        // document.addEventListener('keydown', this.keyDownHandler, false);\r\n        // document.addEventListener('keyup', this.keyUpHandler, false);\r\n    }\r\n    public keyDownHandler(e: KeyboardEvent) {\r\n        if (e.key === 'Right' || e.key === 'ArrowRight') {\r\n            this.rightPressed = true;\r\n        }\r\n        else if (e.key === 'Left' || e.key === 'ArrowLeft') {\r\n            this.leftPressed = true;\r\n        }\r\n    }\r\n\r\n    public keyUpHandler(e: KeyboardEvent) {\r\n        if (e.key === 'Right' || e.key === 'ArrowRight') {\r\n            this.rightPressed = false;\r\n        }\r\n        else if (e.key === 'Left' || e.key === 'ArrowLeft') {\r\n            this.leftPressed = false;\r\n        }\r\n    }\r\n    collisionDetection() {\r\n        for (let c = 0; c < this.brickColumnCount; c++) {\r\n            for (let r = 0; r < this.brickRowCount; r++) {\r\n                let b = this.bricks[c][r];\r\n                if (b.status === 1) {\r\n                    if (this.ball.pos.x > b.pos.x && this.ball.pos.x < b.pos.x + this.brickWidth && this.ball.pos.y > b.pos.y && this.ball.pos.y < b.pos.y + this.brickHeight) {\r\n                        this.dy = -this.dy;\r\n                        b.status = 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    drawPaddle(ctx: CanvasRenderingContext2D) {\r\n        ctx.beginPath();\r\n        ctx.rect(this.paddleX, this.canvas.height - this.paddleHeight, this.paddleWidth, this.paddleHeight);\r\n        ctx.fillStyle = 'ff0000';\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    }\r\n    RenderBricks(ctx: CanvasRenderingContext2D) {\r\n        for (var c = 0; c < this.brickColumnCount; c++) {\r\n            for (var r = 0; r < this.brickRowCount; r++) {\r\n                if (this.bricks[c][r].status === 1) {\r\n                    var brickX = (c * (this.brickWidth + this.brickPadding)) + this.brickOffsetLeft;\r\n                    var brickY = (r * (this.brickHeight + this.brickPadding)) + this.brickOffsetTop;\r\n                    this.bricks[c][r].pos.x = brickX;\r\n                    this.bricks[c][r].pos.y = brickY;\r\n                    ctx.beginPath();\r\n                    ctx.rect(brickX, brickY, this.brickWidth, this.brickHeight);\r\n                    ctx.fillStyle = '#ff0000';\r\n                    ctx.fill();\r\n                    ctx.closePath();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.RenderBricks(ctx);\r\n        this.ball.Render(ctx);\r\n        this.drawPaddle(ctx);\r\n        this.collisionDetection();\r\n\r\n        if (this.ball.pos.x + this.dx > this.canvas.width - this.ball.r || this.ball.pos.x + this.dx < this.ball.r) {\r\n            this.dx = -this.dx;\r\n        }\r\n        if (this.ball.pos.y + this.dy < this.ball.r) {\r\n            this.dy = -this.dy;\r\n        }\r\n        else if (this.ball.pos.y + this.dy > this.canvas.height - this.ball.r) {\r\n            if (this.ball.pos.x > this.paddleX && this.ball.pos.x < this.paddleX + this.paddleWidth) {\r\n                if (this.ball.pos.y === this.ball.pos.y - this.paddleHeight) {\r\n                    this.dy = -this.dy;\r\n                }\r\n            }\r\n            else {\r\n                // alert('GAME OVER');\r\n                // document.location.reload();\r\n                // clearInterval(interval); // Needed for Chrome to end game\r\n            }\r\n        }\r\n\r\n        if (this.rightPressed && this.paddleX < this.canvas.width - this.paddleWidth) {\r\n            this.paddleX += 7;\r\n        }\r\n        else if (this.leftPressed && this.paddleX > 0) {\r\n            this.paddleX -= 7;\r\n        }\r\n\r\n        this.ball.pos.x += this.dx;\r\n        this.ball.pos.y += this.dy;\r\n    }\r\n\r\n}\r\nexport class Brick {\r\n    pos: NVector3;\r\n    status: number;\r\n    constructor(x: number, y: number, status = 1) {\r\n        this.pos = new NVector3(x, y);\r\n        this.status = status;\r\n    }\r\n}\r\nexport class Ball {\r\n    pos: NVector3;\r\n    r: number = 10;\r\n    constructor(x: number, y: number) {\r\n        this.pos = new NVector3(x, y);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.beginPath();\r\n        ctx.arc(this.pos.x, this.pos.y, this.r, 0, Math.PI * 2);\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    }\r\n}","import { BlockSystem } from '..';\r\nexport class CanvasCore {\r\n    blockSystem: BlockSystem;\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n\r\n    divLocalMain: HTMLElement;\r\n    divCanvas: HTMLElement;\r\n    divUI: HTMLElement;\r\n\r\n    ctx: CanvasRenderingContext2D;\r\n    timer: NodeJS.Timer | number;\r\n    click: boolean = false;\r\n    pressed: boolean = false;\r\n    prevent: boolean = false;\r\n    delay: number = 500;\r\n    down: boolean = false;\r\n    t: number = 0.0;\r\n    width: number;\r\n    height: number;\r\n    constructor(blockSystem: BlockSystem, width: number = 500, height: number = 300) {\r\n        this.blockSystem = blockSystem;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const host = document.getElementById(blockSystem.id);\r\n        if (!host) { return; } this.host = host;\r\n\r\n        this.InitCanvas();\r\n    }\r\n    InitCanvas() {\r\n        const divLocalMain = document.createElement('div');\r\n        if (!divLocalMain) { return; } this.divLocalMain = divLocalMain;\r\n        this.divLocalMain.style.display = 'flex';\r\n        // this.divLocalMain.style.width = '100%';\r\n        this.divLocalMain.style.width = this.width + 'px'; // this.host.clientWidth;\r\n        this.divLocalMain.style.height = this.height + 'px'; // this.host.clientHeight;\r\n        this.divLocalMain.style.margin = '10px';\r\n        this.divLocalMain.style.padding = '10px';\r\n        this.host.append(divLocalMain);\r\n\r\n        const divCanvas = document.createElement('div');\r\n        if (!divCanvas) { return; } this.divCanvas = divCanvas;\r\n        // this.divCanvas.style.width = '50%';\r\n        this.divLocalMain.append(divCanvas);\r\n\r\n        const canvas = document.createElement('canvas');\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            this.divCanvas.append(this.canvas);\r\n\r\n            this.canvas.width = this.width; // this.host.clientWidth;\r\n            this.canvas.height = this.height; // this.host.clientHeight;\r\n            this.canvas.style.backgroundColor = '#aaaaaa';\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.InitUI();\r\n                this.Init();\r\n            }\r\n        }\r\n    }\r\n    InitUI() {\r\n        const divUI = document.createElement('div');\r\n        if (!divUI) { return; } this.divUI = divUI;\r\n        this.divLocalMain.append(divUI);\r\n        this.divUI.style.marginLeft = '10px';\r\n        this.divUI.style.width = '100%';\r\n        // this.divUI.style.display = 'grid';\r\n\r\n        // const btn = document.createElement('button');\r\n        // btn.textContent = 'reset';\r\n        // btn.onclick = () => { this.blockSystem.InitGraph(); };\r\n        // this.divUI.append(btn);\r\n\r\n        // const p = document.createElement('p');\r\n        // if (!p) { return; } this.divUI.append(p);\r\n        // p.style.width = 'max-content';\r\n        // p.innerHTML = '1. clikc on canvas to populate a node! <br> ';\r\n        // p.innerHTML += '2. drag a node to move! <br> ';\r\n    }\r\n    Init() {\r\n        // this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        // this.ctx.scale(2, 2);\r\n        this.ctx.scale(1, 1);\r\n        this.EventBind();\r\n        this.Loop();\r\n    }\r\n    EventBind() {\r\n        this.canvas.onclick = (e: MouseEvent) => {\r\n            this.prevent = false;\r\n            this.timer = setTimeout(\r\n                () => {\r\n                    if (!this.prevent) {\r\n                        if (!this.click) { return; }\r\n                        this.MouseClick(e);\r\n                    }\r\n                    this.prevent = false;\r\n                },\r\n                this.delay);\r\n        };\r\n        this.canvas.ondblclick = (e: MouseEvent) => {\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.MouseDoubleClick(e);\r\n        };\r\n        this.canvas.addEventListener('wheel', (e: WheelEvent) => this.MouseWheel(e, e.deltaY));\r\n\r\n        // this.canvas.onclick = (e: MouseEvent) => {\r\n        //     this.timer = setTimeout(() => {\r\n        //         if (!this.prevent) { this.MouseClick(e); }\r\n        //         this.prevent = false;\r\n        //     }, this.delay);\r\n        // };\r\n        // this.canvas.ondblclick = (e: MouseEvent) => {\r\n        //     clearTimeout(this.timer as number);\r\n        //     this.prevent = true;\r\n        //     this.MouseDoubleClick(e);\r\n        // };\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.click = true;\r\n            this.pressed = true;\r\n            this.MouseDown(e);\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.pressed = false;\r\n            this.MouseUp(e);\r\n        };\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            if (this.pressed) { this.click = false; this.MouseDrag(e); }\r\n            this.MouseMove(e);\r\n        };\r\n        window.onresize = (e: UIEvent) => this.Resize(e);\r\n\r\n    }\r\n    Resize(e: UIEvent) {\r\n        // console.log(e);\r\n        // this.canvas.width = this.divCanvas.clientWidth;\r\n        // this.canvas.height = this.divCanvas.clientHeight;\r\n    }\r\n    Loop() {\r\n        requestAnimationFrame(() => { this.Loop(); });\r\n\r\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.fillStyle = '#dddddd';\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n        this.Render(this.ctx);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(ctx);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        //\r\n    }\r\n    MouseWheel(e: WheelEvent, deltaY: number) {\r\n        // console.log(e);\r\n    }\r\n}","import { BlockGame } from './Core/BlockGame';\r\nimport { NVector3 } from '../../../../../lib/NJSCore';\r\nimport { CanvasCore } from './CanvasCore';\r\nexport class BlockSystem {\r\n    CanvasCore: CanvasCore;\r\n    blockGame: BlockGame;\r\n    t = 0.9;\r\n    id: string;\r\n    m: NVector3 = new NVector3(0, 0, 0);\r\n    constructor(id: string) {\r\n        this.id = id;\r\n        this.CanvasCore = new CanvasCore(this);\r\n        this.Init();\r\n        this.InitGraph();\r\n    }\r\n    Init() {\r\n        this.CanvasCore.Render = (ctx: CanvasRenderingContext2D) => this.Render(ctx);\r\n        this.CanvasCore.MouseDown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.CanvasCore.MouseClick = (e: MouseEvent) => this.MouseClick(e);\r\n        this.CanvasCore.MouseDoubleClick = (e: MouseEvent) => this.MouseDoubleClick(e);\r\n        this.CanvasCore.MouseUp = (e: MouseEvent) => this.MouseUp(e);\r\n        this.CanvasCore.MouseMove = (e: MouseEvent) => this.MouseMove(e);\r\n        this.CanvasCore.MouseDrag = (e: MouseEvent) => this.MouseDrag(e);\r\n    }\r\n    InitGraph() {\r\n        this.blockGame = new BlockGame(this);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.blockGame.Render(ctx);\r\n    }\r\n    // .......................................................................................\r\n    MouseDown(e: MouseEvent) {\r\n        this.m.x = ((e.x - this.CanvasCore.canvas.offsetLeft) - this.CanvasCore.canvas.width * 0.5) * 1;\r\n        this.m.y = ((e.y - this.CanvasCore.canvas.offsetTop) - this.CanvasCore.canvas.height * 0.5) * 1;\r\n        // this.blockGame.MouseDown(this.m.x, this.m.y);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        //\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        //\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        //\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        //\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        //\r\n    }\r\n}","import { BlockSystem } from './BlockSystem';\r\nexport class Implementation {\r\n    constructor(id: string) {\r\n        new BlockSystem(id);\r\n    }\r\n}","import { Implementation } from './Implementation';\r\nexport class AppBlockGame {\r\n    implementation: Implementation;\r\n    host: HTMLElement;\r\n    static Init(id: string) {\r\n        const n = new AppBlockGame(id);\r\n        n.Dummy();\r\n    }\r\n    constructor(id: string = 'SandBox') {\r\n        const host = document.getElementById(id);\r\n\r\n        const text = document.createElement('a')\r\n        text.textContent = \"https://namjulee.github.io/njs-lab-public/njslab-legacy/?demo=26\"\r\n        text.href = \"https://namjulee.github.io/njs-lab-public/njslab-legacy/?demo=26\"\r\n        text.target='_blank'\r\n        host.appendChild(text);\r\n\r\n        if (host) {\r\n            this.host = host;\r\n            this.host.style.overflow = 'auto';\r\n        }\r\n        this.implementation = new Implementation(id);\r\n    }\r\n    Dummy() {\r\n        //\r\n    }\r\n}\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n\r\n    constructor(id: string, index = 0) {\r\n        this.divHost = document.getElementById(id);\r\n\r\n        const div = document.createElement('div');\r\n        div.id ='block-game';\r\n        div.style.width = '100%';\r\n        div.style.height = '100%';\r\n        this.divHost.appendChild(div);\r\n\r\n        AppBlockGame.Init(div.id);\r\n    }\r\n    public destroy() {\r\n        try {\r\n            while (this.divHost !== undefined && this.divHost.lastElementChild !== undefined) {\r\n                this.divHost.removeChild(this.divHost.lastElementChild);\r\n            }\r\n        } catch (error) { console.debug(error) }\r\n    }\r\n}"],"names":["NVector3","long","lat","ele","proX","proY","proZ","v","out","x","y","z","a","b","vec","lats","longs","i","length","push","latsSum","longSum","curAng","curLat","curLon","latOrigin","lonOrigin","angles","Array","j","Math","abs","atan","PI","l","k","sum1","sum2","t","s","v0","v1","DeepCopy","v2","toFixed","sqrt","len","vs","area","index","dis","Number","MAX_SAFE_INTEGER","distance","Distance","n","xOff","yOff","zOff","gV0","gV1","dLat","dLon","sin","cos","atan2","long0","lat0","long1","lat1","KMeterFromGeoGPSPos","addition","KMeterFromGPSPos","lng","Get1KM_Long_ByGeoUnit","la","Get1KM_lat_ByGeoUnit","pt","attractor","strength","falloff","dist","Sub","Length","exp","Unitize","Mult","Explosion","rotor","Origin","DotProduct","Normalize","acos","GetCosAngleByTwoVectors","GetAngleByTwoVectorsRadian","origin","GetAngleByTwoVectors","dot","cp","GetCenterVecFromVecs","xx","yy","m","boundary","GetBoundingVecs","GetCloseVec","p0","p1","vecsBound","OnLine","pp1","Add","IsInsideOfVecs","listOfVec","nv0","nv1","width","height","boundarVecsSub","xMin","yMin","zMin","xMax","MIN_SAFE_INTEGER","yMax","zMax","minX","MAX_VALUE","minY","minZ","maxX","MIN_VALUE","maxY","maxZ","tor","vecs","d","inside","mv","tv","p","q","r","val","max","min","q1","p2","q2","o1","this","orientation","o2","o3","o4","onSegment","xi","yi","xj","yj","w","h","ConvexHull","sort","lower","Cross","pop","upper","O","A","B","ax","ay","az","bx","by","bz","CheckLineIntersection","p3","denominator","numerator1","numerator2","onLine0","onLine1","result","u","res","tmp","newres","dir","temp","MoveVec","angle","cptToLocal","cptToWorld","MoveVecs","RotateVecs","RotateVec","nv","c","newVes","eps","v3","isNaN","between","constructor","alt","isModified","color","isVisited","parent","Set","Scale","DivByVal","DivByVec","Negate","Equals","Clone","other","IsOverlap","DistanceByArray","Distance2","CrossProduct","SquareLength","FadeExp","attr","dVal","GetAngle","GetAngleDegree","ToJSON","ToString","toString","ToFloat32Array","Float32Array","BlockGame","BlockSystem","ball","bricks","canvas","dx","dy","paddleHeight","paddleWidth","paddleX","rightPressed","leftPressed","brickRowCount","brickColumnCount","brickWidth","brickHeight","brickPadding","brickOffsetTop","brickOffsetLeft","CanvasCore","Ball","Brick","document","onkeydown","e","keyDownHandler","onkeyup","keyUpHandler","key","collisionDetection","status","pos","drawPaddle","ctx","beginPath","rect","fillStyle","fill","closePath","RenderBricks","brickX","brickY","Render","arc","blockSystem","host","divLocalMain","divCanvas","divUI","timer","click","pressed","prevent","delay","down","getElementById","id","InitCanvas","createElement","style","display","margin","padding","append","backgroundColor","getContext","InitUI","Init","marginLeft","scale","EventBind","Loop","onclick","setTimeout","MouseClick","ondblclick","clearTimeout","MouseDoubleClick","addEventListener","MouseWheel","deltaY","onmousedown","MouseDown","onmouseup","MouseUp","onmousemove","MouseDrag","MouseMove","window","onresize","Resize","requestAnimationFrame","clearRect","blockGame","InitGraph","offsetLeft","offsetTop","Implementation","AppBlockGame","static","Dummy","implementation","text","textContent","href","target","appendChild","overflow","Solution","divHost","div","destroy","undefined","lastElementChild","removeChild","error","console","debug"],"sourceRoot":""}