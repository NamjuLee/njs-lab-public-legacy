{"version":3,"file":"static/js/80213.e08f9421.chunk.js","mappings":"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","sources":["njslab/Tools/CircleParticleSimulation/Implementation/GraphSystemZ/Core/Core/Particle.ts","njslab/Tools/CircleParticleSimulation/Implementation/GraphSystemZ/Core/Graph.ts","njslab/Tools/CircleParticleSimulation/Implementation/GraphSystemZ/CanvasCore/index.ts","njslab/Tools/CircleParticleSimulation/Implementation/GraphSystemZ/index.ts","njslab/Tools/CircleParticleSimulation/Implementation/index.ts","njslab/Tools/CircleParticleSimulation/index.ts"],"sourcesContent":["import { NVector3 } from '../../../../lib';\r\nimport { Graph } from '../Graph';\r\nexport class Particle {\r\n    graph: Graph;\r\n    pos: NVector3;\r\n    u: NVector3;\r\n    f: NVector3;\r\n    m: number = 5;\r\n    r: number = 17;\r\n    colorFill: string = '#0099ff';\r\n\r\n    MAX_VELOCITY = 5.5;\r\n    velocity: NVector3;\r\n    listCollision: Particle[] = [];\r\n\r\n    isCaptured: boolean = false;\r\n\r\n    constructor(graph: Graph, x: number, y: number) {\r\n        this.graph = graph;\r\n        this.pos = new NVector3(x, y);\r\n        // this.r += 5 * Math.random();\r\n    }\r\n    public Update(target: NVector3) {\r\n        if (this.isCaptured) { return; }\r\n\r\n        this.UpdatePos(target);\r\n    }\r\n    public UpdatePos(target: NVector3) {\r\n        const vec = NVector3.Sub(this.pos, target);\r\n        const nor = NVector3.Normalize(vec);\r\n\r\n        const falloff = NVector3.CalculateFalloff(this.pos, target, 1, 0.01);\r\n        this.velocity = NVector3.Scale(nor, falloff);\r\n        this.UpdateCollision();\r\n\r\n        this.velocity.y += 1.6;\r\n        this.pos = NVector3.Add(this.pos, this.velocity);\r\n        this.UpdatePosInScreen(this.graph.graphSystem.CanvasCore.ctx);\r\n    }\r\n    public UpdateCollision() {\r\n        for (let i = 0; i < this.listCollision.length; ++i) {\r\n            const vec = NVector3.Sub(this.pos, this.listCollision[i].pos);\r\n            // const dis = NVector3.Distance(this.pos, this.listCollision[i].pos);\r\n            const nor = NVector3.Normalize(vec);\r\n            const falloff = NVector3.CalculateFalloff(this.pos, this.listCollision[i].pos, 1, 0.01);\r\n            this.velocity = NVector3.Scale(nor, falloff);\r\n            this.pos = NVector3.Add(this.pos, this.velocity);\r\n        }\r\n    }\r\n    public IsMouseHover(x: number, y: number) {\r\n        if (NVector3.Distance(this.pos, new NVector3(x, y)) < this.r) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = '#000000';\r\n        if (this.isCaptured) {\r\n            ctx.fillStyle = '#ff0000';\r\n        } else {\r\n            ctx.fillStyle = this.colorFill;\r\n\r\n        }\r\n        ctx.beginPath();\r\n        ctx.arc(this.pos.x, this.pos.y, this.r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        // console.log(this.listCollision.length);\r\n\r\n    }\r\n    private UpdatePosInScreen(ctx: CanvasRenderingContext2D) {\r\n        const offset = 10;\r\n        if (this.pos.y > ctx.canvas.height * 0.5 - offset) {\r\n            this.pos.y = ctx.canvas.height * 0.5 - offset;\r\n        }\r\n        if (this.pos.x < -ctx.canvas.width * 0.5 + offset) {\r\n            this.pos.x = -ctx.canvas.width * 0.5 + offset;\r\n        }\r\n        if (this.pos.x > ctx.canvas.width * 0.5 - offset) {\r\n            this.pos.x = ctx.canvas.width * 0.5 - offset;\r\n        }\r\n    }\r\n}","import { NVector3 } from '../../../lib';\r\nimport { GraphSystem } from '..';\r\nimport { Particle } from './Core/Particle';\r\n// import { Blank } from './Blank';\r\nexport class Graph {\r\n    graphSystem: GraphSystem;\r\n    particles: Particle[] = [];\r\n    m: NVector3;\r\n    t: number = 1;\r\n    capture: Particle | undefined = undefined;\r\n    constructor(graphSystem: GraphSystem) {\r\n        this.graphSystem = graphSystem;\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.m = new NVector3(0, 0);\r\n        this.particles = [];\r\n\r\n        for (let i = 0; i < 20; ++i) {\r\n            this.particles.push(new Particle(this, -0.5 + Math.random(), -0.5 + Math.random()));\r\n        }\r\n        // this.particles.push(new Particle(100, 200));\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            if (this.particles[i].IsMouseHover(x, y)) {\r\n                this.capture = this.particles[i];\r\n                this.capture.isCaptured = true;\r\n            }\r\n        }\r\n    }\r\n    MouseUp() {\r\n        if (this.capture) {\r\n            this.capture.isCaptured = false;\r\n        }\r\n        this.capture = undefined;\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        this.particles.push(new Particle(this, x, y));\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.capture) {\r\n            this.capture.pos.x = x;\r\n            this.capture.pos.y = y;\r\n        }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.UpdateCollision();\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            this.particles[i].Update(this.m);\r\n        }\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            this.particles[i].Render(ctx);\r\n        }\r\n\r\n        if ((this.t & 5) === 0 && this.particles.length < 250) {\r\n            this.particles.push(new Particle(this, 0, 0));\r\n        }\r\n        // console.log(this.t);\r\n        // console.log(this.t & 2);\r\n        this.t += 1;\r\n    }\r\n    UpdateCollision() {\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            let a = this.particles[i];\r\n            a.listCollision = [];\r\n            for (let j = 0; j < this.particles.length; ++j) {\r\n                let b = this.particles[j];\r\n                if (a !== b) {\r\n                    if (a.pos.Distance(b.pos) < a.r + b.r) {\r\n                        a.listCollision.push(b);\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n}","import { GraphSystem } from '..';\r\nexport class CanvasCore {\r\n    graphSystem: GraphSystem;\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n\r\n    divLocalMain: HTMLElement;\r\n    divCanvas: HTMLElement;\r\n    divUI: HTMLElement;\r\n\r\n    ctx: CanvasRenderingContext2D;\r\n    timer: NodeJS.Timer | number;\r\n    click: boolean = false;\r\n    pressed: boolean = false;\r\n    prevent: boolean = false;\r\n    delay: number = 500;\r\n    down: boolean = false;\r\n    t: number = 0.0;\r\n    width: number;\r\n    height: number;\r\n    constructor(graphSystem: GraphSystem, width: number = 400, height: number = 300) {\r\n        this.graphSystem = graphSystem;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const host = document.getElementById(graphSystem.id);\r\n        if (!host) { return; } this.host = host;\r\n\r\n        this.InitCanvas();\r\n    }\r\n    InitCanvas() {\r\n        const divLocalMain = document.createElement('div');\r\n        if (!divLocalMain) { return; } this.divLocalMain = divLocalMain;\r\n        this.divLocalMain.style.display = 'flex';\r\n        // this.divLocalMain.style.width = '100%';\r\n        this.divLocalMain.style.width = this.width + 'px'; // this.host.clientWidth;\r\n        this.divLocalMain.style.height = this.height + 'px'; // this.host.clientHeight;\r\n        this.divLocalMain.style.margin = '10px';\r\n        this.divLocalMain.style.padding = '10px';\r\n        this.host.append(divLocalMain);\r\n\r\n        const divCanvas = document.createElement('div');\r\n        if (!divCanvas) { return; } this.divCanvas = divCanvas;\r\n        // this.divCanvas.style.width = '50%';\r\n        this.divLocalMain.append(divCanvas);\r\n\r\n        const canvas = document.createElement('canvas');\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            this.divCanvas.append(this.canvas);\r\n\r\n            this.canvas.width = this.width; // this.host.clientWidth;\r\n            this.canvas.height = this.height; // this.host.clientHeight;\r\n            this.canvas.style.backgroundColor = '#aaaaaa';\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.InitUI();\r\n                this.Init();\r\n            }\r\n        }\r\n    }\r\n    InitUI() {\r\n        const divUI = document.createElement('div');\r\n        if (!divUI) { return; } this.divUI = divUI;\r\n        this.divLocalMain.append(divUI);\r\n        this.divUI.style.marginLeft = '10px';\r\n        this.divUI.style.width = '100%';\r\n        // this.divUI.style.display = 'grid';\r\n\r\n        // const btn = document.createElement('button');\r\n        // btn.textContent = 'reset';\r\n        // btn.onclick = () => { this.graphSystem.InitGraph(); };\r\n        // this.divUI.append(btn);\r\n\r\n        // const p = document.createElement('p');\r\n        // if (!p) { return; } this.divUI.append(p);\r\n        // p.style.width = 'max-content';\r\n        // p.innerHTML = '1. clikc on canvas to populate a node! <br> ';\r\n        // p.innerHTML += '2. drag a node to move! <br> ';\r\n    }\r\n    Init() {\r\n        this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        // this.ctx.scale(2, 2);\r\n        this.ctx.scale(1, 1);\r\n        this.EventBind();\r\n        this.Loop();\r\n    }\r\n    EventBind() {\r\n        this.canvas.onclick = (e: MouseEvent) => {\r\n            this.prevent = false;\r\n            this.timer = setTimeout(\r\n                () => {\r\n                    if (!this.prevent) {\r\n                        if (!this.click) { return; }\r\n                        this.MouseClick(e);\r\n                    }\r\n                    this.prevent = false;\r\n                },\r\n                this.delay);\r\n        };\r\n        this.canvas.ondblclick = (e: MouseEvent) => {\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.MouseDoubleClick(e);\r\n        };\r\n        this.canvas.addEventListener('wheel', (e: WheelEvent) => this.MouseWheel(e, e.deltaY));\r\n\r\n        // this.canvas.onclick = (e: MouseEvent) => {\r\n        //     this.timer = setTimeout(() => {\r\n        //         if (!this.prevent) { this.MouseClick(e); }\r\n        //         this.prevent = false;\r\n        //     }, this.delay);\r\n        // };\r\n        // this.canvas.ondblclick = (e: MouseEvent) => {\r\n        //     clearTimeout(this.timer as number);\r\n        //     this.prevent = true;\r\n        //     this.MouseDoubleClick(e);\r\n        // };\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.click = true;\r\n            this.pressed = true;\r\n            this.MouseDown(e);\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.pressed = false;\r\n            this.MouseUp(e);\r\n        };\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            if (this.pressed) { this.click = false; this.MouseDrag(e); }\r\n            this.MouseMove(e);\r\n        };\r\n        window.onresize = (e: UIEvent) => this.Resize(e);\r\n\r\n    }\r\n    Resize(e: UIEvent) {\r\n        // console.log(e);\r\n        // this.canvas.width = this.divCanvas.clientWidth;\r\n        // this.canvas.height = this.divCanvas.clientHeight;\r\n    }\r\n    Loop() {\r\n        requestAnimationFrame(() => { this.Loop(); });\r\n\r\n        this.ctx.clearRect(-this.ctx.canvas.width * 0.5, -this.ctx.canvas.height * 0.5, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.fillStyle = '#dddddd';\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(-this.ctx.canvas.width * 0.5, -this.ctx.canvas.height * 0.5, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n        this.Render(this.ctx);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(ctx);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        //\r\n    }\r\n    MouseWheel(e: WheelEvent, deltaY: number) {\r\n        // console.log(e);\r\n    }\r\n}","import { Graph } from './Core/Graph';\r\nimport { NVector3 } from '../../lib';\r\nimport { CanvasCore } from './CanvasCore';\r\nexport class GraphSystem {\r\n    CanvasCore: CanvasCore;\r\n    graph: Graph;\r\n    t = 0.9;\r\n    id: string;\r\n    m: NVector3 = new NVector3(0, 0, 0);\r\n    constructor(id: string) {\r\n        this.id = id;\r\n        this.CanvasCore = new CanvasCore(this);\r\n\r\n        this.Init();\r\n        this.InitGraph();\r\n    }\r\n    Init() {\r\n        this.CanvasCore.Render = (ctx: CanvasRenderingContext2D) => this.Render(ctx);\r\n        this.CanvasCore.MouseDown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.CanvasCore.MouseClick = (e: MouseEvent) => this.MouseClick(e);\r\n        this.CanvasCore.MouseDoubleClick = (e: MouseEvent) => this.MouseDoubleClick(e);\r\n        this.CanvasCore.MouseUp = (e: MouseEvent) => this.MouseUp(e);\r\n        this.CanvasCore.MouseMove = (e: MouseEvent) => this.MouseMove(e);\r\n        this.CanvasCore.MouseDrag = (e: MouseEvent) => this.MouseDrag(e);\r\n        // console.log('Graph system');\r\n    }\r\n    InitGraph() {\r\n        this.graph = new Graph(this);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.graph.Render(ctx);\r\n\r\n        ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        ctx.beginPath();\r\n        ctx.arc(this.m.x, this.m.y, 2.5, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        for (let i = -10; i < 10; ++i) {\r\n            for (let j = -10; j < 10; ++j) {\r\n                ctx.beginPath();\r\n                ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n                ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n        }\r\n    }\r\n    // .......................................................................................\r\n    mouseRemap(e: MouseEvent) {\r\n        const bounding = this.CanvasCore.ctx.canvas.getBoundingClientRect()\r\n        this.m.x = ((e.x - bounding.left) - this.CanvasCore.canvas.width * 0.5);\r\n        this.m.y = ((e.y - bounding.top) - this.CanvasCore.canvas.height * 0.5);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n\r\n        this.graph.MouseDown(this.m.x, this.m.y);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        this.graph.MouseUp();\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n\r\n        this.graph.MouseMove(this.m.x, this.m.y);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n\r\n        this.graph.MouseDrag(this.m.x, this.m.y);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n\r\n        this.graph.MouseLeftClick(this.m.x, this.m.y);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        // console.log('d click');\r\n    }\r\n}","import { GraphSystem as GSZ } from './GraphSystemZ';\r\nexport class Implementation {\r\n    constructor(id: string) {\r\n        new GSZ(id);\r\n    }\r\n}","import { Implementation } from './Implementation';\r\nexport class CircleParticleSimulation {\r\n    implementation: Implementation;\r\n    host: HTMLElement;\r\n    static Init(id: string) {\r\n        const n = new CircleParticleSimulation(id);\r\n        n.Dummy();\r\n    }\r\n    constructor(id: string = 'SandBox') {\r\n        const host = document.getElementById(id);\r\n        if (host) {\r\n            this.host = host;\r\n            this.host.style.overflow = 'auto';\r\n        }\r\n        this.implementation = new Implementation(id);\r\n    }\r\n    Dummy() {\r\n        //\r\n    }\r\n}\r\n\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n\r\n    constructor(id: string ) {\r\n        this.divHost = document.getElementById(id);\r\n\r\n        CircleParticleSimulation.Init(id)\r\n    }\r\n    public destroy() {\r\n        if (this.divHost) {\r\n            try {\r\n                while (this.divHost.firstChild) {\r\n                    this.divHost.removeChild(this.divHost.firstChild);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error in destroy method:', error);\r\n            }\r\n        } else {\r\n            console.warn('divHost is undefined in destroy method');\r\n        }\r\n    }\r\n}"],"names":["Particle","constructor","graph","x","y","pos","u","f","m","r","colorFill","MAX_VELOCITY","velocity","listCollision","isCaptured","this","NVector3","Update","target","UpdatePos","vec","nor","falloff","UpdateCollision","UpdatePosInScreen","graphSystem","CanvasCore","ctx","i","length","IsMouseHover","Render","lineWidth","strokeStyle","fillStyle","beginPath","arc","Math","PI","closePath","fill","stroke","offset","canvas","height","width","Graph","particles","t","capture","undefined","Init","push","random","MouseDown","MouseUp","MouseLeftClick","MouseMove","MouseDrag","a","j","b","Distance","host","divLocalMain","divCanvas","divUI","timer","click","pressed","prevent","delay","down","document","getElementById","id","InitCanvas","createElement","style","display","margin","padding","append","backgroundColor","getContext","InitUI","marginLeft","translate","scale","EventBind","Loop","onclick","e","setTimeout","MouseClick","ondblclick","clearTimeout","MouseDoubleClick","addEventListener","MouseWheel","deltaY","onmousedown","onmouseup","onmousemove","window","onresize","Resize","requestAnimationFrame","clearRect","rect","GraphSystem","InitGraph","Grid","mouseRemap","bounding","getBoundingClientRect","left","top","Implementation","GSZ","CircleParticleSimulation","static","Dummy","implementation","overflow","Solution","divHost","destroy","firstChild","removeChild","error","console","warn"],"sourceRoot":""}