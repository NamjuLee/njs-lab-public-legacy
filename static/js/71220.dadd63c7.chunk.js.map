{"version":3,"file":"static/js/71220.dadd63c7.chunk.js","mappings":"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","sources":["njslab/Raster/image-distortion-app/ExpreeImageTool/Core/Canvas/index.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/lib/index.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/Core/Frame/Core/Renderer.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/Core/Frame/Core/ControlPoint.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/Core/Frame/index.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/Core/Frame/Core/Transform.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/Core/Frame/Core/Interaction.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/lib/DominantColor.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/Core/Renderer/index.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/Core/ImageWrapper/index.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/Core/EventController/Event/TouchInteraction.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/Core/EventController/Event/MouseInteraction.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/Core/EventController/ActiveCursor.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/Core/EventController/index.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/Core/Distort/Controller/index.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/Core/Distort/Projection/index.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/Core/Distort/ProjectionSubdiv/index.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/Core/Distort/index.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/Core/index.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/UI/index.ts","njslab/Raster/image-distortion-app/ExpreeImageTool/index.ts","njslab/Raster/image-distortion-app/index.ts"],"sourcesContent":["import { Core } from '..';\r\nexport class Canvas {\r\n\r\n    public core: Core;\r\n    public div: HTMLElement;\r\n    public canvas: HTMLCanvasElement;\r\n    public ctx: CanvasRenderingContext2D;\r\n    public isActive: boolean = false;\r\n\r\n    public log: string;\r\n    public isViewChanging: boolean = false;\r\n    public loopNum: number = 0;\r\n    public needRenderloop: boolean = true;\r\n    public ablePan: boolean = true;\r\n\r\n    public mousePre: number [] = [0, 0];\r\n    public canvasOut: HTMLCanvasElement;\r\n    public ctxOut: CanvasRenderingContext2D;\r\n    public loopNeeded = false;\r\n\r\n    constructor(core: Core, div: HTMLElement) {\r\n        this.core = core;\r\n        this.div = div;\r\n        this.loopNeeded = false;\r\n        this.init();\r\n        this.loopInit();\r\n    }\r\n    private init() {\r\n        const canvas = document.createElement('canvas');\r\n        const canvasOut = document.createElement('canvas');\r\n        if (canvas && canvasOut) {\r\n            this.canvas = canvas;\r\n            this.canvas.width = this.div.clientWidth;\r\n            this.canvas.height = this.div.clientHeight;\r\n            this.div.append(this.canvas);\r\n\r\n            this.canvasOut = canvasOut;\r\n\r\n            this.canvasOut.style.border = '5px';\r\n            this.ctxOut = this.canvasOut.getContext('2d') as CanvasRenderingContext2D;\r\n            this.core.app.divHost.append(this.canvasOut);\r\n\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.isActive = true;\r\n                this.initEvent();\r\n            }\r\n        }\r\n    }\r\n    public initEvent() {\r\n        this.canvas.addEventListener('keydown', (k: KeyboardEvent) => {});\r\n        this.canvas.addEventListener('keyup', (k: KeyboardEvent) => {});\r\n\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\r\n        this.canvas.addEventListener('mousedown', (e: MouseEvent) => { this.core.controller.mouseInteraction.mouseDown(e); }, false);\r\n        this.canvas.addEventListener('mouseup', (e: MouseEvent) => { this.core.controller.mouseInteraction.mouseUp(e); }, false);\r\n        this.canvas.addEventListener('mousemove', (e: MouseEvent) => { this.core.controller.mouseInteraction.mouseMove(e); }, false);\r\n        this.canvas.addEventListener('wheel', (e: WheelEvent) => this.core.controller.mouseInteraction.mouseWheel(e, e.deltaY), false);\r\n        this.canvas.addEventListener('mouseout', (e: MouseEvent) => { this.core.controller.mouseInteraction.mouseOut(e); }, false);\r\n\r\n        this.canvas.addEventListener('touchstart', (t: TouchEvent) => this.core.controller.touchInteraction.touchstart(t), false);\r\n        this.canvas.addEventListener('touchmove', (t: any) => this.core.controller.touchInteraction.touchmove(t), false);\r\n        this.canvas.addEventListener('touchcancel', (t: TouchEvent) => this.core.controller.touchInteraction.touchcancel(t), false);\r\n        this.canvas.addEventListener('touchend', (t: TouchEvent) => this.core.controller.touchInteraction.touchend(t), false);\r\n    }\r\n    public capture() {\r\n        const img = new Image();\r\n        img.crossOrigin = 'anonymous';\r\n        img.src = this.canvasOut.toDataURL();\r\n        return img;\r\n    }\r\n    private loopInit() {\r\n        this.loop();\r\n    }\r\n    public resize() {\r\n        this.canvas.width = this.div.clientWidth;\r\n        this.canvas.height = this.div.clientHeight;\r\n    }\r\n    public loop() {\r\n        requestAnimationFrame(() => { this.loop(); });\r\n\r\n        if (this.loopNum++ < 130) {\r\n\r\n            let before = performance.now();\r\n            this.renderPre(this.ctx);\r\n\r\n            let after = performance.now();\r\n            this.log = `level: , total frames: ${this.loopNum++} (FPS: ), a loop took: ${(after - before).toFixed(2)} ms to execute.`;\r\n            // console.debug(this.log);\r\n        }\r\n    }\r\n    public clear(ctx: CanvasRenderingContext2D) {\r\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n    }\r\n    public renderForce() {\r\n        // if (!this.loopNeeded) {\r\n            // this.loop();\r\n        this.loopNum = 0;\r\n        // }\r\n    }\r\n    public renderPre(ctx: CanvasRenderingContext2D) {\r\n        if (!this.isActive) { return; }\r\n        this.clear(this.ctx);\r\n        this.render(ctx);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        // ctx.beginPath();\r\n        // ctx.arc(0, 0, 15, 0, 3.14 * 2);\r\n        // ctx.closePath()\r\n        // ctx.fill();\r\n    }\r\n}","export const distance = (x0: number, y0: number, x1: number, y1: number) => {\r\n    return Math.sqrt((x0 - x1) * (x0 - x1) + (y0 - y1) * (y0 - y1));\r\n};\r\nexport const renderVertex = (ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, r: number = 0.5) => {\r\n    const angle = 3.14 * 0.5;\r\n    ctx.beginPath();\r\n    ctx.arc(x + width - r, y - height + r, r, angle * 3 , angle * 4 , false);\r\n    ctx.arc(x + width - r, y + height - r, r, angle * 0 , angle * 1 , false);\r\n    ctx.arc(x - width + r, y + height - r, r, angle * 1 , angle * 2 , false);\r\n    ctx.arc(x - width + r, y - height + r, r, angle * 2 , angle * 3 , false);\r\n    ctx.closePath();\r\n    ctx.strokeStyle  = '#000000';\r\n    ctx.fillStyle   = '#ffffff';\r\n    ctx.fill();\r\n    ctx.stroke();\r\n};\r\nexport const linearColorInterpolation = (c0: number[], c1: number[], interpolation = 0.5) => {\r\n    const cOut = [];\r\n    for (let i = 0 ; i < c0.length; ++i) {\r\n        const c = c0[i] + (c1[i] - c0[i]) * interpolation;\r\n        cOut.push(c);\r\n    }\r\n    return cOut;\r\n};\r\nexport const hexToCanvasColor = (hex: string, visibility: number | string = 0, isGray: boolean = false) => {\r\n    // if (hex[0] !== '#') {\r\n    //     let col = hex.split('(')[1].split(')')[0].split(',');\r\n    //     hex = this.RGBToHex(parseInt(col[0]), parseInt(col[1]), parseInt(col[2]));\r\n    // }\r\n    // Convert #AA77CC to rbga() format for Firefox\r\n    let thecol;\r\n    visibility = visibility || '1.0';\r\n    hex = hex.replace('#', '');\r\n    let r = parseInt(hex.substring(0, 2), 16);\r\n    let g = parseInt(hex.substring(2, 4), 16);\r\n    let b = parseInt(hex.substring(4, 6), 16);\r\n    if (isGray) {\r\n        // let v = (0.58 * (r / 255)) + (0.17 * (g / 255)) + (0.8 * (b / 255));\r\n        let v = (0.58 * r) + (0.17 * g) + (0.8 * b);\r\n        thecol = 'rgba(' + v + ',' + v + ',' + v + ',' + visibility + ')';\r\n    } else {\r\n        thecol = 'rgba(' + r + ',' + g + ',' + b + ',' + visibility + ')';\r\n    }\r\n    return thecol;\r\n};\r\n\r\nexport enum PUSH_ACTION {\r\n    GetImage = 'GetImage',\r\n\r\n}\r\n\r\nexport enum ENGINE {\r\n    Canvas = 'Canvas', // default\r\n    WebGL2 = 'WebGL2',\r\n    WebGPU = 'WebGPU',\r\n    WebAssembly = 'WebAssembly',\r\n}\r\nexport const hueSaturationLightness = (img: ImageData, Hue: number, Saturation: number, Lightness: number) => {\r\n    let imgOut = new ImageData(img.width, img.height);\r\n    for (let i = 0; i < img.data.length; i += 4) {\r\n        let r = img.data[i + 0];\r\n        let g = img.data[i + 1];\r\n        let b = img.data[i + 2];\r\n        let a = img.data[i + 3];\r\n\r\n        let hls = RGB2HSL(r, g, b);\r\n        // console.log(hls);\r\n        hls[0] += Hue;\r\n\r\n        hls[1] += Saturation;\r\n        if (hls[1] < 0) { hls[1] = 0; }\r\n\r\n        hls[2] += Lightness;\r\n\r\n        let col = HSL2RGB(hls[0], hls[1], hls[2]);\r\n        // imgOut.SetPixel(x, y, Color.FromArgb(255, (int)(col[0] * 255), (int)(col[1] * 255), (int)(col[2] * 255)));\r\n\r\n        imgOut.data[i + 0] = col[0];\r\n        imgOut.data[i + 1] = col[1];\r\n        imgOut.data[i + 2] = col[2];\r\n        imgOut.data[i + 3] = a;\r\n    }\r\n    return imgOut;\r\n};\r\n// https://gist.github.com/mjackson/5311256\r\nexport const RGB2HSL = (r: number, g: number, b: number) => { // 0 to 255\r\n    r /= 255; g /= 255; b /= 255;\r\n\r\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n    let h = (max + min) / 2, s = (max + min) / 2, l = (max + min) / 2;\r\n\r\n    if (max === min) {\r\n        h = s = 0; // achromatic\r\n    } else {\r\n        let d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        switch (max) {\r\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n            case g: h = (b - r) / d + 2; break;\r\n            case b: h = (r - g) / d + 4; break;\r\n            default: break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    return [h, s, l]; // 0 to 1\r\n};\r\nexport const HSL2RGB = (h: number, s: number, l: number) => { // 0 to 1\r\n    let r, g, b;\r\n\r\n    if (s === 0) {\r\n        r = g = b = l; // achromatic\r\n    } else {\r\n        const hue2rgb = (pp: number, qq: number, t: number) => {\r\n            if (t < 0) { t += 1; }\r\n            if (t > 1) { t -= 1; }\r\n            if (t < 1 / 6) { return pp + (qq - pp) * 6 * t; }\r\n            if (t < 1 / 2) { return qq; }\r\n            if (t < 2 / 3) { return pp + (qq - pp) * (2 / 3 - t) * 6; }\r\n            return pp;\r\n        };\r\n\r\n        let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        let p = 2 * l - q;\r\n\r\n        r = hue2rgb(p, q, h + 1 / 3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    return [\r\n        Math.max(0, Math.min(Math.round(r * 255), 255))\r\n        , Math.max(0, Math.min(Math.round(g * 255), 255))\r\n        , Math.max(0, Math.min(Math.round(b * 255), 255))\r\n    ];\r\n};","// import { renderVertex } from '../../../lib';\r\nimport { linearColorInterpolation } from '../../../lib';\r\nimport { Frame } from '..';\r\n\r\nexport class Renderer {\r\n    public frame: Frame;\r\n\r\n    private _opacity = 0.0;\r\n    private _t = 0.0;\r\n\r\n    private _strokeStyle = 'rgba(200, 200, 200, 1)';\r\n    private _fillStyleRuntime = '';\r\n\r\n    private _fillStyle = [200, 200, 200, 1.0];\r\n    private _fillStyleHover = [200, 200, 200, 0.5];\r\n\r\n    private _sizePoint: number = 3;\r\n    private _sizeMidPoint: number = 3;\r\n\r\n    constructor(frame: Frame) {\r\n        this.frame = frame;\r\n    }\r\n    get sizePoint() {\r\n        return this._sizePoint;\r\n    }\r\n    get sizeMidPoint() {\r\n        return this._sizeMidPoint;\r\n    }\r\n    public updateColorBG(r: number, g: number, b: number) {\r\n        // console.log(r, g, b);\r\n        this._fillStyle[0] = r;\r\n        this._fillStyle[1] = g;\r\n        this._fillStyle[2] = b;\r\n\r\n        this._fillStyleHover[0] = r;\r\n        this._fillStyleHover[1] = g;\r\n        this._fillStyleHover[2] = b;\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        // ctx.globalCompositeOperation = 'xor';\r\n        this.ColorInterpolation();\r\n        if (this.frame.isHover) {\r\n            ctx.fillStyle = this._fillStyleRuntime; // this.fillStyleHover;\r\n        } else {\r\n            ctx.fillStyle = this._fillStyleRuntime; // this.fillStyle;\r\n        }\r\n\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, this.frame.y);\r\n        ctx.rect(0, this.frame.y + this.frame.height, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.rect(0, 0, this.frame.x, ctx.canvas.height);\r\n        ctx.rect(this.frame.x + this.frame.width , 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.fill();\r\n\r\n        this.renderPost(ctx);\r\n        this._t += 0.15;\r\n    }\r\n    public renderPost(ctx: CanvasRenderingContext2D) {\r\n        // debuger\r\n        // ctx.beginPath();\r\n        // ctx.arc(0, 0, 15, 0, 3.14 * 2);\r\n        // ctx.closePath()\r\n        // ctx.fillStyle = '#ff0000';\r\n        // ctx.fill();\r\n\r\n        //\r\n        ctx.lineWidth = 1;\r\n        ctx.lineDashOffset = this._t;\r\n        ctx.setLineDash([4, 1]);\r\n        ctx.beginPath();\r\n        ctx.rect(this.frame.x, this.frame.y, this.frame.width, this.frame.height);\r\n        ctx.strokeStyle = this._strokeStyle;\r\n        ctx.stroke();\r\n\r\n        // guides\r\n        ctx.beginPath();\r\n        for (let i = 1 ; i < 3; ++i) {\r\n            ctx.moveTo(this.frame.x + this.frame.xOffGuid * i, this.frame.y);\r\n            ctx.lineTo(this.frame.x + this.frame.xOffGuid * i, this.frame.y + this.frame.height);\r\n            ctx.moveTo(this.frame.x, this.frame.y + this.frame.yOffGuid * i);\r\n            ctx.lineTo(this.frame.x + this.frame.width , this.frame.y + this.frame.yOffGuid * i);\r\n        }\r\n        ctx.stroke();\r\n        ctx.setLineDash([]);\r\n\r\n        // render the back circlr of selected point\r\n        if (this.frame.idHover !== -1) {\r\n            ctx.beginPath();\r\n            let p = [0, 0];\r\n\r\n            p[0] = this.frame.cpList[this.frame.idHover].x;\r\n            p[1] = this.frame.cpList[this.frame.idHover].y;\r\n\r\n            ctx.arc(p[0], p[1], 8 + 2 * Math.sin(this._t * 0.75), 0, 3.14 * 2);\r\n            ctx.closePath();\r\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';\r\n            ctx.fill();\r\n        }\r\n        // end render the back circlr of selected point\r\n\r\n        // render each control point of the frame\r\n        if (this.frame.isHover) {\r\n            for (let i = 0 ; i < this.frame.cpList.length; ++i) {\r\n                this.frame.cpList[i].render(ctx);\r\n            }\r\n        }\r\n        // end render each control point of the frame\r\n\r\n    }\r\n    private ColorInterpolation() {\r\n        // let opacity = 0;\r\n        if (this.frame.isHover) {\r\n            this._opacity += 0.05; // this.tOpacityA;\r\n        } else {\r\n            this._opacity -= 0.035; // this.tOpacityB;\r\n        }\r\n\r\n        if (this._opacity > 1) {\r\n            this._opacity = 1.0;\r\n        }\r\n        if (this._opacity < 0) {\r\n            this._opacity = 0.0;\r\n        }\r\n\r\n        const col = linearColorInterpolation(this._fillStyle, this._fillStyleHover, this._opacity);\r\n        this._fillStyleRuntime = `rgba(${col[0]}, ${col[1]}, ${col[2]}, ${col[3]})`;\r\n    }\r\n}","\r\nimport { renderVertex, distance } from '../../../lib';\r\nimport { Frame } from '..';\r\n\r\nexport enum CP_TYPE {\r\n    Endpoint = 'Endpoint',\r\n    Midpoint = 'Midpoint'\r\n}\r\nexport class ControlPoint {\r\n    public x: number;\r\n    public y: number;\r\n    public frame: Frame;\r\n    public id: number;\r\n    public type: CP_TYPE;\r\n    constructor(frame: Frame, id: number, type: CP_TYPE) {\r\n        this.frame = frame;\r\n        this.id = id;\r\n        this.type = type;\r\n        this.update();\r\n    }\r\n    public isHoverCheck(x: number, y: number) {\r\n        if (distance(this.x, this.y, x, y) < this.frame.r) {\r\n            return this.id;\r\n        }\r\n        return -1;\r\n    }\r\n    public update() {\r\n        if (this.type === CP_TYPE.Endpoint) {\r\n            if (this.id === 0) {\r\n                this.x = this.frame.x;\r\n                this.y = this.frame.y;\r\n            } else if (this.id === 1) {\r\n                this.x = this.frame.x + this.frame.width;\r\n                this.y = this.frame.y;\r\n            } else if (this.id === 2) {\r\n                this.x = this.frame.x + this.frame.width;\r\n                this.y = this.frame.y + this.frame.height;\r\n            } else if (this.id === 3) {\r\n                this.x = this.frame.x;\r\n                this.y = this.frame.y + this.frame.height;\r\n            }\r\n        } else if (this.type === CP_TYPE.Midpoint) {\r\n            if (this.id === 4) {\r\n                this.x = this.frame.x + this.frame.width * 0.5;\r\n                this.y = this.frame.y;\r\n            } else if (this.id === 5) {\r\n                this.x = this.frame.x + this.frame.width;\r\n                this.y = this.frame.y + this.frame.height * 0.5;\r\n            } else if (this.id === 6) {\r\n                this.x = this.frame.x + this.frame.width * 0.5;\r\n                this.y = this.frame.y + this.frame.height;\r\n            } else if (this.id === 7) {\r\n                this.x = this.frame.x;\r\n                this.y = this.frame.y + this.frame.height * 0.5;\r\n            }\r\n        }\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        // debuger\r\n        // ctx.beginPath();\r\n        // ctx.arc(this.x ,this.y, 10, 0, Math.PI * 2.0);\r\n        // ctx.closePath();\r\n        // ctx.fillStyle = '#ff0000';\r\n        // ctx.fill();\r\n\r\n        if (this.type === CP_TYPE.Endpoint) {\r\n            if (this.id === 0) {\r\n                renderVertex(ctx, this.frame.x, this.frame.y, this.frame.renderer.sizePoint, this.frame.renderer.sizePoint);\r\n            } else if (this.id === 1) {\r\n                renderVertex(ctx, this.frame.x + this.frame.width, this.frame.y, this.frame.renderer.sizePoint, this.frame.renderer.sizePoint);\r\n            } else if (this.id === 2) {\r\n                renderVertex(ctx, this.frame.x + this.frame.width, this.frame.y + this.frame.height, this.frame.renderer.sizePoint, this.frame.renderer.sizePoint);\r\n            } else if (this.id === 3) {\r\n                renderVertex(ctx, this.frame.x, this.frame.y + this.frame.height, this.frame.renderer.sizePoint, this.frame.renderer.sizePoint);\r\n            }\r\n        } else if (this.type === CP_TYPE.Midpoint) {\r\n            if (this.id === 4) {\r\n                renderVertex(ctx, this.frame.x + this.frame.width * 0.5, this.frame.y, this.frame.renderer.sizeMidPoint * 4, this.frame.renderer.sizeMidPoint);\r\n            } else if (this.id === 5) {\r\n                renderVertex(ctx, this.frame.x + this.frame.width, this.frame.y + this.frame.height * 0.5, this.frame.renderer.sizeMidPoint, this.frame.renderer.sizeMidPoint * 4);\r\n            } else if (this.id === 6) {\r\n                renderVertex(ctx, this.frame.x + this.frame.width * 0.5, this.frame.y + this.frame.height, this.frame.renderer.sizeMidPoint * 4, this.frame.renderer.sizeMidPoint);\r\n            } else if (this.id === 7) {\r\n                renderVertex(ctx, this.frame.x , this.frame.y + this.frame.height * 0.5, this.frame.renderer.sizeMidPoint, this.frame.renderer.sizeMidPoint * 4);\r\n            }\r\n        }\r\n    }\r\n}","// import { distance } from '../../lib';\r\nimport { Renderer } from './Core/Renderer';\r\nimport { ControlPoint, CP_TYPE } from './Core/ControlPoint';\r\nimport { Transform } from './Core/Transform';\r\nimport { Interaction } from './Core/Interaction';\r\nimport { Core } from '..';\r\n\r\n\r\nexport enum FramePreset {\r\n    Freeform = 'freeform',\r\n    Square = 'square',\r\n    Portrait = 'portrait',\r\n    Landscape = 'landscape',\r\n\r\n    Fixed_1_1 = 'fixed_1_1',\r\n    Fixed_16_9 = 'fixed_16_9'\r\n}\r\n\r\n\r\nexport class Frame {\r\n    public renderer: Renderer;\r\n    public transform: Transform;\r\n    public interaction: Interaction;\r\n    public idHover = -1;\r\n    public idSelected = -1;\r\n    public isHover = false;\r\n\r\n    public framePreset: FramePreset;\r\n\r\n    public x = 100;\r\n    public y = 100;\r\n    public widthMin = 200;\r\n    public heightMin = 200;\r\n    public width = 300;\r\n    public height = 300;\r\n\r\n    public xOffGuid = 0;\r\n    public yOffGuid = 0;\r\n\r\n    public r = 19;\r\n\r\n    public cv: number[] = [0, 0];\r\n    public core: Core;\r\n\r\n    public cpList: ControlPoint[] = [];\r\n\r\n    constructor(core: Core) {\r\n        this.core = core;\r\n        this.init();\r\n    }\r\n    public init() {\r\n        this.xOffGuid = this.width / 3;\r\n        this.yOffGuid = this.height / 3;\r\n\r\n        this.cpList = [\r\n            new ControlPoint(this, 0, CP_TYPE.Endpoint),\r\n            new ControlPoint(this, 1, CP_TYPE.Endpoint),\r\n            new ControlPoint(this, 2, CP_TYPE.Endpoint),\r\n            new ControlPoint(this, 3, CP_TYPE.Endpoint),\r\n\r\n            new ControlPoint(this, 4, CP_TYPE.Midpoint),\r\n            new ControlPoint(this, 5, CP_TYPE.Midpoint),\r\n            new ControlPoint(this, 6, CP_TYPE.Midpoint),\r\n            new ControlPoint(this, 7, CP_TYPE.Midpoint),\r\n        ];\r\n\r\n        if (this.core.app.param.colorCover) {\r\n            // this.fillStyle = this.core.app.param.colorCover;\r\n            // this.fillStyleHover = hexToCanvasColor(this.core.app.param.colorCover, 0.5);\r\n        }\r\n\r\n        this.interaction = new Interaction(this);\r\n        this.transform = new Transform(this);\r\n        this.renderer = new Renderer(this);\r\n        // this.update();\r\n\r\n    }\r\n    public setRatio(v: FramePreset.Freeform) {\r\n        this.framePreset = v;\r\n    }\r\n    public InitFrame() {\r\n        this.width = 200;\r\n        this.height = 200;\r\n\r\n        if (this.core.img) {\r\n            this.width = this.core.img.width;\r\n            this.height = this.core.img.height;\r\n        }\r\n\r\n        this.xOffGuid = this.width / 5;\r\n        this.yOffGuid = this.height / 5;\r\n\r\n        this.x = this.xOffGuid;\r\n        this.y = this.yOffGuid;\r\n\r\n        this.width = Math.floor(this.width - this.xOffGuid * 2);\r\n        this.height = Math.floor(this.height - this.yOffGuid * 2);\r\n\r\n        this.cv[0] = this.x + this.width * 0.5;\r\n        this.cv[1] = this.y + this.height * 0.5;\r\n\r\n        this.core.canvas.canvasOut.width = this.core.frame.width;\r\n        this.core.canvas.canvasOut.height = this.core.frame.height;\r\n\r\n        this.update();\r\n\r\n        this.updateUIWidthHeight();\r\n    }\r\n    public updateColorBG(r: number, g: number, b: number) {\r\n        this.renderer.updateColorBG(r, g, b);\r\n    }\r\n    public update() {\r\n        for (let i = 0 ; i < this.cpList.length; ++i) {\r\n            this.cpList[i].update();\r\n        }\r\n        this.transform.updateGuides();\r\n    }\r\n    public isHoverCheck(x: number, y: number) {\r\n        return this.interaction.isHoverCheck(x, y);\r\n    }\r\n    public mouseUp() {\r\n        return this.interaction.mouseUp();\r\n    }\r\n    public offsetByID(id: number, xOff: number, yOff: number) {\r\n        return this.transform.offsetByID(id, xOff, yOff);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        this.renderer.render(ctx);\r\n    }\r\n    public translate(xOff: number, yOff: number) {\r\n\r\n        // do not allow to move the frame out of the extent\r\n        if (this.x + xOff < 0 ||\r\n            this.x + this.width + xOff > this.core.canvas.canvas.width ||\r\n            this.y + yOff < 0 ||\r\n            this.y + this.height + yOff > this.core.canvas.canvas.height ) {\r\n            return;\r\n        }\r\n\r\n        this.offsetByID(this.idHover, xOff, yOff);\r\n        this.updateUIWidthHeight();\r\n\r\n    }\r\n    public updateUIWidthHeight() {\r\n        // console.log('updateUIWidthHeight', this.width, this.height);\r\n\r\n        this.core.app.ui.divWidth.value = `${this.width}`;\r\n        this.core.app.ui.divHeight.value = `${this.height}`;\r\n        this.update();\r\n        this.core.canvas.renderForce();\r\n    }\r\n}","import { Frame } from '..';\r\nexport class Transform {\r\n    frame: Frame;\r\n    constructor(frame: Frame) {\r\n        this.frame = frame;\r\n    }\r\n    public offsetByID(id: number, xOff: number, yOff: number) {\r\n\r\n        switch (id) {\r\n            case 0:\r\n                this.frame.x += xOff;\r\n                this.frame.y += yOff;\r\n                this.frame.width -= xOff;\r\n                this.frame.height -= yOff;\r\n                break;\r\n            case 1:\r\n                this.frame.width += xOff;\r\n                this.frame.y += yOff;\r\n                this.frame.height -= yOff;\r\n                break;\r\n            case 2:\r\n                this.frame.width += xOff;\r\n                this.frame.height += yOff;\r\n                break;\r\n            case 3:\r\n                this.frame.x += xOff;\r\n                this.frame.width -= xOff;\r\n                this.frame.height += yOff;\r\n                break;\r\n            case 4:\r\n                this.frame.y += yOff;\r\n                this.frame.height -= yOff;\r\n                break;\r\n            case 5:\r\n                this.frame.width += xOff;\r\n                break;\r\n            case 6:\r\n                this.frame.height += yOff;\r\n                break;\r\n            case 7:\r\n                this.frame.x += xOff;\r\n                this.frame.width -= xOff;\r\n                break;\r\n            default:\r\n                this.frame.x += xOff;\r\n                this.frame.y += yOff;\r\n                break;\r\n        }\r\n\r\n        this.updateGuides();\r\n        this.frame.update();\r\n        this.frame.core.canvas.renderForce();\r\n    }\r\n    public updateGuides() {\r\n        this.frame.xOffGuid = this.frame.width / 3;\r\n        this.frame.yOffGuid = this.frame.height / 3;\r\n        this.frame.cv[0] = this.frame.x + this.frame.width * 0.5;\r\n        this.frame.cv[1] = this.frame.y + this.frame.height * 0.5;\r\n    }\r\n}","import { Frame } from '..';\r\nexport class Interaction {\r\n    frame: Frame;\r\n    constructor(frame: Frame) {\r\n        this.frame = frame;\r\n    }\r\n    public mouseUp() {\r\n        this.frame.isHover = false;\r\n        if (this.frame.idHover !== -1) {\r\n            this.frame.idSelected = this.frame.idHover;\r\n        }\r\n    }\r\n    public isHoverCheck(x: number, y: number) {\r\n\r\n        for (let i = 0; i < this.frame.cpList.length; ++i) {\r\n            const idCP = this.frame.cpList[i].isHoverCheck(x, y);\r\n            if (idCP !== -1) {\r\n                this.frame.isHover = true;\r\n                this.frame.idHover = idCP;\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (this.frame.x < x  && this.frame.x + this.frame.width > x &&\r\n            this.frame.y < y  && this.frame.y + this.frame.height > y) {\r\n            this.frame.idHover = -1;\r\n            this.frame.isHover = true;\r\n            return true;\r\n        }\r\n\r\n        this.frame.idHover = -1;\r\n        this.frame.isHover = false;\r\n        return false;\r\n    }\r\n}","class KNNColor {\r\n\r\n  public ncols: NColor[];\r\n  public k: number;\r\n  public minDiff: number;\r\n  public clusters: Cluster[];\r\n\r\n  constructor( _ncols: NColor[], _k = 3, _minDiff = 1) {\r\n    this.ncols = _ncols;\r\n    if (_minDiff < 1) { _minDiff = 1; }\r\n    this.k = _k;\r\n    this.minDiff = _minDiff;\r\n    this.init();\r\n  }\r\n  private init() {\r\n    // console.log('a');\r\n\r\n    let rnd = getRandomBySeed(10);\r\n\r\n    let clusters: Cluster[] = [];\r\n    let seen: number[] = [];\r\n\r\n    // console.log('b');\r\n\r\n    while (clusters.length < this.k) {\r\n      let idx = Math.floor(rnd() * this.ncols.length);\r\n      // let idx = Math.floor(Math.random() * this.ncols.length);\r\n      let found = false;\r\n      // console.log(idx);\r\n\r\n      for (let i = 0; i < seen.length; i++ ) {\r\n        if (idx === seen[i]) {\r\n          found = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!found) {\r\n        seen.push(idx);\r\n        let cluster = new Cluster(this.ncols[idx]);\r\n        cluster.push(this.ncols[idx]);\r\n        clusters.push(cluster);\r\n      }\r\n    }\r\n\r\n    // console.log('c');\r\n    let safeguard = 0;\r\n\r\n    while (true) {\r\n\r\n      if (safeguard++ > 10000  ) { \r\n        // console.log('braek'); \r\n        break; \r\n      }\r\n      let plists: NColor[][] = [];\r\n      for (let i = 0; i < this.k; i++) {\r\n        plists.push([]);\r\n      }\r\n\r\n      for (let j = 0; j < this.ncols.length; j++) {\r\n        let p: NColor = this.ncols[j];\r\n        let smallest_distance = Number.MAX_VALUE;\r\n        let idx = 0;\r\n        for (let i = 0; i < this.k; i++) {\r\n          let distance = this.euclidean(p, clusters[i].key);\r\n          if (distance < smallest_distance) {\r\n            smallest_distance = distance;\r\n            idx = i;\r\n          }\r\n        }\r\n        plists[idx].push(p);\r\n      }\r\n      // console.log('d');\r\n      // console.log(plists);\r\n      let diff = 0;\r\n      for (let i = 0; i < this.k; i++) {\r\n\r\n        let old: NColor = clusters[i].key;\r\n\r\n        let center: NColor = this.calculateCenter(plists[i], 3);  // what is 3\r\n        // console.log(center, plists[i])\r\n        let newCluster = new Cluster(center);\r\n        newCluster.values = plists[i];\r\n        let dist = this.euclidean(old, center);\r\n        // console.log(dist);\r\n        if (isNaN(dist)) {\r\n          // dist = 0.0;\r\n          continue;\r\n        }\r\n        clusters[i] = newCluster;\r\n        diff = diff > dist ? diff : dist;\r\n      }\r\n      // console.log('e');\r\n      // console.log('diff', diff);\r\n      if (diff < this.minDiff) { break; }\r\n      // break;\r\n    }\r\n    // console.log('done!');\r\n    this.clusters = clusters;\r\n  }\r\n  private euclidean(p1: NColor, p2: NColor) {\r\n    // console.log(p1, p2);\r\n    let s = Math.pow(p1.r - p2.r, 2) + Math.pow(p1.g - p2.g, 2) + Math.pow(p1.b - p2.b, 2);\r\n    // console.log(s);\r\n    return Math.sqrt(s);\r\n  }\r\n  private calculateCenter( cols: NColor[],  n: number) {\r\n    let cenCol = new NColor(0, 0, 0);\r\n    for (let i = 0; i < cols.length; i++) {\r\n      cenCol.r += cols[i].r;\r\n      cenCol.g += cols[i].g;\r\n      cenCol.b += cols[i].b;\r\n    }\r\n    cenCol.r /= cols.length;\r\n    cenCol.g /= cols.length;\r\n    cenCol.b /= cols.length;\r\n    return cenCol;\r\n  }\r\n\r\n}\r\nclass Cluster {\r\n  public key: NColor;\r\n  public values: NColor[] = [];\r\n\r\n  constructor(_key: NColor) {\r\n    this.key = _key;\r\n  }\r\n  public push(_Value: NColor) {\r\n    this.values.push(_Value);\r\n  }\r\n  public getKey() {\r\n    return [this.key.r, this.key.g, this.key.b];\r\n  }\r\n}\r\nclass NColor {\r\n  public r = 0;\r\n  public g = 0;\r\n  public b = 0;\r\n  constructor( _r = 0, _g = 0, _b = 0) {\r\n    this.r = _r;\r\n    this.g = _g;\r\n    this.b = _b;\r\n  }\r\n}\r\nconst getRandomBySeed = (seed: number) => {\r\n  if (seed === undefined) {\r\n    seed = performance.now();\r\n  }\r\n  return () => {\r\n    seed = (seed * 9301 + 49297) % 233280;\r\n    return seed / 233280;\r\n  };\r\n};\r\n// .................................................\r\n\r\nexport const thumbnail = (img: HTMLImageElement, maxWidth: number, maxHeight: number) => {\r\n\r\n  // Create and initialize two canvas\r\n  const canvas = document.createElement('canvas');\r\n  const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n  const canvasCopy = document.createElement('canvas');\r\n  const copyContext = canvasCopy.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n  // Determine new ratio based on max size\r\n  let ratio = 1;\r\n  if (img.width > maxWidth) {\r\n    ratio = maxWidth / img.width;\r\n  } else if (img.height > maxHeight) {\r\n    ratio = maxHeight / img.height;\r\n  }\r\n  // Draw original image in second canvas\r\n  canvasCopy.width = img.width;\r\n  canvasCopy.height = img.height;\r\n  copyContext.drawImage(img, 0, 0);\r\n\r\n  // Copy and resize second canvas to first canvas\r\n  canvas.width = img.width * ratio;\r\n  canvas.height = img.height * ratio;\r\n  ctx.drawImage(canvasCopy, 0, 0, canvasCopy.width, canvasCopy.height, 0, 0, canvas.width, canvas.height);\r\n\r\n  let imgOut = new Image();\r\n  imgOut.src = canvas.toDataURL();\r\n  imgOut.width = canvas.width;\r\n  imgOut.height = canvas.height;\r\n  return imgOut;\r\n\r\n};\r\nexport const process_image = (img: HTMLImageElement, k: number = 1 ) => {\r\n  const points: NColor[] = [];\r\n  // console.log('1');\r\n  const width = 100;\r\n  const height = 100;\r\n  // img = thumbnail(img, width, height)\r\n  // let imgDiv = document.getElementById('theimg');\r\n  // imgDiv.append(img);\r\n  // ctx.drawImage(img, 0, 0, img.width, img.height);\r\n  // console.log(img.width, img.height);\r\n  // let data = ctx.getImageData(0, 0, img.width, img.height).data;\r\n  // console.log('2');\r\n  const canvas = document.createElement('canvas');\r\n  const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n  ctx.drawImage(img, 0, 0, width, height);\r\n  // console.log('3');\r\n  const data = ctx.getImageData(0, 0, width, height).data;\r\n  for (let i = 0, l = data.length; i < l;  i += 4) {\r\n    let r = data[i];\r\n    let g = data[i + 1];\r\n    let b = data[i + 2];\r\n\r\n    // console.log(r,g,b);\r\n    points.push( new NColor(r, g, b));\r\n  }\r\n  // console.log('4');\r\n  let results = new KNNColor(points, k, 1);\r\n  // console.log('5');\r\n  let hex = [];\r\n  for (let i = 0; i < results.clusters.length; i++) {\r\n    hex.push(results.clusters[i].getKey());\r\n  }\r\n  return hex;\r\n};","import { Core } from '..';\r\nexport class Renderer {\r\n    public core: Core;\r\n    public t = 0.0;\r\n    public isCapture = false;\r\n    constructor(core: Core) {\r\n        this.core = core;\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n\r\n        // this.translation[0] = this.rect.cv[0];\r\n        // this.translation[1] = this.rect.cv[1];\r\n\r\n        // console.log(this.translation);\r\n        // this.ctx.translate(this.translation[0], this.translation[1]);\r\n        // this.ctx.scale(this.zoom, this.zoom);\r\n        // this.ctx.rotate(this.rotation)\r\n        // this.ctx.translate(this.rect.cv[0], this.rect.cv[1]);\r\n        // this.ctx.translate(100, 100);\r\n\r\n        // this.Render(ctx);\r\n        if (this.core.img) {\r\n            ctx.save();\r\n            \r\n            let type = 1;\r\n            switch (type) {\r\n                case 0:\r\n                    const mat = new DOMMatrix([1, 0, 0, 1, 0, 0]);\r\n\r\n                    const xPos = this.core.img.width; // * .5;\r\n                    const yPos = this.core.img.height; // * .5;\r\n\r\n                    const xPosRatio = this.core.frame.cv[0] / this.core.img.width; // * 0.01;\r\n                    const yPosRatio = this.core.frame.cv[1] / this.core.img.height; // * 0.01;\r\n\r\n                    console.log(xPosRatio, yPosRatio)\r\n                    console.log(1 - xPosRatio, 1 - yPosRatio)\r\n\r\n                    ctx.setTransform(mat\r\n                        .translate(xPos * xPosRatio, yPos * yPosRatio)\r\n                        .rotate(this.core.controller.rotationRadian)\r\n                        .scale(this.core.controller.zoomLevel)\r\n                        .translate(xPos * (1 - xPosRatio ), yPos * (1 - yPosRatio))\r\n                    );\r\n                    ctx.drawImage(this.core.img, -this.core.img.width, -this.core.img.height);\r\n                    break;\r\n\r\n                case 1:\r\n                    ctx.translate(this.core.img.width * 0.5, this.core.img.height * 0.5);\r\n                    ctx.rotate(this.core.controller.rotationRadian);\r\n                    ctx.scale(this.core.controller.zoomLevel, this.core.controller.zoomLevel);\r\n                    ctx.drawImage(this.core.img, -this.core.img.width * 0.5, -this.core.img.height * 0.5);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n\r\n\r\n\r\n\r\n            // ctx.beginPath();\r\n            // ctx.arc(0, 0, 10,  0, 3.14 * 2);\r\n            // ctx.closePath()\r\n            // ctx.fill();\r\n\r\n            ctx.restore();\r\n        }\r\n\r\n        this.core.canvas.clear(ctx);\r\n        this.core.distort?.render(ctx);\r\n\r\n        this.captureImage();\r\n\r\n\r\n        // this.ctx.restore();\r\n        // this.ctx.save();\r\n\r\n        // this.ctx.translate(this.translation[0], this.translation[1]);\r\n        this.core.frame.render(ctx);\r\n \r\n\r\n\r\n\r\n\r\n        let op = 1 - this.t;\r\n        // console.log(op);\r\n\r\n        if (op <  0) {\r\n            op = 0;\r\n        }\r\n\r\n\r\n        ctx.beginPath();\r\n        const xx = this.core.controller.touchInteraction.touchPre[0];\r\n        const yy = this.core.controller.touchInteraction.touchPre[1];\r\n        ctx.arc(xx, yy, op * 10,  0, 3.14 * 2);\r\n        ctx.closePath();\r\n\r\n\r\n        // console.log(`rgba(255, 255, 255, ${op})`)\r\n\r\n        ctx.fillStyle = `rgba(255, 255, 255, ${op})`;\r\n        ctx.fill();\r\n\r\n\r\n        ctx.restore();\r\n\r\n        // this.ctx.restore();\r\n        this.t += 0.025;\r\n    }\r\n    private captureImage() {\r\n\r\n        if (this.core.controller.isDrag) {\r\n            this.updateCanvasCapture();\r\n        }\r\n\r\n        if (this.isCapture) {\r\n            // console.log(this.core.frame.x);\r\n            this.core.canvas.ctxOut.drawImage(this.core.canvas.canvas, -this.core.frame.x, -this.core.frame.y);\r\n        }\r\n        // console.log(this.core.canvs.ctxOut, this.core.canvs);\r\n    }\r\n    public updateCanvasCapture() {\r\n            // this.core.frame.cv[0] = this.core.frame.x + this.core.frame.width * 0.5;\r\n            // this.core.frame.cv[1] = this.core.frame.y + this.core.frame.height * 0.5;\r\n\r\n            this.core.canvas.canvasOut.width = this.core.frame.width;\r\n            this.core.canvas.canvasOut.height = this.core.frame.height;\r\n    }\r\n}","import { Core } from '..';\r\nexport class ImageWrapper {\r\n    public core: Core;\r\n    public img: HTMLImageElement;\r\n    constructor(core: Core, img: HTMLImageElement) {\r\n        this.core = core;\r\n        this.img = img;\r\n    }\r\n\r\n\r\n}","import { EventController } from '..';\r\nexport class TouchInteraction {\r\n    public controller: EventController;\r\n    public down = false;\r\n    public touchPre: number[] = [0, 0];\r\n    public zoom: number = 1;\r\n    constructor(controller: EventController) {\r\n        this.controller = controller;\r\n    }\r\n    public touchstart(e: TouchEvent) {\r\n        this.controller.core.renderer.t = 0.0;\r\n        // console.log('touchstart', e);\r\n\r\n        var rect = this.controller.core.canvas.canvas.getBoundingClientRect();\r\n        const evX = e.targetTouches[0].pageX - rect.left;\r\n        const evY = e.targetTouches[0].pageY - rect.top;\r\n        this.touchPre[0] = evX;\r\n        this.touchPre[1] = evY;\r\n        this.controller.touchStartRotation = true;\r\n        this.controller.touchStartScale = true;\r\n\r\n        this.controller.pointDown(evX, evY);\r\n\r\n        e.preventDefault();\r\n    }\r\n    public touchmove(e: TouchEvent) {\r\n        // console.log('touchmove', e);\r\n\r\n        if(e.targetTouches.length > 1) {\r\n            this.controller.rotationByTouch(e);\r\n            this.controller.scaleByTouch(e);\r\n            return \r\n        }\r\n\r\n        var rect = this.controller.core.canvas.canvas.getBoundingClientRect();\r\n        const evX = e.targetTouches[0].pageX - rect.left;\r\n        const evY = e.targetTouches[0].pageY - rect.top;\r\n        this.touchPre[0] = evX;\r\n        this.touchPre[1] = evY;\r\n\r\n        this.controller.pointDrag(evX, evY);\r\n\r\n        e.preventDefault();\r\n    }\r\n    public touchcancel(e: TouchEvent) {\r\n        // console.debug('touchcancel', e);\r\n        this.controller.touchStartRotation = false;\r\n        this.controller.touchStartScale = false;\r\n        e.preventDefault();\r\n    }\r\n    public touchend(e: TouchEvent) {\r\n        this.controller.pointUp(-1, -1);\r\n\r\n        e.preventDefault();\r\n    }\r\n}","import { EventController } from '..';\r\nexport class MouseInteraction {\r\n    public controller: EventController;\r\n    constructor(core: EventController) {\r\n        this.controller = core;\r\n    }\r\n    public mouseDown(e: MouseEvent) {\r\n        this.controller.pointDown(e.offsetX, e.offsetY);\r\n    }\r\n    public mouseUp(e: MouseEvent) {\r\n        this.controller.isDrag = false;\r\n        this.controller.pointUp(e.offsetX, e.offsetY);\r\n    }\r\n    public mouseWheel(e: WheelEvent, v: number) {\r\n        this.controller.zoom(e.deltaY);\r\n    }\r\n    public mouseMove(e: MouseEvent) {\r\n        if (this.controller.isDown) {\r\n            this.controller.pointDrag(e.offsetX, e.offsetY);\r\n        } else {\r\n            this.controller.pointMove(e.offsetX, e.offsetY);\r\n        }\r\n    }\r\n    public mouseOut(e: MouseEvent) {\r\n        this.controller.pointOut(e.offsetX, e.offsetY);\r\n    }\r\n}","export enum CURSOR {\r\n    Default = 'default',\r\n    Auto = 'audo',\r\n    Crosshair = 'CROSSHAIR',\r\n    Move = 'move',\r\n    Pointer = 'pointer',\r\n    Text = 'text',\r\n    Wait = 'wait',\r\n    Help = 'help',\r\n    NWResize = 'nw-resize', // 0, 2\r\n    NEResize = 'ne-resize', // 1, 3\r\n    NSResize = 'ns-resize', // 4 6\r\n    EResize = 'e-resize', // 5 7\r\n}\r\nexport class ActiveCursor {\r\n    public div: HTMLElement|undefined;\r\n    constructor(div?: HTMLElement) {\r\n        this.div = div;\r\n    }\r\n    public default() {\r\n        if (this.div) {\r\n            if (this.div.style.cursor !== CURSOR.Default) { this.div.style.cursor = CURSOR.Default; }\r\n        } else {\r\n            if (document.body.style.cursor !== CURSOR.Default) { document.body.style.cursor = CURSOR.Default; }\r\n        }\r\n    }\r\n    public auto() {\r\n      if (this.div) {\r\n          if (this.div.style.cursor !== CURSOR.Auto) { this.div.style.cursor = CURSOR.Auto; }\r\n      } else {\r\n          if (document.body.style.cursor !== CURSOR.Auto) { document.body.style.cursor = CURSOR.Auto; }\r\n      }\r\n  }\r\n    public creating() {\r\n        if (this.div) {\r\n            if (this.div.style.cursor !== CURSOR.Crosshair) { this.div.style.cursor = CURSOR.Crosshair; }\r\n        } else {\r\n            if (document.body.style.cursor !== CURSOR.Crosshair) { document.body.style.cursor = CURSOR.Crosshair; }\r\n        }\r\n    }\r\n    public dragging() {\r\n        if (this.div) {\r\n            if (this.div.style.cursor !== CURSOR.Move) { this.div.style.cursor = CURSOR.Move; }\r\n        } else {\r\n            if (document.body.style.cursor !== CURSOR.Move) { document.body.style.cursor = CURSOR.Move; }\r\n        }\r\n    }\r\n    public hovering() {\r\n        if (this.div) {\r\n            if (this.div.style.cursor !== CURSOR.Pointer) { this.div.style.cursor = CURSOR.Pointer; }\r\n        } else {\r\n            if (document.body.style.cursor !== CURSOR.Pointer) { document.body.style.cursor = CURSOR.Pointer; }\r\n        }\r\n    }\r\n    public texting() {\r\n        if (this.div) {\r\n            if (this.div.style.cursor !== CURSOR.Text) { this.div.style.cursor = CURSOR.Text; }\r\n        } else {\r\n            if (document.body.style.cursor !== CURSOR.Text) { document.body.style.cursor = CURSOR.Text; }\r\n        }\r\n    }\r\n    public set_e_resize() {\r\n      if (this.div) {\r\n          if (this.div.style.cursor !== CURSOR.EResize) { this.div.style.cursor = CURSOR.EResize; }\r\n      } else {\r\n          if (document.body.style.cursor !== CURSOR.EResize) { document.body.style.cursor = CURSOR.EResize; }\r\n      }\r\n      }\r\n      public set_ne_resize() {\r\n          if (this.div) {\r\n              if (this.div.style.cursor !== CURSOR.NEResize) { this.div.style.cursor = CURSOR.NEResize; }\r\n          } else {\r\n              if (document.body.style.cursor !== CURSOR.NEResize) { document.body.style.cursor = CURSOR.NEResize; }\r\n          }\r\n      }\r\n      public set_ns_resize() {\r\n          if (this.div) {\r\n              if (this.div.style.cursor !== CURSOR.NSResize) { this.div.style.cursor = CURSOR.NSResize; }\r\n          } else {\r\n              if (document.body.style.cursor !== CURSOR.NSResize) { document.body.style.cursor = CURSOR.NSResize; }\r\n          }\r\n      }\r\n      public set_nw_resize() {\r\n          if (this.div) {\r\n              if (this.div.style.cursor !== CURSOR.NWResize) { this.div.style.cursor = CURSOR.NWResize; }\r\n          } else {\r\n              if (document.body.style.cursor !== CURSOR.NWResize) { document.body.style.cursor = CURSOR.NWResize; }\r\n          }\r\n    }\r\n}","import { Core } from '..';\r\nimport { TouchInteraction } from './Event/TouchInteraction';\r\nimport { MouseInteraction } from './Event/MouseInteraction';\r\nimport { ActiveCursor } from './ActiveCursor';\r\nexport class EventController {\r\n\r\n    public core: Core;\r\n    public activeCursor: ActiveCursor;\r\n    public mouseInteraction: MouseInteraction;\r\n    public touchInteraction: TouchInteraction;\r\n\r\n    public isDown = false;\r\n    public isDrag = false;\r\n\r\n    public mousePre = [0, 0];\r\n    public zoomLevel: number = 1;\r\n    public rotationRadian: number = 0;\r\n    // public translation: number[] = [0, 0];\r\n\r\n    // touch for rotation\r\n    private scalePre = 1;\r\n    private anglePre = 0;\r\n    public touchStartRotation = false;\r\n    public touchStartScale = false;\r\n\r\n    constructor(core: Core) {\r\n        this.core = core;\r\n        this.activeCursor = new ActiveCursor();\r\n        this.touchInteraction = new TouchInteraction(this);\r\n        this.mouseInteraction = new MouseInteraction(this);\r\n\r\n    }\r\n    public import(url: string) {\r\n        this.reset();\r\n    }\r\n    public reset() {\r\n        this.core.distort.destroyCP();\r\n    }\r\n    public updateWidthByInput(v: number) {\r\n        if (v < this.core.frame.widthMin) {\r\n            this.core.frame.width = this.core.frame.widthMin;\r\n        } else if (v + this.core.frame.x > this.core.imageWrapper.img.width) {\r\n            this.core.frame.width = this.core.imageWrapper.img.width - this.core.frame.x;\r\n        } else {\r\n            this.core.frame.width = v;\r\n        }\r\n        this.updateSizeByInputPost();\r\n    }\r\n    public updateHeightByInput(v: number) {\r\n        if (v < this.core.frame.heightMin) {\r\n            this.core.frame.height = this.core.frame.heightMin;\r\n        } else if (v + this.core.frame.y > this.core.imageWrapper.img.height) {\r\n            this.core.frame.height = this.core.imageWrapper.img.height - this.core.frame.y;\r\n        } else {\r\n            this.core.frame.height = v;\r\n        }\r\n        this.updateSizeByInputPost();\r\n    }\r\n    private updateSizeByInputPost() {\r\n        this.core.frame.update();\r\n        this.core.canvas.renderForce();\r\n        this.core.canvas.canvasOut.width = this.core.frame.width;\r\n        this.core.canvas.canvasOut.height = this.core.frame.height;\r\n    }\r\n    public offsetByInput(v: number) {\r\n        // console.log(v, this.core.frame.idSelected);\r\n\r\n        if (this.core.frame.idSelected === 0 || this.core.frame.idSelected === 4 || this.core.frame.idSelected === 7 ) {\r\n            v *= -1;\r\n        }\r\n\r\n        this.core.frame.offsetByID(this.core.frame.idSelected, v, v);\r\n        this.core.renderer.updateCanvasCapture();\r\n\r\n    }\r\n    public updateCursor() {\r\n        if (this.core.frame.isHover) {\r\n            // console.log(this.core.frame.idHover)\r\n            if (this.core.frame.idHover === -1) {\r\n                this.activeCursor.dragging();\r\n            } else if (this.core.frame.idHover === 0 || this.core.frame.idHover === 2) {\r\n                this.activeCursor.set_nw_resize();\r\n            } else if (this.core.frame.idHover === 1 || this.core.frame.idHover === 3) {\r\n                this.activeCursor.set_ne_resize();\r\n            } else if (this.core.frame.idHover === 5 || this.core.frame.idHover === 7) {\r\n                this.activeCursor.set_e_resize();\r\n            } else if (this.core.frame.idHover === 4 || this.core.frame.idHover === 6) {\r\n                this.activeCursor.set_ns_resize();\r\n            }\r\n        } else {\r\n            this.activeCursor.default();\r\n        }\r\n    }\r\n    public rotate(v: number) {\r\n        this.rotationRadian = v;\r\n        this.postUpdate();\r\n    }\r\n    public pointDown(x: number, y: number) {\r\n        this.isDown = true;\r\n        this.core.frame.isHoverCheck(x, y);\r\n        this.core.distort?.mouseDown(x, y);\r\n        this.mousePre[0] = x;\r\n        this.mousePre[1] = y;\r\n\r\n        this.postUpdate();\r\n    }\r\n    public pointUp(x: number, y: number) {\r\n        this.isDown = false;\r\n        this.core.frame.mouseUp();\r\n        this.core.distort?.mouseUp(x, y);\r\n        this.postUpdate();\r\n    }\r\n    public pointOut(x: number, y: number) {\r\n        this.isDown = false;\r\n        this.core.frame.isHover = false;\r\n        this.isDrag = false;\r\n        // this.anglePre = 0.0;\r\n        this.postUpdate();\r\n    }\r\n    public pointMove(x: number, y: number) {\r\n        this.core.frame.isHoverCheck(x, y);\r\n\r\n        this.mousePre[0] = x;\r\n        this.mousePre[1] = y;\r\n\r\n        this.updateCursor();\r\n\r\n        this.core.distort?.mouseMove(x, y);\r\n        \r\n        this.postUpdate();\r\n    }\r\n    public pointDrag(x: number, y: number) {\r\n        this.isDrag = true;\r\n        // this.core.frame.isHover(x, y);\r\n        // console.log(x, y);\r\n\r\n        if (this.core.frame.isHover) {\r\n            this.mouseDragRect(x, y);\r\n        } else {\r\n            this.mouseDragPan(x, y);\r\n        }\r\n        this.core.distort?.mouseMove(x, y);\r\n        // return;\r\n\r\n        this.postUpdate();\r\n    }\r\n    public mouseDragRect = (x: number, y: number) => {\r\n        const xOff = x - this.mousePre[0];\r\n        const yOff = y - this.mousePre[1];\r\n        this.core.frame.translate(xOff, yOff);\r\n\r\n\r\n        // let cos = Math.cos(angle * (3.14159265358979 / 180.0));\r\n        // let sin = Math.sin(angle * (3.14159265358979 / 180.0));\r\n        // let x = v.x * cos - v.y * sin;\r\n        // let y = v.x * sin + v.y * cos;\r\n\r\n\r\n        // this.translation[0] += xOff;\r\n        // this.translation[1] += yOff;\r\n\r\n\r\n        this.mousePre[0] = x;\r\n        this.mousePre[1] = y;\r\n        // this.pointDrag(x, y);\r\n    }\r\n    public mouseDragPan = (x: number, y: number) => {\r\n        this.pan(x, y);\r\n    }\r\n    public zoom(v: number) {\r\n        // console.log(e.deltaY);\r\n        if (v < 0) {\r\n            this.zoomLevel += this.zoomLevel * 0.19;\r\n        } else {\r\n            this.zoomLevel -= this.zoomLevel * 0.19;\r\n        }\r\n\r\n        this.postUpdate();\r\n    }\r\n    // public RemapByZoom(e: MouseEventData) {\r\n    //     e.x = (e.x - this.translation[0]) / this.zoom;\r\n    //     e.y = (e.y - this.translation[1]) / this.zoom;\r\n    //     return e;\r\n    // }\r\n    public pan(x: number, y: number) {\r\n        // if (!this.ablePan) { return;}\r\n        // const xOff = e.x - this.mousePre[0];\r\n        // const yOff = e.y - this.mousePre[1];\r\n        // this.translation[0] += xOff;\r\n        // this.translation[1] += yOff;\r\n        // console.log(this.translation);\r\n    }\r\n    public postUpdate() {\r\n        this.core.canvas.renderForce();\r\n    }\r\n    public downloadImage() {\r\n        // this.core.canvas.canvasOut;\r\n\r\n        const a = document.createElement('a');\r\n        a.href = this.core.canvas.canvasOut.toDataURL();\r\n        a.download = 'image.png';\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n    }\r\n    public rotationByTouch(e: TouchEvent) {\r\n        this.core.canvas.renderForce();\r\n\r\n        let t0;\r\n        let t1;\r\n        if (e.targetTouches[0].clientY < e.targetTouches[1].clientY) {\r\n            t0 = e.targetTouches[0];\r\n            t1 = e.targetTouches[1];\r\n        } else {\r\n            t0 = e.targetTouches[1];\r\n            t1 = e.targetTouches[0];\r\n        }\r\n\r\n        const angle = Math.atan2(t1.clientX - t0.clientX, t1.clientY - t0.clientY );\r\n        const theAngle =  this.anglePre - angle; \r\n\r\n        // it happens one time when touch starts\r\n        if (this.touchStartRotation) {\r\n            this.anglePre = this.rotationRadian;\r\n            this.touchStartRotation = false;\r\n            this.anglePre = angle;\r\n            return;\r\n        }\r\n\r\n        this.rotationRadian += theAngle;\r\n        this.anglePre = angle;\r\n    }\r\n    public scaleByTouch(e: TouchEvent) {\r\n        this.core.canvas.renderForce();\r\n\r\n        let t0;\r\n        let t1;\r\n        if (e.targetTouches[0].clientY < e.targetTouches[1].clientY) {\r\n            t0 = e.targetTouches[0];\r\n            t1 = e.targetTouches[1];\r\n        } else {\r\n            t0 = e.targetTouches[1];\r\n            t1 = e.targetTouches[0];\r\n        }\r\n\r\n        const distance = Math.sqrt( \r\n            (t1.clientX - t0.clientX) * (t1.clientX - t0.clientX) +  \r\n            (t1.clientY - t0.clientY) * (t1.clientY - t0.clientY)\r\n        );\r\n\r\n\r\n\r\n        if (this.scalePre > distance) {\r\n            if (this.zoomLevel > 0.4) {\r\n                this.zoomLevel -= 0.015;\r\n            }\r\n        } else {\r\n            if (this.zoomLevel < 2.0) {\r\n                this.zoomLevel += 0.015;\r\n            }\r\n        }\r\n\r\n        // const theZoom = this.scalePre - distance * 0.001; \r\n\r\n        // it happens one time when touch starts\r\n        if (this.touchStartScale) {\r\n            this.scalePre = this.zoomLevel;\r\n            this.touchStartScale = false;\r\n            this.scalePre = distance;\r\n            return;\r\n        }\r\n\r\n        \r\n\r\n        // console.log(theZoom);\r\n        // this.zoomLevel += theZoom;\r\n        this.scalePre = distance;\r\n    }\r\n}","import { Distort } from '..';\r\nexport class Controller {\r\n    public distort: Distort;\r\n    public width = 20;\r\n    public height = 20;\r\n    public id: number;\r\n    public x: number;\r\n    public y: number;\r\n    public dom: SVGSVGElement;\r\n    constructor(distort: Distort, id: number, x: number, y: number) {\r\n        this.distort = distort;\r\n        this.id = id;\r\n        this.x = x;\r\n        this.y = y;\r\n        // this.dom = getRectSVG(this.width, this.height, 5);\r\n        // this.dom.style.pointerEvents = 'none';\r\n        // this.distort.hostDiv.appendChild(this.dom);\r\n        this.move(x, y);\r\n    }\r\n    public translation(x: number, y: number) {\r\n        this.x = parseInt(this.dom.style.left) + x;\r\n        this.y = parseInt(this.dom.style.top) + y;\r\n        // this.dom.style.left = this.x + 'px';\r\n        // this.dom.style.top = this.y + 'px';\r\n        // console.log(this.dom.style.left);\r\n    }\r\n    public move(x: number, y: number) {\r\n        this.x = x - this.width * 0.5;\r\n        this.y = y - this.height * 0.5;\r\n        // this.dom.style.left = this.x + 'px';\r\n        // this.dom.style.top = this.y + 'px';\r\n    }\r\n    public destroy() {\r\n        this.dom.parentElement.removeChild(this.dom);\r\n    }   \r\n}\r\n// export const getRectSVG = (width: number = 8, height: number = 8, fillet: number = 2, fillStyle: string = '#ffffff', strokeWidth: number = 1, strokeStyle: string = '#CBDAE2' ) => {\r\n//     let rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\r\n//     rect.setAttribute('x','1');\r\n//     rect.setAttribute('y','1');\r\n//     rect.setAttribute('width', `${width}`);\r\n//     rect.setAttribute('height',`${height}`);\r\n//     rect.setAttribute('stroke-width', `${strokeWidth}`);\r\n//     rect.setAttribute('rx', `${fillet}`);\r\n//     rect.setAttribute('fill', `${fillStyle}`);\r\n//     rect.setAttribute('stroke', `${strokeStyle}`);\r\n\r\n//     let rectSVG = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n//     rectSVG.appendChild(rect);\r\n//     rectSVG.setAttribute('width', `${width + strokeWidth * 2}`);\r\n//     rectSVG.setAttribute('height', `${height + strokeWidth * 2}`);\r\n//     rectSVG.style.position = 'absolute';\r\n//     return rectSVG;\r\n// };","import { Distort } from '..';\r\nexport class ProjectionBase {\r\n    public distort: Distort;\r\n    constructor() {\r\n\r\n    }\r\n    public distortPerspective(v: number) {\r\n        this.distort.Controllers[0].translation(v, 0);\r\n        this.distort.Controllers[1].translation(-v, 0);\r\n        this.distort.Controllers[2].translation(v, 0);\r\n        this.distort.Controllers[3].translation(-v, 0);\r\n    }\r\n    public renderDistortion(ctx: CanvasRenderingContext2D, img: HTMLImageElement) {\r\n        // TODO\r\n    }\r\n}\r\n\r\n// reference: https://codepen.io/TP24/pen/zVWYGX\r\nexport const distance = (x0: number, y0: number, x1: number, y1: number) => {\r\n    return Math.sqrt((x0 - x1) * (x0 - x1) + (y0 - y1) * (y0 - y1));\r\n}\r\nexport class Projection extends ProjectionBase {\r\n    constructor(distort: Distort) {\r\n        super();\r\n        this.distort = distort;\r\n    }\r\n    public renderDistortion(ctx: CanvasRenderingContext2D, img: HTMLImageElement) {\r\n        const corners: number[][] = [];\r\n        let xSum = 0;\r\n        let ySum = 0;\r\n        for (let i = 0 ; i < this.distort.Controllers.length; ++i) {\r\n            const x = (this.distort.Controllers[i].x - this.distort.domRect.x) * this.distort.domRect.width / this.distort.hostImg.width;\r\n            const y = (this.distort.Controllers[i].y - this.distort.domRect.y) * this.distort.domRect.height / this.distort.hostImg.height;\r\n            xSum += x;\r\n            ySum += y;\r\n            corners.push([x, y]);\r\n        }\r\n        corners.push([xSum / this.distort.Controllers.length, ySum / this.distort.Controllers.length]);\r\n\r\n        // 0   1\r\n        //   4\r\n        // 3   2\r\n        const w = this.distort.hosCanvas.width;\r\n        const h = this.distort.hosCanvas.height;\r\n        drawTriangle(ctx, img, [0, 0], [w / 2, h / 2], [0, h],  corners[0], corners[4], corners[3]);\r\n        drawTriangle(ctx, img, [0, 0], [w / 2, h / 2], [w, 0],  corners[0], corners[4], corners[1]);\r\n        drawTriangle(ctx, img, [w, 0], [w / 2, h / 2], [w, h],  corners[1], corners[4], corners[2]);\r\n        drawTriangle(ctx, img, [0, h], [w / 2, h / 2], [w, h],  corners[3], corners[4], corners[2]);\r\n    }\r\n}\r\nconst drawImageTriangle = (ctx: CanvasRenderingContext2D, img: HTMLImageElement, s1: number[], s2: number[], s3: number[], d1: number[], d2: number[], d3: number[]) => {\r\n    const xm = linearSolution(s1[0], s1[1], d1[0],  s2[0], s2[1], d2[0],  s3[0], s3[1], d3[0]);\r\n    const ym = linearSolution(s1[0], s1[1], d1[1],  s2[0], s2[1], d2[1],  s3[0], s3[1], d3[1]);\r\n\r\n    ctx.save();\r\n    ctx.setTransform(xm[0], ym[0], xm[1], ym[1], xm[2], ym[2]);\r\n    ctx.beginPath();\r\n    ctx.moveTo(s1[0], s1[1]);\r\n    ctx.lineTo(s2[0], s2[1]);\r\n    ctx.lineTo(s3[0], s3[1]);\r\n    ctx.closePath();\r\n    // //Leaves a faint black (or whatever .fillStyle) border around the drawn triangle\r\n    // //  ctx.fill();\r\n    ctx.clip();\r\n    ctx.drawImage(img, 0, 0, img.width, img.height);\r\n    ctx.restore();\r\n};\r\nconst drawTriangle = (ctx: CanvasRenderingContext2D, img: HTMLImageElement, s1: number[], s2: number[], s3: number[], d1: number[], d2: number[], d3: number[]) => {\r\n    const [d1x, d2x, d3x] = expandTriangle(d1, d2, d3, .3);\r\n    const [s1x, s2x, s3x] = expandTriangle(s1, s2, s3, .3);\r\n    drawImageTriangle(ctx, img, s1x, s2x, s3x, d1x, d2x, d3x);\r\n};\r\nconst extendPoint = (p: number[], inCir: Float32Array, dffset: number) => {\r\n    const dx = p[0] - inCir[0];\r\n    const dy = p[1] - inCir[1];\r\n    const x2 = (dx * dffset) + inCir[0];\r\n    const y2 = (dy * dffset) + inCir[1];\r\n    return [x2, y2];\r\n};\r\nconst expandTriangle = (A: number[], B: number[], C: number[], offset: number) => {\r\n    const incircle: Float32Array = getInnerCircle(A, B, C);\r\n    const factor = (incircle[2] + offset) / (incircle[2]);\r\n\r\n    const A2 = extendPoint(A, incircle, factor);\r\n    const B2 = extendPoint(B, incircle, factor);\r\n    const C2 = extendPoint(C, incircle, factor);\r\n    return [A2, B2, C2];\r\n};\r\nconst getInnerCircle = (A: number[], B: number[], C: number[]) => {\r\n    /*\r\n    function lineLen(p1, p2) {\r\n      const dx = p2[0] - p1[0],\r\n      dy = p2[1] - p1[1];\r\n      return Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n */\r\n    //Side lengths, perimiter p and semiperimiter s:\r\n    const a = distance(B[0], B[1], C[0], C[1]);\r\n    const b = distance(C[0], C[1], A[0], A[1]);\r\n    const c = distance(A[0], A[1], B[0], B[1]);\r\n    const p = a + b + c;\r\n    const s = p / 2;\r\n\r\n    //Heron's formula\r\n    //https://www.wikihow.com/Calculate-the-Area-of-a-Triangle#Using_Side_Lengths\r\n    const area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\r\n    //Faster(?) alternative:\r\n    //http://geomalgorithms.com/a01-_area.html#Modern-Triangles\r\n    //const area = Math.abs( (B[0]-A[0])*(C[1]-A[1]) - (C[0]-A[0])*(B[1]-A[1]) )/2;\r\n\r\n    //Incircle radius r\r\n    //  https://en.wikipedia.org/wiki/Incircle_and_excircles_of_a_triangle#Relation_to_area_of_the_triangle\r\n    //..and center [cx, cy]\r\n    //  https://en.wikipedia.org/wiki/Incircle_and_excircles_of_a_triangle#Cartesian_coordinates\r\n    //  https://www.mathopenref.com/coordincenter.html\r\n    const r = area / s;\r\n    const cx = (a * A[0] + b * B[0] + c * C[0]) / p;\r\n    const cy = (a * A[1] + b * B[1] + c * C[1]) / p;\r\n    return new Float32Array([cx, cy, r]);\r\n};\r\n/**\r\n *  Solves a system of linear equations.\r\n *\r\n *  t1 = (a * r1) + (b + s1) + c\r\n *  t2 = (a * r2) + (b + s2) + c\r\n *  t3 = (a * r3) + (b + s3) + c\r\n *\r\n *  r1 - t3 are the known values.\r\n *  a, b, c are the unknowns to be solved.\r\n *  returns the a, b, c coefficients.\r\n */\r\nconst linearSolution = (r1: number, s1: number, t1: number, r2: number, s2: number, t2: number, r3: number, s3: number, t3: number): number[] => {\r\n    const a = (((t2 - t3) * (s1 - s2)) - ((t1 - t2) * (s2 - s3))) / (((r2 - r3) * (s1 - s2)) - ((r1 - r2) * (s2 - s3)));\r\n    const b = (((t2 - t3) * (r1 - r2)) - ((t1 - t2) * (r2 - r3))) / (((s2 - s3) * (r1 - r2)) - ((s1 - s2) * (r2 - r3)));\r\n    const c = t1 - (r1 * a) - (s1 * b);\r\n    return [a, b, c];\r\n};","import { ProjectionBase } from '../Projection';\r\nimport { Distort } from '..';\r\n\r\n// reference: http://jsfiddle.net/xzL58dha/3/\r\n// https://stackoverflow.com/questions/4097688/draw-distorted-image-on-html5s-canvas\r\n\r\nexport class ProjectionSubdiv extends ProjectionBase {\r\n    constructor(distort: Distort) {\r\n        super();\r\n        this.distort = distort;\r\n    }\r\n    public renderDistortion(ctx: CanvasRenderingContext2D, img: HTMLImageElement) {\r\n        const corners: number[][] = [];\r\n        let xSum = 0;\r\n        let ySum = 0;\r\n        for (let i = 0 ; i < this.distort.Controllers.length; ++i) {\r\n            const x = (this.distort.Controllers[i].x - this.distort.domRect.x) * this.distort.domRect.width / this.distort.hostImg.width;\r\n            const y = (this.distort.Controllers[i].y - this.distort.domRect.y) * this.distort.domRect.height / this.distort.hostImg.height;\r\n            xSum += x;\r\n            ySum += y;\r\n            corners.push([x, y]);\r\n        }\r\n        corners.push([xSum / this.distort.Controllers.length, ySum / this.distort.Controllers.length]);\r\n\r\n        // 0   1\r\n        //   4\r\n        // 3   2\r\n        const w = this.distort.hosCanvas.width;\r\n        const h = this.distort.hosCanvas.height;\r\n        // drawTriangle(ctx, img, [0, 0], [w / 2, h / 2], [0, h],  corners[0], corners[4], corners[3]);\r\n        // drawTriangle(ctx, img, [0, 0], [w / 2, h / 2], [w, 0],  corners[0], corners[4], corners[1]);\r\n        // drawTriangle(ctx, img, [w, 0], [w / 2, h / 2], [w, h],  corners[1], corners[4], corners[2]);\r\n        // drawTriangle(ctx, img, [0, h], [w / 2, h / 2], [w, h],  corners[3], corners[4], corners[2]);\r\n    }\r\n}\r\n\r\n\r\n// const calculateGeometry = () => {\r\n//     // clear triangles out\r\n//     const triangles = [];\r\n\r\n//     // generate subdivision\r\n//     var subs = 7; // vertical subdivisions\r\n//     var divs = 7; // horizontal subdivisions\r\n\r\n//     var p1 = new Point(parseInt($(controls[0]).css('left')) + 6, parseInt($(controls[0]).css('top')) + 6);\r\n//     var p2 = new Point(parseInt($(controls[1]).css('left')) + 6, parseInt($(controls[1]).css('top')) + 6);\r\n//     var p3 = new Point(parseInt($(controls[2]).css('left')) + 6, parseInt($(controls[2]).css('top')) + 6);\r\n//     var p4 = new Point(parseInt($(controls[3]).css('left')) + 6, parseInt($(controls[3]).css('top')) + 6);\r\n\r\n//     var dx1 = p4.x - p1.x;\r\n//     var dy1 = p4.y - p1.y;\r\n//     var dx2 = p3.x - p2.x;\r\n//     var dy2 = p3.y - p2.y;\r\n\r\n//     var imgW = image.naturalWidth;\r\n//     var imgH = image.naturalHeight;\r\n\r\n//     for (var sub = 0; sub < subs; ++sub) {\r\n//         var curRow = sub / subs;\r\n//         var nextRow = (sub + 1) / subs;\r\n\r\n//         var curRowX1 = p1.x + dx1 * curRow;\r\n//         var curRowY1 = p1.y + dy1 * curRow;\r\n        \r\n//         var curRowX2 = p2.x + dx2 * curRow;\r\n//         var curRowY2 = p2.y + dy2 * curRow;\r\n\r\n//         var nextRowX1 = p1.x + dx1 * nextRow;\r\n//         var nextRowY1 = p1.y + dy1 * nextRow;\r\n        \r\n//         var nextRowX2 = p2.x + dx2 * nextRow;\r\n//         var nextRowY2 = p2.y + dy2 * nextRow;\r\n\r\n//         for (var div = 0; div < divs; ++div) {\r\n//             var curCol = div / divs;\r\n//             var nextCol = (div + 1) / divs;\r\n\r\n//             var dCurX = curRowX2 - curRowX1;\r\n//             var dCurY = curRowY2 - curRowY1;\r\n//             var dNextX = nextRowX2 - nextRowX1;\r\n//             var dNextY = nextRowY2 - nextRowY1;\r\n\r\n//             var p1x = curRowX1 + dCurX * curCol;\r\n//             var p1y = curRowY1 + dCurY * curCol;\r\n\r\n//             var p2x = curRowX1 + (curRowX2 - curRowX1) * nextCol;\r\n//             var p2y = curRowY1 + (curRowY2 - curRowY1) * nextCol;\r\n\r\n//             var p3x = nextRowX1 + dNextX * nextCol;\r\n//             var p3y = nextRowY1 + dNextY * nextCol;\r\n\r\n//             var p4x = nextRowX1 + dNextX * curCol;\r\n//             var p4y = nextRowY1 + dNextY * curCol;\r\n\r\n//             var u1 = curCol * imgW;\r\n//             var u2 = nextCol * imgW;\r\n//             var v1 = curRow * imgH;\r\n//             var v2 = nextRow * imgH;\r\n\r\n//             var triangle1 = new Triangle(\r\n//                 new Point(p1x-1, p1y),\r\n//                 new Point(p3x+2, p3y+1),\r\n//                 new Point(p4x-1, p4y+1),\r\n//                 new TextCoord(u1, v1),\r\n//                 new TextCoord(u2, v2),\r\n//                 new TextCoord(u1, v2)\r\n//             );\r\n\r\n//             var triangle2 = new Triangle(\r\n//                 new Point(p1x-2, p1y),\r\n//                 new Point(p2x+1, p2y),\r\n//                 new Point(p3x+1, p3y+1),\r\n//                 new TextCoord(u1, v1),\r\n//                 new TextCoord(u2, v1),\r\n//                 new TextCoord(u2, v2)\r\n//             );\r\n\r\n//             triangles.push(triangle1);\r\n//             triangles.push(triangle2);\r\n//         }\r\n//     }\r\n// }","import { Core } from '..';\r\nimport { Controller } from './Controller';\r\nimport { Projection, distance } from './Projection';\r\nimport { ProjectionSubdiv } from './ProjectionSubdiv';\r\nexport enum DISTORTION_TYPE {\r\n    Projection = 'projection',\r\n    Subdivision = 'subdivision'\r\n}\r\nexport class Distort {\r\n    public core: Core;\r\n    public projection: Projection;\r\n    public Controllers: Controller[] = [];\r\n    public hostDiv: HTMLElement;\r\n    public hosCanvas: HTMLCanvasElement;\r\n    public hostImg: HTMLImageElement;\r\n    public domRect: DOMRect;\r\n    public id = -1;\r\n    public DISTORTION_TYPE: DISTORTION_TYPE;\r\n    private mPre = [0, 0];\r\n    constructor(core: Core, type = DISTORTION_TYPE.Subdivision) {\r\n        this.core = core;\r\n        this.DISTORTION_TYPE = type;\r\n\r\n        this.hostDiv = this.core.app.div;\r\n        this.hosCanvas = this.core.canvas.canvas;\r\n        this.hostImg = this.core.img;\r\n        \r\n        if (this.DISTORTION_TYPE === DISTORTION_TYPE.Projection) {\r\n            this.projection = new ProjectionSubdiv(this);\r\n        } else {\r\n            this.projection = new Projection(this);\r\n        }\r\n\r\n        this.init();\r\n    }\r\n    public reset() {\r\n        this.destroyCP();\r\n        this.init();\r\n    }\r\n    public init() {\r\n        const domRect = this.core.canvas.canvas.getBoundingClientRect();\r\n        this.domRect = domRect;\r\n        // console.log(this.core.canvas.canvas.style.left);\r\n        // console.log(domRect)\r\n\r\n        this.Controllers = [\r\n            new Controller(this, 0, domRect.x, domRect.y),\r\n            new Controller(this, 1, domRect.x + domRect.width, domRect.y),\r\n            new Controller(this, 2, domRect.x + domRect.width, domRect.y + domRect.height),\r\n            new Controller(this, 3, domRect.x, domRect.y + domRect.height),\r\n        ]\r\n    }\r\n    public distortPerspective(v: number) {\r\n        this.projection.distortPerspective(v);\r\n        this.renderForce();\r\n    }\r\n    public updateCaptured(x: number, y: number) {\r\n        this.id = -1;\r\n        for (let i = 0 ; i < this.Controllers.length; ++i) {\r\n            if (distance(x + this.domRect.x , y + this.domRect.y, this.Controllers[i].x, this.Controllers[i].y) < 50) {\r\n                this.id = this.Controllers[i].id;\r\n            }\r\n        }\r\n    }\r\n    public mouseDown(x: number, y: number) {\r\n        this.updateCaptured(x,y)\r\n        this.mPre = [x, y] \r\n    }\r\n    public mouseUp(x: number, y: number) {\r\n        this.id = -1;\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n        if (this.id > -1) {\r\n            const xOff = x - this.mPre[0];\r\n            const yOff = y - this.mPre[1];\r\n            this.Controllers[this.id].translation(xOff, yOff);\r\n            this.mPre = [x, y] \r\n        }\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        this.projection.renderDistortion(ctx, this.hostImg);\r\n    }\r\n    public renderForce() {\r\n        this.core.canvas.renderForce();\r\n    }\r\n    public destroyCP() {\r\n        try {\r\n            this.Controllers.forEach((e: Controller) => {\r\n                e.destroy();\r\n            });\r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { Canvas } from './Canvas';\r\nimport { Frame } from './Frame';\r\nimport { process_image } from '../lib/DominantColor';\r\nimport { RGB2HSL, HSL2RGB } from '../lib';\r\nimport { Renderer } from './Renderer';\r\nimport { ImageWrapper } from './ImageWrapper';\r\nimport { EventController } from './EventController';\r\nimport { Distort } from './Distort';\r\nimport { ExpreeImageTool } from '..';\r\n\r\n\r\nexport class Core {\r\n    public app: ExpreeImageTool;\r\n    public div: HTMLElement;\r\n\r\n    public imageWrapper: ImageWrapper;\r\n    public frame: Frame;\r\n    public renderer: Renderer;\r\n    public canvas: Canvas;\r\n    public controller: EventController;\r\n    public ctx: CanvasRenderingContext2D;\r\n    public img: HTMLImageElement;\r\n    public distort: Distort;\r\n\r\n    constructor(app: ExpreeImageTool) {\r\n        this.app = app;\r\n\r\n        this.initApp();\r\n        this.initCanvas();\r\n        this.importImage('https://raw.githubusercontent.com/NamjuLee/data/master/img/MITBuilding7_small.jpg');\r\n\r\n\r\n    }\r\n    private initApp() {\r\n        this.frame = new Frame(this);\r\n        this.renderer = new Renderer(this);\r\n        this.controller = new EventController(this);\r\n    }\r\n    private initCanvas() {\r\n        const div = document.createElement('div');\r\n        div.id = 'ExpressImageDivCanvas';\r\n        // div.style.width = '400px';\r\n        // div.style.height = '400px';\r\n        // div.style.margin = '50px';\r\n        div.style.overflow = 'hidden';\r\n        div.style.textAlign = 'center';\r\n        // div.style.backgroundColor = '#ff0000';\r\n        this.div = div;\r\n        this.app.div.append(this.div);\r\n\r\n        this.canvas = new Canvas(this, div);\r\n        this.canvas.render = (ctx: CanvasRenderingContext2D) => { this.renderer.render(ctx); };\r\n    }\r\n    public importImage(url: string) {\r\n        const image = new Image();\r\n        image.crossOrigin = 'anonymous';\r\n        image.src = url;\r\n        image.style.pointerEvents = 'none';\r\n        this.renderer.isCapture = false;\r\n        image.onload = () => {\r\n            this.imageWrapper = new ImageWrapper(this, image);\r\n\r\n            this.canvas.canvasOut.width = image.width;\r\n            this.canvas.canvasOut.height = image.height;\r\n\r\n            this.canvas.canvas.width = image.width;\r\n            this.canvas.canvas.height = image.height;\r\n\r\n            // this.div.style.width = image.width + 'px';\r\n            this.div.style.height = image.height + 'px';\r\n\r\n            this.img = image;\r\n\r\n            // console.log(image);\r\n            const result = process_image(image);\r\n            // console.log(result);\r\n\r\n            // // deSaturation\r\n            const colResult = [result[0][0], result[0][1], result[0][2]];\r\n            let hls0 = RGB2HSL(colResult[0], colResult[1], colResult[2]);\r\n            let hls1 = [...hls0];\r\n\r\n\r\n            // console.log(hls);\r\n            hls0[0] += 0.0; // Hue;\r\n            hls0[1] += -0.05; // Saturation;\r\n            if (hls0[1] < 0) { hls0[1] = 0; }\r\n            hls0[2] += 0.0; // Lightness;\r\n            let col0 = HSL2RGB(hls0[0], hls0[1], hls0[2]);\r\n            // console.log('col0', col0);\r\n            this.app.div.style.backgroundColor = `rgb(${col0[0]},${col0[1]},${col0[2]})`;\r\n\r\n            this.app.ui.updateStyle(col0[0], col0[1], col0[2]);\r\n            this.app.divHost.style.backgroundColor = `rgb(${col0[0]},${col0[1]},${col0[2]})`;\r\n\r\n            hls1[0] += 0.0; // Hue;\r\n            hls1[1] += 0.0; // Saturation;\r\n            if (hls1[1] < 0) { hls1[1] = 0; }\r\n            hls1[2] += -0.02; // Lightness;\r\n            let col1 = HSL2RGB(hls1[0], hls1[1], hls1[2]);\r\n            // console.log('col1', col1);\r\n            this.frame.updateColorBG(col1[0], col1[1], col1[2]);\r\n\r\n            this.frame.InitFrame();\r\n\r\n\r\n            this.renderer.isCapture = true;\r\n            this.canvas.renderForce();\r\n\r\n            this.distort = new Distort(this);\r\n        };\r\n    }\r\n}","import { ExpreeImageTool } from '..';\r\nexport class UI {\r\n    public expreeImageTool: ExpreeImageTool;\r\n    public divUI: HTMLElement;\r\n\r\n    public divSizeFrameBG: HTMLElement;\r\n    public divWidth: HTMLInputElement;\r\n    public divHeight: HTMLInputElement;\r\n\r\n    constructor(expreeImageTool: ExpreeImageTool) {\r\n        this.expreeImageTool = expreeImageTool;\r\n\r\n        const txt = document.createElement('p');\r\n        txt.textContent = 'Image Distortion';\r\n        txt.style.fontSize = '12px;';\r\n        txt.style.color = '#afafaf';\r\n        txt.style.position = 'absolute';\r\n        txt.style.top = '0px';\r\n        txt.style.left = '20px';\r\n        this.expreeImageTool.divHost.append(txt);\r\n\r\n        const divUI = document.createElement('div') as HTMLElement;\r\n        this.divUI = divUI;\r\n        this.divUI.style.width = '100%';\r\n        this.divUI.style.height = '100px';\r\n        this.divUI.style.backgroundColor = 'rgba(0,0,0,0)';\r\n        this.expreeImageTool.divHost.append(this.divUI);\r\n    }\r\n    public updateStyle(r: number, g: number, b: number) {\r\n        this.divSizeFrameBG.style.backgroundColor = `rgb(${r},${b},${g})`;\r\n    }\r\n    public initPost() {\r\n\r\n        this.divSizeFrameBG = document.createElement('div');\r\n        this.divSizeFrameBG.style.textAlign = 'center';\r\n        this.divSizeFrameBG.style.backgroundColor = '#afafaf';\r\n        this.divSizeFrameBG.style.padding = '10px';\r\n        this.divSizeFrameBG.textContent = 'Size ';\r\n\r\n\r\n        this.divWidth = document.createElement('input');\r\n        this.divWidth.style.width = '50px';\r\n        this.divWidth.setAttribute('type', 'text');\r\n        this.divWidth.setAttribute('min', '100');\r\n        // this.divWidth.setAttribute('max', '500');\r\n        // this.divWidth.setAttribute('value', '300');\r\n        this.divSizeFrameBG.append(this.divWidth);\r\n        this.divWidth.oninput = () => {\r\n            const value = Number.parseFloat(this.divWidth.value);\r\n            if (value) {\r\n                this.expreeImageTool.core.controller.updateWidthByInput(value);\r\n            }\r\n        };\r\n\r\n        this.divHeight = document.createElement('input');\r\n        this.divHeight.style.width = '50px';\r\n        this.divHeight.setAttribute('type', 'text');\r\n        this.divHeight.setAttribute('min', '100');\r\n        // this.divHeight.setAttribute('max', '50');\r\n        // this.divHeight.setAttribute('value', '10');\r\n        this.divSizeFrameBG.append(this.divHeight);\r\n        this.divHeight.oninput = () => {\r\n            const value = Number.parseFloat(this.divHeight.value);\r\n            if (value) {\r\n                this.expreeImageTool.core.controller.updateHeightByInput(value);\r\n            }\r\n        };\r\n\r\n        this.divUI.append(this.divSizeFrameBG);\r\n\r\n\r\n        let btn = document.createElement('button');\r\n        btn.textContent = 'Reset';\r\n        this.divUI.append(btn);\r\n        btn.onclick = () => {\r\n            // console.log('play.....');\r\n            this.expreeImageTool.core.controller.reset();\r\n        };\r\n\r\n\r\n        btn = document.createElement('button');\r\n        btn.textContent = 'Download';\r\n        this.divUI.append(btn);\r\n        btn.onclick = () => {\r\n            // console.log('play.....');\r\n            this.expreeImageTool.core.controller.downloadImage();\r\n        };\r\n\r\n\r\n        btn = document.createElement('button');\r\n        btn.textContent = 'Capture';\r\n        this.divUI.append(btn);\r\n        btn.onclick = () => {\r\n            const img = this.expreeImageTool.core.canvas.capture();\r\n            // console.log(img);\r\n            this.divUI.append(img);\r\n        };\r\n\r\n\r\n        let slider = document.createElement('input');\r\n        slider.type = 'range';\r\n        slider.min = '-3.13';\r\n        slider.max = '3.13';\r\n        slider.step = '0.01';\r\n        slider.value = '0';\r\n        slider.oninput = () => {\r\n            // console.log(slider.value);\r\n            // this.expreeImageTool.core.distort.distortPerspective(+slider.value);\r\n        };\r\n        this.divUI.append(slider);\r\n\r\n\r\n        const divURL = document.createElement('input');\r\n        // divURL.textContent = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/building%20footprint.png';\r\n        divURL.setAttribute('type', 'text');\r\n        divURL.setAttribute('value', 'https://raw.githubusercontent.com/NamjuLee/data/master/img/building%20footprint.png');\r\n        this.divUI.append(divURL);\r\n        divURL.oninput = (input) => {\r\n            this.expreeImageTool.core.controller.reset();\r\n            this.expreeImageTool.core.importImage(divURL.textContent as string);\r\n        };\r\n        divURL.addEventListener('keyup', (event: KeyboardEvent) => {\r\n            if (event.keyCode === 13) { // Enter\r\n                event.preventDefault();\r\n                this.expreeImageTool.core.controller.reset();\r\n                this.expreeImageTool.core.importImage(divURL.value as string);\r\n            }\r\n        });\r\n        btn = document.createElement('button');\r\n        btn.textContent = '<';\r\n        this.divUI.append(btn);\r\n        btn.onclick = () => {\r\n            this.expreeImageTool.core.distort.distortPerspective(-5);\r\n        };\r\n\r\n        btn = document.createElement('button');\r\n        btn.textContent = '>';\r\n        this.divUI.append(btn);\r\n        btn.onclick = () => {\r\n            this.expreeImageTool.core.distort.distortPerspective(5);\r\n        };\r\n\r\n        btn = document.createElement('button');\r\n        btn.textContent = 'Reset';\r\n        this.divUI.append(btn);\r\n        btn.onclick = () => {\r\n            this.expreeImageTool.core.distort.reset();\r\n        };\r\n\r\n        // var x = document.createElement('INPUT');\r\n        // x.setAttribute('type', 'text');\r\n        // x.setAttribute('value', 'Hello World!');\r\n\r\n        let divTitle = document.createElement('div');\r\n        divTitle.textContent = 'Offset: ';\r\n        divTitle.style.padding = '10px';\r\n\r\n        let divInput = document.createElement('input');\r\n        divInput.style.width = '30px';\r\n        divInput.setAttribute('type', 'text');\r\n        divInput.setAttribute('min', '-50');\r\n        divInput.setAttribute('max', '50');\r\n        divInput.setAttribute('value', '10');\r\n\r\n        // divInput.\r\n        // divInput.setAttribute('min', '10');\r\n        divTitle.append(divInput);\r\n        this.divUI.append(divTitle);\r\n        divInput.addEventListener('keyup', (event: KeyboardEvent) => {\r\n            if (event.keyCode === 13) { // Enter\r\n                event.preventDefault();\r\n                console.log('divInput.value', divInput.value);\r\n\r\n                let value = Number.parseFloat(divInput.value);\r\n\r\n                this.expreeImageTool.core.controller.offsetByInput(value);\r\n                // console.log(value);\r\n                // if(divInput.value.includes('-')) {\r\n                //     console.log('-', divInput.value.includes('-'));\r\n\r\n                //     this.expreeImageTool.core.controller.offsetByInput(Number.parseFloat(divInput.value) * -1);\r\n                // } else {\r\n                //     this.expreeImageTool.core.controller.offsetByInput(Number.parseFloat(divInput.value));\r\n                //     console.log('+', divInput.value.includes('-'));\r\n                // }\r\n            }\r\n        });\r\n\r\n\r\n        // let divRatio = document.createElement('div');\r\n        // divRatio.textContent = 'ddddd: ';\r\n        // divRatio.style.padding = '10px';\r\n        // this.divUI.append(divRatio)\r\n\r\n        btn = document.createElement('button');\r\n        btn.textContent = 'dd';\r\n        // btn.style.float = 'left';\r\n        this.divUI.append(btn);\r\n        btn.onclick = () => {\r\n            const img = this.expreeImageTool.core.canvas.capture();\r\n            // console.log(img);\r\n            this.divUI.append(img);\r\n        };\r\n        // // .............................................\r\n        // divTitle = document.createElement('div');\r\n        // // divTitle.style.float =\r\n        // // divTitle.textContent = 'Offset: '\r\n\r\n        // let divText= document.createElement('div');\r\n        // divText.textContent = 'x: ';\r\n        // divText.style.padding = '10px';\r\n        // divTitle.append(divText);\r\n\r\n        // divInput = document.createElement('input');\r\n        // // divInput.style.borderLeft = '10px';\r\n        // divInput.setAttribute('type', 'text');\r\n        // divInput.setAttribute('value', '5');\r\n        // divTitle.append(divInput);\r\n        // this.divUI.append(divTitle);\r\n        // divInput.addEventListener('keyup', (event: KeyboardEvent) => {\r\n        //     if (event.keyCode === 13) { // Enter\r\n        //         event.preventDefault();\r\n        //         this.expreeImageTool.core.controller.offsetByInput(+divInput.value);\r\n        //     }\r\n        // });\r\n\r\n        // divInput = document.createElement('input');\r\n        // divInput.style.borderLeft = '10px';\r\n        // divInput.setAttribute('type', 'text');\r\n        // divInput.setAttribute('value', '5');\r\n        // this.divUI.append(divInput);\r\n        // divInput.addEventListener('keyup', (event: KeyboardEvent) => {\r\n        //     if (event.keyCode === 13) { // Enter\r\n        //         event.preventDefault();\r\n        //         this.expreeImageTool.core.controller.offsetByInput(+divInput.value);\r\n        //     }\r\n        // });\r\n\r\n    }\r\n}\r\n","import { Core }from './Core';\r\nimport { UI } from './UI';\r\n\r\nexport interface IImageEditorParam {\r\n    id: string;\r\n    ui?: boolean;\r\n    colorCover?: string;\r\n}\r\nexport class ExpreeImageTool {\r\n\r\n    public core: Core;\r\n    public ui: UI;\r\n    public divHost: HTMLElement;\r\n    public div: HTMLElement;\r\n    public param: IImageEditorParam;\r\n\r\n    constructor(param: IImageEditorParam) {\r\n        this.param = param;\r\n        const divHost = document.getElementById(this.param.id);\r\n        const div = document.createElement('div');\r\n        if (divHost && div) {\r\n            this.div = div;\r\n            this.div.id = 'ImageDistortion';\r\n            this.div.style.padding = '50px';\r\n\r\n            this.divHost = divHost;\r\n            this.divHost.append(this.div);\r\n            // this.divHost.style.padding = '50px';\r\n\r\n            if (this.param.ui === undefined) {\r\n                this.param.ui = true;\r\n            }\r\n\r\n            if (this.param.ui) {\r\n                // console.log(this.param.ui);\r\n                this.ui = new UI(this);\r\n                this.ui.initPost();\r\n            }\r\n\r\n            this.core = new Core(this);\r\n            // template for the style of canvas\r\n            // this.core.canvs.div.style.margin = '50px';\r\n            // this.core.canvs.div.style.padding = '50px';\r\n\r\n        }\r\n    }\r\n    public Dummy() {\r\n        //\r\n    }\r\n}\r\n","import { ExpreeImageTool, IImageEditorParam } from './ExpreeImageTool';\r\nexport class Demo510ImageTool {\r\n    expreeImageTool: ExpreeImageTool;\r\n    static Init(id: string) {\r\n        const parma: IImageEditorParam = {\r\n            id: id,\r\n            // ui: true,\r\n            colorCover: '#ff0000',\r\n        };\r\n        const n = new Demo510ImageTool(parma);\r\n        n.Dummy();\r\n    }\r\n    constructor(parma: IImageEditorParam) {\r\n        this.expreeImageTool = new ExpreeImageTool(parma);\r\n    }\r\n    public Dummy() {\r\n        // TODO\r\n    }\r\n}\r\n\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n\r\n    constructor(id: string ) {\r\n        this.divHost = document.getElementById(id);\r\n\r\n        Demo510ImageTool.Init(id)\r\n    }\r\n    public destroy() {\r\n        if (this.divHost) {\r\n            try {\r\n                while (this.divHost.firstChild) {\r\n                    this.divHost.removeChild(this.divHost.firstChild);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error in destroy method:', error);\r\n            }\r\n        } else {\r\n            console.warn('divHost is undefined in destroy method');\r\n        }\r\n    }\r\n}"],"names":["Canvas","constructor","core","div","canvas","ctx","isActive","log","isViewChanging","loopNum","needRenderloop","ablePan","mousePre","canvasOut","ctxOut","loopNeeded","this","init","loopInit","document","createElement","width","clientWidth","height","clientHeight","append","style","border","getContext","app","divHost","initEvent","addEventListener","k","e","controller","mouseInteraction","mouseDown","mouseUp","mouseMove","mouseWheel","deltaY","mouseOut","t","touchInteraction","touchstart","touchmove","touchcancel","touchend","capture","img","Image","crossOrigin","src","toDataURL","loop","resize","requestAnimationFrame","before","performance","now","renderPre","after","toFixed","clear","clearRect","renderForce","render","renderVertex","x","y","r","beginPath","arc","angle","closePath","strokeStyle","fillStyle","fill","stroke","PUSH_ACTION","ENGINE","RGB2HSL","g","b","max","Math","min","h","s","l","d","HSL2RGB","hue2rgb","pp","qq","q","p","round","Renderer","frame","_opacity","_t","_strokeStyle","_fillStyleRuntime","_fillStyle","_fillStyleHover","_sizePoint","_sizeMidPoint","sizePoint","sizeMidPoint","updateColorBG","ColorInterpolation","isHover","rect","renderPost","lineWidth","lineDashOffset","setLineDash","i","moveTo","xOffGuid","lineTo","yOffGuid","idHover","cpList","sin","length","col","c0","c1","interpolation","cOut","c","push","linearColorInterpolation","CP_TYPE","FramePreset","ControlPoint","id","type","update","isHoverCheck","x0","y0","x1","y1","sqrt","Endpoint","Midpoint","renderer","Transform","offsetByID","xOff","yOff","updateGuides","cv","Interaction","idSelected","idCP","Frame","transform","interaction","framePreset","widthMin","heightMin","param","colorCover","setRatio","v","InitFrame","floor","updateUIWidthHeight","translate","ui","divWidth","value","divHeight","KNNColor","_ncols","_k","_minDiff","ncols","minDiff","clusters","rnd","getRandomBySeed","seen","idx","found","cluster","Cluster","safeguard","plists","j","smallest_distance","Number","MAX_VALUE","distance","euclidean","key","diff","old","center","calculateCenter","newCluster","values","dist","isNaN","p1","p2","pow","cols","n","cenCol","NColor","_key","_Value","getKey","_r","_g","_b","seed","undefined","isCapture","save","mat","DOMMatrix","xPos","yPos","xPosRatio","yPosRatio","console","setTransform","rotate","rotationRadian","scale","zoomLevel","drawImage","restore","distort","captureImage","op","xx","touchPre","yy","isDrag","updateCanvasCapture","ImageWrapper","TouchInteraction","down","zoom","getBoundingClientRect","evX","targetTouches","pageX","left","evY","pageY","top","touchStartRotation","touchStartScale","pointDown","preventDefault","rotationByTouch","scaleByTouch","pointDrag","pointUp","MouseInteraction","offsetX","offsetY","isDown","pointMove","pointOut","CURSOR","ActiveCursor","default","cursor","Default","body","auto","Auto","creating","Crosshair","dragging","Move","hovering","Pointer","texting","Text","set_e_resize","EResize","set_ne_resize","NEResize","set_ns_resize","NSResize","set_nw_resize","NWResize","EventController","activeCursor","scalePre","anglePre","mouseDragRect","mouseDragPan","pan","import","url","reset","destroyCP","updateWidthByInput","imageWrapper","updateSizeByInputPost","updateHeightByInput","offsetByInput","updateCursor","postUpdate","downloadImage","a","href","download","appendChild","click","removeChild","t0","t1","clientY","atan2","clientX","theAngle","Controller","dom","move","translation","parseInt","destroy","parentElement","ProjectionBase","distortPerspective","Controllers","renderDistortion","Projection","super","corners","xSum","ySum","domRect","hostImg","w","hosCanvas","drawTriangle","s1","s2","s3","d1","d2","d3","d1x","d2x","d3x","expandTriangle","s1x","s2x","s3x","xm","linearSolution","ym","clip","drawImageTriangle","extendPoint","inCir","dffset","dx","dy","A","B","C","offset","incircle","getInnerCircle","factor","cx","cy","Float32Array","r1","r2","t2","r3","t3","ProjectionSubdiv","DISTORTION_TYPE","Distort","Subdivision","projection","hostDiv","mPre","updateCaptured","forEach","error","Core","initApp","initCanvas","importImage","overflow","textAlign","image","pointerEvents","onload","result","points","data","getImageData","results","hex","process_image","colResult","hls0","hls1","col0","backgroundColor","updateStyle","col1","UI","expreeImageTool","divUI","divSizeFrameBG","txt","textContent","fontSize","color","position","initPost","padding","setAttribute","oninput","parseFloat","btn","onclick","slider","step","divURL","input","event","keyCode","divTitle","divInput","ExpreeImageTool","getElementById","Dummy","Demo510ImageTool","static","parma","Solution","Init","firstChild","warn"],"sourceRoot":""}