{"version":3,"file":"static/js/62971.3a50b3a8.chunk.js","mappings":"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","sources":["njslab/Tools/RaytracerScene/index.ts"],"sourcesContent":["import { RendererCanvas, Vector3, normalize, crossProduct, distanceEuclidean, reflect, dotProduct } from '../../../lib'\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n    constructor(id: string) {\r\n        this.divHost = document.getElementById(id)\r\n\r\n        // Center align\r\n        this.divHost.style.display = 'flex';\r\n        this.divHost.style.alignItems = 'center';\r\n\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#000';\r\n        div.style.width = '1000px';\r\n        div.style.height = '600px';\r\n\r\n        this.divHost.appendChild(div);\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.renderer = new Renderer(div);\r\n\r\n        let btn = document.createElement('div');\r\n        btn.style.paddingTop = '5px';\r\n        btn.style.paddingBottom = '5px';\r\n        div.appendChild(btn);\r\n        btn.textContent = 'Click twice in different locations to build a wall';\r\n\r\n        const sl2 = getSlider('bounces', 2, 200);\r\n        div.appendChild(sl2.div);\r\n        sl2.slider.oninput = () => {\r\n            this.renderer.updateIter(+sl2.slider.value)\r\n        };\r\n\r\n        const cBox = getCheckBox('Ray Direction');\r\n        div.appendChild(cBox.div);\r\n        cBox.checkBox.checked = false;\r\n        cBox.checkBox.onchange = () => {\r\n            // console.log(cBox.checkBox.checked)\r\n            if (cBox.checkBox.checked === true) {\r\n                this.renderer.isRayDirection = true;\r\n            } else {\r\n                this.renderer.isRayDirection = false;\r\n            }\r\n        }\r\n\r\n        const cBoxLine = getCheckBox('Line');\r\n        div.appendChild(cBoxLine.div);\r\n        cBoxLine.checkBox.checked = true;\r\n        cBoxLine.checkBox.onchange = () => {\r\n            // console.log(cBoxLine.checkBox.checked)\r\n            if (cBoxLine.checkBox.checked === true) {\r\n                this.renderer.isLineRenderer = true;\r\n            } else {\r\n                this.renderer.isLineRenderer = false;\r\n            }\r\n            this.renderer.updateIter(this.renderer.iter);\r\n        }\r\n\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\n\r\nexport class Renderer extends RendererCanvas {\r\n\r\n    walls: Wall[] = [];\r\n    sun: Sun;\r\n    t: number = 0.0;\r\n    iter = 10;\r\n    isRayDirection = false;\r\n    isLineRenderer = true;\r\n    private p0: Vector3 | undefined = undefined;\r\n    constructor(div: any) {\r\n        super(div);\r\n        this.canvas.style.position = 'relative';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n\r\n\r\n        this.sun = new Sun(new Vector3(300, 100, 0));\r\n        this.walls.push(new Wall(50, 200, 400, 500))\r\n        this.walls.push(new Wall(100, 500, 500, 600))\r\n        this.walls.push(new Wall(500, 100, 400, 400))\r\n        this.walls.push(new Wall(50, 100, 600, 50))\r\n        this.walls.push(new Wall(500, 600, 600, 50))\r\n        this.walls.push(new Wall(50, 100, 50, 300))\r\n        this.walls.push(new Wall(50, 300, 100, 500))\r\n\r\n        this.start();\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n        if (this.p0) {\r\n            this.walls.push(new Wall(this.p0.x, this.p0.y, x, y));\r\n            this.p0 = undefined;\r\n            this.updateIter(this.iter);\r\n            return;\r\n        }\r\n\r\n        if (this.p0 === undefined) {\r\n            this.p0 = new Vector3(x, y);\r\n            return;\r\n        }\r\n    }\r\n    public mouseMove(x: number, y: number): void {\r\n        if (this.isRayDirection) {\r\n            this.sun.updateDirection(x, y);\r\n            this.isStatic = false;\r\n            this.loop(this.ctx);\r\n        }\r\n    }\r\n    public updateIter(iter) {\r\n        this.iter = iter;\r\n        this.isStatic = false;\r\n        this.loop(this.ctx);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        this.t += 0.01;\r\n        this.update(ctx);\r\n\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.strokeStyle = '#ffffff';\r\n\r\n        this.walls.forEach((w) => { w.draw(ctx); });\r\n        this.sun.draw(ctx, this.t);\r\n\r\n        this.isStatic = true;\r\n    }\r\n    public update(ctx: CanvasRenderingContext2D) {\r\n\r\n        const sun = this.sun.getSunLine();\r\n\r\n\r\n        const pts = computeInter(sun, this.walls, this.iter)\r\n\r\n        ctx.lineWidth = 0.5\r\n        for (let i = 0; i < pts.length; ++i) {\r\n            const p = pts[i];\r\n            ctx.beginPath();\r\n            ctx.arc(p.x, p.y, 5, 0, Math.PI * 2.);\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n        }\r\n\r\n        ctx.globalCompositeOperation = 'multiply';\r\n\r\n        if (this.isLineRenderer) {\r\n            ctx.lineWidth = 10\r\n            if (pts.length > 0) {\r\n                ctx.strokeStyle = `rgba(255, 0, 0, ${1})`;\r\n                ctx.beginPath();\r\n                ctx.moveTo(this.sun.v.x, this.sun.v.y)\r\n                ctx.lineTo(pts[0].x, pts[0].y)\r\n                ctx.stroke();\r\n                for (let i = 0; i < pts.length - 1; i++) {\r\n                    const o = 1.0 - i / pts.length;\r\n                    // console.log(o)\r\n                    ctx.strokeStyle = `rgba(255, 0, 0, ${o})`;\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(pts[i].x, pts[i].y)\r\n                    ctx.lineTo(pts[i + 1].x, pts[i + 1].y)\r\n                    ctx.stroke();\r\n                }\r\n            }\r\n        } else {\r\n            if (pts.length > 0) {\r\n                const vs = []\r\n                vs.push(...getVecsBetweenVecsByDis(this.sun.v, pts[0], 20));\r\n                for (let i = 0; i < pts.length - 1; i++) {\r\n                    vs.push(...getVecsBetweenVecsByDis(pts[i], pts[1+i], 20));\r\n                }\r\n                for (let i = 0; i < vs.length; ++i) {\r\n                    const p = vs[i];\r\n                    const o = 1.0 - i / vs.length;\r\n                    ctx.fillStyle = `rgba(255, 0, 0, ${o})`;\r\n                    ctx.beginPath();\r\n                    ctx.arc(p.x, p.y, 5, 0, Math.PI * 2.);\r\n                    ctx.closePath();\r\n                    ctx.fill();\r\n                }\r\n            }\r\n    \r\n        }\r\n \r\n\r\n\r\n    }\r\n}\r\nconst computeInter = (ray, walls, iter = 1000) => {\r\n\r\n    let pts = []\r\n\r\n    for (let j = 0; j < iter; ++j) {\r\n        let theDis = 10000\r\n        let theP;\r\n        let wallNext;\r\n\r\n        for (let i = 0; i < walls.length; ++i) {\r\n            const wall = walls[i];\r\n            const p = checkIntersection(ray.p0.x, ray.p0.y, ray.p1.x, ray.p1.y, wall.p0.x, wall.p0.y, wall.p1.x, wall.p1.y);\r\n            if (p !== undefined) {\r\n\r\n                const dis = distanceEuclidean(ray.p0.x, ray.p0.y, 0, p.x, p.y, 0);\r\n                if (dis > 10 && dis < theDis) {\r\n\r\n                    theP = p;\r\n                    wallNext = wall;\r\n                    theDis = dis;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (theP !== undefined) {\r\n            const rayVec = new Vector3(ray.p1.x - ray.p0.x, ray.p1.y - ray.p0.y, 0)\r\n            // console.log(rayVec, wallNext.nVec)\r\n            const rayBound = reflect(rayVec, wallNext.nVec)\r\n\r\n            ray = {\r\n                p0: theP,\r\n                p1: {\r\n                    x: theP.x + rayBound.x,\r\n                    y: theP.y + rayBound.y\r\n                }\r\n            }\r\n            // console.log(j , theP.x, rayBound.x);\r\n            pts.push(theP)\r\n\r\n        }\r\n\r\n        // console.log(j);\r\n\r\n    }\r\n    // console.log(pts);\r\n    return pts\r\n\r\n}\r\n\r\nconst getVecsBetweenVecsByDis = (v0: Vector3, v1: Vector3, dis: number) => {\r\n    const x = v1.x - v0.x;\r\n    const y = v1.y - v0.y;\r\n    const z = v1.z - v0.z;\r\n    const nv = new Vector3(x, y, z);\r\n    const num = nv.length() / dis\r\n    nv.normalize();\r\n    \r\n    const vs = [];\r\n    for(let i = 0 ; i < num; ++i) {\r\n        const v = new Vector3(v0.x + nv.x * dis * i, v0.y + nv.y * dis * i, v0.z + nv.z * dis * i);\r\n        vs.push(v);\r\n    }\r\n    return vs;\r\n}\r\n\r\n\r\n\r\nclass Sun {\r\n    v: Vector3;\r\n    target = new Vector3(0, 0, 0);\r\n    rayVec = new Vector3(0, 0, 0);;\r\n    constructor(v: Vector3) {\r\n        this.v = v;\r\n        this.updateDirection(300, 300);\r\n    }\r\n    draw(ctx: CanvasRenderingContext2D, t: number) {\r\n        ctx.lineWidth = 0.1;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.v.x, this.v.y);\r\n        ctx.lineTo(this.target.x, this.target.y);\r\n        ctx.stroke();\r\n\r\n        ctx.lineWidth = 0.5;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.v.x, this.v.y);\r\n        ctx.lineTo(this.v.x + this.rayVec.x * 50, this.v.y + this.rayVec.y * 50);\r\n        ctx.stroke();\r\n\r\n        ctx.fillStyle = '#FDB813'\r\n        ctx.beginPath();\r\n        ctx.arc(this.v.x, this.v.y, Math.sin(20 * t) + 12, 0, Math.PI * 2);\r\n        ctx.fill();\r\n    }\r\n    updateDirection(x: number, y: number) {\r\n        this.target.x = x;\r\n        this.target.y = y;\r\n\r\n        this.rayVec.x = this.v.x + this.target.x;\r\n        this.rayVec.y = this.v.y + this.target.y;\r\n\r\n        this.rayVec.x = this.target.x - this.v.x;\r\n        this.rayVec.y = this.target.y - this.v.y;\r\n\r\n        // this.rayVec = normalize(this.rayVec);\r\n    }\r\n    getSunLine() {\r\n        return {\r\n            p0: this.v,\r\n            p1: new Vector3(this.v.x + this.rayVec.x * 1000, this.v.y + this.rayVec.y * 1000)\r\n        }\r\n    }\r\n}\r\n\r\nclass Wall {\r\n    p0: Vector3;\r\n    p1: Vector3;\r\n    nVec: Vector3;\r\n    constructor(x0, y0, x1, y1) {\r\n        this.p0 = new Vector3(x0, y0);\r\n        this.p1 = new Vector3(x1, y1);\r\n        this.computeNormal();\r\n    }\r\n    draw(ctx: CanvasRenderingContext2D) {\r\n        ctx.lineWidth = 5;\r\n        ctx.strokeStyle = '#ffffff';\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0.x, this.p0.y);\r\n        ctx.lineTo(this.p1.x, this.p1.y);\r\n        ctx.stroke();\r\n    }\r\n    computeNormal() {\r\n        const dir = new Vector3(this.p1.x - this.p0.x, this.p1.y - this.p0.y, 0)\r\n        this.nVec = crossProduct(dir, new Vector3(0, 0, 1));\r\n        this.nVec = normalize(this.nVec);\r\n    }\r\n}\r\n\r\nexport const pointOnSegment2D = (px: number, py: number, x0: number, y0: number, x1: number, y1: number) => {\r\n    if (x0 !== x1) {\r\n        if (x0 <= px && px <= x1) { return true; }\r\n        if (x0 >= px && px >= x1) { return true; }\r\n    } else {\r\n        if (y0 <= py && py <= y1) { return true; }\r\n        if (y0 >= py && py >= y1) { return true; }\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const checkIntersection = (x1: number, y1: number, x2: number, y2: number, x3: number, y3: number, x4: number, y4: number) => {\r\n    const denom = ((y4 - y3) * (x2 - x1)) - ((x4 - x3) * (y2 - y1));\r\n    const numeA = ((x4 - x3) * (y1 - y3)) - ((y4 - y3) * (x1 - x3));\r\n    const numeB = ((x2 - x1) * (y1 - y3)) - ((y2 - y1) * (x1 - x3));\r\n\r\n    if (denom === 0) {\r\n        if (numeA === 0 && numeB === 0) {\r\n            return undefined // COLINEAR;\r\n        }\r\n        return undefined // PARALLEL;\r\n    }\r\n\r\n    const uA = numeA / denom;\r\n    const uB = numeB / denom;\r\n\r\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\r\n        return ({\r\n            x: x1 + (uA * (x2 - x1)),\r\n            y: y1 + (uA * (y2 - y1)),\r\n            z: 0\r\n        });\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\nconst getSlider = (title: string, min: number, max: number) => {\r\n    // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const slider = document.createElement('input');\r\n    slider.type = 'range';\r\n    slider.min = `${min}`;\r\n    slider.max = `${max}`;\r\n\r\n    const text = document.createElement('div');\r\n    text.textContent = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(slider);\r\n    div.appendChild(text);\r\n\r\n    return {\r\n        div, slider\r\n    }\r\n};\r\n\r\nconst getCheckBox = (title: string) => {\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const checkBox = document.createElement('input');\r\n    checkBox.type = 'checkbox';\r\n    checkBox.defaultChecked = false;\r\n    const text = document.createElement('div');\r\n    text.textContent = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(checkBox);\r\n    div.appendChild(text);\r\n\r\n    return {\r\n        div, checkBox\r\n    }\r\n};"],"names":["Solution","constructor","id","divHost","renderer","this","document","getElementById","style","display","alignItems","div","createElement","marginLeft","marginRight","backgroundColor","width","height","appendChild","Renderer","btn","paddingTop","paddingBottom","textContent","sl2","getSlider","slider","oninput","updateIter","value","cBox","getCheckBox","checkBox","checked","onchange","isRayDirection","cBoxLine","isLineRenderer","iter","destroy","lastElementChild","removeChild","RendererCanvas","super","walls","sun","t","p0","undefined","canvas","position","Sun","Vector3","push","Wall","start","mouseClick","x","y","mouseMove","updateDirection","isStatic","loop","ctx","render","update","globalCompositeOperation","strokeStyle","forEach","w","draw","getSunLine","pts","computeInter","lineWidth","i","length","p","beginPath","arc","Math","PI","closePath","stroke","moveTo","v","lineTo","o","vs","getVecsBetweenVecsByDis","fillStyle","fill","ray","j","theP","wallNext","theDis","wall","checkIntersection","p1","dis","distanceEuclidean","rayVec","rayBound","reflect","nVec","v0","v1","z","nv","num","normalize","target","sin","x0","y0","x1","y1","computeNormal","dir","crossProduct","pointOnSegment2D","px","py","x2","y2","x3","y3","x4","y4","denom","numeA","numeB","uA","uB","title","min","max","type","text","color","defaultChecked"],"sourceRoot":""}