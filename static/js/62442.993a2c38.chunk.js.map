{"version":3,"file":"static/js/62442.993a2c38.chunk.js","mappings":"2JAIO,MAAMA,UAAiBC,EAAAA,GAE1BC,YAAYC,GACRC,MAAMC,SAASC,eAAeH,IAK9BI,KAAKC,OACT,CACOC,OAAOC,GAKVA,EAAIC,YACJD,EAAIE,IAAuB,GAAnBF,EAAIG,OAAOC,MAAiC,GAApBJ,EAAIG,OAAOE,OAAc,IAAK,EAAa,EAAVC,KAAKC,IACtEP,EAAIQ,YACJR,EAAIS,UAAY,OAChBT,EAAIU,OAEJ,MAAMC,EAA0B,GAAnBX,EAAIG,OAAOC,MAClBQ,EAA2B,GAApBZ,EAAIG,OAAOE,OACxB,IAAIQ,EAAa,CACb,CAACF,EAAMC,EAAO,IAAK,KACnB,CAACD,EAAO,IAAKC,EAAO,IAAK,GACzB,CAACD,EAAO,IAAKC,EAAO,IAAK,KAIzB,SAAEE,EAAQ,MAAEC,IAAUC,EAAAA,EAAAA,IAAmBH,EAAY,EAAG,EAAG,EAAG,GAClEb,EAAIiB,UAAY,EAChBjB,EAAIkB,YAAc,OAClB,IAAI,IAAIC,EAAI,EAAIA,EAAIJ,EAAMK,SAAUD,EAAG,CACnCnB,EAAIC,YACJ,IAAIoB,EAAKP,EAASC,EAAMI,GAAG,IACvBG,EAAKR,EAASC,EAAMI,GAAG,IACvBI,EAAKT,EAASC,EAAMI,GAAG,IAC3BnB,EAAIwB,OAAOH,EAAG,GAAIA,EAAG,IACrBrB,EAAIyB,OAAOH,EAAG,GAAIA,EAAG,IACrBtB,EAAIyB,OAAOF,EAAG,GAAIA,EAAG,IACrBvB,EAAIyB,OAAOJ,EAAG,GAAIA,EAAG,IACrBrB,EAAIQ,YACJR,EAAI0B,QACR,CAMJ,CACOC,UAAUC,EAAWC,GACxB,CAEGC,QAAQF,EAAWC,GACtB,CAEGE,UAAUH,EAAWC,GACxB,CAEGG,WAAWJ,EAAWC,GACzB,CAEGI,UAAUL,EAAWC,GACxB,CAEGK,QAAQC,GACX,E","sources":["njslab/LabStarter/Starter-canvas/index.ts"],"sourcesContent":["import { RendererCanvas } from '../../../lib';\r\n\r\nimport { tessellateTriangle, Vector3 } from '../../../lib/NJSCore';\r\n\r\nexport class Solution extends RendererCanvas {\r\n\r\n    constructor(id: string) {\r\n        super(document.getElementById(id) as HTMLDivElement);\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        // !! you should execute it for rendering\r\n        this.start();\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5, 300, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fillStyle = '#fff';\r\n        ctx.fill()\r\n\r\n        const cenX = ctx.canvas.width * 0.5;\r\n        const cenY = ctx.canvas.height * 0.5;\r\n        let myTriangle = [\r\n            [cenX, cenY + 150, 500] as Vector3,\r\n            [cenX - 150, cenY - 150, 0] as Vector3,\r\n            [cenX + 150, cenY - 150, 0] as Vector3,\r\n        ];\r\n        \r\n        // @ts-ignore\r\n        let { vertices, faces } = tessellateTriangle(myTriangle, 2, 3, 4, 3);\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#eee';\r\n        for(let i = 0 ; i < faces.length; ++i) {\r\n            ctx.beginPath();\r\n            let v0 = vertices[faces[i][0]]\r\n            let v1 = vertices[faces[i][1]]\r\n            let v2 = vertices[faces[i][2]]\r\n            ctx.moveTo(v0[0], v0[1])\r\n            ctx.lineTo(v1[0], v1[1])\r\n            ctx.lineTo(v2[0], v2[1])\r\n            ctx.lineTo(v0[0], v0[1])\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n        }\r\n        //   console.log(vertices);\r\n\r\n\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n        // TODO\r\n    }\r\n    public mouseUp(x: number, y: number): void {\r\n        // TODO\r\n    }\r\n    public mouseDrag(x: number, y: number): void {\r\n        // TODO\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n        // TODO\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n        // TODO\r\n    }\r\n    public keyDown(k: KeyboardEvent): void {\r\n        // TODO\r\n    }\r\n}\r\n"],"names":["Solution","RendererCanvas","constructor","id","super","document","getElementById","this","start","render","ctx","beginPath","arc","canvas","width","height","Math","PI","closePath","fillStyle","fill","cenX","cenY","myTriangle","vertices","faces","tessellateTriangle","lineWidth","strokeStyle","i","length","v0","v1","v2","moveTo","lineTo","stroke","mouseDown","x","y","mouseUp","mouseDrag","mouseClick","mouseMove","keyDown","k"],"sourceRoot":""}