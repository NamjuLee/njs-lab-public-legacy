{"version":3,"file":"static/js/33637.ef28666f.chunk.js","mappings":"6JAGO,MAAMA,UAAiBC,EAAAA,GAG1BC,YAAYC,GACRC,MAAMD,GAKV,KAPAE,IAAkB,IAQdC,EAAAA,EAAAA,eAAcC,2DAAqEC,MAAMC,IACrF,IAAIC,EAAQ,EACRC,EAAS,EAETC,EAAS,EAEb,MAAMC,EAAOJ,EAAEK,MAAM,eACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKG,SAAUD,EAAG,CAClC,MAAME,EAASJ,EAAKE,GAAGD,MAAM,KACvBI,GAAOD,EAAO,GACdE,GAAOF,EAAO,GACR,IAARC,GAAqB,IAARC,IAEbC,KAAKf,IAAIgB,KAAK,CAACH,EAAKC,IACpBP,GAAUM,EACVP,GAAUQ,EAEVT,IAER,CAEAU,KAAKE,OAAOV,EAASF,EAAOC,EAASD,GACrCU,KAAKG,KAAK,GAAG,IAGjBH,KAAKI,OACT,CACAC,OAAOC,GACHA,EAAIC,yBAA2B,SAE/B,IAAK,IAAIZ,EAAI,EAAGA,EAAIK,KAAKf,IAAIW,SAAUD,EAAG,CACtC,MAAMa,EAAYR,KAAKS,SAAST,KAAKf,IAAIU,GAAG,GAAIK,KAAKf,IAAIU,GAAG,IAC5De,EAAYJ,EAAKE,EAAU,GAAIA,EAAU,GAAIR,KAAKW,KAAO,EAAG,wBAChE,CAEJ,CACAC,QAAQC,GACR,CAEAC,UAAUC,EAAWC,GACrB,CAEAC,QAAQF,EAAWC,GACnB,CAEAE,WAAWH,EAAWC,GAElB,MAAMG,EAAenB,KAAKoB,MAAML,EAAGC,GACnChB,KAAKf,IAAIgB,KAAKkB,EAClB,CACAE,UAAUN,EAAWC,GAErB,EAGJ,MAAMN,EAAc,CAACJ,EAA+BS,EAAWC,EAAWM,EAAWC,KACjFjB,EAAIkB,UAAYD,EAChBjB,EAAImB,YACJnB,EAAIoB,IAAIX,EAAGC,EAA6B,GAAzBW,KAAKC,IAAQ,GAAJN,GAAW,GAAQ,EAAa,EAAVK,KAAKE,IACnDvB,EAAIwB,YACJxB,EAAIyB,MAAM,C","sources":["njslab/Project/Project_02_Flower_Delivery/index.ts"],"sourcesContent":["import { RendererJSAPI } from '../../../lib';\r\nimport { getCSVFromURL } from 'njscore';\r\n\r\nexport class Solution extends RendererJSAPI {\r\n\r\n    pts: number[][] = [];\r\n    constructor(view: any) {\r\n        super(view);\r\n\r\n        // console.log(window.location)\r\n        // console.log(process.env.PUBLIC_URL)\r\n\r\n    //     console.log(process.env.PUBLIC_URL + '/static/data/EN_flower_dataset_clean.csv');\r\n        getCSVFromURL(process.env.PUBLIC_URL + '/static/data/EN_flower_dataset_clean.csv').then((d) => {\r\n            let count = 0;\r\n            let latSum = 0;\r\n            \r\n            let lonSum = 0;\r\n\r\n            const line = d.split(/\\r\\n|\\r|\\n/g);\r\n            for (let i = 1; i < line.length; ++i) {\r\n                const values = line[i].split(',');\r\n                const lon = +values[4];\r\n                const lat = +values[5];\r\n                if (lon !== 0 || lat !== 0) {\r\n                    \r\n                    this.pts.push([lon, lat]);\r\n                    lonSum += lon;\r\n                    latSum += lat;\r\n\r\n                    count++;\r\n                }\r\n            }\r\n\r\n            this.center(lonSum / count, latSum / count);\r\n            this.zoom(11);\r\n        });\r\n\r\n        this.start();\r\n    }\r\n    render(ctx: CanvasRenderingContext2D) {\r\n        ctx.globalCompositeOperation = 'screen' ; //'lighten';\r\n\r\n        for (let i = 0; i < this.pts.length; ++i) { \r\n            const projected = this.toScreen(this.pts[i][0], this.pts[i][1]); \r\n            renderPoint(ctx, projected[0], projected[1], this.time + 3, 'rgba(255, 0, 0, 0.85)' );\r\n        }\r\n\r\n    }\r\n    keyDown(k: KeyboardEvent): void {\r\n    //     console.log('key pressed', k);\r\n    }\r\n    mouseDown(x: number, y: number): void {\r\n    //     console.log('mouse down')\r\n    }\r\n    mouseUp(x: number, y: number): void {\r\n    //     console.log('mouse up')\r\n    }\r\n    mouseClick(x: number, y: number): void {\r\n    //     console.log(x,y)\r\n        const mapProjected = this.toMap(x, y);\r\n        this.pts.push(mapProjected);\r\n    }\r\n    mouseMove(x: number, y: number) {\r\n\r\n    }\r\n}\r\n\r\nconst renderPoint = (ctx: CanvasRenderingContext2D, x: number, y: number, t: number, color: string) => {\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, (Math.sin(t * 0.8) + 4) * 2, 0, Math.PI * 2);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n}\r\n"],"names":["Solution","RendererJSAPI","constructor","view","super","pts","getCSVFromURL","process","then","d","count","latSum","lonSum","line","split","i","length","values","lon","lat","this","push","center","zoom","start","render","ctx","globalCompositeOperation","projected","toScreen","renderPoint","time","keyDown","k","mouseDown","x","y","mouseUp","mouseClick","mapProjected","toMap","mouseMove","t","color","fillStyle","beginPath","arc","Math","sin","PI","closePath","fill"],"sourceRoot":""}