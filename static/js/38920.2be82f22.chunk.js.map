{"version":3,"file":"static/js/38920.2be82f22.chunk.js","mappings":"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","sources":["njslab/LabStarter/AppMatterEnv/AppMatter/Core/Canvas/Canvas.ts","njslab/LabStarter/AppMatterEnv/lib/index.ts","njslab/LabStarter/AppMatterEnv/AppMatter/Core/IOWrapper/EventInteraction/MouseInteraction.ts","njslab/LabStarter/AppMatterEnv/AppMatter/Core/IOWrapper/index.ts","njslab/LabStarter/AppMatterEnv/AppMatter/Core/ActiveCommandController/ActiveCommandController.ts","njslab/LabStarter/AppMatterEnv/AppMatter/Core/index.ts","njslab/LabStarter/AppMatterEnv/AppMatter/Implementations/MatterSandboxImple/Renderer/index.ts","njslab/LabStarter/AppMatterEnv/AppMatter/Implementations/MatterSandboxImple/GeometryUI/GeometryCommon.ts","njslab/LabStarter/AppMatterEnv/AppMatter/Implementations/MatterSandboxImple/GeometryUI/MGeometry/Base/MGeometryBase.ts","njslab/LabStarter/AppMatterEnv/AppMatter/Implementations/MatterSandboxImple/GeometryUI/MGeometry/MBox.ts","njslab/LabStarter/AppMatterEnv/AppMatter/Implementations/MatterSandboxImple/GeometryUI/MGeometry/MCircle.ts","njslab/LabStarter/AppMatterEnv/AppMatter/Implementations/MatterSandboxImple/GeometryUI/MGeometry/MGon.ts","njslab/LabStarter/AppMatterEnv/AppMatter/Implementations/MatterSandboxImple/GeometryUI/MGeometry/MCross.ts","njslab/LabStarter/AppMatterEnv/AppMatter/Implementations/MatterSandboxImple/ActiveCommandController/ActiveCommandCommon.ts","njslab/LabStarter/AppMatterEnv/AppMatter/Implementations/MatterSandboxImple/ActiveCommandController/ActiveCommandController.ts","njslab/LabStarter/AppMatterEnv/AppMatter/Implementations/MatterSandboxImple/View/index.ts","njslab/LabStarter/AppMatterEnv/AppMatter/Implementations/MatterSandboxImple/Scene/index.ts","njslab/LabStarter/AppMatterEnv/AppMatter/Implementations/MatterSandboxImple/index.ts","njslab/LabStarter/AppMatterEnv/AppMatter/Implementations/index.ts","njslab/LabStarter/AppMatterEnv/AppMatter/index.ts","njslab/LabStarter/AppMatterEnv/AppMatterEnv.ts","njslab/LabStarter/AppMatterEnv/index.ts"],"sourcesContent":["import { Deltatime, CanvasLoopController } from '../../../../../../lib/NJSCore';\r\nimport { MouseEventData } from '../../../lib';\r\nimport { Core } from '..';\r\nexport class Canvas {\r\n    core: Core;\r\n    div: HTMLElement;\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    isActive: boolean = false;\r\n    zoom: number = 1;\r\n    translation: number[] = [0, 0];\r\n    translationZoom: number[] = [0, 0];\r\n    deltaTime: Deltatime;\r\n    canvasLoopController: CanvasLoopController;\r\n\r\n    log: string;\r\n    // frameRate: number = 60;\r\n    isViewChanging: boolean = false;\r\n    loopNum: number = 0;\r\n    needRenderloop: boolean = true;\r\n\r\n    ablePan: boolean = true;\r\n    pause: boolean = false;\r\n    constructor(core: Core, div: HTMLElement) {\r\n        this.core = core;\r\n        this.div = div;\r\n        this.Init();\r\n        this.LoopInit();\r\n    }\r\n    private Init() {\r\n        const canvas = document.createElement('canvas');\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            this.canvas.width = this.div.clientWidth;\r\n            this.canvas.height = this.div.clientHeight;\r\n            this.div.append(this.canvas);\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.isActive = true;\r\n            }\r\n        }\r\n    }\r\n    private LoopInit() {\r\n        this.translation[0] = this.ctx.canvas.width * 0.5;\r\n        this.translation[1] = this.ctx.canvas.height * 0.5;\r\n\r\n        this.deltaTime = new Deltatime();\r\n        this.canvasLoopController = new CanvasLoopController(60);\r\n        this.SetLevel4();\r\n\r\n        this.Loop();\r\n    }\r\n    public Loop() {\r\n        let before = performance.now();\r\n        this.deltaTime.UpdateFPS();\r\n\r\n        if (this.canvasLoopController.level > 3) {\r\n            if (this.canvasLoopController.level === 6) { // level 6\r\n                requestAnimationFrame(() => { this.Loop(); });\r\n                // this.Clear(this.ctx);\r\n                this.RenderPre(this.ctx);\r\n            } else if (this.canvasLoopController.level === 5) {\r\n                if (this.isViewChanging) {\r\n                    requestAnimationFrame(() => { this.Loop(); });\r\n                } else {\r\n                    // setTimeout(() => {\r\n                    requestAnimationFrame(() => { this.Loop(); });\r\n                    // }, 1000 / this.frameRate);\r\n                }\r\n                // this.Clear(this.ctx);\r\n                this.RenderPre(this.ctx);\r\n            } else if (this.canvasLoopController.level === 4) {\r\n                if (this.isViewChanging) {\r\n                    requestAnimationFrame(() => { this.Loop(); });\r\n                } else {\r\n                    // setTimeout(() => {\r\n                    requestAnimationFrame(() => { this.Loop(); });\r\n                    // }, 1000 / this.frameRate);\r\n                }\r\n                if (!this.canvasLoopController.stop) {\r\n                    this.RenderPre(this.ctx);\r\n                    this.canvasLoopController.TimerForStop();\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n\r\n        } else if (this.canvasLoopController.level === 1) { // level 1 - 3\r\n            if (this.isViewChanging) {\r\n                // this.Clear(this.ctx);\r\n            } else {\r\n                // this.Clear(this.ctx);\r\n                this.RenderPre(this.ctx);\r\n            }\r\n        } else {\r\n            // this.Clear(this.ctx);\r\n            this.RenderPre(this.ctx);\r\n        }\r\n        let after = performance.now();\r\n        this.log = `level:  ${this.canvasLoopController.level}, total frames: ${this.loopNum++} (FPS: ${this.deltaTime.frameRate.toFixed(0)}), a loop took: ${(after - before).toFixed(2)} ms to execute.`;\r\n        // this.LogOut();\r\n    }\r\n    public SetLevel1() { this.canvasLoopController.level = 1; this.Loop(); }\r\n    public SetLevel2() { this.canvasLoopController.level = 2; this.Loop(); }\r\n    public SetLevel3() { this.canvasLoopController.level = 3; this.Loop(); }\r\n    public RenderSetLevel4() {\r\n        this.canvasLoopController.stop = true;\r\n    }\r\n    public SetLevel4() {\r\n        this.canvasLoopController.Reset();\r\n        setTimeout(() => {\r\n            this.canvasLoopController.level = 4;\r\n            this.Loop();\r\n        }, 500);\r\n    }\r\n    public SetLevel5() {\r\n        this.canvasLoopController.Reset();\r\n        setTimeout(() => {\r\n            this.canvasLoopController.level = 5;\r\n            this.Loop();\r\n        }, 500);\r\n    }\r\n    public SetLevel6() {\r\n        this.canvasLoopController.Reset();\r\n        setTimeout(() => {\r\n            this.canvasLoopController.level = 6;\r\n            this.Loop();\r\n        }, 500);\r\n    }\r\n    public Clear(ctx: CanvasRenderingContext2D) {\r\n        // this.ctx.clearRect(-this.translation[0], -this.translation[1], this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n\r\n    }\r\n    public Zoom(e: MouseEventData) {\r\n        // const offsetX = (e.xs);\r\n        // const offsetY = (e.ys);\r\n        // console.log(offsetX, this.translation[0]);\r\n\r\n        if (e.wheel < 0) {\r\n            this.zoom += this.zoom * 0.09;\r\n            // console.log('in', this.zoom);\r\n            // this.translation[0] += (this.ctx.canvas.width * 0.5 - offsetX) / this.zoom;\r\n            // this.translation[1] += (this.ctx.canvas.height * 0.5 - offsetY) / this.zoom;\r\n            // this.translationZoom[0] = (offsetX);\r\n            // this.translationZoom[1] = (offsetY);\r\n        } else {\r\n            console.log('out', this.zoom);\r\n            this.zoom -= this.zoom * 0.09;\r\n\r\n            // this.translation[0] -= (this.ctx.canvas.width * 0.5 - offsetX) / this.zoom;\r\n            // this.translation[1] -= (this.ctx.canvas.height * 0.5 - offsetY) / this.zoom;\r\n            // this.translation[0] -= (this.translation[0]) - offsetX;\r\n            // this.translation[1] -= (this.translation[1]) - offsetY;\r\n            // this.translation[0] += (offsetX / this.zoom);\r\n            // this.translation[1] += (offsetY / this.zoom);\r\n            // this.translationZoom[0] = (offsetX);\r\n            // this.translationZoom[1] = (offsetY);\r\n            // this.translation[0] += offsetX / this.zoom;\r\n            // this.translation[1] += offsetY / this.zoom;\r\n        }\r\n\r\n    }\r\n    public RemapByZoom(e: MouseEventData) {\r\n        e.x = ((e.xs - this.translation[0]) / this.zoom);\r\n        e.y = ((e.ys - this.translation[1]) / this.zoom);\r\n        return e;\r\n    }\r\n    public Pan(e: MouseEventData) {\r\n        if (!this.ablePan) { return; }\r\n        const xOff = e.xs - e.preXs;\r\n        const yOff = e.ys - e.preYs;\r\n        this.translation[0] += xOff;\r\n        this.translation[1] += yOff;\r\n    }\r\n    public RenderForce() {\r\n        this.canvasLoopController.stop = false;\r\n    }\r\n    public RenderPre(ctx: CanvasRenderingContext2D) {\r\n        if (!this.isActive) { return; }\r\n        this.Clear(this.ctx);\r\n        this.ctx.save();\r\n        this.ctx.translate(this.translation[0], this.translation[1]);\r\n        this.ctx.scale(this.zoom, this.zoom);\r\n        // this.ctx.translate(this.translationZoom[0], this.translationZoom[1]);\r\n        // this.translationZoom[0] = this.translationZoom[1] = 0;\r\n\r\n        this.Render(ctx);\r\n\r\n        this.ctx.restore();\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        // TODO\r\n    }\r\n}","import { NVector3 } from '../../../../lib/NJSCore';\r\n\r\nexport { NVector3 } from '../../../../lib/NJSCore';\r\n\r\nexport enum CLICK_TYPE {\r\n    LEFT = 'LEFT', MIDDLE = 'MIDDLE', RIGHT = 'RIGHT', WHEEL = 'WHEEL',\r\n    DRAG = 'DRAG', DRAG_LEFT = 'DRAG_LEFT', DRAG_MIDDLE = 'DRAG_MIDDLE', DRAG_RIGHT = 'DRAG_RIGHT',\r\n    MOVE = 'MOVE', DOUBLE = 'DOUBLE', UP = 'UP',\r\n    DOWN = 'DOWN', DOWN_MIDDLE = 'DOWN_MIDDLE', DOWN_RIGHT = 'DOWN_RIGHT'\r\n}\r\nexport class ActiveCommandBase {\r\n    constructor() { /*.*/ }\r\n    public MouseEventController(e: any) {/*.*/ }\r\n    public KeyboardEventController(k: any) {/*.*/ }\r\n    public TouchEventController(t: any) {/*.*/ }\r\n    public GestureEventController(j: any) {/*.*/ }\r\n    public mouseLeftClick(e: any) {/*.*/ }\r\n    public mouseMiddleClick(e: any) {/*.*/ }\r\n    public mouseRightClick(e: any) {/*.*/ }\r\n    public mouseDoubleClick(e: any) {/*.*/ }\r\n    // .........................................\r\n    public mouseMove(e: any) {/*.*/ }\r\n    public mouseDrag(e: any) {/*.*/ }\r\n    public mouseDown(e: any) {/*.*/ }\r\n    public mouseUp(e: any) {/*.*/ }\r\n    public keydown(k: any) {/*.*/ }\r\n    public keyUp(k: any) {/*.*/ }\r\n}\r\nexport class MouseEventData {\r\n    x: number = -1; y: number = -1; z: number = -1;\r\n    preX: number = -1; preY: number = -1; preZ: number = -1;\r\n    xs: number = -1; ys: number = -1;\r\n    preXs: number = -1; preYs: number = -1;\r\n    yGLPicking: number;\r\n    command: ActiveCommandBase; // = new CActiveCommandNone(this.app.activeCommands);\r\n    CLICK_TYPE: CLICK_TYPE = CLICK_TYPE.MOVE;\r\n    isDown: boolean = false;\r\n    isDoubleClick: boolean = false;\r\n    isMove: boolean = false;\r\n    pressedShift: boolean = false;\r\n    pressedAlt: boolean = false;\r\n    pressedCtrl: boolean = false;\r\n    wheel: number = 0;\r\n    preWheel: number = 0;\r\n    isActive: boolean = true;\r\n    // premEvent: MouseEventData;\r\n    native: MouseEvent;\r\n    constructor() {\r\n        //\r\n    }\r\n    public DeepCopy() {\r\n        let mEvent = new MouseEventData();\r\n        mEvent.x = this.x; mEvent.y = this.y; mEvent.z = this.z;\r\n        mEvent.preX = this.preX; mEvent.preY = this.preY; mEvent.preZ = this.preZ;\r\n        mEvent.xs = this.x; mEvent.ys = this.y;\r\n        mEvent.preXs = this.preXs; mEvent.preYs = this.preYs;\r\n        mEvent.pressedAlt = this.pressedAlt; mEvent.pressedShift = this.pressedShift; mEvent.pressedCtrl = this.pressedCtrl;\r\n        mEvent.isDoubleClick = this.isDoubleClick; mEvent.isDown = this.isDown; mEvent.isMove = this.isMove;\r\n        mEvent.wheel = this.wheel; mEvent.preWheel = this.preWheel;\r\n        mEvent.yGLPicking = this.yGLPicking;\r\n        mEvent.CLICK_TYPE = this.CLICK_TYPE;\r\n        mEvent.command = this.command;\r\n        mEvent.native = this.native;\r\n        return mEvent;\r\n    }\r\n}\r\nexport class CanvasDrawing {\r\n    public static LineByVecs(ctx: CanvasRenderingContext2D, v0: NVector3, v1: NVector3, width: number = 1, fill: string = '#ff0000') {\r\n        ctx.strokeStyle = fill;\r\n        ctx.lineWidth = width;\r\n        ctx.beginPath();\r\n        ctx.moveTo(v0.x, v0.y);\r\n        ctx.lineTo(v1.x, v1.y);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n    public static Line(ctx: CanvasRenderingContext2D, x0: number, y0: number, x1: number, y1: number, width: number = 1, fill: string = '#ff0000') {\r\n        ctx.strokeStyle = fill;\r\n        ctx.lineWidth = width;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x0, y0);\r\n        ctx.lineTo(x1, y1);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n    public static Point(ctx: CanvasRenderingContext2D, x: number, y: number, r: number = 5, fill: string = '#ff0000') {\r\n        ctx.fillStyle = fill;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    public static PointByNVec(ctx: CanvasRenderingContext2D, v: NVector3, r: number = 5, fill: string = '#ff0000') {\r\n        ctx.fillStyle = fill;\r\n        ctx.beginPath();\r\n        ctx.arc(v.x, v.y, r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    // .....................................................\r\n    public static GridLineOrigin(ctx: CanvasRenderingContext2D, xNum: number = 10, yNum: number = 10, xOff: number = 20, yOff: number = 20) {\r\n        const xStart = - ((xNum * xOff) * 0.5);\r\n        const yStart = - ((yNum * yOff) * 0.5);\r\n        ctx.lineWidth = 0.1;\r\n        for (let y = 0; y <= yNum; ++y) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(xStart, yStart + (yOff * y));\r\n            ctx.lineTo((xNum * xOff) * 0.5, yStart + (yOff * y));\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(xStart + (xOff * y), yStart);\r\n            ctx.lineTo(yStart + (yOff * y), (yNum * yOff) * 0.5);\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n        }\r\n\r\n    }\r\n    public static GridPointOrigin(ctx: CanvasRenderingContext2D, xNum: number = 10, yNum: number = 10, xOff: number = 20, yOff: number = 20) {\r\n        const xStart = - ((xNum * xOff) * 0.5);\r\n        const yStart = - ((yNum * yOff) * 0.5);\r\n        ctx.lineWidth = 0.1;\r\n        for (let y = 0; y <= yNum; ++y) {\r\n            for (let x = 0; x <= xNum; ++x) {\r\n                ctx.beginPath();\r\n                ctx.arc(xStart + (xOff * x), yStart + (yOff * y), 1, 0, Math.PI * 2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    constructor() {\r\n        //\r\n    }\r\n}","import { CLICK_TYPE, MouseEventData } from '../../../../lib';\r\nimport { IOWrapper } from '..';\r\n\r\nexport interface IMouseInteractionMenu {\r\n  MouseInteractionMenu: (mouseEventData: MouseEventData) => void;\r\n}\r\nexport class MouseInteraction {\r\n  mouseInteractionUI: IMouseInteractionMenu;\r\n  mouseEventDataPre: MouseEventData = new MouseEventData();\r\n  isEnable: boolean = true;\r\n  clickCount: number = 0;\r\n  click: boolean = false;\r\n  prevent: boolean = false;\r\n  delay: number = 250;\r\n  timer: NodeJS.Timer | number;\r\n  down: boolean = false;\r\n  e: MouseEventData;\r\n  private _stopPropagation: boolean = false;\r\n  ioWrapper: IOWrapper;\r\n  constructor(ioWrapper: IOWrapper) {\r\n    this.ioWrapper = ioWrapper;\r\n  }\r\n  public InitNativeMouseEvent(div: HTMLElement) {\r\n    div.onclick = (e: MouseEvent) => {\r\n      this.prevent = false;\r\n      this.timer = setTimeout(\r\n        () => {\r\n          if (!this.prevent) {\r\n            this.MouseClick(e);\r\n          }\r\n          this.prevent = false;\r\n        },\r\n        this.delay);\r\n    };\r\n    div.ondblclick = (e: MouseEvent) => {\r\n      clearTimeout(this.timer as number);\r\n      this.prevent = true;\r\n      this.MouseDoubleClick(e);\r\n    };\r\n    div.onmousedown = (e: MouseEvent) => { this.MouseDown(e); };\r\n    div.onmouseup = (e: MouseEvent) => { this.MouseUp(e); };\r\n    div.onmousemove = (e: MouseEvent) => { this.MouseMove(e); };\r\n    div.addEventListener('contextmenu', (e) => { e.preventDefault(); });\r\n    div.addEventListener('wheel', (e: WheelEvent) => this.MouseWheel(e, e.deltaY));\r\n  }\r\n  public MouseDown(e: MouseEvent) {\r\n    this.click = true;\r\n    this.down = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DOWN;\r\n    mEvent.isDown = true;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  public MouseClick(e: MouseEvent) {\r\n    if (!this.click) { return; }\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    if (e.button === 0) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.LEFT;\r\n    } else if (e.button === 1) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.MIDDLE;\r\n    } else if (e.button === 2) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.RIGHT;\r\n    }\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  public MouseDoubleClick(e: MouseEvent) {\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DOUBLE;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  public MouseDrag(e: MouseEvent) {\r\n    this.click = false;\r\n    this.prevent = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DRAG;\r\n    mEvent.isDown = true;\r\n    if (e.buttons === 1) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG;\r\n    } else if (e.buttons === 4) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG_MIDDLE;\r\n    } else if (e.buttons === 2) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG_RIGHT;\r\n    }\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  public MouseMove(e: MouseEvent) {\r\n    if (this.down) { this.MouseDrag(e); return; }\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.MOVE;\r\n    mEvent.isDown = true;\r\n    this.prevent = true;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  public MouseUp(e: MouseEvent) {\r\n    this.down = false;\r\n    this.click = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.UP;\r\n    mEvent.isDown = false;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  public MouseWheel(e: MouseEvent, v: number) {\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.wheel = v;\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.WHEEL;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  public CommonEventBuilder(e: MouseEvent): MouseEventData {\r\n    let mEvent: MouseEventData = new MouseEventData();\r\n    mEvent.preXs = this.mouseEventDataPre.xs;\r\n    mEvent.preYs = this.mouseEventDataPre.ys;\r\n    mEvent.preX = this.mouseEventDataPre.x;\r\n    mEvent.preY = this.mouseEventDataPre.y;\r\n    // mEvent.premEvent = this.mouseEventDataPre;\r\n\r\n    mEvent.pressedShift = e.shiftKey;\r\n    mEvent.pressedAlt = e.altKey;\r\n    mEvent.pressedCtrl = e.ctrlKey;\r\n\r\n    mEvent.xs = e.offsetX;\r\n    mEvent.ys = e.offsetY;\r\n    mEvent.preWheel = this.mouseEventDataPre.wheel;\r\n    mEvent.wheel = 0;\r\n    mEvent.native = e;\r\n    mEvent = this.ioWrapper.core.canvas.RemapByZoom(mEvent);\r\n    this.mouseEventDataPre = mEvent;\r\n    this.e = mEvent;\r\n    return mEvent;\r\n  }\r\n  public get stopPropagation() {\r\n    return this._stopPropagation;\r\n  }\r\n  public set stopPropagation(v: boolean) {\r\n    if (v) {\r\n      this._stopPropagation = v;\r\n    } else {\r\n      setTimeout(() => { this._stopPropagation = v; }, 500);\r\n    }\r\n  }\r\n  private MouseEvenEmitting(mouseEventData: MouseEventData) {\r\n    this.MouseEventEmittingForViewController(mouseEventData);\r\n    if (this._stopPropagation) { return; }\r\n    this.MouseEventEmittingForModel(mouseEventData);\r\n  }\r\n  private MouseEventEmittingForViewController(mouseEventData: MouseEventData) {\r\n    if (this.mouseInteractionUI) { this.mouseInteractionUI.MouseInteractionMenu(mouseEventData); }\r\n  }\r\n  private MouseEventEmittingForModel(mouseEventData: MouseEventData) {\r\n    this.ioWrapper.core.activeCommandController.MouseEventController(mouseEventData);\r\n  }\r\n}","import { Core } from '..';\r\n\r\nimport { MouseInteraction } from './EventInteraction/MouseInteraction';\r\n\r\nexport class IOWrapper {\r\n    core: Core;\r\n    mouseInteraction: MouseInteraction;\r\n\r\n    constructor(core: Core) {\r\n        this.core = core;\r\n\r\n        this.mouseInteraction = new MouseInteraction(this);\r\n    }\r\n    public InitEventListener(div: HTMLDivElement) {\r\n        this.mouseInteraction.InitNativeMouseEvent(div);\r\n        this.Resize();\r\n    }\r\n    private Resize() {\r\n        // document.onresize = ((e:UIEvent)=>( this.ReSizeWindow(e) ));\r\n        // div.addEventListener('onresize', (e: UIEvent) =>this.ReSizeWindow(e) );\r\n        // console.log('dddd');\r\n\r\n        window.addEventListener('resize', (e: UIEvent) => this.ReSizeWindow(e));\r\n\r\n    }\r\n    // tslint:disable-next-line:no-any\r\n    ReSizeWindow(e: any) {\r\n        // const size = this.appCoreWrapper.model.modelViewCoreWrapper.viewWrapper.divHost;\r\n        // this.appCoreWrapper.model.graphicsCoreWrapper.canvasWrapper.canvas.ResizeCanvas(size.clientWidth, size.clientHeight);\r\n    }\r\n}","import { CLICK_TYPE, NVector3, MouseEventData as MouseEventDataUI } from '../../../../../../lib/NJSCore';\r\nimport { MouseEventData } from '../../../lib';\r\n// import { MouseEventData } from '../../AppCoreWrapper/IOWrapper/EventInteraction/MouseInteraction';\r\nimport { Core } from '..';\r\n\r\nexport class ActiveCommandController {\r\n    core: Core;\r\n    mouse: NVector3 = new NVector3(0, 0);\r\n\r\n    constructor(core: Core) {\r\n        this.core = core;\r\n    }\r\n    public MouseEventController(e: MouseEventData) {\r\n        const eUI = e.DeepCopy();\r\n        eUI.x = e.xs;\r\n        eUI.y = e.ys;\r\n        this.core.nUI.MouseInteractionMenu(eUI as MouseEventDataUI);\r\n        if (this.core.nUI.stopPropagation) { return; }\r\n\r\n        this.core.canvas.RenderForce();\r\n\r\n        this.core.app.implementations.MouseEventController(e);\r\n        // console.log('canvas');\r\n        // console.log(e);\r\n\r\n        if (e.CLICK_TYPE === CLICK_TYPE.LEFT) {\r\n            this.MouseLeftClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MIDDLE) {\r\n            this.MouseMiddleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN_RIGHT) {\r\n            this.MouseRightClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOUBLE) {\r\n            this.MouseDoubleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MOVE) {\r\n            this.MouseMovePre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DRAG) {\r\n            this.MouseDragPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN) {\r\n            this.MouseDownPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DRAG_RIGHT) {\r\n            this.MouseDragRightPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.WHEEL) {\r\n            this.MouseWheelPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.UP) { this.MouseUpPre(e); return; }\r\n\r\n\r\n    }\r\n\r\n    // .......................................................\r\n    public MouseDown(e: MouseEventData) {/* */ }\r\n    public MouseDownPre(e: MouseEventData) {\r\n        this.MouseDown(e);\r\n    }\r\n    public MouseLeftClick(e: MouseEventData) {/* */ }\r\n    public MouseLeftClickPre(e: MouseEventData) {\r\n        // console.log('left click');\r\n        this.MouseLeftClick(e);\r\n    }\r\n    public MouseMiddleClick(e: MouseEventData) {/* */ }\r\n    public MouseMiddleClickPre(e: MouseEventData) {\r\n\r\n        this.MouseMiddleClick(e);\r\n    }\r\n    public MouseRightClick(e: MouseEventData) { /* */ }\r\n    public MouseRightClickPre(e: MouseEventData) {\r\n\r\n        this.MouseRightClick(e);\r\n    }\r\n    public MouseUp(e: MouseEventData) { /* */ }\r\n    public MouseUpPre(e: MouseEventData) {\r\n\r\n        this.MouseUp(e);\r\n\r\n    }\r\n    public MouseDoubleClick(e: MouseEventData) {/* */ }\r\n    public MouseDoubleClickPre(e: MouseEventData) {\r\n        // console.log('d click');\r\n        this.MouseDoubleClick(e);\r\n    }\r\n    public MouseMove(e: MouseEventData) {/* */ }\r\n    public MouseMovePre(e: MouseEventData) {\r\n        // console.log('move');\r\n\r\n        this.MouseMove(e);\r\n    }\r\n    public MouseDrag(e: MouseEventData) {/* */ }\r\n    public MouseDragPre(e: MouseEventData) {\r\n\r\n        // console.log('drag');\r\n        this.mouse.x = e.x;\r\n        this.mouse.y = e.y;\r\n\r\n        // this.core.canvas.Pan(e);\r\n\r\n        this.MouseDrag(e);\r\n    }\r\n    public MouseDragRight(e: MouseEventData) {/* */ }\r\n    public MouseDragRightPre(e: MouseEventData) {\r\n\r\n        this.mouse.x = e.x;\r\n        this.mouse.y = e.y;\r\n        this.core.canvas.Pan(e);\r\n        this.MouseDragRight(e);\r\n    }\r\n    public MouseWheel(e: MouseEventData) {/* */ }\r\n    public MouseWheelPre(e: MouseEventData) {\r\n        this.core.canvas.Zoom(e);\r\n        this.MouseWheel(e);\r\n    }\r\n    public pushActionFromPulldown(v: string) {\r\n        const command = v.split('@');\r\n        switch (command[0]) {\r\n            case '':\r\n                //\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n}","import { AppMatter } from '..';\r\nimport { Canvas } from './Canvas/Canvas';\r\nimport { IOWrapper } from './IOWrapper';\r\nimport { ActiveCommandController } from './ActiveCommandController/ActiveCommandController';\r\nimport { NUI } from '../../../../../lib/NJSCore';\r\nexport class Core {\r\n    app: AppMatter;\r\n    canvas: Canvas;\r\n    nUI: NUI;\r\n    ioWrapper: IOWrapper;\r\n    activeCommandController: ActiveCommandController;\r\n    constructor(app: AppMatter, div: HTMLElement) {\r\n        this.app = app;\r\n        this.InitPulldown();\r\n        this.InitCanvas(div);\r\n        this.activeCommandController = new ActiveCommandController(this);\r\n        this.ioWrapper = new IOWrapper(this);\r\n    }\r\n    private InitCanvas(div: HTMLElement) {\r\n        this.canvas = new Canvas(this, div);\r\n    }\r\n    private InitPulldown() {\r\n        this.nUI = new NUI(this.app.div);\r\n        // this.nUI.ini\r\n        this.BindingActiveCommandController();\r\n    }\r\n    public InitPost() {\r\n        this.ioWrapper.InitEventListener(this.app.div as HTMLDivElement);\r\n    }\r\n    private BindingActiveCommandController() {\r\n        this.nUI.BindingActiveCommandController('NDrawingBlock', (v: string) => this.Commander(v));\r\n    }\r\n    public Resize(width: number, height: number) {\r\n        this.nUI.Resize(width, height);\r\n    }\r\n    private Commander(v: string) {\r\n        this.activeCommandController.pushActionFromPulldown(v);\r\n    }\r\n}","import { CanvasDrawing } from '../../../../../../../lib/NJSCore';\r\nimport { ActiveCommandController } from '../ActiveCommandController/ActiveCommandController';\r\nimport { MatterSandboxImple } from '..';\r\nexport class Renderer {\r\n    implementation: MatterSandboxImple;\r\n    activeCommandController: ActiveCommandController;\r\n    constructor(implementation: MatterSandboxImple) {\r\n        this.implementation = implementation;\r\n        this.activeCommandController = this.implementation.activeCommandController;\r\n    }\r\n    public OnRender(ctx: CanvasRenderingContext2D) {\r\n        this.Update(ctx);\r\n        this.Render(ctx);\r\n    }\r\n    public Update(ctx: CanvasRenderingContext2D) {\r\n\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log('ren!! --');\r\n        CanvasDrawing.GridLineOrigin(ctx, 10, 10, 75, 75);\r\n\r\n        for (let i = 0; i < this.implementation.scene.MBoxes.length; ++i) {\r\n            this.implementation.scene.MBoxes[i].Render(ctx);\r\n        }\r\n\r\n        for (let i = 0; i < this.implementation.scene.listBlocks.length; ++i) {\r\n            this.implementation.scene.listBlocks[i].Render(ctx);\r\n        }\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        ctx.beginPath();\r\n        ctx.arc(this.activeCommandController.mouse.x, this.activeCommandController.mouse.y, 2, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}","import { NVector3 } from '../../../../lib';\r\nimport { MatterSandboxImple } from '..';\r\nexport class GeometryCommon {\r\n    implementation: MatterSandboxImple;\r\n    constructor(implementation: MatterSandboxImple) {\r\n        this.implementation = implementation;\r\n\r\n    }\r\n    public Pick(v: NVector3) {\r\n        for (let i = 0; i < this.implementation.scene.listBlocks.length; ++i) {\r\n            if (this.implementation.scene.listBlocks[i].IsInside(v)) {\r\n                return this.implementation.scene.listBlocks[i];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}","import { Scene } from '../../../Scene';\r\nexport class MGeometryBase {\r\n    scene: Scene;\r\n\r\n    fillColor: string = '#000000';\r\n    strokeColor: string = '#ffffff';\r\n    constructor(scene: Scene) {\r\n        this.scene = scene;\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        // TOO\r\n    }\r\n}","import { Bodies, World, Vector } from 'matter-js';\r\nimport { Scene } from '../../Scene';\r\nimport { MGeometryBase } from './Base/MGeometryBase';\r\nimport { ColorUtility } from '../../../../../../../../lib/NJSCore';\r\nexport class MBox extends MGeometryBase {\r\n    body: Matter.Body;\r\n    scene: Scene;\r\n    angle: number;\r\n    position: Vector;\r\n    width: number;\r\n    height: number;\r\n    constructor(scene: Scene, x: number, y: number, width: number, height: number, isStatic: boolean = false) {\r\n        super(scene);\r\n        this.scene = scene;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        this.fillColor = ColorUtility.GetRandomColor();\r\n        this.strokeColor = ColorUtility.GetRandomColor();\r\n\r\n        const restitution = 0.5;\r\n        const friction = 0.5;\r\n        this.body = Bodies.rectangle(x, y, width, height, { isStatic: isStatic, restitution: restitution, friction: friction });\r\n        this.Init();\r\n    }\r\n    public Init() {\r\n        // console.log(this.scene, this.body);\r\n        // debugger\r\n        World.add(this.scene.world, this.body);\r\n        this.scene.MBoxes.push(this);\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log('rend')\r\n        this.angle = this.body.angle;\r\n        this.position = this.body.position;\r\n\r\n        this.DrawRectByCen(ctx, this.position.x, this.position.y, this.width, this.height, this.angle);\r\n    }\r\n    public DrawRectByCen(ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, angle: number) {\r\n        const xOff = width * 0.5;\r\n        const yOff = height * 0.5;\r\n        ctx.save();\r\n        ctx.translate(this.position.x, this.position.y);\r\n        ctx.rotate(angle);\r\n\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = this.strokeColor;\r\n        ctx.fillStyle = this.fillColor;\r\n        ctx.beginPath();\r\n        ctx.rect(-xOff, -yOff, this.width, this.height);\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    }\r\n}","import { Bodies, World, Vector } from 'matter-js';\r\nimport { Scene } from '../../Scene';\r\nimport { MGeometryBase } from './Base/MGeometryBase';\r\nimport { ColorUtility } from '../../../../../../../../lib/NJSCore';\r\nexport class MCircle extends MGeometryBase {\r\n    body: Matter.Body;\r\n    scene: Scene;\r\n    angle: number;\r\n    position: Vector;\r\n    // width: number;\r\n    radius: number;\r\n    constructor(scene: Scene, x: number, y: number, radius: number, isStatic: boolean = false) {\r\n        super(scene);\r\n        // this.width = width;\r\n        this.radius = radius;\r\n\r\n        this.fillColor = ColorUtility.GetRandomColor();\r\n        this.strokeColor = ColorUtility.GetRandomColor();\r\n\r\n        const restitution = 0.5;\r\n        const friction = 0.5;\r\n        this.body = Bodies.circle(x, y, this.radius, { isStatic: isStatic, restitution: restitution, friction: friction });\r\n        this.Init();\r\n    }\r\n    public Init() {\r\n        World.add(this.scene.world, this.body);\r\n        this.scene.MBoxes.push(this);\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        this.angle = this.body.angle;\r\n        this.position = this.body.position;\r\n\r\n        this.DrawCircle(ctx, this.position.x, this.position.y, this.radius, this.angle);\r\n    }\r\n    public DrawCircle(ctx: CanvasRenderingContext2D, x: number, y: number, radius: number, angle: number) {\r\n        ctx.save();\r\n        ctx.translate(x, y);\r\n        ctx.rotate(angle);\r\n\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = this.strokeColor;\r\n        ctx.fillStyle = this.fillColor;\r\n        ctx.beginPath();\r\n        ctx.arc(0, 0, this.radius, 0, Math.PI * 2);\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    }\r\n}","import { Bodies, World, Vector } from 'matter-js';\r\nimport { Scene } from '../../Scene';\r\nimport { MGeometryBase } from './Base/MGeometryBase';\r\nimport { ColorUtility } from '../../../../../../../../lib/NJSCore';\r\nexport class MGon extends MGeometryBase {\r\n    body: Matter.Body;\r\n    scene: Scene;\r\n    angle: number;\r\n    position: Vector;\r\n    // width: number;\r\n    radius: number;\r\n    side: number;\r\n    constructor(scene: Scene, x: number, y: number, side: number, radius: number, isStatic: boolean = false) {\r\n        super(scene);\r\n        this.side = side;\r\n\r\n        this.fillColor = ColorUtility.GetRandomColor();\r\n        this.strokeColor = ColorUtility.GetRandomColor();\r\n        // this.width = width;\r\n        this.radius = radius;\r\n        const restitution = 0.5;\r\n        const friction = 0.5;\r\n        this.body = Bodies.polygon(x, y, 3, this.radius, { isStatic: isStatic, restitution: restitution, friction: friction });\r\n        this.Init();\r\n    }\r\n    public Init() {\r\n        World.add(this.scene.world, this.body);\r\n        this.scene.MBoxes.push(this);\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        this.angle = this.body.angle;\r\n        this.position = this.body.position;\r\n\r\n        this.DrawCircle(ctx, this.position.x, this.position.y, this.radius, this.angle);\r\n    }\r\n    public DrawCircle(ctx: CanvasRenderingContext2D, x: number, y: number, radius: number, angle: number) {\r\n        // ctx.save();\r\n        // ctx.translate(x, y);\r\n        // ctx.rotate(angle);\r\n\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = this.strokeColor;\r\n        ctx.fillStyle = this.fillColor;\r\n        ctx.beginPath();\r\n        // ctx.arc(0, 0, this.radius, 0, Math.PI * 2);\r\n\r\n        ctx.moveTo(this.body.vertices[0].x, this.body.vertices[0].y);\r\n        for (let i = 1; i < this.body.vertices.length; ++i) {\r\n            ctx.lineTo(this.body.vertices[i].x, this.body.vertices[i].y);\r\n        }\r\n        ctx.closePath();\r\n\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        // ctx.restore();\r\n    }\r\n}","import { Bodies, World, Vector } from 'matter-js';\r\nimport { Scene } from '../../Scene';\r\nimport { MGeometryBase } from './Base/MGeometryBase';\r\nimport { ColorUtility } from '../../../../../../../../lib/NJSCore';\r\nexport class MCross extends MGeometryBase {\r\n    body: Matter.Body;\r\n    scene: Scene;\r\n    angle: number;\r\n    position: Vector;\r\n    width: number;\r\n    height: number;\r\n    constructor(scene: Scene, x: number, y: number, width: number, height: number, isStatic: boolean = false) {\r\n        super(scene);\r\n        this.width = width;\r\n        this.height = height;\r\n        const restitution = 0.5;\r\n        const friction = 0.5;\r\n\r\n        this.fillColor = ColorUtility.GetRandomColor();\r\n        this.strokeColor = ColorUtility.GetRandomColor();\r\n\r\n        // const CUSTOM_PATH = '425.6 327 273.8 315.6 324';\r\n\r\n        // function customShape(x, y) {\r\n        //     let vertices = Matter.Vertices.fromPath(CUSTOM_PATH);\r\n        //     return Matter.Bodies.fromVertices(x, y, vertices, {\r\n        //         // set options if you need them...\r\n        //     });\r\n\r\n        // npm i poly-decomp\r\n\r\n        let verti = [[{ x: 0, y: 0 }, { x: 50, y: 25 }, { x: 100, y: 0 }, { x: 50, y: 50 }]];\r\n        // const vs = Vertices.fromPath(CUSTOM_PATH); // .create(verti);\r\n\r\n        // const vs = Vertices.create(verti, this.body); // .create(verti);\r\n        this.body = Bodies.fromVertices(x, y, verti, { isStatic: isStatic, restitution: restitution, friction: friction });\r\n        this.Init();\r\n    }\r\n    public Init() {\r\n        World.add(this.scene.world, this.body);\r\n        this.scene.MBoxes.push(this);\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        this.angle = this.body.angle;\r\n        this.position = this.body.position;\r\n\r\n        this.DrawRectByCen(ctx, this.position.x, this.position.y, this.width, this.height, this.angle);\r\n    }\r\n    public DrawRectByCen(ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, angle: number) {\r\n        const xOff = width * 0.5;\r\n        const yOff = height * 0.5;\r\n        ctx.save();\r\n        ctx.translate(this.position.x, this.position.y);\r\n        ctx.rotate(angle);\r\n\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = this.strokeColor;\r\n        ctx.fillStyle = this.fillColor;\r\n        ctx.beginPath();\r\n        ctx.rect(-xOff, -yOff, this.width, this.height);\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        ctx.restore();\r\n    }\r\n}","import { CLICK_TYPE, MouseEventData } from '../../../../lib';\r\n// import { MouseEventData } from '../../AppCoreWrapper/IOWrapper/EventInteraction/MouseInteraction';\r\nimport { ActiveCommandController } from './ActiveCommandController';\r\nimport { MBox } from '../GeometryUI/MGeometry/MBox';\r\nimport { MCircle } from '../GeometryUI/MGeometry/MCircle';\r\nimport { MGon } from '../GeometryUI/MGeometry/MGon';\r\nimport { MCross } from '../GeometryUI/MGeometry/MCross';\r\n\r\nexport class ActiveCommandCommon {\r\n    ac: ActiveCommandController;\r\n    constructor(ac: ActiveCommandController) {\r\n        this.ac = ac;\r\n    }\r\n    public MouseEventController(e: MouseEventData) {\r\n        this.ac.mouse.x = e.x; this.ac.mouse.y = e.y;\r\n\r\n        if (e.CLICK_TYPE === CLICK_TYPE.LEFT) {\r\n            this.MouseLeftClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MIDDLE) {\r\n            this.MouseMiddleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN_RIGHT) {\r\n            this.MouseRightClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOUBLE) {\r\n            this.MouseDoubleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MOVE) {\r\n            this.MouseMovePre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DRAG) {\r\n            this.MouseDragPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN) {\r\n            this.MouseDownPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.WHEEL) {\r\n            this.MouseWheelPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.UP) { this.MouseUpPre(e); return; }\r\n\r\n\r\n    }\r\n    // .......................................................\r\n    public MouseDown(e: MouseEventData) {/* */ }\r\n    public MouseDownPre(e: MouseEventData) {\r\n        const geo = this.ac.implementation.geometryCommon.Pick(this.ac.mouse);\r\n        if (geo) {\r\n            this.ac.ablePan = false;\r\n            this.ac.capture = geo;\r\n        }\r\n        // console.log(geo);\r\n        this.MouseDown(e);\r\n    }\r\n    public MouseLeftClick(e: MouseEventData) {/* */ }\r\n    public MouseLeftClickPre(e: MouseEventData) {\r\n        // console.log(e);\r\n\r\n\r\n        // console.log('left click');\r\n        this.MouseLeftClick(e);\r\n    }\r\n    public MouseMiddleClick(e: MouseEventData) {/* */ }\r\n    public MouseMiddleClickPre(e: MouseEventData) {\r\n\r\n        this.MouseMiddleClick(e);\r\n    }\r\n    public MouseRightClick(e: MouseEventData) { /* */ }\r\n    public MouseRightClickPre(e: MouseEventData) {\r\n\r\n        this.MouseRightClick(e);\r\n    }\r\n    public MouseUp(e: MouseEventData) { /* */ }\r\n    public MouseUpPre(e: MouseEventData) {\r\n\r\n        this.ac.ablePan = true;\r\n        this.ac.capture = undefined;\r\n        this.MouseUp(e);\r\n    }\r\n    public MouseDoubleClick(e: MouseEventData) {/* */ }\r\n    public MouseDoubleClickPre(e: MouseEventData) {\r\n        // console.log('d click');\r\n        this.MouseDoubleClick(e);\r\n    }\r\n    public MouseMove(e: MouseEventData) {/* */ }\r\n    public MouseMovePre(e: MouseEventData) {\r\n        // console.log('move');\r\n\r\n        this.MouseMove(e);\r\n    }\r\n    public MouseDrag(e: MouseEventData) {/* */ }\r\n    public MouseDragPre(e: MouseEventData) {\r\n        if (this.ac.capture) {\r\n            this.ac.capture.Translation(e);\r\n        }\r\n        this.MouseDrag(e);\r\n    }\r\n    public MouseWheel(e: MouseEventData) {/* */ }\r\n    public MouseWheelPre(e: MouseEventData) {\r\n\r\n        this.MouseWheel(e);\r\n    }\r\n}\r\n// ...................................................\r\n\r\nexport class ActiveCommandSelection extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n}\r\n\r\nexport class ActiveCommandRect extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n    public MouseLeftClick(e: MouseEventData) {\r\n        new MBox(this.ac.implementation.scene, e.x, e.y, Math.random() * 50, Math.random() * 50);\r\n    }\r\n}\r\nexport class ActiveCommandCircle extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n    public MouseLeftClick(e: MouseEventData) {\r\n        new MCircle(this.ac.implementation.scene, e.x, e.y, Math.random() * 50);\r\n    }\r\n}\r\nexport class ActiveCommandNGon extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n    public MouseLeftClick(e: MouseEventData) {\r\n        new MGon(this.ac.implementation.scene, e.x, e.y, 3, Math.random() * 50);\r\n    }\r\n}\r\nexport class ActiveCommandCross extends ActiveCommandCommon {\r\n    constructor(acs: ActiveCommandController) { super(acs); }\r\n    public MouseLeftClick(e: MouseEventData) {\r\n        new MCross(this.ac.implementation.scene, e.x, e.y, 3, Math.random() * 50);\r\n    }\r\n}","import { NVector3, } from '../../../../lib';\r\nimport { GeometryUIBase } from '../GeometryUI/Base/GeometryUIBase';\r\n// import { MouseEventData } from '../../AppCoreWrapper/IOWrapper/EventInteraction/MouseInteraction';\r\nimport { MatterSandboxImple } from '..';\r\n\r\nimport {\r\n    ActiveCommandCommon,\r\n    ActiveCommandSelection,\r\n    ActiveCommandRect,\r\n    ActiveCommandCircle,\r\n    ActiveCommandNGon,\r\n    ActiveCommandCross,\r\n} from './ActiveCommandCommon';\r\n\r\nexport enum ACTIVECOMMAND_MODE {\r\n    SELECT = 'SELECT', REMOVE = 'REMOVE',\r\n    RECT = 'RECT',\r\n    CIRCLE = 'CIRCLE',\r\n    TRIGON = 'TRIGON',\r\n    CROSS = 'CROSS',\r\n\r\n    DRAWING_BLOCK = 'DRAWING_BLOCK',\r\n}\r\n\r\nexport class ActiveCommandController {\r\n    implementation: MatterSandboxImple;\r\n\r\n    commands: {};\r\n    activeCommand: ActiveCommandCommon;\r\n\r\n    mouse: NVector3 = new NVector3(0, 0);\r\n    capture: GeometryUIBase | undefined = undefined;\r\n    private _ablePan: boolean = false;\r\n    constructor(implementation: MatterSandboxImple) {\r\n        this.implementation = implementation;\r\n\r\n        this.commands = {\r\n            // ........................................................................................................................ drawing annotation\r\n            SELECT: new ActiveCommandSelection(this),\r\n\r\n            RECT: new ActiveCommandRect(this),\r\n            CIRCLE: new ActiveCommandCircle(this),\r\n            TRIGON: new ActiveCommandNGon(this),\r\n            CROSS: new ActiveCommandCross(this),\r\n\r\n        };\r\n\r\n        this.SetActiveCommand(ACTIVECOMMAND_MODE.CIRCLE);\r\n    }\r\n    public SetActiveCommand(theAC: ACTIVECOMMAND_MODE) {\r\n        this.activeCommand = this.commands[theAC];\r\n    }\r\n    public get ablePan() {\r\n        return this._ablePan;\r\n    }\r\n    public set ablePan(v: boolean) {\r\n        this.implementation.implmentations.app.core.canvas.ablePan = v;\r\n        this._ablePan = v;\r\n    }\r\n}","import { MatterSandboxImple } from '..';\r\nimport { ACTIVECOMMAND_MODE } from '../ActiveCommandController/ActiveCommandController';\r\nexport class View {\r\n    implementation: MatterSandboxImple;\r\n    divHost: HTMLElement;\r\n    div: HTMLElement;\r\n    constructor(implementation: MatterSandboxImple) {\r\n        this.implementation = implementation;\r\n        this.divHost = implementation.implmentations.app.hostDiv;\r\n\r\n        const div = document.createElement('div');\r\n        if (div) {\r\n            this.div = div;\r\n            // this.div.style.position = 'absolute';\r\n            this.divHost.insertBefore(this.div, implementation.implmentations.app.div);\r\n            implementation.implmentations.app.div.style.height = '90%';\r\n            this.Init();\r\n            // console.log(this);\r\n        }\r\n    }\r\n    public Init() {\r\n        let div = document.createElement('button');\r\n        div.type = 'button';\r\n        div.innerText = 'select';\r\n        div.onclick = () => {\r\n            this.implementation.activeCommandController.SetActiveCommand(ACTIVECOMMAND_MODE.SELECT);\r\n        };\r\n        this.div.append(div);\r\n\r\n        div = document.createElement('button');\r\n        div.type = 'button';\r\n        div.innerText = 'rect';\r\n        div.onclick = () => {\r\n            this.implementation.activeCommandController.SetActiveCommand(ACTIVECOMMAND_MODE.RECT);\r\n        };\r\n        this.div.append(div);\r\n\r\n        div = document.createElement('button');\r\n        div.type = 'button';\r\n        div.innerText = 'cir';\r\n        div.onclick = () => {\r\n            this.implementation.activeCommandController.SetActiveCommand(ACTIVECOMMAND_MODE.CIRCLE);\r\n        };\r\n        this.div.append(div);\r\n\r\n        div = document.createElement('button');\r\n        div.type = 'button';\r\n        div.innerText = 'Tri';\r\n        div.onclick = () => {\r\n            this.implementation.activeCommandController.SetActiveCommand(ACTIVECOMMAND_MODE.TRIGON);\r\n        };\r\n        this.div.append(div);\r\n\r\n        div = document.createElement('button');\r\n        div.type = 'button';\r\n        div.innerText = 'CRO';\r\n        div.onclick = () => {\r\n            this.implementation.activeCommandController.SetActiveCommand(ACTIVECOMMAND_MODE.CROSS);\r\n        };\r\n        this.div.append(div);\r\n    }\r\n\r\n}","import { MatterSandboxImple } from '..';\r\nimport { GeometryUIBase } from '../GeometryUI/Base/GeometryUIBase';\r\nimport * as Matter from 'matter-js';\r\n\r\nimport { MGeometryBase } from '../GeometryUI/MGeometry/Base/MGeometryBase';\r\nimport { MBox } from '../GeometryUI/MGeometry/MBox';\r\n// import { MCircle } from '../GeometryUI/MGeometry/MCircle';\r\n\r\nexport class Scene {\r\n    implementation: MatterSandboxImple;\r\n    listBlocks: GeometryUIBase[] = [];\r\n\r\n    engine: Matter.Engine;\r\n    world: Matter.World;\r\n\r\n    MBoxes: MGeometryBase[] = [];\r\n\r\n    constructor(implementation: MatterSandboxImple) {\r\n        this.implementation = implementation;\r\n        // this.InitMatter();\r\n        this.InitMatterNew();\r\n    }\r\n    public InitMatter() {\r\n        this.engine = Matter.Engine.create();\r\n        this.world = this.engine.world;\r\n        console.log(this.world)\r\n        Matter.Runner.run(this.engine);\r\n    }\r\n    public InitMatterNew() {\r\n        // create engine\r\n        this.engine = Matter.Engine.create();\r\n        this.world = this.engine.world;\r\n\r\n\r\n        // create renderer\r\n        var render = Matter.Render.create({\r\n            engine: this.engine,\r\n            // element: document.body,\r\n            // options: {\r\n            //     width: 400,\r\n            //     height: 300,\r\n            //     showAngleIndicator: true\r\n            // }\r\n        });\r\n\r\n        Matter.Render.run(render);\r\n\r\n        // create runner\r\n        var runner = Matter.Runner.create();\r\n        Matter.Runner.run(runner, this.engine);\r\n\r\n    }\r\n\r\n    public Add(v: GeometryUIBase) {\r\n        // this.listBlocks.push(v);\r\n    }\r\n    public InitPost() {\r\n        this.MBoxes.push(new MBox(this, 0, 400, 500, 50, true)); // ground\r\n        this.MBoxes.push(new MBox(this, 100, 100, 50, 50));\r\n        setInterval(() => {\r\n            this.MBoxes.push(new MBox(this, 100 + ((Math.random() - 0.5) * 10), 0, 50, 50));\r\n        }, 1000);\r\n    }\r\n}","import { MouseEventData } from '../../../lib';\r\nimport { Implementations } from '..';\r\nimport { Renderer } from './Renderer';\r\nimport { GeometryCommon } from './GeometryUI/GeometryCommon';\r\nimport { View } from './View';\r\nimport { Scene } from './Scene';\r\nimport { ActiveCommandController } from './ActiveCommandController/ActiveCommandController';\r\nexport class MatterSandboxImple {\r\n    implmentations: Implementations;\r\n    renderer: Renderer;\r\n    geometryCommon: GeometryCommon;\r\n    view: View;\r\n    scene: Scene;\r\n    activeCommandController: ActiveCommandController;\r\n    constructor(implmentations: Implementations) {\r\n        this.implmentations = implmentations;\r\n        this.Init();\r\n    }\r\n    private Init() {\r\n        this.activeCommandController = new ActiveCommandController(this);\r\n        this.geometryCommon = new GeometryCommon(this);\r\n        this.scene = new Scene(this);\r\n        this.renderer = new Renderer(this);\r\n        this.view = new View(this);\r\n        this.InitPost();\r\n    }\r\n    public InitPost() {\r\n        this.scene.InitPost();\r\n        this.implmentations.app.core.canvas.SetLevel6();\r\n    }\r\n    public MouseEventController(e: MouseEventData) {\r\n        this.activeCommandController.activeCommand.MouseEventController(e);\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        this.renderer.OnRender(ctx);\r\n    }\r\n}","import { MouseEventData } from '../../lib';\r\nimport { AppMatter } from '..';\r\nimport { MatterSandboxImple } from './MatterSandboxImple';\r\nexport class Implementations {\r\n    app: AppMatter;\r\n    implementation: MatterSandboxImple;\r\n    constructor(app: AppMatter) {\r\n        this.app = app;\r\n        this.implementation = new MatterSandboxImple(this);\r\n    }\r\n    public MouseEventController(e: MouseEventData) {\r\n        if (this.implementation) {\r\n            this.implementation.MouseEventController(e);\r\n        }\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        if (this.implementation) {\r\n            this.implementation.Render(ctx);\r\n        }\r\n    }\r\n}","import { Core } from './Core';\r\nimport { Implementations } from './Implementations';\r\nexport class AppMatter {\r\n    id: string;\r\n    core: Core;\r\n    implementations: Implementations;\r\n    hostDiv: HTMLElement;\r\n    div: HTMLElement;\r\n    static Init(id: string = 'SandBox') {\r\n        new AppMatter(id);\r\n    }\r\n    constructor(id: string = 'SandBox') {\r\n        this.id = id;\r\n        this.Init();\r\n        this.InitPost();\r\n\r\n        // window['app'] = this;\r\n    }\r\n    private Init() {\r\n        const hostdiv = document.getElementById(this.id);\r\n        // console.log(hostdiv);\r\n        if (hostdiv) { this.hostDiv = hostdiv; } else { return; }\r\n\r\n        const div = document.createElement('div');\r\n        if (div) {\r\n            this.div = div;\r\n            this.div.style.width = '100%';\r\n            this.div.style.height = '100%';\r\n            // this.div.style.background = '#dddddd';\r\n            this.hostDiv.append(this.div);\r\n        }\r\n\r\n        this.core = new Core(this, div);\r\n        this.implementations = new Implementations(this);\r\n    }\r\n    private InitPost() {\r\n        this.core.InitPost();\r\n        this.core.canvas.Render = (ctx: CanvasRenderingContext2D) => this.implementations.Render(ctx);\r\n    }\r\n}","import { AppMatter as AppMatterV1 } from './AppMatter';\r\nexport class AppMatterEnv {\r\n    id: string;\r\n    appV1: AppMatterV1;\r\n    hostDiv: HTMLElement;\r\n    div: HTMLElement;\r\n    version: number = 1;\r\n    static Init(id: string = 'SandBox') {\r\n        new AppMatterEnv(id, 1);\r\n    }\r\n    constructor(id: string = 'SandBox', version: number = 1) {\r\n        this.id = id;\r\n        this.version = version;\r\n        this.Init();\r\n    }\r\n    private Init() {\r\n\r\n        switch (this.version) {\r\n            case 1:\r\n                this.appV1 = new AppMatterV1(this.id);\r\n                break;\r\n            case 2:\r\n                // this.appV1 = new NBlockV1(this.id);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n\r\n    }\r\n}","import { AppMatterEnv } from './AppMatterEnv';\nexport class Solution {\n    public divHost: HTMLElement;\n\n    constructor(id: string, index = 0) {\n        this.divHost = document.getElementById(id);\n\n        const div = document.createElement('div');\n        div.id ='ngl3d';\n        div.style.width = '100%';\n        div.style.height = '100%';\n        this.divHost.appendChild(div);\n\n        AppMatterEnv.Init(div.id);\n    }\n    public destroy() {\n        try {\n            while (this.divHost !== undefined && this.divHost.lastElementChild !== undefined) {\n                this.divHost.removeChild(this.divHost.lastElementChild);\n            }\n        } catch (error) { console.debug(error) }\n    }\n}"],"names":["Canvas","constructor","core","div","canvas","ctx","isActive","zoom","translation","translationZoom","deltaTime","canvasLoopController","log","isViewChanging","loopNum","needRenderloop","ablePan","pause","this","Init","LoopInit","document","createElement","width","clientWidth","height","clientHeight","append","getContext","Deltatime","CanvasLoopController","SetLevel4","Loop","before","performance","now","UpdateFPS","level","requestAnimationFrame","RenderPre","stop","TimerForStop","after","frameRate","toFixed","SetLevel1","SetLevel2","SetLevel3","RenderSetLevel4","Reset","setTimeout","SetLevel5","SetLevel6","Clear","clearRect","Zoom","e","wheel","console","RemapByZoom","x","xs","y","ys","Pan","xOff","preXs","yOff","preYs","RenderForce","save","translate","scale","Render","restore","CLICK_TYPE","MouseEventData","z","preX","preY","preZ","yGLPicking","command","MOVE","isDown","isDoubleClick","isMove","pressedShift","pressedAlt","pressedCtrl","preWheel","native","DeepCopy","mEvent","MouseInteraction","ioWrapper","mouseInteractionUI","mouseEventDataPre","isEnable","clickCount","click","prevent","delay","timer","down","_stopPropagation","InitNativeMouseEvent","onclick","MouseClick","ondblclick","clearTimeout","MouseDoubleClick","onmousedown","MouseDown","onmouseup","MouseUp","onmousemove","MouseMove","addEventListener","preventDefault","MouseWheel","deltaY","CommonEventBuilder","DOWN","MouseEvenEmitting","button","LEFT","MIDDLE","RIGHT","DOUBLE","MouseDrag","DRAG","buttons","DRAG_MIDDLE","DRAG_RIGHT","UP","v","WHEEL","shiftKey","altKey","ctrlKey","offsetX","offsetY","stopPropagation","mouseEventData","MouseEventEmittingForViewController","MouseEventEmittingForModel","MouseInteractionMenu","activeCommandController","MouseEventController","IOWrapper","mouseInteraction","InitEventListener","Resize","window","ReSizeWindow","ActiveCommandController","mouse","NVector3","eUI","nUI","app","implementations","MouseUpPre","MouseWheelPre","MouseDragRightPre","MouseDownPre","MouseDragPre","MouseMovePre","MouseDoubleClickPre","MouseRightClickPre","MouseMiddleClickPre","MouseLeftClickPre","MouseLeftClick","MouseMiddleClick","MouseRightClick","MouseDragRight","pushActionFromPulldown","split","Core","InitPulldown","InitCanvas","NUI","BindingActiveCommandController","InitPost","Commander","Renderer","implementation","OnRender","Update","CanvasDrawing","i","scene","MBoxes","length","listBlocks","fillStyle","beginPath","arc","Math","PI","closePath","fill","GeometryCommon","Pick","IsInside","MGeometryBase","fillColor","strokeColor","MBox","isStatic","super","body","angle","position","ColorUtility","Bodies","restitution","friction","World","world","push","DrawRectByCen","rotate","lineWidth","strokeStyle","rect","stroke","MCircle","radius","DrawCircle","MGon","side","moveTo","vertices","lineTo","MCross","ActiveCommandCommon","ac","DOWN_RIGHT","geo","geometryCommon","capture","undefined","Translation","ActiveCommandSelection","acs","ActiveCommandRect","random","ActiveCommandCircle","ActiveCommandNGon","ActiveCommandCross","ACTIVECOMMAND_MODE","commands","activeCommand","_ablePan","SELECT","RECT","CIRCLE","TRIGON","CROSS","SetActiveCommand","theAC","implmentations","View","divHost","hostDiv","insertBefore","style","type","innerText","Scene","engine","InitMatterNew","InitMatter","Matter","render","runner","Add","setInterval","MatterSandboxImple","renderer","view","Implementations","AppMatter","static","id","hostdiv","getElementById","AppMatterEnv","version","appV1","AppMatterV1","Solution","appendChild","destroy","lastElementChild","removeChild","error","debug"],"sourceRoot":""}