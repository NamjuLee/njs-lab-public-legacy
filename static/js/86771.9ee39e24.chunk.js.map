{"version":3,"file":"static/js/86771.9ee39e24.chunk.js","mappings":"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","sources":["njslab/Env/AppRigidBodyDynamics/CanvasCore/index.ts","njslab/Env/AppRigidBodyDynamics/Core/Core.ts","njslab/Env/AppRigidBodyDynamics/Implementation/ParticleSystemC/Core/Graph.ts","njslab/Env/AppRigidBodyDynamics/Implementation/ParticleSystemC/index.ts","njslab/Env/AppRigidBodyDynamics/Implementation/index.ts","njslab/Env/AppRigidBodyDynamics/index.ts"],"sourcesContent":["\r\nexport class CanvasCore {\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    t: number = 0.0;\r\n    constructor(id: string) {\r\n        this.InitCanvas(id);\r\n    }\r\n    InitCanvas(id: string) {\r\n        const canvas = document.createElement('canvas');\r\n        const host = document.getElementById(id);\r\n        if (host) {\r\n            host.appendChild(canvas);\r\n            this.host = host;\r\n        }\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            this.canvas.width = 400; // this.host.clientWidth;\r\n            this.canvas.height = 400; // this.host.clientHeight;\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.Init();\r\n            }\r\n        }\r\n    }\r\n    Init() {\r\n        // this.ctx.translate(100, 100);\r\n        // this.ctx.scale(10, 10);\r\n        this.EventBind();\r\n        this.Loop();\r\n    }\r\n    EventBind() {\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.MouseDown(e)\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.MouseUp(e);\r\n        }\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            this.MouseMove(e);\r\n        }\r\n        window.onresize = (e: UIEvent) => this.Resize(e);\r\n\r\n    }\r\n    Resize(e: UIEvent) {\r\n        // console.log(e);\r\n        this.canvas.width = this.host.clientWidth;\r\n        this.canvas.height = this.host.clientHeight;\r\n    }\r\n    Loop() {\r\n        requestAnimationFrame(() => { this.Loop(); });\r\n        this.ctx.clearRect(-10, -10, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.fillStyle = '#dddddd';\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(-500, -500, 1000, 1000);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n        this.Render(this.ctx);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(ctx);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n}","import { CanvasCore } from '../CanvasCore';\r\n\r\nexport class Core {\r\n    canvasCore: CanvasCore;\r\n    pos: number[][] = [];\r\n    col: number[][] = [];\r\n    constructor(canvasCore: CanvasCore) {\r\n        this.canvasCore = canvasCore;\r\n        for (let i = 0; i < 300; ++i) {\r\n            const origin = Math.random() * this.canvasCore.canvas.height;\r\n            this.pos.push([Math.random() * this.canvasCore.canvas.width, origin, origin, Math.random()]);\r\n            this.col.push([100 + Math.random() * 250, 0, 0, Math.random()]);\r\n        }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#eeeeee';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.fill();\r\n\r\n        for (let i = 0; i < this.pos.length; ++i) {\r\n            this.pos[i][1] += this.pos[i][3] * 7;\r\n            if (this.pos[i][1] > ctx.canvas.height) { this.pos[i][1] = 0; }\r\n            ctx.fillStyle = `rgba(${this.col[i][0]},${this.col[i][1]},${this.col[i][2]}, ${this.col[i][3]})`;\r\n            ctx.beginPath();\r\n            ctx.arc(this.pos[i][0], this.pos[i][1], 10, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e, 'core');\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e, 'core');\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e, 'core');\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        // console.log(e, 'core');\r\n    }\r\n}","import { NVector3 } from '../../../lib';\r\nexport class Graph {\r\n    nodes: Node[] = [];\r\n    edges: Edge[] = [];\r\n    constructor(v: NVector3) {\r\n        const offset = 2.0;\r\n        this.nodes.push(new Node(new NVector3(v.x, v.y, v.z), NVector3.Origin(), 1));\r\n        this.nodes.push(new Node(new NVector3(v.x - offset, v.y + offset, v.z), NVector3.Origin(), 1));\r\n        this.nodes.push(new Node(new NVector3(v.x + offset, v.y + offset, v.z), NVector3.Origin(), 1));\r\n        this.nodes.push(new Node(new NVector3(v.x + offset, v.y - offset, v.z), NVector3.Origin(), 1));\r\n        this.nodes.push(new Node(new NVector3(v.x - offset, v.y - offset, v.z), NVector3.Origin(), 1));\r\n\r\n        this.edges.push(new Edge(this.nodes[1], this.nodes[2]));\r\n        this.edges.push(new Edge(this.nodes[2], this.nodes[3]));\r\n        this.edges.push(new Edge(this.nodes[3], this.nodes[4]));\r\n        this.edges.push(new Edge(this.nodes[4], this.nodes[1]));\r\n\r\n        this.edges.push(new Edge(this.nodes[0], this.nodes[1]));\r\n        this.edges.push(new Edge(this.nodes[0], this.nodes[2]));\r\n        this.edges.push(new Edge(this.nodes[0], this.nodes[3]));\r\n        this.edges.push(new Edge(this.nodes[0], this.nodes[4]));\r\n\r\n\r\n        // this.edges.push(new Edge(this.nodes[0], this.nodes[this.nodes.length - 1]));\r\n    }\r\n    public AddNode(_p0: NVector3, _u0: NVector3, _mass: number) {\r\n        const n: Node = new Node(_p0, _u0, _mass);\r\n        this.nodes.push(n);\r\n        return n;\r\n    }\r\n\r\n    public AddEdge(n0: Node, n1: Node) {\r\n        const e: Edge = new Edge(n0, n1);\r\n        this.edges.push(e);\r\n        return e;\r\n    }\r\n    public UpdateCollision(gList: Graph[]) {\r\n        for (let i = 0; i < gList.length; ++i) {\r\n            if (gList[i] !== this) {\r\n                //\r\n            }\r\n        }\r\n\r\n    }\r\n    public Move(atr: NVector3, damping: number, g: number = -0.3, dt: number) {\r\n        // Vector3d dv = atr - n.p;\r\n        // double dist = dv.Length;\r\n        // dv.Unitize();\r\n        // //  n.f = dv * (1.0 / (dist));\r\n        // n.f = dv * Math.Exp(-0.001 * dist * dist) * 0.1;\r\n        // n.Move(dt, damping);\r\n\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            const n = this.nodes[i];\r\n            // n.f = Vector3d.ZAxis * g;\r\n            n.f.x *= g;\r\n            n.f.y *= g;\r\n            // n.f.z *= g;\r\n\r\n            const dv = new NVector3(atr.x - n.v.x, atr.y - n.v.y, atr.z - n.v.z);\r\n            const L = dv.Length();\r\n            dv.Unitize();\r\n            n.f.x = dv.x * Math.exp(-0.001 * L * L) * 0.1; // + Vector3d.ZAxis.x * g;\r\n            n.f.y = dv.y * Math.exp(-0.001 * L * L) * 0.1; // + Vector3d.ZAxis.y * g;\r\n            // n.f.z = dv.z * Math.exp(-0.001 * L * L) * 0.1; // + Vector3d.ZAxis.z * g;\r\n\r\n            n.Move(dt, damping);\r\n        }\r\n\r\n        // foreach(Node n in nodes) {\r\n        //     Vector3d dv = atr - n.p;\r\n        //     double L = dv.Length;\r\n        //     dv.Unitize();\r\n        //     n.f = dv * Math.Exp(-0.001 * L * L) * 0.1 + Vector3d.ZAxis * g;\r\n        //   }\r\n\r\n        //   foreach(Edge e in edges) {\r\n        //     e.ApplySpringForce();\r\n        //   }\r\n\r\n        //   foreach(Node n in nodes) {\r\n        //     n.Move(dt, damping);\r\n        //   }\r\n\r\n        for (let i = 0; i < this.edges.length; ++i) {\r\n            this.edges[i].ApplySpringForce();\r\n        }\r\n\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            this.nodes[i].Move(dt, damping);\r\n        }\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        // ctx.fillStyle = '#000000';\r\n        ctx.lineWidth = 0.2;\r\n        for (let i = 0; i < 4; ++i) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(this.edges[i].n0.v.x, this.edges[i].n0.v.y);\r\n            ctx.lineTo(this.edges[i].n1.v.x, this.edges[i].n1.v.y);\r\n            ctx.stroke();\r\n        }\r\n\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            const p = this.nodes[i];\r\n            ctx.beginPath();\r\n            ctx.arc(p.v.x, p.v.y, p.m * 0.2, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}\r\nexport class Edge {\r\n    public n0: Node;\r\n    public n1: Node;\r\n    public targetLength: number = 1.05;\r\n    public SpringConstant: number = 0.8;\r\n    constructor(_n0: Node, _n1: Node) {\r\n        this.n0 = _n0;\r\n        this.n1 = _n1;\r\n        this.targetLength = this.n0.v.Distance(this.n1.v);\r\n    }\r\n\r\n    public ApplySpringForce() {\r\n        const dp: NVector3 = new NVector3(this.n1.v.x - this.n0.v.x, this.n1.v.y - this.n0.v.y, this.n1.v.z - this.n0.v.z);\r\n        const dist: number = dp.Length();\r\n        dp.Unitize();\r\n\r\n        this.n0.f.x += dp.x * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n0.f.y += dp.y * (dist - this.targetLength) * this.SpringConstant;\r\n        // this.n0.f.z += dp.z * (dist - this.targetLength) * this.SpringConstant;\r\n\r\n        this.n1.f.x -= dp.x * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n1.f.y -= dp.y * (dist - this.targetLength) * this.SpringConstant;\r\n        // this.n1.f.z -= dp.z * (dist - this.targetLength) * this.SpringConstant;\r\n    }\r\n}\r\nexport class Node {\r\n    fixed: boolean = false;\r\n    v: NVector3;\r\n    u: NVector3;\r\n    f: NVector3;\r\n    m: number = 1;\r\n    constructor(v: NVector3, u: NVector3, mass: number = 1) {\r\n        this.v = v;\r\n        this.u = u;\r\n        this.f = NVector3.Origin();\r\n        this.m = mass;\r\n    }\r\n    public Move(dt: number = 0.5, damping: number = 0.99) {\r\n        if (this.fixed) { return; }\r\n        this.u.x *= damping;\r\n        this.u.y *= damping;\r\n        // this.u.z *= damping;\r\n\r\n        this.u.x += this.f.x * (dt / this.m);\r\n        this.u.y += this.f.y * (dt / this.m);\r\n        // this.u.z += this.f.z * (dt / this.m);\r\n\r\n        this.v.x += this.u.x * dt;\r\n        this.v.y += this.u.y * dt;\r\n        // this.v.z += this.u.z * dt;\r\n\r\n        if (this.v.y < 0.0) {\r\n            this.v.y = 0.0;\r\n            if (this.u.y < 0.0) { this.u.y = -this.u.y; }\r\n        }\r\n    }\r\n}","import { Graph } from './Core/Graph';\r\nimport { NVector3 } from '../../lib';\r\nexport class ParticleSystemC {\r\n    public particles: Graph[] = [];\r\n    public t = 0.6;\r\n    public m: NVector3 = new NVector3(10, 10, 10);\r\n    boundingBox: DOMRect\r\n    constructor() {\r\n        this.particles.push(new Graph(new NVector3(0, 0, 0)));\r\n        this.particles.push(new Graph(new NVector3(10, 10, 0)));\r\n\r\n        // console.log('particle system');\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        this.boundingBox = ctx.canvas.getBoundingClientRect();\r\n\r\n        // console.log(ctx);\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            this.particles[i].Move(this.m, 0.9, -1.5, this.t);\r\n            this.particles[i].Render(ctx);\r\n        }\r\n\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.m.x, this.m.y, 0.5, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e, this.ctx.canvas);\r\n        // this.m.x = (e.x - 100) * 0.1;\r\n        // this.m.y = (e.y - 200) * 0.1;\r\n\r\n        // this.m.x = (e.x - this.ctx.canvas.offsetLeft ) * 0.1;\r\n        // this.m.y = (e.y - this.ctx.canvas.offsetTop) * 0.1;\r\n\r\n        this.m.x = e.x - this.boundingBox.left;\r\n        this.m.y = e.y - this.boundingBox.top;\r\n    }\r\n}","\r\nimport { ParticleSystemC } from './ParticleSystemC';\r\nexport class Implementation {\r\n    particleSystemC: ParticleSystemC;\r\n    constructor() {\r\n        // this.particleSystemA = new ParticleSystemA();\r\n        // this.particleSystemB = new ParticleSystemB();\r\n        this.particleSystemC = new ParticleSystemC();\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        //     if (this.particleSystemA) { this.particleSystemA.Render(ctx); }\r\n        //     if (this.particleSystemB) { this.particleSystemB.Render(ctx); }\r\n        if (this.particleSystemC) { this.particleSystemC.Render(ctx); }\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // if (this.particleSystemA) { this.particleSystemA.MouseDown(e); }\r\n        // if (this.particleSystemB) { this.particleSystemB.MouseDown(e); }\r\n        if (this.particleSystemC) { this.particleSystemC.MouseDown(e); }\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // if (this.particleSystemA) { this.particleSystemA.MouseUp(e); }\r\n        // if (this.particleSystemB) { this.particleSystemB.MouseUp(e); }\r\n        if (this.particleSystemC) { this.particleSystemC.MouseUp(e); }\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // if (this.particleSystemA) { this.particleSystemA.MouseMove(e); }\r\n        // if (this.particleSystemB) { this.particleSystemB.MouseMove(e); }\r\n        if (this.particleSystemC) { this.particleSystemC.MouseMove(e); }\r\n    }\r\n}","import { CanvasCore } from './CanvasCore';\r\nimport { Core } from './Core/Core';\r\nimport { Implementation } from './Implementation';\r\n\r\n// https://gamedevelopment.tutsplus.com/tutorials/basic-2d-platformer-physics-part-1--cms-25799\r\n\r\nexport class AppRigidBodyDynamics {\r\n    canvasCore: CanvasCore;\r\n    core: Core;\r\n    implementation: Implementation;\r\n    static Init(id: string) {\r\n        const n = new AppRigidBodyDynamics(id);\r\n        n.Dummy();\r\n    }\r\n    constructor(id: string = 'SandBox') {\r\n        this.canvasCore = new CanvasCore(id);\r\n        this.core = new Core(this.canvasCore);\r\n        this.implementation = new Implementation();\r\n        this.BindEvent();\r\n        this.BindRenderer();\r\n    }\r\n    Dummy() {\r\n        //\r\n    }\r\n    BindEvent() {\r\n        this.canvasCore.MouseDown = (e: MouseEvent) => this.implementation.MouseDown(e);\r\n        this.canvasCore.MouseMove = (e: MouseEvent) => this.implementation.MouseMove(e);\r\n        this.canvasCore.MouseUp = (e: MouseEvent) => this.implementation.MouseUp(e);\r\n    }\r\n    BindRenderer() {\r\n        this.canvasCore.Render = (ctx: CanvasRenderingContext2D) => this.implementation.Render(ctx);\r\n    }\r\n}\r\n\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n\r\n    constructor(id: string) {\r\n        this.divHost = document.getElementById(id);\r\n\r\n        AppRigidBodyDynamics.Init(id)\r\n    }\r\n    public destroy() {\r\n        if (this.divHost) {\r\n            try {\r\n                while (this.divHost.firstChild) {\r\n                    this.divHost.removeChild(this.divHost.firstChild);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error in destroy method:', error);\r\n            }\r\n        } else {\r\n            console.warn('divHost is undefined in destroy method');\r\n        }\r\n    }\r\n}"],"names":["CanvasCore","constructor","id","canvas","host","ctx","t","this","InitCanvas","document","createElement","getElementById","appendChild","width","height","getContext","Init","EventBind","Loop","onmousedown","e","MouseDown","onmouseup","MouseUp","onmousemove","MouseMove","window","onresize","Resize","clientWidth","clientHeight","requestAnimationFrame","clearRect","fillStyle","beginPath","rect","closePath","fill","Render","Core","canvasCore","pos","col","i","origin","Math","random","push","length","arc","PI","MouseDrag","Graph","v","nodes","edges","Node","NVector3","x","y","z","Edge","AddNode","_p0","_u0","_mass","n","AddEdge","n0","n1","UpdateCollision","gList","Move","atr","damping","g","dt","f","dv","L","Length","Unitize","exp","ApplySpringForce","lineWidth","moveTo","lineTo","stroke","p","m","_n0","_n1","targetLength","SpringConstant","Distance","dp","dist","u","mass","fixed","ParticleSystemC","particles","boundingBox","getBoundingClientRect","left","top","Implementation","particleSystemC","AppRigidBodyDynamics","static","Dummy","core","implementation","BindEvent","BindRenderer","Solution","divHost","destroy","firstChild","removeChild","error","console","warn"],"sourceRoot":""}