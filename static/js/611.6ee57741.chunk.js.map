{"version":3,"file":"static/js/611.6ee57741.chunk.js","mappings":"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,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,EAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,EAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,EAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,EAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,EAAK,EAAK,IAAK,EAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,EAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,EAAK,IAAK,GACvE,CAAC,EAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,EAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK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","sources":["lib/NJSCore/ML/TF/TFUtility.ts","lib/NJSCore/ML/Core/TFDataUtility.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Core/DefinitionIndeCanvasCore.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Definition/TFPolynomialRegressionGradientDescent05Interaction.ts"],"sourcesContent":["import * as tf from '@tensorflow/tfjs';\r\nimport '@tensorflow/tfjs-backend-webgl';\r\n\r\nexport class TFUtility {\r\n\r\n    public static Playground() {\r\n        // this.ExeScalar();\r\n        // this.ExeAdd();\r\n        // this.ExeOperation();\r\n        // this.Tensor01();\r\n        // this.Tensor02();\r\n        // this.Tensor03();\r\n    //     console.log('Playground');\r\n    }\r\n\r\n    public static ExeScalar() {\r\n        const d = tf.scalar(10);\r\n    //     console.log('scalar.....');\r\n    //     console.log(d);\r\n        d.print();\r\n        d.print(true);\r\n\r\n        const d2 = tf.tensor([1, 2, 3]);\r\n        d2.print();\r\n        d2.print(true);\r\n\r\n        const d3 = tf.tensor1d([1, 2, 3]);\r\n        d3.print();\r\n        d3.print(true);\r\n\r\n        const d4 = tf.tensor([[1, 2], [3, 4]]);\r\n        d4.print();\r\n        //    d4.print(true);\r\n\r\n        const d5 = tf.tensor2d([[1, 2], [3, 4]]);\r\n        d5.print();\r\n        //    d5.print(true);\r\n        //    d4.add(d5).print();\r\n        const d6 = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\r\n        d6.print();\r\n\r\n        const length = 30;\r\n        const data = new Float32Array(length);\r\n        for (let i = 0; i < length; ++i) { data[i] = i; }\r\n        const d7 = tf.tensor2d(data, [10, 3]);\r\n        d7.print();\r\n\r\n        const length2 = 18;\r\n        const data2 = new Float32Array(length2);\r\n        for (let i = 0; i < length2; ++i) { data2[i] = i; }\r\n        const d8 = tf.tensor3d(data2, [2, 3, 3]);\r\n        d8.print();\r\n    }\r\n    public static ExeAdd() {\r\n        const d1 = tf.scalar(5);\r\n        const d2 = tf.tensor([1, 2, 3]).mul(d1);\r\n        d2.print();\r\n\r\n        const d3 = tf.tensor([1, 2, 3, 4, 5, 6], [2, 3]);\r\n        d3.print();\r\n        d3.mul(d1).print();\r\n        d3.add(d1).print();\r\n        d3.div(3).print();\r\n\r\n        // ..\r\n        const length = 30;\r\n        const data = new Float32Array(length);\r\n        for (let i = 0; i < length; ++i) { data[i] = i; }\r\n        const d4 = tf.tensor2d(data, [10, 3]);\r\n        d4.print();\r\n\r\n        const d5 = d4;\r\n        d5.print();\r\n\r\n        const d6 = d5.add(d4);\r\n        d6.print();\r\n\r\n        const d7 = d5.sub(d1);\r\n        d7.print();\r\n\r\n    }\r\n    public static ExeOperation() {\r\n\r\n        tf.tidy(() => {\r\n            const d1 = tf.tensor([1, 2, 3, 4, 5, 6], [2, 3], 'float32');\r\n            d1.print();\r\n\r\n            const d2 = tf.tensor([1, 2, 3, 4, 5, 6], [3, 2], 'float32');\r\n            d2.print();\r\n\r\n            d1.matMul(d2).print();\r\n\r\n            const d3 = d2.matMul(d1);\r\n            d3.print();\r\n\r\n            const d4 = tf.scalar(0.5);\r\n            d3.mul(d4).print();\r\n\r\n            const mathScore = tf.tensor1d([80, 90, 100, 80]);\r\n            const historyScore = tf.tensor1d([70, 70, 70, 70]);\r\n            mathScore.add(historyScore).div(2).print(); // print mean  // tensor num 10\r\n            mathScore.add(historyScore).div(2).abs().print(); // print mean  // tensor num 11\r\n\r\n        });\r\n        //\r\n    //     console.log(tf.memory().numTensors);\r\n\r\n    }\r\n    public static Tensor01() {\r\n        let data = tf.tensor([0, 1, 2, 3], [2, 2]);\r\n        data.print();\r\n        // [[0, 1],\r\n        // [2, 3]]\r\n\r\n        data = tf.tensor([0, 1, 2, 3, 4, 5, 6, 7]);\r\n        data.print(); // [0, 1, 2, 3, 4, 5, 6, 7]\r\n\r\n        data = tf.tensor([0, 1, 2, 3, 4, 5, 6, 7], [2, 2, 2]);\r\n        data.print();\r\n        //     [[[0, 1],\r\n        //     [2, 3]],\r\n        //    [[4, 5],\r\n        //     [6, 7]]]\r\n    }\r\n    public static Tensor02() {\r\n        let data: number[] = [];\r\n        for (let i = 0; i < 15; ++i) {\r\n            data.push(Math.random());\r\n        }\r\n        let shape = [3, 5];\r\n        let dataTensor = tf.tensor(data, shape);\r\n        dataTensor.print();\r\n\r\n        data = [];\r\n        for (let i = 0; i < 30; ++i) {\r\n            data.push(Math.random() * 100);\r\n        }\r\n        shape = [2, 3, 5];\r\n        dataTensor = tf.tensor(data, shape, 'int32');\r\n        dataTensor.print();\r\n\r\n        dataTensor = tf.tensor3d(data, [2, 3, 5], 'int32');\r\n        dataTensor.print();\r\n    }\r\n    public static Tensor03() {\r\n        let data: number[] = [];\r\n        for (let i = 0; i < 150000; ++i) {\r\n            data.push(Math.random());\r\n        }\r\n        let shape = [300, 500];\r\n        let dataTensor = tf.tensor(data, shape);\r\n        dataTensor.print();\r\n    //     console.log(tf.memory().numTensors);\r\n    }\r\n    constructor() {\r\n        //\r\n    }\r\n}\r\n\r\n","import * as tf from '@tensorflow/tfjs';\r\n\r\nexport class TFDataUtility {\r\n    static async getData() {\r\n        const carsDataReq = await fetch('https://storage.googleapis.com/tfjs-tutorials/carsData.json');\r\n        const carsData = await carsDataReq.json();\r\n        const cleaned = carsData.map((car: any) => ({\r\n            mpg: car.Miles_per_Gallon,\r\n            horsepower: car.Horsepower,\r\n        }))\r\n            .filter((car: any) => (car.mpg != null && car.horsepower != null));\r\n        return cleaned;\r\n    }\r\n    public static Get_XY_OneHot_TensorFromCSV(csv: number[][]) {\r\n        return tf.tidy(() => {\r\n            const dataByClass: number[][] = [];\r\n            const targetsByClass: number[] = [];\r\n            let targetLength = -1;\r\n            for (const example of csv) {\r\n                const data = example.slice(0, example.length - 1);\r\n                const target = example[example.length - 1];\r\n                dataByClass.push(data);\r\n                targetsByClass.push(target);\r\n                if (targetLength < target) { targetLength = target; }\r\n            }\r\n            // console.log(targetLength);\r\n            // console.log(targetsByClass);\r\n            const xs = tf.tensor2d(dataByClass, [dataByClass.length, dataByClass[0].length]);\r\n            const ys = tf.oneHot(tf.tensor1d(targetsByClass).toInt(), targetLength + 1);\r\n            return [xs, ys];\r\n        });\r\n    }\r\n    public static Get_XY_TensorFromCSV(csv: number[][]) {\r\n        return tf.tidy(() => {\r\n            const dataByClass: number[][] = [];\r\n            const targetsByClass: number[] = [];\r\n            let targetLength = -1;\r\n            for (const example of csv) {\r\n                const data = example.slice(0, example.length - 1);\r\n                const target = example[example.length - 1];\r\n                dataByClass.push(data);\r\n                targetsByClass.push(target);\r\n                if (targetLength < target) { targetLength = target; }\r\n            }\r\n            const xs = tf.tensor2d(dataByClass, [dataByClass.length, dataByClass[0].length]);\r\n            const ys = tf.tensor1d(targetsByClass);\r\n            return [xs, ys];\r\n        });\r\n    }\r\n\r\n    // tslint:disable-next-line:no-any\r\n    public static SplitTensorFromXY(xs: any, ys: any, testSplit: number = 0.5) {\r\n        const numTestExamples = Math.round(xs.shape[0] * testSplit);\r\n        const numTrainExamples = xs.shape[0] - numTestExamples;\r\n        const xTrain = xs.slice([0, 0], [numTrainExamples, xs.shape[1]]);\r\n        const xTest = xs.slice([numTrainExamples, 0], [numTestExamples, xs.shape[1]]);\r\n        const yTrain = ys.slice([0, 0], [numTrainExamples, ys.shape[1]]);\r\n        const yTest = ys.slice([numTrainExamples, 0], [numTestExamples, ys.shape[1]]);\r\n        return [xTrain, yTrain, xTest, yTest];\r\n\r\n        // return tf.tidy(() => {\r\n        //     const dataByClass = [];\r\n        //     const targetsByClass = [];\r\n        //     // for (let i = 0; i < IRIS_CLASSES.length; ++i) {\r\n        //     //     dataByClass.push([]);\r\n        //     //     targetsByClass.push([]);\r\n        //     // }\r\n        //     // for (const example of IRIS_DATA) {\r\n        //     //     const target = example[example.length - 1];\r\n        //     //     const data = example.slice(0, example.length - 1);\r\n        //     //     dataByClass[target].push(data);\r\n        //     //     targetsByClass[target].push(target);\r\n        //     // }\r\n        //     // console.log();\r\n\r\n        //     const xTrains = [];\r\n        //     const yTrains = [];\r\n        //     const xTests = [];\r\n        //     const yTests = [];\r\n        //     for (let i = 0; i < IRIS_CLASSES.length; ++i) {\r\n        //         const [xTrain, yTrain, xTest, yTest] = DataUtility.ConvertToTensors(dataByClass[i], targetsByClass[i], testSplit);\r\n        //         xTrains.push(xTrain);\r\n        //         yTrains.push(yTrain);\r\n        //         xTests.push(xTest);\r\n        //         yTests.push(yTest);\r\n        //     }\r\n\r\n        //     const concatAxis = 0;\r\n        //     return [\r\n        //         tf.concat(xTrains, concatAxis), tf.concat(yTrains, concatAxis),\r\n        //         tf.concat(xTests, concatAxis), tf.concat(yTests, concatAxis)\r\n        //     ];\r\n        // });\r\n\r\n    }\r\n    public static ConvertToTensors(data: number[][], targets: number[], testSplit: number) {\r\n    //     console.log('++');\r\n    //     console.log(data);\r\n    //     console.log(targets);\r\n    //     console.log(testSplit);\r\n\r\n        const numExamples = data.length;\r\n        if (numExamples !== targets.length) {\r\n            throw new Error('data and split have different numbers of examples');\r\n        }\r\n\r\n        const numTestExamples = Math.round(numExamples * testSplit);\r\n        const numTrainExamples = numExamples - numTestExamples;\r\n\r\n        const xDims = data[0].length;\r\n\r\n        // Create a 2D `tf.Tensor` to hold the feature data.\r\n        const xs = tf.tensor2d(data, [numExamples, xDims]);\r\n\r\n        // Create a 1D `tf.Tensor` to hold the labels, and convert the number label\r\n        // from the set {0, 1, 2} into one-hot encoding (.e.g., 0 --> [1, 0, 0]).\r\n        const ys = tf.oneHot(tf.tensor1d(targets).toInt(), 4); // IRIS_NUM_CLASSES\r\n\r\n        // Split the data into training and test sets, using `slice`.\r\n        const xTrain = xs.slice([0, 0], [numTrainExamples, xDims]);\r\n        const xTest = xs.slice([numTrainExamples, 0], [numTestExamples, xDims]);\r\n        const yTrain = ys.slice([0, 0], [numTrainExamples, 4]); // IRIS_NUM_CLASSES\r\n        const yTest = ys.slice([0, 0], [numTestExamples, 4]); // IRIS_NUM_CLASSES\r\n        return [xTrain, yTrain, xTest, yTest];\r\n    }\r\n\r\n    public static GetRandomNormal(num: number, mean: number = 0.0, stdDev: number = 0.55) {\r\n        return tf.randomNormal([num], mean, stdDev);\r\n    }\r\n    public static GetRandomNormalTensors(num: number = 1000) {\r\n\r\n        // let t0 = DataUtility.GetRandomNormal(num, 0.0, 0.55);\r\n        // let t1 = DataUtility.GetRandomNormal(num, 0.0, 0.03);\r\n        // t0.print();\r\n        // t1.print();\r\n\r\n    }\r\n\r\n    public static Shuffle(array: number[][]) {\r\n        var currentIndex = array.length, temp, randomIndex;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n            // And swap it with the current element.\r\n            temp = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temp;\r\n        }\r\n\r\n        return array;\r\n    }\r\n    // https://beta.observablehq.com/@tvirot/machine-learning-in-javascript-with-tensorflow-js#inputData\r\n    public static GetSyntheticDataTensor(totalNumData: number = 200, aCo: number = 0, bCo: number = 0, cCo: number = 0, dCo: number = 0, std: number = 0.2, needYNormal: boolean = false) {\r\n\r\n        return tf.tidy(() => {\r\n            const NUM_POINTS = totalNumData;\r\n            // const [a, b, c, d] = coeff.map(i => tf.scalar(i)); // a = tf.scalar(coeff[0]), and so on\r\n            const a = tf.scalar(aCo);\r\n            const b = tf.scalar(bCo);\r\n            const c = tf.scalar(cCo);\r\n            const d = tf.scalar(dCo);\r\n\r\n            const x = tf.randomUniform([NUM_POINTS], -1, 1);\r\n            const y = a.mul(x.pow(tf.scalar(3))).add(b.mul(x.square())).add(c.mul(x)).add(d).add(tf.randomNormal([NUM_POINTS], 0, std));\r\n\r\n            if (needYNormal) {\r\n                const ymin = y.min();\r\n                const ymax = y.max();\r\n                const theRange = ymax.sub(ymin);\r\n                const yNomalized = y.sub(ymin).div(theRange);\r\n                return { x, yNomalized };\r\n            }\r\n\r\n            return [x, y];\r\n        });\r\n    }\r\n    public static GetSyntheticData(totalNumData: number = 200, aCo: number = -0.2, bCo: number = -0.66, cCo: number = -0.1, dCo: number = 2.8, std: number = 0.2, needYNormal: boolean = false) {\r\n        return tf.tidy(() => {\r\n            const result = this.GetSyntheticDataTensor(totalNumData, aCo, bCo, cCo, dCo, std, needYNormal);\r\n            const xx = result[0].dataSync();\r\n            const yy = result[1].dataSync();\r\n            return { xx, yy };\r\n        });\r\n    }\r\n    public static GetIrisData() {\r\n        return [\r\n            [5.1, 3.5, 1.4, 0.2, 0], [4.9, 3.0, 1.4, 0.2, 0], [4.7, 3.2, 1.3, 0.2, 0],\r\n            [4.6, 3.1, 1.5, 0.2, 0], [5.0, 3.6, 1.4, 0.2, 0], [5.4, 3.9, 1.7, 0.4, 0],\r\n            [4.6, 3.4, 1.4, 0.3, 0], [5.0, 3.4, 1.5, 0.2, 0], [4.4, 2.9, 1.4, 0.2, 0],\r\n            [4.9, 3.1, 1.5, 0.1, 0], [5.4, 3.7, 1.5, 0.2, 0], [4.8, 3.4, 1.6, 0.2, 0],\r\n            [4.8, 3.0, 1.4, 0.1, 0], [4.3, 3.0, 1.1, 0.1, 0], [5.8, 4.0, 1.2, 0.2, 0],\r\n            [5.7, 4.4, 1.5, 0.4, 0], [5.4, 3.9, 1.3, 0.4, 0], [5.1, 3.5, 1.4, 0.3, 0],\r\n            [5.7, 3.8, 1.7, 0.3, 0], [5.1, 3.8, 1.5, 0.3, 0], [5.4, 3.4, 1.7, 0.2, 0],\r\n            [5.1, 3.7, 1.5, 0.4, 0], [4.6, 3.6, 1.0, 0.2, 0], [5.1, 3.3, 1.7, 0.5, 0],\r\n            [4.8, 3.4, 1.9, 0.2, 0], [5.0, 3.0, 1.6, 0.2, 0], [5.0, 3.4, 1.6, 0.4, 0],\r\n            [5.2, 3.5, 1.5, 0.2, 0], [5.2, 3.4, 1.4, 0.2, 0], [4.7, 3.2, 1.6, 0.2, 0],\r\n            [4.8, 3.1, 1.6, 0.2, 0], [5.4, 3.4, 1.5, 0.4, 0], [5.2, 4.1, 1.5, 0.1, 0],\r\n            [5.5, 4.2, 1.4, 0.2, 0], [4.9, 3.1, 1.5, 0.1, 0], [5.0, 3.2, 1.2, 0.2, 0],\r\n            [5.5, 3.5, 1.3, 0.2, 0], [4.9, 3.1, 1.5, 0.1, 0], [4.4, 3.0, 1.3, 0.2, 0],\r\n            [5.1, 3.4, 1.5, 0.2, 0], [5.0, 3.5, 1.3, 0.3, 0], [4.5, 2.3, 1.3, 0.3, 0],\r\n            [4.4, 3.2, 1.3, 0.2, 0], [5.0, 3.5, 1.6, 0.6, 0], [5.1, 3.8, 1.9, 0.4, 0],\r\n            [4.8, 3.0, 1.4, 0.3, 0], [5.1, 3.8, 1.6, 0.2, 0], [4.6, 3.2, 1.4, 0.2, 0],\r\n            [5.3, 3.7, 1.5, 0.2, 0], [5.0, 3.3, 1.4, 0.2, 0], [7.0, 3.2, 4.7, 1.4, 1],\r\n            [6.4, 3.2, 4.5, 1.5, 1], [6.9, 3.1, 4.9, 1.5, 1], [5.5, 2.3, 4.0, 1.3, 1],\r\n            [6.5, 2.8, 4.6, 1.5, 1], [5.7, 2.8, 4.5, 1.3, 1], [6.3, 3.3, 4.7, 1.6, 1],\r\n            [4.9, 2.4, 3.3, 1.0, 1], [6.6, 2.9, 4.6, 1.3, 1], [5.2, 2.7, 3.9, 1.4, 1],\r\n            [5.0, 2.0, 3.5, 1.0, 1], [5.9, 3.0, 4.2, 1.5, 1], [6.0, 2.2, 4.0, 1.0, 1],\r\n            [6.1, 2.9, 4.7, 1.4, 1], [5.6, 2.9, 3.6, 1.3, 1], [6.7, 3.1, 4.4, 1.4, 1],\r\n            [5.6, 3.0, 4.5, 1.5, 1], [5.8, 2.7, 4.1, 1.0, 1], [6.2, 2.2, 4.5, 1.5, 1],\r\n            [5.6, 2.5, 3.9, 1.1, 1], [5.9, 3.2, 4.8, 1.8, 1], [6.1, 2.8, 4.0, 1.3, 1],\r\n            [6.3, 2.5, 4.9, 1.5, 1], [6.1, 2.8, 4.7, 1.2, 1], [6.4, 2.9, 4.3, 1.3, 1],\r\n            [6.6, 3.0, 4.4, 1.4, 1], [6.8, 2.8, 4.8, 1.4, 1], [6.7, 3.0, 5.0, 1.7, 1],\r\n            [6.0, 2.9, 4.5, 1.5, 1], [5.7, 2.6, 3.5, 1.0, 1], [5.5, 2.4, 3.8, 1.1, 1],\r\n            [5.5, 2.4, 3.7, 1.0, 1], [5.8, 2.7, 3.9, 1.2, 1], [6.0, 2.7, 5.1, 1.6, 1],\r\n            [5.4, 3.0, 4.5, 1.5, 1], [6.0, 3.4, 4.5, 1.6, 1], [6.7, 3.1, 4.7, 1.5, 1],\r\n            [6.3, 2.3, 4.4, 1.3, 1], [5.6, 3.0, 4.1, 1.3, 1], [5.5, 2.5, 4.0, 1.3, 1],\r\n            [5.5, 2.6, 4.4, 1.2, 1], [6.1, 3.0, 4.6, 1.4, 1], [5.8, 2.6, 4.0, 1.2, 1],\r\n            [5.0, 2.3, 3.3, 1.0, 1], [5.6, 2.7, 4.2, 1.3, 1], [5.7, 3.0, 4.2, 1.2, 1],\r\n            [5.7, 2.9, 4.2, 1.3, 1], [6.2, 2.9, 4.3, 1.3, 1], [5.1, 2.5, 3.0, 1.1, 1],\r\n            [5.7, 2.8, 4.1, 1.3, 1], [6.3, 3.3, 6.0, 2.5, 2], [5.8, 2.7, 5.1, 1.9, 2],\r\n            [7.1, 3.0, 5.9, 2.1, 2], [6.3, 2.9, 5.6, 1.8, 2], [6.5, 3.0, 5.8, 2.2, 2],\r\n            [7.6, 3.0, 6.6, 2.1, 2], [4.9, 2.5, 4.5, 1.7, 2], [7.3, 2.9, 6.3, 1.8, 2],\r\n            [6.7, 2.5, 5.8, 1.8, 2], [7.2, 3.6, 6.1, 2.5, 2], [6.5, 3.2, 5.1, 2.0, 2],\r\n            [6.4, 2.7, 5.3, 1.9, 2], [6.8, 3.0, 5.5, 2.1, 2], [5.7, 2.5, 5.0, 2.0, 2],\r\n            [5.8, 2.8, 5.1, 2.4, 2], [6.4, 3.2, 5.3, 2.3, 2], [6.5, 3.0, 5.5, 1.8, 2],\r\n            [7.7, 3.8, 6.7, 2.2, 2], [7.7, 2.6, 6.9, 2.3, 2], [6.0, 2.2, 5.0, 1.5, 2],\r\n            [6.9, 3.2, 5.7, 2.3, 2], [5.6, 2.8, 4.9, 2.0, 2], [7.7, 2.8, 6.7, 2.0, 2],\r\n            [6.3, 2.7, 4.9, 1.8, 2], [6.7, 3.3, 5.7, 2.1, 2], [7.2, 3.2, 6.0, 1.8, 2],\r\n            [6.2, 2.8, 4.8, 1.8, 2], [6.1, 3.0, 4.9, 1.8, 2], [6.4, 2.8, 5.6, 2.1, 2],\r\n            [7.2, 3.0, 5.8, 1.6, 2], [7.4, 2.8, 6.1, 1.9, 2], [7.9, 3.8, 6.4, 2.0, 2],\r\n            [6.4, 2.8, 5.6, 2.2, 2], [6.3, 2.8, 5.1, 1.5, 2], [6.1, 2.6, 5.6, 1.4, 2],\r\n            [7.7, 3.0, 6.1, 2.3, 2], [6.3, 3.4, 5.6, 2.4, 2], [6.4, 3.1, 5.5, 1.8, 2],\r\n            [6.0, 3.0, 4.8, 1.8, 2], [6.9, 3.1, 5.4, 2.1, 2], [6.7, 3.1, 5.6, 2.4, 2],\r\n            [6.9, 3.1, 5.1, 2.3, 2], [5.8, 2.7, 5.1, 1.9, 2], [6.8, 3.2, 5.9, 2.3, 2],\r\n            [6.7, 3.3, 5.7, 2.5, 2], [6.7, 3.0, 5.2, 2.3, 2], [6.3, 2.5, 5.0, 1.9, 2],\r\n            [6.5, 3.0, 5.2, 2.0, 2], [6.2, 3.4, 5.4, 2.3, 2], [5.9, 3.0, 5.1, 1.8, 2],\r\n        ];\r\n    }\r\n    constructor() {\r\n        /* */\r\n    }\r\n}","import { IndependentPanelCanvas } from '../../../../../../../lib/NJSCore/App/NUI/WrapperIndependentPanel/Panel/Common/IndependentPanelCanvas';\r\n\r\nimport { TFProject } from '..';\r\nexport class DefinitionIndeCanvasCore {\r\n    scene: TFProject;\r\n    indeCanvas: IndependentPanelCanvas;\r\n    mOffX = -12;\r\n    mOffY = -12;\r\n    constructor(scene: TFProject, width: number = 650, height: number = 350) {\r\n        this.scene = scene;\r\n        this.scene.definitions.push(this);\r\n        this.InitIndeCanvas(width, height);\r\n    }\r\n    InitIndeCanvas(width: number = 650, height: number = 350) {\r\n        if (this.scene.implementation.app.needUI) {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 50, 50, width, height, true);\r\n        } else {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 1, -25, width, height, true);\r\n        }\r\n        this.indeCanvas.title = 'TF Env';\r\n        this.indeCanvas.btnHam.isHidden = true;\r\n        this.indeCanvas.btnMini.isHidden = true;\r\n        this.indeCanvas.RenderIndependentCanvas = (ctx: CanvasRenderingContext2D) => (this.RenderIndependentCanvas(ctx));\r\n    }\r\n    get width() {\r\n        return this.indeCanvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.indeCanvas.canvas.height;\r\n    }\r\n    Init(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    MouseMove(x: number, y: number) { /* */ }\r\n    MouseMovePre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMove(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDown(x: number, y: number) { /* */ }\r\n    MouseDownPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDown(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseUp(x: number, y: number) { /* */ }\r\n    MouseUpPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseUp(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDrag(x: number, y: number) { /* */ }\r\n    MouseDragPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDrag(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseLeftClick(x: number, y: number) { /* */ }\r\n    MouseLeftClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseLeftClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseMiddleClick(x: number, y: number) { /* */ }\r\n    MouseMiddleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMiddleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseRightClick(x: number, y: number) { /* */ }\r\n    MouseRightClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseRightClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDoubleClick(x: number, y: number) { /* */ }\r\n    MouseDoubleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDoubleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) { /* */ }\r\n    MouseWheelPre(x: number, y: number, v: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseWheel(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY, v);\r\n    }\r\n\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFPolynomialRegressionGradientDescent05Interaction extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    col: string[] = ['#ff0000', '#00ff00', '#0000ff', '#00fff0', '#ff0000', '#fff000', '#0fff00'];\r\n\r\n    tfLinearRegression: PolynomialRegression[] = [];\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Regression ';\r\n        this.Init();\r\n        this.InitUI();\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n\r\n        this.tfLinearRegression.push(new PolynomialRegression(1));\r\n        this.tfLinearRegression.push(new PolynomialRegression(2));\r\n        this.tfLinearRegression.push(new PolynomialRegression(3));\r\n        this.tfLinearRegression.push(new PolynomialRegression(4));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(2));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(3));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(4));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(5));\r\n\r\n        this.indeCanvas.canvas.style.zIndex = '-1';\r\n        // this.indeCanvas.bodyDiv.divHost.style.pointerEvents = 'auto';\r\n        // this.indeCanvas.bodyDiv.div.style.pointerEvents = 'auto';\r\n\r\n        // const div = document.createElement('div');\r\n        // div.style.background = '#ff0000';\r\n        // div.style.width = '100px';\r\n        // div.style.height = '100px';\r\n        // div.style.position = 'absolute';\r\n        // div.style.zIndex = '1';\r\n        // div.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.preventDefault();\r\n        // };\r\n        // console.log(this.indeCanvas);\r\n\r\n        // let input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // this.indeCanvas.bodyDiv.div.append(div);\r\n\r\n        TFDataUtility.getData().then((d: any) => {\r\n            // console.log(d);\r\n        });\r\n\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '40px';\r\n        div.style.color = '#ffffff';\r\n\r\n        let t = document.createElement('p');\r\n        t.textContent = 'click on this screen to add data';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.textContent = 'LinearRegression';\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[0];\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[1];\r\n        t.textContent = 'Degree of polynomial - 2';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[2];\r\n        t.textContent = 'Degree of polynomial - 3';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[3];\r\n        t.textContent = 'Degree of polynomial - 4';\r\n        div.append(t);\r\n\r\n        const divHost = document.getElementById('indePanel');\r\n        if (divHost) {\r\n            divHost.append(div);\r\n\r\n            //     const b = document.createElement('button');\r\n            //     b.textContent = 'run';\r\n            //     b.style.position = 'absolute';\r\n            //     b.style.left = '650px';\r\n            //     b.onclick = () => {\r\n            //         console.log(this);\r\n            //     };\r\n            //     this.scene.implementation.app.model.modelViewCoreWrapper.viewWrapper.div.append(b);\r\n        }\r\n        // this.scene.canvas.canvas.\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n\r\n            for (let m = 0; m < this.tfLinearRegression.length; ++m) {\r\n                const xx = [], yy = [];\r\n                for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n                // console.log(xx);\r\n                // console.log(yy);\r\n                // ............................ train\r\n                this.tfLinearRegression[m].train(xx, yy);\r\n                // ............................ end train\r\n\r\n                this.RenderLine(ctx);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        for (let m = 0; m < this.tfLinearRegression.length; ++m) {\r\n            const curveX: number[] = [];\r\n            for (let x = -1; x <= 1; x += 0.08) {\r\n                curveX.push(x);\r\n            }\r\n\r\n            // ............................ predict\r\n            const ys = tf.tidy(() => {\r\n                return this.tfLinearRegression[m].predict(tf.tensor1d(curveX));\r\n            });\r\n\r\n            let curveY = ys.dataSync();\r\n            ys.dispose();\r\n            // ............................ end predict\r\n\r\n            ctx.lineWidth = 1;\r\n            ctx.strokeStyle = this.col[m]; // '#00fff0';\r\n            ctx.beginPath();\r\n            ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n            for (let i = 1; i < curveX.length; ++i) {\r\n                ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n            }\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}\r\nclass PolynomialRegression {\r\n    weights: tf.Variable[] = [];\r\n    bias: tf.Variable;\r\n\r\n    dim: number = 3;\r\n    leraningRate: number = 0.2;\r\n    optimizer: tf.AdamOptimizer;\r\n    constructor(dim: number = 0) {\r\n        this.dim = dim;\r\n        for (let i = 0; i < 5; ++i) {\r\n            const weight = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n            weight.print();\r\n            this.weights.push(weight);\r\n        }\r\n\r\n        this.bias = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n        this.optimizer = tf.train.adam(this.leraningRate);\r\n    }\r\n\r\n    public predict1d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.mul(this.weights[0])\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict2d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.square().mul(this.weights[1])\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict3d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(3)).mul(this.weights[2])\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict4d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(4)).mul(this.weights[3])\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict5d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(5)).mul(this.weights[4])\r\n            .add(x.pow(tf.scalar(4)).mul(this.weights[3]))\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        if (this.dim === 5) { return this.predict5d(x); }\r\n        if (this.dim === 4) { return this.predict4d(x); }\r\n        if (this.dim === 3) { return this.predict3d(x); }\r\n        if (this.dim === 2) { return this.predict2d(x); }\r\n        if (this.dim === 1) { return this.predict1d(x); }\r\n        return this.predict1d(x);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}"],"names":["TFUtility","d","tf","print","d2","d3","data","Float32Array","i","data2","d1","mul","add","div","d4","d5","sub","matMul","mathScore","historyScore","abs","push","Math","random","shape","dataTensor","constructor","TFDataUtility","static","carsDataReq","fetch","json","map","car","mpg","Miles_per_Gallon","horsepower","Horsepower","filter","csv","dataByClass","targetsByClass","targetLength","example","slice","length","target","toInt","xs","ys","testSplit","numTestExamples","round","numTrainExamples","xTrain","xTest","targets","numExamples","Error","xDims","num","mean","stdDev","array","temp","randomIndex","currentIndex","floor","totalNumData","aCo","bCo","cCo","dCo","std","needYNormal","NUM_POINTS","a","b","c","x","y","pow","square","ymin","min","theRange","max","yNomalized","result","this","GetSyntheticDataTensor","xx","dataSync","yy","DefinitionIndeCanvasCore","scene","width","height","indeCanvas","mOffX","mOffY","definitions","InitIndeCanvas","implementation","app","needUI","IndependentPanelCanvas","viewController","NUIWrapper","NUI","independentPanelWrapper","title","btnHam","isHidden","btnMini","RenderIndependentCanvas","ctx","canvas","Init","MouseMove","MouseMovePre","IsMouseInsidePanel","vec","HeadHeight","MouseDown","MouseDownPre","MouseUp","MouseUpPre","MouseDrag","MouseDragPre","MouseLeftClick","MouseLeftClickPre","MouseMiddleClick","MouseMiddleClickPre","MouseRightClick","MouseRightClickPre","MouseDoubleClick","MouseDoubleClickPre","MouseWheel","v","MouseWheelPre","TFPolynomialRegressionGradientDescent05Interaction","tfProjct","super","xpos","ypos","xspeed","yspeed","xdirection","ydirection","rad","vs","selVec","undefined","col","tfLinearRegression","InitUI","PolynomialRegression","style","zIndex","then","document","createElement","position","left","color","t","textContent","append","marginTop","marginBottom","divHost","getElementById","m","NVector3","MapX","MapY","MathUtility","GridLine","strokeStyle","xInterval","yInterval","lineWidth","x0","y0","x1","y1","beginPath","moveTo","lineTo","stroke","fillStyle","rect","closePath","fill","train","RenderLine","arc","PI","font","textAlign","fillText","toFixed","curveX","predict","curveY","dispose","dim","weights","bias","leraningRate","optimizer","weight","predict1d","predict2d","predict3d","predict4d","predict5d","loss","pred","label","xVal","yVal","minimize"],"sourceRoot":""}