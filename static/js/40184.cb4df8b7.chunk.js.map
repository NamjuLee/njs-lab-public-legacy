{"version":3,"file":"static/js/40184.cb4df8b7.chunk.js","mappings":"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","sources":["njslab/LabStarter/AppCanvasRaytracer/Implementation/Common.ts","njslab/LabStarter/AppCanvasRaytracer/Implementation/index.ts","njslab/LabStarter/AppCanvasRaytracer/index.ts"],"sourcesContent":["\r\nexport class Vector {\r\n    constructor(public x: number,\r\n                public y: number,\r\n                public z: number) {\r\n    }\r\n    static times(k: number, v: Vector) { return new Vector(k * v.x, k * v.y, k * v.z); }\r\n    static minus(v1: Vector, v2: Vector) { return new Vector(v1.x - v2.x, v1.y - v2.y, v1.z - v2.z); }\r\n    static plus(v1: Vector, v2: Vector) { return new Vector(v1.x + v2.x, v1.y + v2.y, v1.z + v2.z); }\r\n    static dot(v1: Vector, v2: Vector) { return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z; }\r\n    static mag(v: Vector) { return Math.sqrt(v.x * v.x + v.y * v.y + v.z * v.z); }\r\n    static norm(v: Vector) { var mag = Vector.mag(v); var div = (mag === 0) ? Infinity : 1.0 / mag; return Vector.times(div, v); }\r\n    static cross(v1: Vector, v2: Vector) { return new Vector(v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x);}\r\n}\r\n\r\nexport class Color {\r\n    constructor(public r: number,\r\n                public g: number,\r\n                public b: number) {\r\n    }\r\n    static scale(k: number, v: Color): Color { return new Color(k * v.r, k * v.g, k * v.b); }\r\n    static plus(v1: Color, v2: Color): Color { return new Color(v1.r + v2.r, v1.g + v2.g, v1.b + v2.b); }\r\n    static times(v1: Color, v2: Color): Color { return new Color(v1.r * v2.r, v1.g * v2.g, v1.b * v2.b); }\r\n    static white = new Color(1.0, 1.0, 1.0);\r\n    static grey = new Color(0.5, 0.5, 0.5);\r\n    static black = new Color(0.05, 0.05, 0.05);\r\n    static background = Color.black;\r\n    static defaultColor = Color.black;\r\n    static toDrawingColor(c: Color): number[] {\r\n        var legalize = (d: any) => d > 1 ? 1 : d;\r\n        return [\r\n            Math.floor(legalize(c.r) * 255),\r\n            Math.floor(legalize(c.g) * 255),\r\n            Math.floor(legalize(c.b) * 255)\r\n        ];\r\n        \r\n    }\r\n}\r\nexport class Camera {\r\n    public forward: Vector;\r\n    public right: Vector;\r\n    public up: Vector;\r\n    constructor(public pos: Vector, lookAt: Vector) {\r\n        var down = new Vector(0.0, -1.0, 0.0);\r\n        this.forward = Vector.norm(Vector.minus(lookAt, this.pos));\r\n        this.right = Vector.times(1.5, Vector.norm(Vector.cross(this.forward, down)));\r\n        this.up = Vector.times(1.5, Vector.norm(Vector.cross(this.forward, this.right)));\r\n    }\r\n}\r\n\r\nexport class Scene {\r\n    things: Thing[];\r\n    lights: Light[];\r\n    camera: Camera;\r\n}\r\n\r\nexport class Thing {\r\n    intersect: (ray: Ray) => Intersection | undefined;\r\n    normal: (pos: Vector) => Vector;\r\n    surface: Surface;\r\n}\r\n\r\nexport class Light {\r\n    pos: Vector;\r\n    color: Color;\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nexport class Ray {\r\n    start: Vector;\r\n    dir: Vector;\r\n}\r\n\r\nexport class Intersection {\r\n    thing: Thing;\r\n    ray: Ray;\r\n    dist: number;\r\n}\r\n\r\nexport class Surface {\r\n    diffuse: (pos: Vector) => Color;\r\n    specular: (pos: Vector) => Color;\r\n    reflect: (pos: Vector) => number;\r\n    roughness: number;\r\n}\r\n","import { namespace } from 'd3-selection';\r\nimport { \r\n    Vector, Color, Camera, \r\n    Thing, Light, Scene,\r\n    Surface, Ray, Intersection,\r\n} from './Common';\r\n\r\nexport class Implementation {\r\n    constructor(id: string) {\r\n        exec(id);\r\n    }\r\n}\r\n\r\nnamespace Surfaces {\r\n    export const shiny: Surface = {\r\n        diffuse: function(pos) { return Color.white; },\r\n        specular: function(pos) { return Color.grey; },\r\n        reflect: function(pos) { return 0.0; },\r\n        roughness: 250\r\n    }\r\n    export const checkerboard: Surface = {\r\n        diffuse: function(pos) {\r\n            if ((Math.floor(pos.z) + Math.floor(pos.x)) % 2 !== 0) {\r\n                return Color.white;\r\n            } else {\r\n                return Color.black;\r\n            }\r\n        },\r\n        specular: function(pos) { return Color.white; },\r\n        reflect: function(pos) {\r\n            if ((Math.floor(pos.z) + Math.floor(pos.x)) % 2 !== 0) {\r\n                return 0.1;\r\n            } else {\r\n                return 0.7;\r\n            }\r\n        },\r\n        roughness: 150\r\n    }\r\n}\r\n\r\nfunction exec(id: string) {\r\n    const div = document.getElementById(id) as HTMLDivElement;\r\n    const canvas = document.createElement('canvas') ;\r\n    canvas.width = 512;\r\n    canvas.height = 512;\r\n    div.append(canvas);\r\n    // document.body.appendChild(canv);\r\n    const ctx = canvas.getContext('2d');\r\n    const rayTracer = new RayTracer();\r\n    return rayTracer.render(defaultScene(), ctx, 512, 512);\r\n}\r\n\r\nfunction defaultScene(): Scene {\r\n    return {\r\n        things: [new Plane(new Vector(0.0, 1.0, 0.0), 0.0, Surfaces.checkerboard),\r\n                 new Sphere(new Vector(0.0, 1.0, -0.25), 1.0, Surfaces.shiny),\r\n                 new Sphere(new Vector(-6, 3.0, -5.0), 1.0, Surfaces.shiny),\r\n                 new Sphere(new Vector(-6, 8.0, 15.0), 5.0, Surfaces.shiny),\r\n                 new Sphere(new Vector(-1.0, 0.5, 1.5), 0.5, Surfaces.shiny)],\r\n        \r\n        lights: [\r\n            { pos: new Vector(-2.0, 2.5, 0.0), color: new Color(1, 1, 1) },\r\n            // { pos: new Vector(-2.0, 2.5, 0.0), color: new Color(0.49, 0.07, 0.07) },\r\n            // { pos: new Vector(1.5, 2.5, 1.5), color: new Color(0.07, 0.07, 0.49) },\r\n            // { pos: new Vector(1.5, 2.5, -1.5), color: new Color(0.07, 0.49, 0.071) },\r\n            { pos: new Vector(0.0, 3.5, 0.0), color: new Color(0.21, 0.21, 0.35) }\r\n        ],\r\n        camera: new Camera(new Vector(3.0, 2.0, 4.0), new Vector(-1.0, 0.5, 0.0))\r\n    };\r\n}\r\n\r\n\r\n\r\nclass Sphere implements Thing {\r\n    public radius2: number;\r\n\r\n    constructor(public center: Vector, radius: number, public surface: Surface) {\r\n        this.radius2 = radius * radius;\r\n    }\r\n    intersect(ray: Ray): any {\r\n        var eo = Vector.minus(this.center, ray.start);\r\n        var v = Vector.dot(eo, ray.dir);\r\n        var dist = 0;\r\n        if (v >= 0) {\r\n            var disc = this.radius2 - (Vector.dot(eo, eo) - v * v);\r\n            if (disc >= 0) {\r\n                dist = v - Math.sqrt(disc);\r\n            }\r\n        }\r\n        if (dist === 0) {\r\n            return null;\r\n        } else {\r\n            return { thing: this, ray: ray, dist: dist };\r\n        }\r\n    }\r\n    normal(pos: Vector): Vector { \r\n        return Vector.norm(Vector.minus(pos, this.center)); \r\n    }\r\n}\r\n\r\nclass Plane implements Thing {\r\n\r\n    constructor(norm: Vector, offset: number, public surface: Surface) {\r\n        this.normal = function(pos: Vector) { return norm; }\r\n        this.intersect = (ray: Ray): any => {\r\n            var denom = Vector.dot(norm, ray.dir);\r\n            if (denom > 0) {\r\n                return undefined;\r\n            } else {\r\n                var dist = (Vector.dot(norm, ray.start) + offset) / (-denom);\r\n                return { thing: this, ray: ray, dist: dist };\r\n            }\r\n        }\r\n    }\r\n    public intersect: (ray: Ray) =>Intersection;\r\n    public normal: (pos: Vector) =>Vector;\r\n}\r\n\r\n\r\nclass RayTracer {\r\n    private maxDepth = 100;\r\n\r\n    private intersections(ray: Ray, scene: Scene): Intersection | undefined {\r\n        let closest = +Infinity;\r\n        let closestInter: Intersection | undefined = undefined;\r\n        for (let i in scene.things) {\r\n            let inter = scene.things[i].intersect(ray);\r\n            if (inter != null && inter.dist < closest) {\r\n                closestInter = inter;\r\n                closest = inter.dist;\r\n            }\r\n        }\r\n        return closestInter;\r\n    }\r\n\r\n    private testRay(ray: Ray, scene: Scene) {\r\n        const inter: Intersection | undefined = this.intersections(ray, scene);\r\n        if (inter === undefined) {\r\n            return undefined;\r\n        } else {\r\n            return inter.dist;\r\n        }\r\n    }\r\n\r\n    private traceRay(ray: Ray, scene: Scene, depth: number): Color {\r\n        const inter: Intersection | undefined = this.intersections(ray, scene);\r\n        if (inter === undefined) {\r\n            return Color.background;\r\n        } else {\r\n            return this.shade(inter, scene, depth);\r\n        }\r\n    }\r\n\r\n    private shade(inter: Intersection, scene: Scene, depth: number) {\r\n        var d = inter.ray.dir;\r\n        var pos = Vector.plus(Vector.times(inter.dist, d), inter.ray.start);\r\n        var normal = inter.thing.normal(pos);\r\n        var reflectDir = Vector.minus(d, Vector.times(2, Vector.times(Vector.dot(normal, d), normal)));\r\n        var naturalColor = Color.plus(Color.background,\r\n                                      this.getNaturalColor(inter.thing, pos, normal, reflectDir, scene));\r\n        var reflectedColor = (depth >= this.maxDepth) ? Color.grey : this.getReflectionColor(inter.thing, pos, normal, reflectDir, scene, depth);\r\n        return Color.plus(naturalColor, reflectedColor);\r\n    }\r\n\r\n    private getReflectionColor(thing: Thing, pos: Vector, normal: Vector, rd: Vector, scene: Scene, depth: number) {\r\n        return Color.scale(thing.surface.reflect(pos), this.traceRay({ start: pos, dir: rd }, scene, depth + 1));\r\n    }\r\n\r\n    private getNaturalColor(thing: Thing, pos: Vector, norm: Vector, rd: Vector, scene: Scene) {\r\n        const addLight = (col: Color, light: Light) => {\r\n            const disLight = Vector.minus(light.pos, pos);\r\n            const livec = Vector.norm(disLight);\r\n            const neatIsect = this.testRay({ start: pos, dir: livec }, scene);\r\n            const isInShadow = (neatIsect === undefined) ? false : (neatIsect <= Vector.mag(disLight));\r\n            if (isInShadow) {\r\n                return col;\r\n            } else {\r\n                const illum = Vector.dot(livec, norm);\r\n                const lcolor = (illum > 0) ? Color.scale(illum, light.color)\r\n                                          : Color.defaultColor;\r\n                const specular = Vector.dot(livec, Vector.norm(rd));\r\n                const scolor = (specular > 0) ? Color.scale(Math.pow(specular, thing.surface.roughness), light.color)\r\n                                          : Color.defaultColor;\r\n                return Color.plus(col, Color.plus(Color.times(thing.surface.diffuse(pos), lcolor),\r\n                                                  Color.times(thing.surface.specular(pos), scolor)));\r\n            }\r\n        }\r\n        return scene.lights.reduce(addLight, Color.defaultColor);\r\n    }\r\n\r\n    public render(scene: any, ctx: any, screenWidth: number, screenHeight: number) {\r\n        var getPoint = (x: number, y: number, camera: Camera) => {\r\n            var recenterX = (x: number) =>(x - (screenWidth / 2.0)) / 2.0 / screenWidth;\r\n            var recenterY = (y: number) => - (y - (screenHeight / 2.0)) / 2.0 / screenHeight;\r\n            return Vector.norm(Vector.plus(camera.forward, Vector.plus(Vector.times(recenterX(x), camera.right), Vector.times(recenterY(y), camera.up))));\r\n        }\r\n\r\n        for (var y = 0; y < screenHeight; y++) {\r\n            for (var x = 0; x < screenWidth; x++) {\r\n                var color = this.traceRay({ start: scene.camera.pos, dir: getPoint(x, y, scene.camera) }, scene, 0);\r\n                var c = Color.toDrawingColor(color);\r\n                ctx.fillStyle = 'rgb(' + String(c[0]) + ', ' + String(c[1]) + ', ' + String(c[2]) + ')';\r\n                ctx.fillRect(x, y, x + 1, y + 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { Implementation } from './Implementation';\r\nexport class AppCanvasTemplate {\r\n    implementation: Implementation;\r\n    static Init(id: string) {\r\n        const n = new AppCanvasTemplate(id);\r\n        n.Dummy();\r\n    }\r\n    constructor(id: string = 'SandBox') {\r\n        this.implementation = new Implementation(id);\r\n        console.log('AppCanvasTemplate 1000');\r\n    }\r\n    public Dummy() {\r\n        //\r\n    }\r\n}\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n\r\n    constructor(id: string) {\r\n        this.divHost = document.getElementById(id);\r\n\r\n        AppCanvasTemplate.Init(id)\r\n    }\r\n    public destroy() {\r\n        if (this.divHost) {\r\n            try {\r\n                while (this.divHost.firstChild) {\r\n                    this.divHost.removeChild(this.divHost.firstChild);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error in destroy method:', error);\r\n            }\r\n        } else {\r\n            console.warn('divHost is undefined in destroy method');\r\n        }\r\n    }\r\n}"],"names":["Vector","constructor","x","y","z","static","k","v","v1","v2","Math","sqrt","mag","div","Infinity","times","Color","r","g","b","c","legalize","d","floor","white","grey","black","background","defaultColor","Camera","pos","lookAt","forward","right","up","down","this","norm","minus","cross","Implementation","id","document","getElementById","canvas","createElement","width","height","append","ctx","getContext","RayTracer","render","things","Plane","Surfaces","checkerboard","Sphere","shiny","lights","color","camera","exec","diffuse","specular","reflect","roughness","center","radius","surface","radius2","intersect","ray","eo","start","dot","dir","dist","disc","thing","normal","offset","denom","maxDepth","intersections","scene","closestInter","closest","i","inter","testRay","undefined","traceRay","depth","shade","plus","reflectDir","naturalColor","getNaturalColor","reflectedColor","getReflectionColor","rd","scale","reduce","col","light","disLight","livec","neatIsect","illum","lcolor","scolor","pow","screenWidth","screenHeight","getPoint","recenterX","recenterY","toDrawingColor","fillStyle","String","fillRect","AppCanvasTemplate","Dummy","implementation","console","log","Solution","divHost","Init","destroy","firstChild","removeChild","error","warn"],"sourceRoot":""}