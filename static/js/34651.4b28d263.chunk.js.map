{"version":3,"file":"static/js/34651.4b28d263.chunk.js","mappings":"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","sources":["njslab/Tools/GraphVizCompuCourse/GraphSystemC/Core/Graph.ts","njslab/Tools/GraphVizCompuCourse/GraphSystemC/CanvasCore/index.ts","njslab/Tools/GraphVizCompuCourse/GraphSystemC/index.ts","njslab/Tools/GraphVizCompuCourse/index.ts"],"sourcesContent":["import { NVector3 } from '../../../../../lib/NJSCore';\r\n// import { Blank } from './Blank';\r\nexport class Graph {\r\n    nodes: Node[] = [];\r\n    edges: Edge[] = [];\r\n    m: NVector3;\r\n    capture: Node | undefined = undefined;\r\n    historyTimer = 0.0;\r\n    collisionTrajectory: NVector3[] = [];\r\n    constructor() {\r\n        this.m = new NVector3(0, 0);\r\n\r\n        const a = this.AddNode(0, 0);\r\n        a.fixed = true;\r\n\r\n        this.AddNode(100, 0);\r\n        // this.AddNode(-10, 0);\r\n        this.AddEdge(this.nodes[0], this.nodes[1]);\r\n        // this.AddEdge(this.nodes[0], this.nodes[2]);\r\n\r\n\r\n        this.AddNode(120, 10);\r\n        this.AddNode(120, -10);\r\n        this.AddEdge(this.nodes[1], this.nodes[2]);\r\n        this.AddEdge(this.nodes[1], this.nodes[3]);\r\n\r\n        this.AddNode(150, 20);\r\n        this.AddNode(150, 10);\r\n        this.AddEdge(this.nodes[2], this.nodes[4]);\r\n        this.AddEdge(this.nodes[2], this.nodes[5]);\r\n\r\n        // this.AddEdge(this.nodes[2], this.nodes[0]);\r\n    }\r\n    UpdateLength(v: number) {\r\n        for (let i = 0; i < this.edges.length; ++i) {\r\n            this.edges[i].targetLength = v;\r\n        }\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n        this.capture = this.FindNode(x, y);\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        const n = this.AddNode(x, y);\r\n        const cn = this.FindCloseNode(n);\r\n        if (cn) {\r\n            this.AddEdge(n, cn);\r\n        }\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.capture) {\r\n            this.capture.v.x = x;\r\n            this.capture.v.y = y;\r\n        }\r\n    }\r\n    AddNode(x: number, y: number) {\r\n        const n = new Node(new NVector3(x, y), NVector3.Zero(), 2);\r\n        this.nodes.push(n);\r\n        return n;\r\n    }\r\n    AddEdge(n0: Node, n1: Node) {\r\n        const e = new Edge(n0, n1);\r\n        this.edges.push(e);\r\n        return e;\r\n    }\r\n    FindCloseNode(n: Node, dis: number = 150000) {\r\n        let index = -1;\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            if (this.nodes[i] !== n) {\r\n                let theDis = this.nodes[i].v.Distance(n.v);\r\n                if (theDis < dis) {\r\n                    dis = theDis;\r\n                    index = i;\r\n                }\r\n            }\r\n        }\r\n        if (index !== -1) {\r\n            return this.nodes[index];\r\n        }\r\n        return undefined;\r\n    }\r\n    FindNode(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            let theDis = this.nodes[i].v.Distance(this.m);\r\n            if (theDis < 10) {\r\n                this.capture = this.nodes[i];\r\n                console.log(this.capture.colNodes);\r\n                return this.nodes[i];\r\n            }\r\n        }\r\n        this.capture = undefined;\r\n        return undefined;\r\n    }\r\n    public Move(atr: NVector3, damping: number, g: number = -0.3, dt: number) {\r\n        // Vector3d dv = atr - n.p;\r\n        // double dist = dv.Length;\r\n        // dv.Unitize();\r\n        // //  n.f = dv * (1.0 / (dist));\r\n        // n.f = dv * Math.Exp(-0.001 * dist * dist) * 0.1;\r\n        // n.Move(dt, damping);\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            const n = this.nodes[i];\r\n            // n.f = Vector3d.ZAxis * g;\r\n            n.f.x *= g;\r\n            n.f.y *= g;\r\n            n.f.z *= g;\r\n            const dv = new NVector3(atr.x - n.v.x, atr.y - n.v.y, atr.z - n.v.z);\r\n            const L = dv.Length();\r\n            // console.log(L);\r\n            dv.Unitize();\r\n            const x = dv.x * Math.exp(-0.001 * L * L) * 10.1; // + Vector3d.ZAxis.x * g;\r\n            const y = dv.y * Math.exp(-0.001 * L * L) * 10.1; // + Vector3d.ZAxis.y * g;\r\n            const z = dv.z * Math.exp(-0.001 * L * L) * 10.1; // + Vector3d.ZAxis.z * g;\r\n            if (!isNaN(x)) {\r\n                n.f.x = x; // + Vector3d.ZAxis.x * g;\r\n                n.f.y = y; // + Vector3d.ZAxis.y * g;\r\n                n.f.z = z; // + Vector3d.ZAxis.z * g;\r\n            }\r\n            // console.log(dv.x, L );\r\n            // console.log(dv.x * Math.exp(-0.1 * L * L) );\r\n            // n.Move(dt, damping);\r\n        }\r\n        // foreach(Node n in nodes) {\r\n        //     Vector3d dv = atr - n.p;\r\n        //     double L = dv.Length;\r\n        //     dv.Unitize();\r\n        //     n.f = dv * Math.Exp(-0.001 * L * L) * 0.1 + Vector3d.ZAxis * g;\r\n        //   }\r\n        //   foreach(Edge e in edges) {\r\n        //     e.ApplySpringForce();\r\n        //   }\r\n        //   foreach(Node n in nodes) {\r\n        //     n.Move(dt, damping);\r\n        //   }\r\n        for (let i = 0; i < this.edges.length; ++i) {\r\n            this.edges[i].ApplySpringForce();\r\n        }\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            this.nodes[i].CheckLine(this.edges);\r\n        }\r\n\r\n        for (let j = 0; j < this.nodes.length ; ++j) {\r\n            this.nodes[j].isCol = false;\r\n        }\r\n\r\n        for (let j = 0; j < this.nodes.length; ++j) {\r\n            let n0 = this.nodes[j];\r\n            for (let i = 0 ; i < this.nodes.length; ++i) {\r\n                let n1 = this.nodes[i];\r\n                if (n0 === n1) { continue; }\r\n                if (n0.v.Distance(n1.v) < 40) {\r\n                    const vec = NVector3.Sub(n0.u, n1.u);\r\n                    // // const dis = NVector3.Distance(this.pos, n1.v);\r\n                    const nor = NVector3.Normalize(vec);\r\n                    // const falloff = 0.1; // NVector3.CalculateFalloff(n0.v, n1.v, 1, 0.1);\r\n                    const velocity = NVector3.Scale(nor, 1);\r\n                    n0.u = NVector3.Add(n0.u, velocity);\r\n\r\n                    // const vec = NVector3.Sub(this.vec, this.listCollision[i].vec);\r\n                    // // const dis = NVector3.Distance(this.vec, this.listCollision[i].vec);\r\n                    // const nor = NVector3.Normalize(vec);\r\n                    // // const falloff = NVector3.CalculateFalloff(this.vec, this.listCollision[i].vec, dis, 0.1);\r\n                    // this.velocity = NVector3.Scale(nor, Math.random() * this.graph.optiLevel);\r\n                    // // console.log(this.velocity.x);\r\n                    // this.vec = NVector3.Add(this.vec, this.velocity);\r\n                    n0.isCol = true;\r\n                    this.historyTimer += 0.1;\r\n                    if (this.historyTimer  > 5 ) {\r\n                        // console.log('the node', i , 'is within the node ', j  );\r\n                        n0.colNodes.push(n1);\r\n\r\n                        this.historyTimer = 0.0;\r\n\r\n                        this.collisionTrajectory.push(new NVector3(n0.v.x, n0.v.y,  (Math.random() + 3) * 3)); // pos\r\n\r\n                        const prob = Math.random();\r\n                        if (prob < 0.3) {\r\n                            this.collisionTrajectory.push(new NVector3(100, 0, 0)); // col\r\n                        } else if (0.3 < prob && prob < 0.6) {\r\n                            this.collisionTrajectory.push(new NVector3(0, 100, 0)); // col\r\n                        } else {\r\n                            this.collisionTrajectory.push(new NVector3(0, 0, 100)); // col\r\n                        }\r\n                    }\r\n                    // console.log(velocity);\r\n                } else {\r\n                    // n0.isCol = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            this.nodes[i].Move(dt, damping);\r\n        }\r\n    }\r\n    // .... vis\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n\r\n        // ctx.  = 'lighter';\r\n        for (let i = 0 ; i < this.collisionTrajectory.length; i += 2) {\r\n            const v = this.collisionTrajectory[i];\r\n            const c = this.collisionTrajectory[i + 1];\r\n            ctx.beginPath();\r\n            ctx.fillStyle = `rgba(${c.x}, ${c.y}, ${c.z}, 0.1)`;\r\n            ctx.arc(v.x, v.y, v.z, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        // ctx.globalCompositeOperation = 'source-over';\r\n\r\n        const damping = 0.85;\r\n        this.Move(this.m, damping, 0, 0.1);\r\n        ctx.strokeStyle = '#000ff0';\r\n        ctx.lineWidth = 1;\r\n        for (let i = 0; i < this.edges.length; ++i) {\r\n            ctx.beginPath();\r\n            if (NVector3.Distance(this.edges[i].n0.v, this.edges[i].n1.v) < this.edges[i].targetLength - 5) {\r\n                ctx.strokeStyle = '#ff0000';\r\n                this.edges[i].n0.isShort = true;\r\n                this.edges[i].n1.isShort = true;\r\n            }\r\n            ctx.moveTo(this.edges[i].n0.v.x, this.edges[i].n0.v.y);\r\n            ctx.lineTo(this.edges[i].n1.v.x, this.edges[i].n1.v.y);\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n        }\r\n        ctx.fillStyle = '#999';\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            ctx.beginPath();\r\n            if (this.nodes[i].isShort) {\r\n                ctx.fillStyle = '#fff000';\r\n                this.nodes[i].isShort = false;\r\n            }\r\n            ctx.arc(this.nodes[i].v.x, this.nodes[i].v.y, this.nodes[i].m * 5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(this.nodes[i].v.x, this.nodes[i].v.y, 20, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            if (this.nodes[i].isCol) {\r\n                ctx.lineWidth = 4.5;\r\n                ctx.strokeStyle = '#ff0000';\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n                ctx.strokeStyle = '#000000';\r\n            }\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}\r\nclass Edge {\r\n    n0: Node;\r\n    n1: Node;\r\n    public targetLength: number = 1.05;\r\n    public SpringConstant: number = 0.5;\r\n    constructor(_n0: Node, _n1: Node) {\r\n        this.n0 = _n0;\r\n        this.n1 = _n1;\r\n        const dis = this.n0.v.Distance(this.n1.v) - 10;\r\n        this.targetLength = dis < 50 ? 60 : dis;\r\n    }\r\n    public ApplySpringForce() {\r\n        const dp: NVector3 = new NVector3(this.n1.v.x - this.n0.v.x, this.n1.v.y - this.n0.v.y, this.n1.v.z - this.n0.v.z);\r\n        const dist: number = dp.Length();\r\n        dp.Unitize();\r\n        this.n0.f.x += dp.x * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n0.f.y += dp.y * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n0.f.z += dp.z * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n1.f.x -= dp.x * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n1.f.y -= dp.y * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n1.f.z -= dp.z * (dist - this.targetLength) * this.SpringConstant;\r\n    }\r\n}\r\nexport class Node {\r\n    fixed: boolean = false;\r\n    needCompute: boolean = true;\r\n    v: NVector3;\r\n    u: NVector3;\r\n    f: NVector3;\r\n    m: number = 1;\r\n    isShort: boolean = false;\r\n    isCol: boolean = false;\r\n    colNodes: Node[] = [];\r\n    constructor(v: NVector3, u: NVector3, mass: number = 1) {\r\n        this.v = v;\r\n        this.u = u;\r\n        this.f = NVector3.Origin();\r\n        this.m = mass;\r\n    }\r\n    public Move(dt: number = 0.5, damping: number = 0.9999) {\r\n        if (this.fixed) { return; }\r\n        // if (!this.needCompute) { this.needCompute = true; return; }\r\n        this.u.x *= damping;\r\n        this.u.y *= damping;\r\n        this.u.z *= damping;\r\n\r\n        this.u.x += this.f.x * (dt / this.m);\r\n        this.u.y += this.f.y * (dt / this.m);\r\n        this.u.z += this.f.z * (dt / this.m);\r\n\r\n        this.v.x += this.u.x * dt;\r\n        this.v.y += this.u.y * dt;\r\n        this.v.z += this.u.z * dt;\r\n\r\n        // console.log(this.u);\r\n        // console.log(this.f);\r\n        // console.log(this.v.x, this.v.y);\r\n        // if (this.v.y < 0.0) {\r\n        //     this.v.y = 0.0;\r\n        //     if (this.u.y < 0.0) { this.u.y = -this.u.y; }\r\n        // }\r\n        this.needCompute = true;\r\n    }\r\n    public CheckLine(edges: Edge[]) {\r\n        for (let i = 0; i < edges.length; ++i) {\r\n            let e = edges[i];\r\n            if (e.n0 !== this && e.n1 !== this) {\r\n                const dis = this.PointCloseToLine(e.n0.v, e.n1.v, this.v);\r\n                if (dis[0]) {\r\n                    const p = new NVector3(dis[0], dis[1]);\r\n                    const dis2 = p.Distance(this.v);\r\n                    if (dis2 < 5) {\r\n                        this.needCompute = false;\r\n                        // console.log(dis2);\r\n                        //    this.f.x *= -1;\r\n                        //    this.f.y *= -1;\r\n                        //    this.f.z *= -1;\r\n                        p.Unitize();\r\n                        const nv = NVector3.Normalize(this.v);\r\n\r\n                        const vv = new NVector3(p.x - nv.x, p.y - nv.y, p.z - nv.z);\r\n                        this.f = vv;\r\n                        // this.v.x += vv.x ;\r\n                        // this.v.y += vv.y ;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public PointCloseToLine(p: NVector3, n0: NVector3, n1: NVector3) {\r\n        let dx = n1.x - n0.x,\r\n            dy = n1.y - n0.y,\r\n            t = ((p.x - n0.x) * dx + (p.y - n0.y) * dy) / (dx * dx + dy * dy),\r\n            x = this.Lerp(n0.x, n1.x, t),\r\n            y = this.Lerp(n0.y, n1.y, t);\r\n        return [x, y];\r\n    }\r\n    public Lerp(a: number, b: number, t: number) { return a + t * (b - a); }\r\n}","import { GraphSystem } from '..';\r\nexport class CanvasCore {\r\n    graphSystem: GraphSystem;\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n\r\n    divLocalMain: HTMLElement;\r\n    divCanvas: HTMLElement;\r\n    divUI: HTMLElement;\r\n\r\n    ctx: CanvasRenderingContext2D;\r\n    timer: NodeJS.Timer | number;\r\n    click: boolean = false;\r\n    pressed: boolean = false;\r\n    prevent: boolean = false;\r\n    delay: number = 500;\r\n    down: boolean = false;\r\n    t: number = 0.0;\r\n    width: number;\r\n    height: number;\r\n    constructor(graphSystem: GraphSystem, width: number = 400, height: number = 300) {\r\n        this.graphSystem = graphSystem;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const host = document.getElementById(graphSystem.id);\r\n        if (!host) { return; } this.host = host;\r\n\r\n        this.InitCanvas();\r\n    }\r\n    InitCanvas() {\r\n        const divLocalMain = document.createElement('div');\r\n        if (!divLocalMain) { return; } this.divLocalMain = divLocalMain;\r\n        this.divLocalMain.style.display = 'flex';\r\n        // this.divLocalMain.style.width = '100%';\r\n        // this.divLocalMain.style.width = this.width + 'px'; // this.host.clientWidth;\r\n        // this.divLocalMain.style.height = this.height + 'px'; // this.host.clientHeight;\r\n        // this.divLocalMain.style.margin = '10px';\r\n        // this.divLocalMain.style.padding = '10px';\r\n        this.host.append(divLocalMain);\r\n\r\n        const divCanvas = document.createElement('div');\r\n        if (!divCanvas) { return; } this.divCanvas = divCanvas;\r\n        // this.divCanvas.style.width = '50%';\r\n        this.divLocalMain.append(divCanvas);\r\n\r\n        const canvas = document.createElement('canvas');\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            this.divCanvas.append(this.canvas);\r\n\r\n            // this.canvas.style.width = '100%'\r\n            // this.canvas.style.height = '100%'\r\n\r\n            // this.canvas.width = this.width; // this.host.clientWidth;\r\n            // this.canvas.height = this.height; // this.host.clientHeight;\r\n\r\n            this.canvas.width = this.host.clientWidth;\r\n            this.canvas.height = this.host.clientHeight;\r\n\r\n            // this.canvas.style.backgroundColor = '#f00';\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                // this.InitUI();\r\n                this.Init();\r\n            }\r\n        }\r\n    }\r\n    InitUI() {\r\n        const divUI = document.createElement('div');\r\n        if (!divUI) { return; } this.divUI = divUI;\r\n        this.divLocalMain.append(divUI);\r\n        // this.divUI.style.marginLeft = '10px';\r\n        this.divUI.style.width = '100%';\r\n        // this.divUI.style.display = 'grid';\r\n\r\n        const btn = document.createElement('button');\r\n        btn.textContent = 'reset';\r\n        btn.onclick = () => { this.graphSystem.InitGraph(); };\r\n        this.divUI.append(btn);\r\n\r\n        let p = document.createElement('p');\r\n        if (!p) { return; } this.divUI.append(p);\r\n        p.textContent = 'length';\r\n\r\n        let input = document.createElement('input');\r\n        input.oninput = () => {\r\n            const val = +input.value as number;\r\n            this.graphSystem.graph.UpdateLength(val);\r\n        };\r\n        input.type = 'range';\r\n        input.min = '10';\r\n        input.max = '100.0';\r\n        input.value = '10';\r\n        this.divUI.append(input);\r\n\r\n        p = document.createElement('p');\r\n        if (!p) { return; } this.divUI.append(p);\r\n        p.innerHTML = '1. clikc on canvas to populate a node! <br> ';\r\n        p.innerHTML += '2. drag a node to move! <br> ';\r\n    }\r\n    Init() {\r\n        this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        // this.ctx.scale(2, 2);\r\n        // this.ctx.scale(1, 1);\r\n        this.EventBind();\r\n        this.Loop();\r\n    }\r\n    EventBind() {\r\n        this.canvas.onclick = (e: MouseEvent) => {\r\n            this.prevent = false;\r\n            this.timer = setTimeout(\r\n                () => {\r\n                    if (!this.prevent) {\r\n                        if (!this.click) { return; }\r\n                        this.MouseClick(e);\r\n                    }\r\n                    this.prevent = false;\r\n                },\r\n                this.delay);\r\n        };\r\n        this.canvas.ondblclick = (e: MouseEvent) => {\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.MouseDoubleClick(e);\r\n        };\r\n        this.canvas.addEventListener('wheel', (e: WheelEvent) => this.MouseWheel(e, e.deltaY));\r\n\r\n        // this.canvas.onclick = (e: MouseEvent) => {\r\n        //     this.timer = setTimeout(() => {\r\n        //         if (!this.prevent) { this.MouseClick(e); }\r\n        //         this.prevent = false;\r\n        //     }, this.delay);\r\n        // };\r\n        // this.canvas.ondblclick = (e: MouseEvent) => {\r\n        //     clearTimeout(this.timer as number);\r\n        //     this.prevent = true;\r\n        //     this.MouseDoubleClick(e);\r\n        // };\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.click = true;\r\n            this.pressed = true;\r\n            this.MouseDown(e);\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.pressed = false;\r\n            this.MouseUp(e);\r\n        };\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            if (this.pressed) { this.click = false; this.MouseDrag(e); }\r\n            this.MouseMove(e);\r\n        };\r\n        window.onresize = (e: UIEvent) => this.Resize(e);\r\n\r\n    }\r\n    Resize(e: UIEvent) {\r\n        // console.log(e);\r\n        // this.canvas.width = this.divCanvas.clientWidth;\r\n        // this.canvas.height = this.divCanvas.clientHeight;\r\n    }\r\n    Loop() {\r\n        requestAnimationFrame(() => { this.Loop(); });\r\n        this.ctx.clearRect(-this.ctx.canvas.width * 0.5, -this.ctx.canvas.height * 0.5, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        // this.ctx.fillStyle = '#dddddd';\r\n        // this.ctx.beginPath();\r\n        // this.ctx.rect(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        // this.ctx.closePath();\r\n        // this.ctx.fill();\r\n        this.Render(this.ctx);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(ctx);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        //\r\n    }\r\n    MouseWheel(e: WheelEvent, deltaY: number) {\r\n        // console.log(e);\r\n    }\r\n}","import { Graph } from './Core/Graph';\r\nimport { NVector3 } from '../../../../lib/NJSCore';\r\nimport { CanvasCore } from './CanvasCore';\r\nexport class GraphSystem {\r\n    CanvasCore: CanvasCore;\r\n    graph: Graph;\r\n    t = 0.9;\r\n    id: string;\r\n    m: NVector3 = new NVector3(0, 0, 0);\r\n    constructor(id: string) {\r\n        this.id = id;\r\n        this.CanvasCore = new CanvasCore(this);\r\n\r\n        this.Init();\r\n        this.InitGraph();\r\n    }\r\n    Init() {\r\n        this.CanvasCore.Render = (ctx: CanvasRenderingContext2D) => this.Render(ctx);\r\n        this.CanvasCore.MouseDown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.CanvasCore.MouseClick = (e: MouseEvent) => this.MouseClick(e);\r\n        this.CanvasCore.MouseDoubleClick = (e: MouseEvent) => this.MouseDoubleClick(e);\r\n        this.CanvasCore.MouseUp = (e: MouseEvent) => this.MouseUp(e);\r\n        this.CanvasCore.MouseMove = (e: MouseEvent) => this.MouseMove(e);\r\n        this.CanvasCore.MouseDrag = (e: MouseEvent) => this.MouseDrag(e);\r\n        // console.log('Graph system');\r\n    }\r\n    InitGraph() {\r\n        this.graph = new Graph();\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.graph.Render(ctx);\r\n\r\n        ctx.fillStyle = 'rgba(125, 125, 125, 0.9)';\r\n        ctx.beginPath();\r\n        ctx.arc(this.m.x, this.m.y, 2.5, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        for (let i = -10; i < 10; ++i) {\r\n            for (let j = -10; j < 10; ++j) {\r\n                ctx.beginPath();\r\n                ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n                ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n        }\r\n    }\r\n    // .......................................................................................\r\n    mouseRemap(e: MouseEvent) {\r\n        // this.m.x = ((e.x - this.CanvasCore.canvas.offsetLeft) - this.CanvasCore.canvas.width * 0.5) * 0.1;\r\n        // this.m.y = ((e.y - this.CanvasCore.canvas.offsetTop) - this.CanvasCore.canvas.height * 0.5) * 0.1;\r\n        this.m.x = e.offsetX - this.CanvasCore.canvas.width * 0.5// - this.CanvasCore.canvas.offsetLeft // ((e.x - this.CanvasCore.canvas.offsetLeft) - this.CanvasCore.canvas.width * 0.5) * 1;\r\n        this.m.y = e.offsetY - this.CanvasCore.canvas.height * 0.5// - this.CanvasCore.canvas.offsetTop // ((e.y - this.CanvasCore.canvas.offsetTop) - this.CanvasCore.canvas.height * 0.5) * 1;\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        this.graph.MouseDown(this.m.x, this.m.y);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        this.graph.MouseMove(this.m.x, this.m.y);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        this.graph.MouseDrag(this.m.x, this.m.y);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        this.graph.MouseLeftClick(this.m.x, this.m.y);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        console.log('d click');\r\n    }\r\n}","// import { RendererCanvas } from '../../../lib';\r\nimport { GraphSystem } from './GraphSystemC';\r\nimport { NVector3 } from '../../../lib/NJSCore';\r\n\r\nconst course = {\r\n    \r\n    lecture: {\r\n\r\n    },\r\n    workshop: {\r\n\r\n    }\r\n}\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n\r\n    constructor(id: string, index = 0) {\r\n        this.divHost = document.getElementById(id);\r\n\r\n        const div = document.createElement('div');\r\n        div.id ='njsIndex';\r\n        div.style.width = '100%';\r\n        div.style.height = '100%';\r\n        this.divHost.appendChild(div);\r\n\r\n        new GraphSystem('njsIndex')\r\n    }\r\n    public destroy() {\r\n        try {\r\n            while (this.divHost !== undefined && this.divHost.lastElementChild !== undefined) {\r\n                this.divHost.removeChild(this.divHost.lastElementChild);\r\n            }\r\n        } catch (error) { console.debug(error) }\r\n    }\r\n}"],"names":["Graph","constructor","nodes","edges","m","capture","undefined","historyTimer","collisionTrajectory","this","NVector3","AddNode","fixed","AddEdge","UpdateLength","v","i","length","targetLength","MouseDown","x","y","FindNode","MouseLeftClick","n","cn","FindCloseNode","MouseMove","MouseDrag","Node","push","n0","n1","e","Edge","dis","index","theDis","Distance","console","log","colNodes","Move","atr","damping","g","dt","f","z","dv","L","Length","Unitize","Math","exp","isNaN","ApplySpringForce","CheckLine","j","isCol","vec","u","nor","velocity","random","prob","Render","ctx","c","beginPath","fillStyle","arc","PI","closePath","fill","strokeStyle","lineWidth","isShort","moveTo","lineTo","stroke","_n0","_n1","SpringConstant","dp","dist","mass","needCompute","PointCloseToLine","p","nv","vv","dx","dy","t","Lerp","a","b","CanvasCore","graphSystem","width","height","canvas","host","divLocalMain","divCanvas","divUI","timer","click","pressed","prevent","delay","down","document","getElementById","id","InitCanvas","createElement","style","display","append","clientWidth","clientHeight","getContext","Init","InitUI","btn","textContent","onclick","InitGraph","input","oninput","val","value","graph","type","min","max","innerHTML","translate","EventBind","Loop","setTimeout","MouseClick","ondblclick","clearTimeout","MouseDoubleClick","addEventListener","MouseWheel","deltaY","onmousedown","onmouseup","MouseUp","onmousemove","window","onresize","Resize","requestAnimationFrame","clearRect","GraphSystem","Grid","mouseRemap","offsetX","offsetY","Solution","divHost","div","appendChild","destroy","lastElementChild","removeChild","error","debug"],"sourceRoot":""}