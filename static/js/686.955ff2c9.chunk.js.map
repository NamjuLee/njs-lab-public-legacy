{"version":3,"file":"static/js/686.955ff2c9.chunk.js","mappings":"yJAGO,MAAMA,UAAiBC,EAAAA,GAI1BC,cACIC,MADkB,uDAAG,QACZ,KAHbC,gBAAU,EAKNC,KAAKC,OAAOC,SAASC,IAAK,EAAG,GAAI,IAEjC,MAAMC,EAAW,IAAIC,EAAAA,IAAwB,CACzCC,MAAO,SACPC,UAAW,KAGTC,EAAS,GACfA,EAAOC,KAAM,IAAIJ,EAAAA,KAAiB,GAAI,EAAG,IACzCG,EAAOC,KAAM,IAAIJ,EAAAA,IAAe,EAAG,GAAI,IACvCG,EAAOC,KAAM,IAAIJ,EAAAA,IAAe,GAAI,EAAG,IAEvC,MAAMK,GAAY,IAAIL,EAAAA,KAAuBM,cAAeH,GACtDI,EAAO,IAAIP,EAAAA,IAAYK,EAAWN,GACxCJ,KAAKa,MAAMC,IAAKF,GAGhBZ,KAAKe,OACT,CAEOC,OAAOH,GAGd,E","sources":["njslab/Workshop/workshop-three/LAB_Web_04_LinePolyline/index.ts"],"sourcesContent":["import * as THREE from 'three';\r\nimport { RendererThree } from '../../../../lib';\r\n\r\nexport class Solution extends RendererThree {\r\n\r\n    pointLight: THREE.PointLight\r\n\r\n    constructor(id: string = 'main') {\r\n        super(id)\r\n\r\n        this.camera.position.set( 0, 50, 50 );\r\n\r\n        const material = new THREE.LineBasicMaterial({\r\n            color: 0xff0000,\r\n            linewidth: 10,\r\n        });\r\n        \r\n        const points = [];\r\n        points.push( new THREE.Vector3( - 10, 0, 0 ) );\r\n        points.push( new THREE.Vector3( 0, 10, 0 ) );\r\n        points.push( new THREE.Vector3( 10, 0, 0 ) );\r\n        \r\n        const geometry1 = new THREE.BufferGeometry().setFromPoints( points );\r\n        const line = new THREE.Line( geometry1, material );\r\n        this.scene.add( line );\r\n\r\n\r\n        this.start();\r\n    }\r\n\r\n    public update(scene: THREE.Scene) {\r\n\r\n\r\n    }\r\n\r\n}\r\n"],"names":["Solution","RendererThree","constructor","super","pointLight","this","camera","position","set","material","THREE","color","linewidth","points","push","geometry1","setFromPoints","line","scene","add","start","update"],"sourceRoot":""}