{"version":3,"file":"static/js/75248.d3f05a5f.chunk.js","mappings":"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","sources":["njslab/Env/AppCirclePackingParticleSimulation/Implementation/GraphSystemB/Core/Particle.ts","njslab/Env/AppCirclePackingParticleSimulation/Implementation/GraphSystemB/Core/Graph.ts","njslab/Env/AppCirclePackingParticleSimulation/Implementation/GraphSystemB/CanvasCore/index.ts","njslab/Env/AppCirclePackingParticleSimulation/Implementation/GraphSystemB/index.ts","njslab/Env/AppCirclePackingParticleSimulation/Implementation/GraphSystemK/Core/Particle.ts","njslab/Env/AppCirclePackingParticleSimulation/Implementation/GraphSystemK/Core/Graph.ts","njslab/Env/AppCirclePackingParticleSimulation/Implementation/GraphSystemK/CanvasCore/index.ts","njslab/Env/AppCirclePackingParticleSimulation/Implementation/GraphSystemK/index.ts","njslab/Env/AppCirclePackingParticleSimulation/Implementation/GraphSystemKK/Core/Particle.ts","njslab/Env/AppCirclePackingParticleSimulation/Implementation/GraphSystemKK/Core/Graph.ts","njslab/Env/AppCirclePackingParticleSimulation/Implementation/GraphSystemKK/CanvasCore/index.ts","njslab/Env/AppCirclePackingParticleSimulation/Implementation/GraphSystemKK/index.ts","njslab/Env/AppCirclePackingParticleSimulation/Implementation/index.ts","njslab/Env/AppCirclePackingParticleSimulation/index.ts"],"sourcesContent":["import { NVector3 } from '../../../lib';\r\n\r\nexport class Particle {\r\n    pos: NVector3;\r\n    u: NVector3;\r\n    f: NVector3;\r\n    m: number = 1;\r\n    r: number = 10;\r\n    colorFill: string = '#0099ff';\r\n\r\n    MAX_VELOCITY = 3.2;\r\n    velocity: NVector3;\r\n    desiredVelocity: NVector3;\r\n    steering: NVector3;\r\n\r\n    MAX_FORCE = 3.0;\r\n    MAX_SPEED = 6.0;\r\n\r\n    col: boolean = false;\r\n    constructor(x: number, y: number) {\r\n        this.pos = new NVector3(x, y);\r\n        this.velocity = new NVector3(0, 0);\r\n        this.desiredVelocity = new NVector3(0, 0);\r\n        this.steering = new NVector3(0, 0);\r\n    }\r\n    public Update(target: NVector3) {\r\n        // this.UpdateVec0(target);\r\n        this.UpdateVec1(target);\r\n    }\r\n    UpdateVec0(target: NVector3) {\r\n        const vec = NVector3.Sub(target, this.pos);\r\n        const nor = NVector3.Normalize(vec);\r\n\r\n        this.velocity = NVector3.Scale(nor, this.MAX_VELOCITY);\r\n\r\n        this.desiredVelocity = NVector3.Scale(nor, this.MAX_VELOCITY);\r\n        this.steering = NVector3.Sub(this.desiredVelocity, this.velocity);\r\n\r\n        this.Truncate(this.steering, this.MAX_FORCE);\r\n\r\n        this.steering.x /= this.m;\r\n        this.steering.y /= this.m;\r\n        this.steering.z /= this.m;\r\n\r\n        this.velocity.x += this.steering.x;\r\n        this.velocity.y += this.steering.y;\r\n        this.velocity.z += this.steering.z;\r\n\r\n        this.Truncate(this.velocity, this.MAX_SPEED);\r\n\r\n\r\n        this.pos = NVector3.Add(this.pos, this.velocity);\r\n    }\r\n    UpdateVec1(target: NVector3) {\r\n        this.desiredVelocity = new NVector3(target.x - this.pos.x, target.y - this.pos.y, target.z - this.pos.z);\r\n        this.desiredVelocity.Unitize();\r\n        this.desiredVelocity.x *= this.MAX_VELOCITY;\r\n        this.desiredVelocity.y *= this.MAX_VELOCITY;\r\n        this.desiredVelocity.z *= this.MAX_VELOCITY;\r\n\r\n        let x = (this.desiredVelocity.x - this.velocity.x) < this.MAX_FORCE ? this.desiredVelocity.x - this.velocity.x : this.MAX_FORCE;\r\n        let y = (this.desiredVelocity.y - this.velocity.y) < this.MAX_FORCE ? this.desiredVelocity.y - this.velocity.y : this.MAX_FORCE;\r\n        let z = (this.desiredVelocity.z - this.velocity.z) < this.MAX_FORCE ? this.desiredVelocity.z - this.velocity.z : this.MAX_FORCE;\r\n\r\n        this.steering = new NVector3(x / this.m, y / this.m, z / this.m);\r\n\r\n        this.velocity.x = (this.velocity.x + this.steering.x) < this.MAX_SPEED ? this.velocity.x + this.steering.x : this.MAX_SPEED;\r\n        this.velocity.y = (this.velocity.y + this.steering.y) < this.MAX_SPEED ? this.velocity.y + this.steering.y : this.MAX_SPEED;\r\n        this.velocity.z = (this.velocity.z + this.steering.z) < this.MAX_SPEED ? this.velocity.z + this.steering.z : this.MAX_SPEED;\r\n\r\n        // this.Queue();\r\n\r\n        this.pos.x += this.velocity.x;\r\n        this.pos.y += this.velocity.y;\r\n        this.pos.z += this.velocity.z;\r\n\r\n        // this.t += 0.01;\r\n        // if (this.t > 3) {\r\n        //     this.t = 0.0;\r\n        //     this.UpdateTarget();\r\n        // }\r\n    }\r\n    UpdateVec1_1(target: NVector3) {\r\n        this.desiredVelocity = new NVector3(target.x - this.pos.x, target.y - this.pos.y, target.z - this.pos.z);\r\n        this.desiredVelocity.Unitize();\r\n        this.desiredVelocity.x *= this.MAX_VELOCITY;\r\n        this.desiredVelocity.y *= this.MAX_VELOCITY;\r\n        this.desiredVelocity.z *= this.MAX_VELOCITY;\r\n\r\n        let x = (this.desiredVelocity.x - this.velocity.x) < this.MAX_FORCE ? this.desiredVelocity.x - this.velocity.x : this.MAX_FORCE;\r\n        let y = (this.desiredVelocity.y - this.velocity.y) < this.MAX_FORCE ? this.desiredVelocity.y - this.velocity.y : this.MAX_FORCE;\r\n        let z = (this.desiredVelocity.z - this.velocity.z) < this.MAX_FORCE ? this.desiredVelocity.z - this.velocity.z : this.MAX_FORCE;\r\n\r\n        this.steering = new NVector3(x / this.m, y / this.m, z / this.m);\r\n\r\n        this.velocity.x = (this.velocity.x + this.steering.x) < this.MAX_SPEED ? this.velocity.x + this.steering.x : this.MAX_SPEED;\r\n        this.velocity.y = (this.velocity.y + this.steering.y) < this.MAX_SPEED ? this.velocity.y + this.steering.y : this.MAX_SPEED;\r\n        this.velocity.z = (this.velocity.z + this.steering.z) < this.MAX_SPEED ? this.velocity.z + this.steering.z : this.MAX_SPEED;\r\n\r\n        if (!this.col) {\r\n            // this.velocity = truncate(velocity + steering, maxSpeed);\r\n            this.pos.x += this.velocity.x;\r\n            this.pos.y += this.velocity.y;\r\n            this.pos.z += this.velocity.z;\r\n        } else {\r\n            this.pos.x += -this.steering.x * 0.8;\r\n            this.pos.y += -this.steering.y * 0.8;\r\n            this.pos.z += -this.steering.z * 0.8;\r\n        }\r\n    }\r\n    public Truncate(vector: NVector3, max: number) {\r\n        let i: number;\r\n        i = max / vector.Length();\r\n        i = i < 1.0 ? i : 1.0;\r\n        vector.Scale(i);\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = this.colorFill;\r\n        ctx.beginPath();\r\n        ctx.arc(this.pos.x, this.pos.y, this.m * this.r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}","import { NVector3 } from '../../../lib';\r\n\r\nimport { Particle } from './Particle';\r\n// import { Blank } from './Blank';\r\nexport class Graph {\r\n    particles: Particle[] = [];\r\n    m: NVector3;\r\n    capture: Node | undefined = undefined;\r\n    constructor() {\r\n\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.m = new NVector3(0, 0);\r\n        this.particles = [];\r\n        this.particles.push(new Particle(0, 0));\r\n        this.particles.push(new Particle(-50, 100));\r\n\r\n        const p = new Particle(0, 50);\r\n        p.col = true;\r\n        this.particles.push(p);\r\n    }\r\n    public Col() {\r\n        for (let b of this.particles) {\r\n            b.col = false;\r\n        }\r\n\r\n        for (let j = 0; j < this.particles.length; ++j) {\r\n            let b0 = this.particles[j];\r\n            //   if (!b0.isRenderable) {\r\n            //     break;\r\n            //   }\r\n            for (let i = j + 1; i < this.particles.length; ++i) {\r\n                let b1 = this.particles[i];\r\n                let dis = b0.pos.Distance(b1.pos);\r\n                if (dis < 30) {\r\n                    b1.col = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        //\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        //\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.capture) {\r\n            // this.capture.v.x = x;\r\n            // this.capture.v.y = y;\r\n        }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.Col();\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            this.particles[i].Update(this.m);\r\n        }\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            this.particles[i].Render(ctx);\r\n        }\r\n    }\r\n}","import { GraphSystem } from '..';\r\nexport class CanvasCore {\r\n    graphSystem: GraphSystem;\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n\r\n    divLocalMain: HTMLElement;\r\n    divCanvas: HTMLElement;\r\n    divUI: HTMLElement;\r\n\r\n    ctx: CanvasRenderingContext2D;\r\n    timer: NodeJS.Timer | number;\r\n    click: boolean = false;\r\n    pressed: boolean = false;\r\n    prevent: boolean = false;\r\n    delay: number = 500;\r\n    down: boolean = false;\r\n    t: number = 0.0;\r\n    width: number;\r\n    height: number;\r\n    constructor(graphSystem: GraphSystem, width: number = 400, height: number = 300) {\r\n        this.graphSystem = graphSystem;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const host = document.getElementById(graphSystem.id);\r\n        if (!host) { return; } this.host = host;\r\n\r\n        this.InitCanvas();\r\n    }\r\n    InitCanvas() {\r\n        const divLocalMain = document.createElement('div');\r\n        if (!divLocalMain) { return; } this.divLocalMain = divLocalMain;\r\n        this.divLocalMain.style.display = 'flex';\r\n        // this.divLocalMain.style.width = '100%';\r\n        this.divLocalMain.style.width = this.width + 'px'; // this.host.clientWidth;\r\n        this.divLocalMain.style.height = this.height + 'px'; // this.host.clientHeight;\r\n        this.divLocalMain.style.margin = '10px';\r\n        this.divLocalMain.style.padding = '10px';\r\n        this.host.append(divLocalMain);\r\n\r\n        const divCanvas = document.createElement('div');\r\n        if (!divCanvas) { return; } this.divCanvas = divCanvas;\r\n        // this.divCanvas.style.width = '50%';\r\n        this.divLocalMain.append(divCanvas);\r\n\r\n        const canvas = document.createElement('canvas');\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            this.divCanvas.append(this.canvas);\r\n\r\n            this.canvas.width = this.width; // this.host.clientWidth;\r\n            this.canvas.height = this.height; // this.host.clientHeight;\r\n            this.canvas.style.backgroundColor = '#aaaaaa';\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.InitUI();\r\n                this.Init();\r\n            }\r\n        }\r\n    }\r\n    InitUI() {\r\n        const divUI = document.createElement('div');\r\n        if (!divUI) { return; } this.divUI = divUI;\r\n        this.divLocalMain.append(divUI);\r\n        this.divUI.style.marginLeft = '10px';\r\n        this.divUI.style.width = '100%';\r\n        // this.divUI.style.display = 'grid';\r\n\r\n        // const btn = document.createElement('button');\r\n        // btn.textContent = 'reset';\r\n        // btn.onclick = () => { this.graphSystem.InitGraph(); };\r\n        // this.divUI.append(btn);\r\n\r\n        // const p = document.createElement('p');\r\n        // if (!p) { return; } this.divUI.append(p);\r\n        // p.style.width = 'max-content';\r\n        // p.innerHTML = '1. clikc on canvas to populate a node! <br> ';\r\n        // p.innerHTML += '2. drag a node to move! <br> ';\r\n    }\r\n    Init() {\r\n        this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        // this.ctx.scale(2, 2);\r\n        this.ctx.scale(1, 1);\r\n        this.EventBind();\r\n        this.Loop();\r\n    }\r\n    EventBind() {\r\n        this.canvas.onclick = (e: MouseEvent) => {\r\n            this.prevent = false;\r\n            this.timer = setTimeout(\r\n                () => {\r\n                    if (!this.prevent) {\r\n                        if (!this.click) { return; }\r\n                        this.MouseClick(e);\r\n                    }\r\n                    this.prevent = false;\r\n                },\r\n                this.delay);\r\n        };\r\n        this.canvas.ondblclick = (e: MouseEvent) => {\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.MouseDoubleClick(e);\r\n        };\r\n        this.canvas.addEventListener('wheel', (e: WheelEvent) => this.MouseWheel(e, e.deltaY));\r\n\r\n        // this.canvas.onclick = (e: MouseEvent) => {\r\n        //     this.timer = setTimeout(() => {\r\n        //         if (!this.prevent) { this.MouseClick(e); }\r\n        //         this.prevent = false;\r\n        //     }, this.delay);\r\n        // };\r\n        // this.canvas.ondblclick = (e: MouseEvent) => {\r\n        //     clearTimeout(this.timer as number);\r\n        //     this.prevent = true;\r\n        //     this.MouseDoubleClick(e);\r\n        // };\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.click = true;\r\n            this.pressed = true;\r\n            this.MouseDown(e);\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.pressed = false;\r\n            this.MouseUp(e);\r\n        };\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            if (this.pressed) { this.click = false; this.MouseDrag(e); }\r\n            this.MouseMove(e);\r\n        };\r\n        window.onresize = (e: UIEvent) => this.Resize(e);\r\n\r\n    }\r\n    Resize(e: UIEvent) {\r\n        // console.log(e);\r\n        // this.canvas.width = this.divCanvas.clientWidth;\r\n        // this.canvas.height = this.divCanvas.clientHeight;\r\n    }\r\n    Loop() {\r\n        requestAnimationFrame(() => { this.Loop(); });\r\n\r\n        this.ctx.clearRect(-this.ctx.canvas.width * 0.5, -this.ctx.canvas.height * 0.5, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.fillStyle = '#dddddd';\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(-this.ctx.canvas.width * 0.5, -this.ctx.canvas.height * 0.5, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n        this.Render(this.ctx);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(ctx);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        //\r\n    }\r\n    MouseWheel(e: WheelEvent, deltaY: number) {\r\n        // console.log(e);\r\n    }\r\n}","import { Graph } from './Core/Graph';\r\nimport { NVector3 } from '../../lib';\r\nimport { CanvasCore } from './CanvasCore';\r\nexport class GraphSystem {\r\n    CanvasCore: CanvasCore;\r\n    graph: Graph;\r\n    t = 0.9;\r\n    id: string;\r\n    m: NVector3 = new NVector3(0, 0, 0);\r\n    constructor(id: string) {\r\n        this.id = id;\r\n        this.CanvasCore = new CanvasCore(this);\r\n\r\n        this.Init();\r\n        this.InitGraph();\r\n    }\r\n    Init() {\r\n        this.CanvasCore.Render = (ctx: CanvasRenderingContext2D) => this.Render(ctx);\r\n        this.CanvasCore.MouseDown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.CanvasCore.MouseClick = (e: MouseEvent) => this.MouseClick(e);\r\n        this.CanvasCore.MouseDoubleClick = (e: MouseEvent) => this.MouseDoubleClick(e);\r\n        this.CanvasCore.MouseUp = (e: MouseEvent) => this.MouseUp(e);\r\n        this.CanvasCore.MouseMove = (e: MouseEvent) => this.MouseMove(e);\r\n        this.CanvasCore.MouseDrag = (e: MouseEvent) => this.MouseDrag(e);\r\n        // console.log('Graph system');\r\n    }\r\n    InitGraph() {\r\n        this.graph = new Graph();\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.graph.Render(ctx);\r\n\r\n        ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        ctx.beginPath();\r\n        ctx.arc(this.m.x, this.m.y, 2.5, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        for (let i = -10; i < 10; ++i) {\r\n            for (let j = -10; j < 10; ++j) {\r\n                ctx.beginPath();\r\n                ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n                ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n        }\r\n    }\r\n    // .......................................................................................\r\n    mouseRemap(e: MouseEvent) {\r\n        const bounding = this.CanvasCore.ctx.canvas.getBoundingClientRect();\r\n        this.m.x = ((e.x - bounding.left) - this.CanvasCore.canvas.width * 0.5);\r\n        this.m.y = ((e.y - bounding.top) - this.CanvasCore.canvas.height * 0.5);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n\r\n        this.graph.MouseDown(this.m.x, this.m.y);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n\r\n        this.graph.MouseMove(this.m.x, this.m.y);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n\r\n        this.graph.MouseDrag(this.m.x, this.m.y);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n\r\n        this.graph.MouseLeftClick(this.m.x, this.m.y);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        // console.log('d click');\r\n    }\r\n}","import { NVector3 } from '../../../lib';\r\n\r\nexport class Particle {\r\n    pos: NVector3;\r\n    u: NVector3;\r\n    f: NVector3;\r\n    m: number = 5;\r\n    r: number = 10;\r\n    colorFill: string = '#0099ff';\r\n\r\n    MAX_VELOCITY = 0.2;\r\n    velocity: NVector3;\r\n    listCollision: Particle[] = [];\r\n    constructor(x: number, y: number) {\r\n        this.pos = new NVector3(x, y);\r\n        // this.r += 5 * Math.random();\r\n    }\r\n    public Update(target: NVector3) {\r\n        const vec = NVector3.Sub(this.pos, target);\r\n        const nor = NVector3.Normalize(vec);\r\n\r\n        const falloff = NVector3.CalculateFalloff(this.pos, target, 1, 0.01);\r\n        this.velocity = NVector3.Scale(nor, falloff);\r\n        this.pos = NVector3.Add(this.pos, this.velocity);\r\n        this.UpdateCollision();\r\n    }\r\n    public UpdateCollision() {\r\n        for (let i = 0; i < this.listCollision.length; ++i) {\r\n            const vec = NVector3.Sub(this.pos, this.listCollision[i].pos);\r\n            // const dis = NVector3.Distance(this.pos, this.listCollision[i].pos);\r\n            const nor = NVector3.Normalize(vec);\r\n            const falloff = NVector3.CalculateFalloff(this.pos, this.listCollision[i].pos, 1, 0.01);\r\n            this.velocity = NVector3.Scale(nor, falloff);\r\n            this.pos = NVector3.Add(this.pos, this.velocity);\r\n        }\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = '#000000';\r\n        ctx.fillStyle = this.colorFill;\r\n        ctx.beginPath();\r\n        ctx.arc(this.pos.x, this.pos.y, this.r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        // console.log(this.listCollision.length);\r\n\r\n    }\r\n}","import { NVector3 } from '../../../lib';\r\n\r\nimport { Particle } from './Particle';\r\n// import { Blank } from './Blank';\r\nexport class Graph {\r\n    particles: Particle[] = [];\r\n    m: NVector3;\r\n    capture: Node | undefined = undefined;\r\n    t: number = 1;\r\n    constructor() {\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.m = new NVector3(0, 0);\r\n        this.particles = [];\r\n\r\n        for (let i = 0; i < 20; ++i) {\r\n            this.particles.push(new Particle(-0.5 + Math.random(), -0.5 + Math.random()));\r\n        }\r\n        // this.particles.push(new Particle(100, 200));\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        //\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        this.particles.push(new Particle(x, y));\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.capture) {\r\n            // this.capture.v.x = x;\r\n            // this.capture.v.y = y;\r\n        }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.UpdateCollision();\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            this.particles[i].Update(this.m);\r\n        }\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            this.particles[i].Render(ctx);\r\n        }\r\n\r\n        if ((this.t & 2) === 0 && this.particles.length < 150) {\r\n            // console.log('t');\r\n            this.particles.push(new Particle(0, 0));\r\n        }\r\n        // console.log(this.t);\r\n        // console.log(this.t & 2);\r\n        this.t += 0.1;\r\n    }\r\n    UpdateCollision() {\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            let a = this.particles[i];\r\n            a.listCollision = [];\r\n            for (let j = 0; j < this.particles.length; ++j) {\r\n                let b = this.particles[j];\r\n                if (a !== b) {\r\n                    if (a.pos.Distance(b.pos) < a.r + b.r) {\r\n                        a.listCollision.push(b);\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n}","import { GraphSystem } from '..';\r\nexport class CanvasCore {\r\n    graphSystem: GraphSystem;\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n\r\n    divLocalMain: HTMLElement;\r\n    divCanvas: HTMLElement;\r\n    divUI: HTMLElement;\r\n\r\n    ctx: CanvasRenderingContext2D;\r\n    timer: NodeJS.Timer | number;\r\n    click: boolean = false;\r\n    pressed: boolean = false;\r\n    prevent: boolean = false;\r\n    delay: number = 500;\r\n    down: boolean = false;\r\n    t: number = 0.0;\r\n    width: number;\r\n    height: number;\r\n    constructor(graphSystem: GraphSystem, width: number = 400, height: number = 300) {\r\n        this.graphSystem = graphSystem;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const host = document.getElementById(graphSystem.id);\r\n        if (!host) { return; } this.host = host;\r\n\r\n        this.InitCanvas();\r\n    }\r\n    InitCanvas() {\r\n        const divLocalMain = document.createElement('div');\r\n        if (!divLocalMain) { return; } this.divLocalMain = divLocalMain;\r\n        this.divLocalMain.style.display = 'flex';\r\n        // this.divLocalMain.style.width = '100%';\r\n        this.divLocalMain.style.width = this.width + 'px'; // this.host.clientWidth;\r\n        this.divLocalMain.style.height = this.height + 'px'; // this.host.clientHeight;\r\n        this.divLocalMain.style.margin = '10px';\r\n        this.divLocalMain.style.padding = '10px';\r\n        this.host.append(divLocalMain);\r\n\r\n        const divCanvas = document.createElement('div');\r\n        if (!divCanvas) { return; } this.divCanvas = divCanvas;\r\n        // this.divCanvas.style.width = '50%';\r\n        this.divLocalMain.append(divCanvas);\r\n\r\n        const canvas = document.createElement('canvas');\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            this.divCanvas.append(this.canvas);\r\n\r\n            this.canvas.width = this.width; // this.host.clientWidth;\r\n            this.canvas.height = this.height; // this.host.clientHeight;\r\n            this.canvas.style.backgroundColor = '#aaaaaa';\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.InitUI();\r\n                this.Init();\r\n            }\r\n        }\r\n    }\r\n    InitUI() {\r\n        const divUI = document.createElement('div');\r\n        if (!divUI) { return; } this.divUI = divUI;\r\n        this.divLocalMain.append(divUI);\r\n        this.divUI.style.marginLeft = '10px';\r\n        this.divUI.style.width = '100%';\r\n        // this.divUI.style.display = 'grid';\r\n\r\n        // const btn = document.createElement('button');\r\n        // btn.textContent = 'reset';\r\n        // btn.onclick = () => { this.graphSystem.InitGraph(); };\r\n        // this.divUI.append(btn);\r\n\r\n        // const p = document.createElement('p');\r\n        // if (!p) { return; } this.divUI.append(p);\r\n        // p.style.width = 'max-content';\r\n        // p.innerHTML = '1. clikc on canvas to populate a node! <br> ';\r\n        // p.innerHTML += '2. drag a node to move! <br> ';\r\n    }\r\n    Init() {\r\n        this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        // this.ctx.scale(2, 2);\r\n        this.ctx.scale(1, 1);\r\n        this.EventBind();\r\n        this.Loop();\r\n    }\r\n    EventBind() {\r\n        this.canvas.onclick = (e: MouseEvent) => {\r\n            this.prevent = false;\r\n            this.timer = setTimeout(\r\n                () => {\r\n                    if (!this.prevent) {\r\n                        if (!this.click) { return; }\r\n                        this.MouseClick(e);\r\n                    }\r\n                    this.prevent = false;\r\n                },\r\n                this.delay);\r\n        };\r\n        this.canvas.ondblclick = (e: MouseEvent) => {\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.MouseDoubleClick(e);\r\n        };\r\n        this.canvas.addEventListener('wheel', (e: WheelEvent) => this.MouseWheel(e, e.deltaY));\r\n\r\n        // this.canvas.onclick = (e: MouseEvent) => {\r\n        //     this.timer = setTimeout(() => {\r\n        //         if (!this.prevent) { this.MouseClick(e); }\r\n        //         this.prevent = false;\r\n        //     }, this.delay);\r\n        // };\r\n        // this.canvas.ondblclick = (e: MouseEvent) => {\r\n        //     clearTimeout(this.timer as number);\r\n        //     this.prevent = true;\r\n        //     this.MouseDoubleClick(e);\r\n        // };\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.click = true;\r\n            this.pressed = true;\r\n            this.MouseDown(e);\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.pressed = false;\r\n            this.MouseUp(e);\r\n        };\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            if (this.pressed) { this.click = false; this.MouseDrag(e); }\r\n            this.MouseMove(e);\r\n        };\r\n        window.onresize = (e: UIEvent) => this.Resize(e);\r\n\r\n    }\r\n    Resize(e: UIEvent) {\r\n        // console.log(e);\r\n        // this.canvas.width = this.divCanvas.clientWidth;\r\n        // this.canvas.height = this.divCanvas.clientHeight;\r\n    }\r\n    Loop() {\r\n        requestAnimationFrame(() => { this.Loop(); });\r\n\r\n        this.ctx.clearRect(-this.ctx.canvas.width * 0.5, -this.ctx.canvas.height * 0.5, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.fillStyle = '#dddddd';\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(-this.ctx.canvas.width * 0.5, -this.ctx.canvas.height * 0.5, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n        this.Render(this.ctx);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(ctx);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        //\r\n    }\r\n    MouseWheel(e: WheelEvent, deltaY: number) {\r\n        // console.log(e);\r\n    }\r\n}","import { Graph } from './Core/Graph';\r\nimport { NVector3 } from '../../lib';\r\nimport { CanvasCore } from './CanvasCore';\r\nexport class GraphSystem {\r\n    CanvasCore: CanvasCore;\r\n    graph: Graph;\r\n    t = 0.9;\r\n    id: string;\r\n    m: NVector3 = new NVector3(0, 0, 0);\r\n    constructor(id: string) {\r\n        this.id = id;\r\n        this.CanvasCore = new CanvasCore(this);\r\n\r\n        this.Init();\r\n        this.InitGraph();\r\n    }\r\n    Init() {\r\n        this.CanvasCore.Render = (ctx: CanvasRenderingContext2D) => this.Render(ctx);\r\n        this.CanvasCore.MouseDown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.CanvasCore.MouseClick = (e: MouseEvent) => this.MouseClick(e);\r\n        this.CanvasCore.MouseDoubleClick = (e: MouseEvent) => this.MouseDoubleClick(e);\r\n        this.CanvasCore.MouseUp = (e: MouseEvent) => this.MouseUp(e);\r\n        this.CanvasCore.MouseMove = (e: MouseEvent) => this.MouseMove(e);\r\n        this.CanvasCore.MouseDrag = (e: MouseEvent) => this.MouseDrag(e);\r\n        // console.log('Graph system B');\r\n    }\r\n    InitGraph() {\r\n        this.graph = new Graph();\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.graph.Render(ctx);\r\n\r\n        ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        ctx.beginPath();\r\n        ctx.arc(this.m.x, this.m.y, 2.5, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        for (let i = -10; i < 10; ++i) {\r\n            for (let j = -10; j < 10; ++j) {\r\n                ctx.beginPath();\r\n                ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n                ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n        }\r\n    }\r\n    // .......................................................................................\r\n    mouseRemap(e: MouseEvent) {\r\n        const bounding = this.CanvasCore.ctx.canvas.getBoundingClientRect();\r\n        this.m.x = ((e.x - bounding.left) - this.CanvasCore.canvas.width * 0.5);\r\n        this.m.y = ((e.y - bounding.top) - this.CanvasCore.canvas.height * 0.5);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n        this.graph.MouseDown(this.m.x, this.m.y);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n\r\n        this.graph.MouseMove(this.m.x, this.m.y);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n\r\n        this.graph.MouseDrag(this.m.x, this.m.y);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n\r\n        this.graph.MouseLeftClick(this.m.x, this.m.y);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        // console.log('d click');\r\n    }\r\n}","import { NVector3 } from '../../../lib';\r\nimport { Graph } from './Graph';\r\nexport class Particle {\r\n    graph: Graph;\r\n    pos: NVector3;\r\n    u: NVector3;\r\n    f: NVector3;\r\n    m: number = 5;\r\n    r: number = 10;\r\n    colorFill: string = '#0099ff';\r\n\r\n    MAX_VELOCITY = 1.5;\r\n    velocity: NVector3;\r\n    listCollision: Particle[] = [];\r\n\r\n    isCaptured: boolean = false;\r\n\r\n    constructor(graph: Graph, x: number, y: number) {\r\n        this.graph = graph;\r\n        this.pos = new NVector3(x, y);\r\n        // this.r += 5 * Math.random();\r\n    }\r\n    public Update(target: NVector3) {\r\n        if (this.isCaptured) { return; }\r\n        const vec = NVector3.Sub(this.pos, target);\r\n        const nor = NVector3.Normalize(vec);\r\n\r\n        const falloff = NVector3.CalculateFalloff(this.pos, target, 1, 0.01);\r\n        this.velocity = NVector3.Scale(nor, falloff);\r\n        this.UpdateCollision();\r\n\r\n        this.velocity.y += 1.1;\r\n        this.pos = NVector3.Add(this.pos, this.velocity);\r\n    }\r\n    public UpdateCollision() {\r\n        for (let i = 0; i < this.listCollision.length; ++i) {\r\n            const vec = NVector3.Sub(this.pos, this.listCollision[i].pos);\r\n            // const dis = NVector3.Distance(this.pos, this.listCollision[i].pos);\r\n            const nor = NVector3.Normalize(vec);\r\n            const falloff = NVector3.CalculateFalloff(this.pos, this.listCollision[i].pos, 1, 0.01);\r\n            this.velocity = NVector3.Scale(nor, falloff);\r\n            this.pos = NVector3.Add(this.pos, this.velocity);\r\n        }\r\n    }\r\n    public IsMouseHover(x: number, y: number) {\r\n        if (NVector3.Distance(this.pos, new NVector3(x, y)) < this.r) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        this.UpdatePosInScreen(ctx);\r\n\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = '#000000';\r\n        if (this.isCaptured) {\r\n            ctx.fillStyle = '#ff0000';\r\n        } else {\r\n            ctx.fillStyle = this.colorFill;\r\n\r\n        }\r\n        ctx.beginPath();\r\n        ctx.arc(this.pos.x, this.pos.y, this.r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        // console.log(this.listCollision.length);\r\n\r\n    }\r\n    private UpdatePosInScreen(ctx: CanvasRenderingContext2D) {\r\n        const offset = 10;\r\n        if (this.pos.y > ctx.canvas.height * 0.5 - offset) {\r\n            this.pos.y = ctx.canvas.height * 0.5 - offset;\r\n        }\r\n        if (this.pos.x < -ctx.canvas.width * 0.5 + offset) {\r\n            this.pos.x = -ctx.canvas.width * 0.5 + offset;\r\n        }\r\n        if (this.pos.x > ctx.canvas.width * 0.5 - offset) {\r\n            this.pos.x = ctx.canvas.width * 0.5 - offset;\r\n        }\r\n    }\r\n}","import { NVector3 } from '../../../lib';\r\n\r\nimport { Particle } from './Particle';\r\n// import { Blank } from './Blank';\r\nexport class Graph {\r\n    particles: Particle[] = [];\r\n    m: NVector3;\r\n    t: number = 1;\r\n    capture: Particle | undefined = undefined;\r\n    constructor() {\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.m = new NVector3(0, 0);\r\n        this.particles = [];\r\n\r\n        for (let i = 0; i < 20; ++i) {\r\n            this.particles.push(new Particle(this, -0.5 + Math.random(), -0.5 + Math.random()));\r\n        }\r\n        // this.particles.push(new Particle(100, 200));\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            if (this.particles[i].IsMouseHover(x, y)) {\r\n                this.capture = this.particles[i];\r\n                this.capture.isCaptured = true;\r\n            }\r\n        }\r\n    }\r\n    MouseUp() {\r\n        if (this.capture) {\r\n            this.capture.isCaptured = false;\r\n        }\r\n        this.capture = undefined;\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        this.particles.push(new Particle(this, x, y));\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.capture) {\r\n            this.capture.pos.x = x;\r\n            this.capture.pos.y = y;\r\n        }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.UpdateCollision();\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            this.particles[i].Update(this.m);\r\n        }\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            this.particles[i].Render(ctx);\r\n        }\r\n\r\n        if ((this.t & 2) === 0 && this.particles.length < 150) {\r\n            // console.log('t');\r\n            this.particles.push(new Particle(this, 0, 0));\r\n        }\r\n        // console.log(this.t);\r\n        // console.log(this.t & 2);\r\n        this.t += 0.1;\r\n    }\r\n    UpdateCollision() {\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            let a = this.particles[i];\r\n            a.listCollision = [];\r\n            for (let j = 0; j < this.particles.length; ++j) {\r\n                let b = this.particles[j];\r\n                if (a !== b) {\r\n                    if (a.pos.Distance(b.pos) < a.r + b.r) {\r\n                        a.listCollision.push(b);\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n}","import { GraphSystem } from '..';\r\nexport class CanvasCore {\r\n    graphSystem: GraphSystem;\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n\r\n    divLocalMain: HTMLElement;\r\n    divCanvas: HTMLElement;\r\n    divUI: HTMLElement;\r\n\r\n    ctx: CanvasRenderingContext2D;\r\n    timer: NodeJS.Timer | number;\r\n    click: boolean = false;\r\n    pressed: boolean = false;\r\n    prevent: boolean = false;\r\n    delay: number = 500;\r\n    down: boolean = false;\r\n    t: number = 0.0;\r\n    width: number;\r\n    height: number;\r\n    constructor(graphSystem: GraphSystem, width: number = 400, height: number = 300) {\r\n        this.graphSystem = graphSystem;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const host = document.getElementById(graphSystem.id);\r\n        if (!host) { return; } this.host = host;\r\n\r\n        this.InitCanvas();\r\n    }\r\n    InitCanvas() {\r\n        const divLocalMain = document.createElement('div');\r\n        if (!divLocalMain) { return; } this.divLocalMain = divLocalMain;\r\n        this.divLocalMain.style.display = 'flex';\r\n        // this.divLocalMain.style.width = '100%';\r\n        this.divLocalMain.style.width = this.width + 'px'; // this.host.clientWidth;\r\n        this.divLocalMain.style.height = this.height + 'px'; // this.host.clientHeight;\r\n        this.divLocalMain.style.margin = '10px';\r\n        this.divLocalMain.style.padding = '10px';\r\n        this.host.append(divLocalMain);\r\n\r\n        const divCanvas = document.createElement('div');\r\n        if (!divCanvas) { return; } this.divCanvas = divCanvas;\r\n        // this.divCanvas.style.width = '50%';\r\n        this.divLocalMain.append(divCanvas);\r\n\r\n        const canvas = document.createElement('canvas');\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            this.divCanvas.append(this.canvas);\r\n\r\n            this.canvas.width = this.width; // this.host.clientWidth;\r\n            this.canvas.height = this.height; // this.host.clientHeight;\r\n            this.canvas.style.backgroundColor = '#aaaaaa';\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.InitUI();\r\n                this.Init();\r\n            }\r\n        }\r\n    }\r\n    InitUI() {\r\n        const divUI = document.createElement('div');\r\n        if (!divUI) { return; } this.divUI = divUI;\r\n        this.divLocalMain.append(divUI);\r\n        this.divUI.style.marginLeft = '10px';\r\n        this.divUI.style.width = '100%';\r\n        // this.divUI.style.display = 'grid';\r\n\r\n        // const btn = document.createElement('button');\r\n        // btn.textContent = 'reset';\r\n        // btn.onclick = () => { this.graphSystem.InitGraph(); };\r\n        // this.divUI.append(btn);\r\n\r\n        // const p = document.createElement('p');\r\n        // if (!p) { return; } this.divUI.append(p);\r\n        // p.style.width = 'max-content';\r\n        // p.innerHTML = '1. clikc on canvas to populate a node! <br> ';\r\n        // p.innerHTML += '2. drag a node to move! <br> ';\r\n    }\r\n    Init() {\r\n        this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        // this.ctx.scale(2, 2);\r\n        this.ctx.scale(1, 1);\r\n        this.EventBind();\r\n        this.Loop();\r\n    }\r\n    EventBind() {\r\n        this.canvas.onclick = (e: MouseEvent) => {\r\n            this.prevent = false;\r\n            this.timer = setTimeout(\r\n                () => {\r\n                    if (!this.prevent) {\r\n                        if (!this.click) { return; }\r\n                        this.MouseClick(e);\r\n                    }\r\n                    this.prevent = false;\r\n                },\r\n                this.delay);\r\n        };\r\n        this.canvas.ondblclick = (e: MouseEvent) => {\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.MouseDoubleClick(e);\r\n        };\r\n        this.canvas.addEventListener('wheel', (e: WheelEvent) => this.MouseWheel(e, e.deltaY));\r\n\r\n        // this.canvas.onclick = (e: MouseEvent) => {\r\n        //     this.timer = setTimeout(() => {\r\n        //         if (!this.prevent) { this.MouseClick(e); }\r\n        //         this.prevent = false;\r\n        //     }, this.delay);\r\n        // };\r\n        // this.canvas.ondblclick = (e: MouseEvent) => {\r\n        //     clearTimeout(this.timer as number);\r\n        //     this.prevent = true;\r\n        //     this.MouseDoubleClick(e);\r\n        // };\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.click = true;\r\n            this.pressed = true;\r\n            this.MouseDown(e);\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.pressed = false;\r\n            this.MouseUp(e);\r\n        };\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            if (this.pressed) { this.click = false; this.MouseDrag(e); }\r\n            this.MouseMove(e);\r\n        };\r\n        window.onresize = (e: UIEvent) => this.Resize(e);\r\n\r\n    }\r\n    Resize(e: UIEvent) {\r\n        // console.log(e);\r\n        // this.canvas.width = this.divCanvas.clientWidth;\r\n        // this.canvas.height = this.divCanvas.clientHeight;\r\n    }\r\n    Loop() {\r\n        requestAnimationFrame(() => { this.Loop(); });\r\n\r\n        this.ctx.clearRect(-this.ctx.canvas.width * 0.5, -this.ctx.canvas.height * 0.5, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.fillStyle = '#dddddd';\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(-this.ctx.canvas.width * 0.5, -this.ctx.canvas.height * 0.5, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n        this.Render(this.ctx);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(ctx);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        //\r\n    }\r\n    MouseWheel(e: WheelEvent, deltaY: number) {\r\n        // console.log(e);\r\n    }\r\n}","import { Graph } from './Core/Graph';\r\nimport { NVector3 } from '../../lib';\r\nimport { CanvasCore } from './CanvasCore';\r\nexport class GraphSystem {\r\n    CanvasCore: CanvasCore;\r\n    graph: Graph;\r\n    t = 0.9;\r\n    id: string;\r\n    m: NVector3 = new NVector3(0, 0, 0);\r\n    constructor(id: string) {\r\n        this.id = id;\r\n        this.CanvasCore = new CanvasCore(this);\r\n\r\n        this.Init();\r\n        this.InitGraph();\r\n    }\r\n    Init() {\r\n        this.CanvasCore.Render = (ctx: CanvasRenderingContext2D) => this.Render(ctx);\r\n        this.CanvasCore.MouseDown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.CanvasCore.MouseClick = (e: MouseEvent) => this.MouseClick(e);\r\n        this.CanvasCore.MouseDoubleClick = (e: MouseEvent) => this.MouseDoubleClick(e);\r\n        this.CanvasCore.MouseUp = (e: MouseEvent) => this.MouseUp(e);\r\n        this.CanvasCore.MouseMove = (e: MouseEvent) => this.MouseMove(e);\r\n        this.CanvasCore.MouseDrag = (e: MouseEvent) => this.MouseDrag(e);\r\n        // console.log('Graph system');\r\n    }\r\n    InitGraph() {\r\n        this.graph = new Graph();\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.graph.Render(ctx);\r\n\r\n        ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        ctx.beginPath();\r\n        ctx.arc(this.m.x, this.m.y, 2.5, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        for (let i = -10; i < 10; ++i) {\r\n            for (let j = -10; j < 10; ++j) {\r\n                ctx.beginPath();\r\n                ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n                ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n        }\r\n    }\r\n    // .......................................................................................\r\n    mouseRemap(e: MouseEvent) {\r\n        const bounding = this.CanvasCore.ctx.canvas.getBoundingClientRect();\r\n        this.m.x = ((e.x - bounding.left) - this.CanvasCore.canvas.width * 0.5);\r\n        this.m.y = ((e.y - bounding.top) - this.CanvasCore.canvas.height * 0.5);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        this.graph.MouseDown(this.m.x, this.m.y);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        this.graph.MouseUp();\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n\r\n        this.graph.MouseMove(this.m.x, this.m.y);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n\r\n        this.graph.MouseDrag(this.m.x, this.m.y);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n\r\n        this.graph.MouseLeftClick(this.m.x, this.m.y);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        // console.log('d click');\r\n    }\r\n}","import { GraphSystem as GS1 } from './GraphSystemA';\r\nimport { GraphSystem as GS2 } from './GraphSystemB';\r\nimport { GraphSystem as GSK } from './GraphSystemK';\r\nimport { GraphSystem as GSKK } from './GraphSystemKK';\r\n\r\nexport class Implementation {\r\n    constructor(id: string) {\r\n        // new GS1(id);\r\n        new GS2(id);\r\n\r\n        new GSK(id);\r\n        new GSKK(id);\r\n\r\n        // new GSKKK(id);\r\n\r\n        document.body.style.overflow = 'auto';\r\n    }\r\n}","import { CanvasCore } from './Implementation/GraphSystemA/CanvasCore';\r\nimport { Implementation } from './Implementation';\r\nexport class AppParticleSimulation {\r\n    canvasCore: CanvasCore;\r\n    implementation: Implementation;\r\n    host: HTMLElement;\r\n    static Init(id: string) {\r\n        const n = new AppParticleSimulation(id);\r\n        n.Dummy();\r\n    }\r\n    constructor(id: string = 'SandBox') {\r\n        const host = document.getElementById(id);\r\n        if (host) {\r\n            this.host = host;\r\n            this.host.style.overflow = 'auto';\r\n        }\r\n        this.implementation = new Implementation(id);\r\n    }\r\n    Dummy() {\r\n        //\r\n    }\r\n}\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n\r\n    constructor(id: string ) {\r\n        this.divHost = document.getElementById(id);\r\n\r\n        AppParticleSimulation.Init(id)\r\n    }\r\n    public destroy() {\r\n        if (this.divHost) {\r\n            try {\r\n                while (this.divHost.firstChild) {\r\n                    this.divHost.removeChild(this.divHost.firstChild);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error in destroy method:', error);\r\n            }\r\n        } else {\r\n            console.warn('divHost is undefined in destroy method');\r\n        }\r\n    }\r\n}"],"names":["Particle","constructor","x","y","pos","u","f","m","r","colorFill","MAX_VELOCITY","velocity","desiredVelocity","steering","MAX_FORCE","MAX_SPEED","col","this","NVector3","Update","target","UpdateVec1","UpdateVec0","vec","nor","Truncate","z","Unitize","UpdateVec1_1","vector","max","i","Length","Scale","Render","ctx","fillStyle","beginPath","arc","Math","PI","closePath","fill","Graph","particles","capture","undefined","Init","push","p","Col","b","j","length","b0","b1","Distance","MouseDown","MouseLeftClick","MouseMove","MouseDrag","CanvasCore","graphSystem","width","height","canvas","host","divLocalMain","divCanvas","divUI","timer","click","pressed","prevent","delay","down","t","document","getElementById","id","InitCanvas","createElement","style","display","margin","padding","append","backgroundColor","getContext","InitUI","marginLeft","translate","scale","EventBind","Loop","onclick","e","setTimeout","MouseClick","ondblclick","clearTimeout","MouseDoubleClick","addEventListener","MouseWheel","deltaY","onmousedown","onmouseup","MouseUp","onmousemove","window","onresize","Resize","requestAnimationFrame","clearRect","rect","GraphSystem","graph","InitGraph","Grid","mouseRemap","bounding","getBoundingClientRect","left","top","listCollision","falloff","UpdateCollision","lineWidth","strokeStyle","stroke","random","a","isCaptured","IsMouseHover","UpdatePosInScreen","offset","Implementation","GS2","GSK","GSKK","body","overflow","AppParticleSimulation","static","Dummy","canvasCore","implementation","Solution","divHost","destroy","firstChild","removeChild","error","console","warn"],"sourceRoot":""}