"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[78411],{78411:(t,e,s)=>{s.r(e),s.d(e,{Solution:()=>F});var n=s(5483),o=s.n(n);class i{constructor(t){var e=this;this.map=void 0,this.dd=()=>{},this.center=function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:-99.292649,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:39.043903;e.map.setCenter({lat:s,lng:t})},this.toMap=(t,e)=>{const s=this.map.unproject({x:t,y:e});return[s.lng,s.lat]},this.toScreen=(t,e)=>{const s=this.map.project([t,e]);return[s.x,s.y]},this.mouseDown=t=>{},this.mouseUp=t=>{},this.mouseMove=t=>{},this.mouseClick=t=>{},this.mouseDClick=t=>{},this.initMap(t)}initMap(t){o().accessToken="pk.eyJ1IjoiZGVzaWduanUiLCJhIjoiY2xhNGU0YWo4MDlhYzNwdHBwenVvang4eiJ9.P3sX4l_3KjdPeRRbVS1VVg",this.map=new(o().Map)({container:t,zoom:13,center:[-73.97646684462907,40.76334819495341],style:"mapbox://styles/mapbox/dark-v10"}),this.map.dragRotate.disable(),this.map.on("mousemove",(t=>{this.mouseMove(t)})),this.map.on("click",(t=>{this.mouseClick(t)})),this.map.on("mousedown",(t=>{this.mouseDown(t)})),this.map.on("dblclick",(t=>{this.mouseDClick(t)})),this.map.on("mouseup",(t=>{this.mouseUp(t)}));let e=document.getElementsByClassName("mapboxgl-canvas")[0];e.style.position="absolute",e=document.getElementsByClassName("mapboxgl-control-container")[0],e.style.display="none"}}var r=s(55913);class h extends r.bb{constructor(t,e){super(t),this.app=void 0,this.time=0,this.pts=[],this.offscreen=void 0,this.mouseDown=(t,e)=>{},this.mouseUp=(t,e)=>{},this.mouseDrag=(t,e)=>{},this.app=e,this.canvas.id="mapboxCustom",this.canvas.style.position="absolute",this.canvas.style.width="100%",this.canvas.style.height="100%",this.canvas.style.pointerEvents="none",this.offscreen=new d(this.canvas),this.start()}render(t){this.time+=.1,this.offscreen.reset(),this.app.controller&&this.app.controller.render(t,this.offscreen.ctx)}}class d{constructor(t){this.refCanvas=void 0,this.canvas=void 0,this.ctx=void 0,this.getPix=(t,e)=>this.ctx.getImageData(t,e,1,1).data,this.resize=()=>{const t=this.refCanvas.getBoundingClientRect();this.canvas.width=t.width,this.canvas.height=t.height},this.refCanvas=t,this.canvas=document.createElement("canvas"),this.ctx=this.canvas.getContext("2d"),this.canvas.style.background="rgba(255, 0, 0, 0.12)",this.canvas.style.zIndex="10",this.canvas.style.position="absolute",this.canvas.style.pointerEvents="none",this.canvas.style.display="none",window.addEventListener("resize",this.resize),this.resize(),this.appendCanvas()}appendCanvas(){this.refCanvas.parentElement.appendChild(this.canvas)}destroy(){window.removeEventListener("resize",this.resize);try{for(;void 0!==this.refCanvas&&void 0!==this.refCanvas.lastElementChild;)this.refCanvas.removeChild(this.refCanvas.lastElementChild)}catch(t){}}reset(){this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height)}}class a{constructor(t,e){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.x=void 0,this.y=void 0,this.z=void 0,this.x=t,this.y=e,this.z=s}}const c=(t,e)=>Math.sqrt(l(t,e)),l=(t,e)=>(t.x-e.x)*(t.x-e.x)+(t.y-e.y)*(t.y-e.y)+(t.z-e.z)*(t.z-e.z),p=(t,e,s)=>t+s*(e-t),g=(t,e,s)=>{let n=s.x-e.x,o=s.y-e.y,i=((t.x-e.x)*n+(t.y-e.y)*o)/(n*n+o*o),r=p(e.x,s.x,i),h=p(e.y,s.y,i);return new a(r,h)},u=()=>[Math.floor(255*Math.random()),Math.floor(255*Math.random()),Math.floor(255*Math.random())];class m{constructor(){this.type="node",this.isSelected=!1,this.id=0,this.visited=!1,this.data=[]}}class v{constructor(t){this.graphSystem=void 0,this.nodes=[],this.edges=[],this.nodesHash={},this.graphSystem=t}}class y extends m{constructor(t,e){super(),this.n0=void 0,this.n1=void 0,this.length=-1,this.color=u(),this.type="edge",this.n0=t,this.n1=e}getLength(){return this.length=c(this.n0.vec,this.n1.vec),this.length}toJSON(){return{id:this.id,n0:this.n0.id,n1:this.n1.id,data:this.data}}remove(){this.n0.removeEdge(this),this.n1.removeEdge(this)}}class S extends m{constructor(t,e,s){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;super(),this.graph=void 0,this.vec=void 0,this.edges=[],this.r=5,this.networkDistance=-1,this.countVisit=0,this.color=u(),this.graph=t,this.type="node",this.vec=new a(e,s,n)}reset(){this.networkDistance=-1,this.countVisit=0,this.visited=!1}toJSON(){return{id:this.id,vec:{x:this.vec.x,y:this.vec.y,z:this.vec.z},data:this.data}}remove(){this.graph.graphSystem.removeNode(this)}removeEdge(t){this.edges.splice(this.edges.indexOf(t),1)}}const f=(t,e,s,n,o,i)=>Math.sqrt((t-n)*(t-n)+(e-o)*(e-o)+(s-i)*(s-i)),x=function(t,e){return f(t.vec.x,t.vec.y,t.vec.z,e.vec.x,e.vec.y,e.vec.z)},E=function(t,e,s){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;void 0===s&&(s=x);for(let i=0;i<t.length;++i)t[i].reset();let o=[e];e.networkDistance=0;for(let i=0;i<1e7&&0!==o.length;++i){let t=o[0];o.shift();for(let e=0;e<t.edges.length;++e){const i=t.edges[e],r=t===i.n0?i.n1:i.n0,h=s(t,r,n),d=t.networkDistance+h;(-1===r.networkDistance||d<r.networkDistance)&&(r.networkDistance=d,o.push(r))}}},C=(t,e)=>{let s=0,n=0,o=[];if(-1!==e.networkDistance){o.push(t[e.id]);let i=e;for(s=0;s<1e5;++s){let e=i;for(e.countVisit++,n=0;n<i.edges.length;++n){const t=i.edges[n],s=i===t.n0?t.n1:t.n0;s.networkDistance<e.networkDistance&&(e=s)}if(e===i)break;i=e,o.push(t[i.id])}}return o};class w{}w.TYPE={Manhattan:"Manhattan  ",Euclidean:"Euclidean "},w.strength=.01,w.distanceManhattan=(t,e,s,n,o,i)=>Math.abs(t-n)+Math.abs(e-o)+Math.abs(s-i),w.distanceEuclidean=(t,e,s,n,o,i)=>Math.sqrt((t-n)*(t-n)+(e-o)*(e-o)+(s-i)*(s-i)),w.gePath=(t,e,s)=>{w.typeHeuristic=w.distanceEuclidean,s===w.TYPE.Manhattan&&(w.typeHeuristic=w.distanceManhattan);const n=[t],o=[];let i,r=100;for(;r--;)if(i=w.propagation(n,o,e),void 0!==i&&i.length)return i;return i},w.path=[],w.propagation=(t,e,s)=>{if(!(t.length>0))return w.path;{let n=0;for(let e=0;e<t.length;e++)t[e].f<t[n].f&&(n=e),t[e].f===t[n].f&&t[e].g>t[n].g&&(n=e);let o=t[n];if(o===s)return[o,o.previous,...w.path];w.path=[];let i=o;for(;i.previous&&(w.path.push(i.previous),i=i.previous,i.previous!==w.path[w.path.length-2]););t.splice(t.indexOf(o),1),e.push(o);let r=o.neighbors;for(let h=0;h<r.length;h++){let n=r[h];if(!e.includes(n)&&!n.blocked){let e=o.g+w.heuristic(n,o)*w.strength;if(t.includes(n))continue;t.push(n),n.g=e,n.h=w.heuristic(n,s),n.f=n.g+n.h,n.previous=o}}}},w.typeHeuristic=void 0,w.heuristic=(t,e)=>w.typeHeuristic(t.x,t.y,t.z,e.x,e.y,e.z);class b{constructor(t,e,s){this.id=-1,this.f=0,this.h=0,this.g=0,this.x=0,this.y=0,this.z=0,this.neighbors=[],this.edges=[],this.previous=void 0,this.blocked=!1,this.x=t,this.y=e,this.z=s}}class k{constructor(t,e){this.id=-1,this.n0=void 0,this.n1=void 0,this.n0=t,this.n1=e,this.n0.edges.push(this),this.n1.edges.push(this),t.neighbors.push(e),e.neighbors.push(t)}}class M{constructor(){this.nodes=[],this.edges=[],this.nodes=[],this.edges=[]}addVertex(t){this.nodes.push(t)}addEdge(t,e,s){this.edges.push({n0:t,n1:e,weight:s})}primMST(t){const e={},s=[];for(e[t]=!0;s.length<this.nodes.length-1;){let t=null;if(this.edges.forEach((s=>{(e[s.n0]&&!e[s.n1]||!e[s.n0]&&e[s.n1])&&(!t||s.weight<t.weight)&&(t=s)})),!t)break;s.push(t),e[t.n0]=!0,e[t.n1]=!0}return s}}class N{constructor(){this.graph=void 0,this.pathMST=void 0,this.nodeStart=void 0,this.nodeEnd=void 0,this.nodePre=void 0,this._captured=void 0,this.graph=new v(this)}get captured(){return this._captured}set captured(t){this._captured&&(this._captured.isSelected=!1),this._captured=t,t&&(this._captured.isSelected=!0)}resetCapture(){this.captured=void 0,this.nodePre=void 0}getPix(t,e){return new Uint8ClampedArray}addNode(t,e){const s=new S(this.graph,t,e,0);return this.graph.nodes.push(s),this.graph.nodesHash[s.color.join()]=s,this.resetCapture(),s}addEdge(t,e){if(t===e)return;if(this.findEdgeByNodes(t,e))return;const s=new y(t,e);return t.edges.push(s),e.edges.push(s),this.graph.edges.push(s),this.edgeSplitByEdge(s),this.resetCapture(),s}addEdgeByClosestNode(t){const e=this.findNode(t);e&&this.addEdge(t,e),this.resetCapture()}addEdgeSplit(t,e){const s=new y(t,e);return t.edges.push(s),e.edges.push(s),this.graph.edges.push(s),s}edgeSplitByNode(t,e){const s=e.n0,n=e.n1;this.addEdge(s,t),this.addEdge(t,n),this.removeEdge(e),this.resetCapture()}edgeSplitByNodeEdges(t){const e=[];let s=t.edges.length;for(let n=0;n<s;++n){const s=t.edges[n],o=[];for(let t=this.graph.edges.length-1;t>-1;--t){const e=this.graph.edges[t];if(s.n0!==e.n0&&s.n0!==e.n1&&s.n1!==e.n0&&s.n1!==e.n1){const t=D(s,e);if(t){const s=new S(this.graph,t[0],t[1]);this.graph.nodesHash[s.color.join()]=s,this.graph.nodes.push(s),this.addEdgeSplit(s,e.n0),this.addEdgeSplit(s,e.n1),this.removeEdge(e),o.push(s)}}}if(o.length>0){let t=s.n0;o.push(s.n1);const n=o.map((t=>c(t.vec,s.n0.vec))),i=n.map(((t,e)=>e)).sort(((t,e)=>n[t]-n[e]));this.addEdgeSplit(t,o[i[0]]);for(let e=0;e<i.length-1;++e)this.addEdgeSplit(o[i[e]],o[i[e+1]]);e.push(s),this.graph.edges.splice(this.graph.edges.indexOf(s),1)}}return e.forEach((t=>{t.n0.removeEdge(t),t.n1.removeEdge(t)})),0!==e.length&&(this.updateID(),!0)}edgeSplitByEdge(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const s=[];for(let n=this.graph.edges.length-1;n>-1;--n){const e=this.graph.edges[n];if(t.n0!==e.n0&&t.n0!==e.n1&&t.n1!==e.n0&&t.n1!==e.n1){const n=D(t,e);if(n){const t=new S(this.graph,n[0],n[1]);this.graph.nodes.push(t),this.graph.nodesHash[t.color.join()]=t,this.addEdgeSplit(t,e.n0),this.addEdgeSplit(t,e.n1),this.removeEdge(e),s.push(t)}}}if(s.length>0){let e=t.n0;s.push(t.n1);const n=s.map((e=>c(e.vec,t.n0.vec))),o=n.map(((t,e)=>e)).sort(((t,e)=>n[t]-n[e]));this.addEdgeSplit(e,s[o[0]]);for(let t=0;t<o.length-1;++t)this.addEdgeSplit(s[o[t]],s[o[t+1]]);this.removeEdge(t)}e&&this.updateID()}removeNode(t){t.edges.forEach((e=>{e.n0===t?e.n1.removeEdge(e):e.n0.removeEdge(e),this.graph.edges.splice(this.graph.edges.indexOf(e),1)})),this.graph.nodes.splice(this.graph.nodes.indexOf(t),1),delete this.graph.nodesHash[t.color.join()],this.updateID(),this.resetCapture()}removeEdge(t){t.n0.removeEdge(t),t.n1.removeEdge(t),this.graph.edges.splice(this.graph.edges.indexOf(t),1)}findNode(t){let e=Number.MAX_VALUE,s=-1;for(let n=0;n<this.graph.nodes.length;++n){if(this.graph.nodes[n]===t)continue;const o=this.graph.nodes[n].vec,i=c(o,t.vec);e>i&&(e=i,s=n)}if(s>-1)return this.graph.nodes[s]}findNodeVec(t,e){arguments.length>2&&void 0!==arguments[2]||N.minDis;const s=this.getPix(t,e);if(s){let t=new Uint8ClampedArray(s.subarray(0,s.length-1));const e=this.graph.nodesHash[t.join()];if(e)return e}}findEdgeVec(t,e){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:N.minDis;const n=new a(t,e,0);for(let o=0;o<this.graph.edges.length;++o){const t=this.graph.edges[o],e=g(n,t.n0.vec,t.n1.vec);if(c(n,e)<s)return{edge:t,vec:e}}}findEdgeByEdge(t){return this.findEdgeByNodes(t.n0,t.n1)}findEdgeByNodes(t,e){for(let s=0;s<this.graph.edges.length;++s){const n=this.graph.edges[s];if(t===n.n0&&e===n.n1||t===n.n1&&e===n.n0)return n}}getEdgeByTwoNode(t,e){for(let s=0;s<this.graph.edges.length;++s){const n=this.graph.edges[s];if(n.n0===t&&n.n1===e||n.n0===e&&n.n1===t)return n}}mergeTwoNodes(t,e){const s=[];for(let n=0;n<e.edges.length;++n){const t=e.edges[n];t.n0===e?s.push(t.n1):s.push(t.n0)}e.remove(),s.forEach((e=>{this.getEdgeByTwoNode(t,e)||this.addEdge(t,e)}))}updateID(){for(let t=0;t<this.graph.nodes.length;++t)this.graph.nodes[t].id=t;for(let t=0;t<this.graph.edges.length;++t)this.graph.edges[t].id=t}resetVisit(){for(let t=0;t<this.graph.nodes.length;++t)this.graph.nodes[t].visited=!1}setNodeStart(){this.captured&&(this.nodeStart=this.captured)}setNodeEnd(){this.captured&&(this.nodeEnd=this.captured)}computePath(){if(this.nodeStart&&this.nodeEnd)return j(this.graph,this.nodeStart.id,this.nodeEnd.id)}computePathAStar(){if(this.nodeStart&&this.nodeEnd)return I(this.graph,this.nodeStart.id,this.nodeEnd.id)}computeMST(){const t=T(this.graph);return this.pathMST=t,t}computeBFS(){this.resetVisit();return(t=>{let e=0,s=[],n=[];for(t.visited=!0,n.push(t),s.push(t);n.length>0;){const t=n.shift();for(let e=0;e<t.edges.length;++e){const o=t.edges[e],i=o.n0===t?o.n1:o.n0;i.visited||(i.visited=!0,s.push(i),n.push(i))}if(e++>1e5)return}return s})(this.graph.nodes[0]).map((t=>t.id))}computeDFS(){this.resetVisit();return(t=>{const e=[],s=t=>{if(!t.visited){t.visited=!0,e.push(t);for(let e=0;e<t.edges.length;++e){const n=t.edges[e],o=n.n0===t?n.n1:n.n0;s(o)}}};return s(t),e})(this.graph.nodes[0]).map((t=>t.id))}}N.minDis=1e-5;const D=(t,e)=>P(t.n0,t.n1,e.n0,e.n1),P=(t,e,s,n)=>((t,e,s,n,o,i,r,h)=>{if(t===s&&e===n||o===r&&i===h)return;const d=(h-i)*(s-t)-(r-o)*(n-e);if(0===d)return;const a=((r-o)*(e-i)-(h-i)*(t-o))/d,c=((s-t)*(e-i)-(n-e)*(t-o))/d;if(a<0||a>1||c<0||c>1)return;return[t+a*(s-t),e+a*(n-e)]})(t.vec.x,t.vec.y,e.vec.x,e.vec.y,s.vec.x,s.vec.y,n.vec.x,n.vec.y),T=t=>{const e=(t=>{const e=new M;for(let s=0;s<t.nodes.length;++s)e.addVertex(t.nodes[s].id);for(let s=0;s<t.edges.length;++s){const n=t.edges[s];e.addEdge(n.n0.id,n.n1.id,n.getLength())}return e.primMST(0)})(t);return e},j=(t,e,s)=>{const n=((t,e,s)=>(E(t.nodes,e,x,.1),C(t.nodes,s)))(t,t.nodes[e],t.nodes[s]);return n},I=(t,e,s)=>{const n=((t,e,s)=>{const n=[];for(let i=0;i<t.nodes.length;++i){const e=t.nodes[i],s=new b(e.vec.x,e.vec.y,e.vec.z);s.id=e.id,n.push(s)}const o=[];for(let i=0;i<t.edges.length;++i){const e=t.edges[i],s=new k(n[e.n0.id],n[e.n1.id]);o.push(s)}return w.gePath(n[e.id],n[s.id])})(t,t.nodes[e],t.nodes[s]);return n};class H{constructor(){this.histories=[],this.currentIndex=-1}reset(){this.histories=[],this.currentIndex=-1}push(t){this.currentIndex<this.histories.length-1&&this.histories.splice(this.currentIndex+1,this.histories.length),this.histories.push(t),this.currentIndex=this.histories.length-1}getCurrentIndex(){return this.currentIndex}getHistoryLength(){return this.histories.length}getCurrentState(){return{currentIndex:this.getCurrentIndex(),historyNum:this.getHistoryLength()}}undo(){if(0!==this.currentIndex)return this.currentIndex--,this.histories[this.currentIndex]}redo(){return this.currentIndex++,this.currentIndex=this.currentIndex<this.histories.length?this.currentIndex:this.histories.length-1,this.histories[this.currentIndex]}}class B{constructor(){this.manager=void 0,this.manager=new H}getLog(){return this.manager.getCurrentState()}resetState(){this.manager.reset(),this.captureState([])}captureState(t){this.manager.push(t);return this.manager.getCurrentState()}undo(){return this.manager.undo()}redo(){return this.manager.redo()}}class z{constructor(t){this.controller=void 0,this.sceneState=void 0,this.graphSystem=void 0,this.toScreen=(t,e)=>this.controller.projection(t,e),this.toggleOffscreenBind=t=>{},this.controller=t,this.graphSystem=this.controller.graphSystem,this.sceneState=new B}reset(){const t=this.controller.graphSystem.graph;t.nodes=[],t.edges=[],this.capture()}capture(){this.sceneState.captureState(this.toJSON()),this.updateUndoRedoHist()}updateUndoRedoHist(){if(this.controller.divHist){const t=this.sceneState.getLog();this.controller.divHist.textContent="hist: ".concat(t.currentIndex,"/").concat(t.historyNum-1)}}setCommandMode(t){this.controller.commandMode=t}undo(){const t=this.sceneState.undo();t&&this.dump(t),this.updateUndoRedoHist(),this.controller.graphSystem.resetCapture()}redo(){const t=this.sceneState.redo();t&&this.dump(t),this.updateUndoRedoHist(),this.controller.graphSystem.resetCapture()}toJSON(){const t={node:[],edge:[],MST:this.controller.common.computeMST()};return this.controller.graphSystem.graph.nodes.forEach((e=>{t.node.push(e.toJSON())})),this.controller.graphSystem.graph.edges.forEach((e=>{t.edge.push(e.toJSON())})),t}exportJSON(){!function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"download";const s=document.createElement("a");s.href="data:application/json;charset=utf-8,"+encodeURIComponent(t),s.download="".concat(e),s.click()}(JSON.stringify(this.toJSON()),"graph.json")}dump(t){const e=this.controller.graphSystem;e.graph.nodes=[],e.graph.edges=[];for(let s=0;s<t.node.length;++s){const n=t.node[s],o=e.addNode(n.vec.x,n.vec.y,n.vec.z);o.id=n.id,o.data=n.data}for(let s=0;s<t.edge.length;++s){const n=t.edge[s],o=e.addEdge(e.graph.nodes[n.n0],e.graph.nodes[n.n1]);o.id=n.id,o.data=n.data}}populate(){const t=Math.random()*this.controller.canvas.width,e=Math.random()*this.controller.canvas.height;this.controller.mouseClick(t,e,void 0)}toggleDelaunay(t){this.controller.renderer.toggleDelaunay=t}toggleMST(t){this.controller.renderer.toggleMST=t}computeMST(){return this.controller.graphSystem.computeMST()}computedBSF(){const t=this.controller.graphSystem.computeBFS();this.updateSearchResult("BFS: "+t.join(", "))}computedDFS(){const t=this.controller.graphSystem.computeDFS();this.updateSearchResult("DFS: "+t.join(", "))}updateSearchResult(t){this.controller.divSearchResult.textContent=t}computedDijkstra(t){this.controller.renderer.toggleDijkstra=t}computedAStar(t){this.controller.renderer.toggleAStar=t}removeSelection(){this.controller.graphSystem.captured&&(this.controller.graphSystem.captured.remove(),this.controller.graphSystem.captured=void 0)}addNodeWithClosestNode(t,e){const s=this.graphSystem.addNode(t,e,0);this.graphSystem.addEdgeByClosestNode(s)}}var L=s(458);class O{constructor(t){this.controller=void 0,this.toggleDelaunay=!1,this.toggleMST=!1,this.toggleDijkstra=!1,this.toggleAStar=!1,this.controller=t}projection(t,e){return this.controller.projection(t,e)}render(t,e){if(this.controller.graphSystem.captured?this.controller.divSel.textContent=this.controller.graphSystem.captured.type:this.controller.divSel.textContent="undefined",this.renderNodeStartEnd(t,e),t.beginPath(),t.arc(this.controller.m.x,this.controller.m.y,2,0,6.28),t.closePath(),t.fillStyle="#888",t.fill(),this.toggleMST){this.controller.common.computeMST();const e=this.controller.graphSystem.graph.nodes;t.strokeStyle="#ff0",t.beginPath(),this.controller.graphSystem.pathMST.forEach((s=>{const n=this.controller.common.toScreen(e[s.n0].vec.x,e[s.n0].vec.y),o=this.controller.common.toScreen(e[s.n1].vec.x,e[s.n1].vec.y);t.moveTo(n[0],n[1]),t.lineTo(o[0],o[1])})),t.lineWidth=5,t.stroke()}if(this.toggleDelaunay&&((t,e,s)=>{new L.oc(e.map((t=>{const e=s(t.vec.x,t.vec.y);return new L.h9(e[0],e[1])}))).DrawTriClass(t,"#fff")})(t,this.controller.graphSystem.graph.nodes,this.controller.common.toScreen),this.toggleDijkstra&&this.controller.graphSystem.nodeStart&&this.controller.graphSystem.nodeEnd){const e=this.controller.graphSystem.computePath().map((t=>this.controller.common.toScreen(t.vec.x,t.vec.y)));t.beginPath(),t.moveTo(e[0][0],e[0][1]);for(let s=1;s<e.length;++s)t.lineTo(e[s][0],e[s][1]);t.strokeStyle="#f0f",t.lineWidth=5,t.stroke()}if(this.toggleAStar&&this.controller.graphSystem.nodeStart&&this.controller.graphSystem.nodeEnd){const e=this.controller.graphSystem.computePathAStar().map((t=>this.controller.common.toScreen(t.x,t.y)));t.beginPath(),t.moveTo(e[0][0],e[0][1]);for(let s=1;s<e.length;++s)t.lineTo(e[s][0],e[s][1]);t.strokeStyle="#f0f",t.lineWidth=5,t.stroke()}this.renderGraph(t,e)}renderNodeStartEnd(t,e){if(t.fillStyle="#0ff",this.controller.graphSystem.nodeStart){const e=this.controller.graphSystem.nodeStart.vec;t.beginPath(),t.arc(e.x,e.y,8,0,2*Math.PI),t.closePath(),t.fill()}if(this.controller.graphSystem.nodeEnd){const e=this.controller.graphSystem.nodeEnd.vec;t.beginPath(),t.arc(e.x,e.y,8,0,2*Math.PI),t.closePath(),t.fill()}}renderGraph(t,e){this.controller.log="N:".concat(this.controller.graphSystem.graph.nodes.length,", E:").concat(this.controller.graphSystem.graph.edges.length),this.controller.graphSystem.graph.edges.forEach((s=>{this.renderGraphEdge(t,e,s)})),this.controller.graphSystem.graph.nodes.forEach((s=>{this.renderGraphNode(t,e,s)}))}renderGraphNode(t,e,s){let n=this.projection(s.vec.x,s.vec.y);t.beginPath(),t.arc(n[0],n[1],s.r,0,6.28),t.closePath(),t.fillStyle="#ff0000",t.fill(),s.isSelected&&(t.lineWidth=3,t.strokeStyle="#00f",t.stroke()),t.strokeStyle="#ff0000",t.lineWidth=1,t.strokeText("".concat(s.networkDistance),n[0],n[1]-20),t.strokeText("".concat(s.id),n[0],n[1]-7),e.beginPath(),e.arc(n[0],n[1],s.r+1,0,6.28),e.closePath(),e.fillStyle="rgb(".concat(s.color.join(),")"),e.fill()}renderGraphEdge(t,e,s){if(s.isSelected){t.lineWidth=3,t.strokeStyle="#00f",t.beginPath();let e=this.projection(s.n0.vec.x,s.n0.vec.y);t.moveTo(e[0],e[1]),e=this.projection(s.n1.vec.x,s.n1.vec.y),t.lineTo(e[0],e[1]),t.stroke()}t.lineWidth=1,t.beginPath();let n=this.projection(s.n0.vec.x,s.n0.vec.y);t.moveTo(n[0],n[1]),n=this.projection(s.n1.vec.x,s.n1.vec.y),t.lineTo(n[0],n[1]),t.strokeStyle="#0f0",t.stroke(),t.strokeStyle="#00ff00",t.lineWidth=1;const o=s.n0.vec.x+.5*(s.n1.vec.x-s.n0.vec.x),i=s.n0.vec.y+.5*(s.n1.vec.y-s.n0.vec.y);n=this.projection(o,i),t.strokeText("".concat(s.id),n[0],n[1]-7)}}class W{constructor(t){this.common=void 0,this.graphSystem=void 0,this.renderer=void 0,this.commandMode="drawing",this.canvas=void 0,this.divHist=void 0,this.divLog=void 0,this.divSel=void 0,this.divSearchResult=void 0,this.needPopulate=!1,this.m=new a(0,0,0),this.log="",this.wasMoved=!1,this.pressed=!1,this.projection=(t,e)=>[t,e],this.graphSystem=new N,this.common=new z(this),this.renderer=new O(this),this.canvas=t}mouseDown(t,e,s){const n=this.graphSystem.findNodeVec(s.point.x,s.point.y);this.graphSystem.captured&&this.graphSystem.captured!==n&&(this.graphSystem.nodePre=this.graphSystem.captured),this.graphSystem.captured=n,this.pressed=!0}mouseClick(t,e,s){if(this.graphSystem.captured=this.graphSystem.findNodeVec(s.point.x,s.point.y),void 0===this.graphSystem.captured)return this.common.addNodeWithClosestNode(t,e),this.common.capture(),void this.updatePost()}mouseMove(t,e){this.m.x=t,this.m.y=e}mouseUp(){let t=!1;if(this.graphSystem.captured&&"node"===this.graphSystem.captured.type){const e=this.graphSystem.captured;t=this.graphSystem.edgeSplitByNodeEdges(e);const s=this.graphSystem.findNode(e);if(s){const n=this.common.toScreen(e.vec.x,e.vec.y),o=this.common.toScreen(s.vec.x,s.vec.y);c(new a(n[0],n[1],0),new a(o[0],o[1],0))<16&&(this.graphSystem.mergeTwoNodes(s,e),t=!0)}this.wasMoved&&(this.wasMoved=!1,t=!0),this.graphSystem.captured=void 0,this.updatePost()}t&&this.common.capture(),this.pressed=!1}mouseDrag(t,e){if(this.graphSystem.captured&&"node"===this.graphSystem.captured.type){const s=this.graphSystem.captured;s.vec.x=t,s.vec.y=e}this.wasMoved=!0}updatePost(){this.renderer.toggleMST&&this.graphSystem.computeMST()}render(t,e){this.needPopulate&&this.populate(),this.divLog.textContent=this.log,this.renderer.render(t,e)}exportJSON(){return this.common.exportJSON()}populate(){return this.common.populate()}}class U{constructor(t){this.app=void 0,this.app=t,this.initUI()}initUI(){const t=document.createElement("div");t.style.width="160px",t.style.position="absolute",t.style.background="#222",t.style.padding="10px",this.app.divHost.appendChild(t);const e=document.createElement("button");e.textContent="remove",e.onclick=()=>{this.app.controller.common.removeSelection()},t.appendChild(e);const s=document.createElement("div");s.textContent="N:0, E:0",s.style.color="#bbb",t.appendChild(s),this.app.controller.divLog=s;const n=document.createElement("div");n.textContent="hist: 0",n.style.color="#bbb",t.appendChild(n),this.app.controller.divHist=n;const o=document.createElement("div");o.textContent="undefined",o.style.color="#bbb",t.appendChild(o),this.app.controller.divSel=o;const i=R();t.appendChild(i);const r=V("Delaunay",(t=>{this.app.controller.common.toggleDelaunay(t)}));t.appendChild(r.div);const h=V("MST",(t=>{this.app.controller.common.toggleMST(t)}));t.appendChild(h.div);const d=J("DFS",(()=>{this.app.controller.common.computedDFS()}));t.appendChild(d);const a=J("BFS",(()=>{this.app.controller.common.computedBSF()}));t.appendChild(a);const c=document.createElement("div"),l=document.createElement("p");l.style.marginTop="2px",c.appendChild(l),t.appendChild(c),this.app.controller.divSearchResult=l;const p=V("Dijkstra",(t=>{this.app.controller.common.computedDijkstra(t)}));t.appendChild(p.div);const g=V("*Star",(t=>{this.app.controller.common.computedAStar(t)}));t.appendChild(g.div);const u=J("Start",(()=>{this.app.controller.common.graphSystem.setNodeStart()}));t.appendChild(u);const m=J("End",(()=>{this.app.controller.common.graphSystem.setNodeEnd()}));t.appendChild(m);const v=V("Offscreen",(t=>{this.app.controller.common.toggleOffscreenBind(t)}));t.appendChild(v.div);const y=R();t.appendChild(y);const S=A(["Selection","Drawing Line","Drawing Pline"],(t=>{console.log({v:t}),this.app.controller.common.setCommandMode(t)}));t.appendChild(S);const f=document.createElement("div");f.style.background="#111",f.style.margin="5px",f.style.height="100px",t.appendChild(f);const x=J("undo",(()=>{this.app.controller.common.undo()}));f.appendChild(x);const E=J("redo",(()=>{this.app.controller.common.redo()}));f.appendChild(E);const C=document.createElement("button");C.textContent="Export JSON",f.appendChild(C),C.onclick=()=>{this.app.controller.exportJSON()};const w=J("reset",(()=>{this.app.controller.common.reset()}));f.appendChild(w);const b=document.createElement("button");b.textContent="run",b.onclick=()=>{this.app.controller.needPopulate=!this.app.controller.needPopulate},f.appendChild(b)}}const J=(t,e)=>{const s=document.createElement("button");return s.textContent=t,s.onclick=()=>{e()},s},V=(t,e)=>{const s=document.createElement("div");s.style.display="flex";const n=document.createElement("input");n.type="checkbox",n.defaultChecked=!1;const o=document.createElement("div");return o.textContent=t,o.style.color="#aaa",s.appendChild(n),s.appendChild(o),n.onchange=()=>e(n.checked),{div:s,checkBox:n}},R=function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"#fff",e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;const s=document.createElement("div");return s.style.background=t,s.style.height=e+"px",s},A=function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:["A","B","C"],e=arguments.length>1?arguments[1]:void 0;const s=document.createElement("div");s.style.background="#111",s.style.margin="5px",s.style.height="100px",s.style.display="grid";const n=document.createElement("div");return n.textContent="Command Mode",s.appendChild(n),t.forEach((t=>{const n=document.createElement("label");n.className="radio-item";const o=document.createElement("input");o.type="radio",o.name="ratio",o.value=t;const i=document.createTextNode(t);n.appendChild(o),n.appendChild(i),s.appendChild(n),o.addEventListener("change",(function(){e(this.value)}))})),s};class F{constructor(t){this.divHost=void 0,this.mapboxWrapper=void 0,this.renderer=void 0,this.controller=void 0,this.ui=void 0,this.mouseDown=t=>{this.controller.mouseDown(t.lngLat.lng,t.lngLat.lat,t),this.controller.graphSystem.captured&&this.mapboxWrapper.map.dragPan.disable()},this.mouseUp=t=>{this.controller.mouseUp()},this.mouseDrag=t=>{this.mapboxWrapper.map.dragPan.disable(),this.controller.mouseDrag(t.lngLat.lng,t.lngLat.lat)},this.mouseClick=t=>{this.controller.mouseClick(t.lngLat.lng,t.lngLat.lat,t)},this.mouseMove=t=>{this.controller.pressed?this.mouseDrag(t):(this.mapboxWrapper.map.dragPan.enable(),this.controller.mouseMove(t.lngLat.lng,t.lngLat.lat))},this.divHost=document.getElementById(t),this.divHost.style.position="relative",this.mapboxWrapper=new i(this.divHost.id),this.mapboxWrapper.mouseDown=this.mouseDown,this.mapboxWrapper.mouseUp=this.mouseUp,this.mapboxWrapper.mouseClick=this.mouseClick,this.mapboxWrapper.mouseMove=this.mouseMove,setTimeout((()=>{this.renderer=new h(this.divHost,this),this.controller=new W(this.renderer.canvas),this.controller.projection=(t,e)=>this.mapboxWrapper.toScreen(t,e),this.ui=new U(this),this.initPost()}),100)}keyDown(t){}destroy(){for(this.renderer.destroy();this.divHost.lastElementChild;)this.divHost.removeChild(this.divHost.lastElementChild)}initPost(){this.controller.common.toggleOffscreenBind=t=>{this.renderer.offscreen.canvas.style.display=t?"block":"none"},this.controller.common.graphSystem.getPix=(t,e)=>this.renderer.offscreen.getPix(t,e)}}}}]);
//# sourceMappingURL=78411.d21d4a45.chunk.js.map