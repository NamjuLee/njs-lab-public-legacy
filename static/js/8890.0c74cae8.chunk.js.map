{"version":3,"file":"static/js/8890.0c74cae8.chunk.js","mappings":"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","sources":["njslab/Tools/GA-legacy-Rect-Opti/Asset/index.ts","njslab/Tools/GA-legacy-Rect-Opti/ViewWrapper/index.ts","njslab/Tools/GA-legacy-Rect-Opti/GraphicsCoreWrapper/CanvasWrapper/CanvasThree/CoreThree/CameraController.ts","njslab/Tools/GA-legacy-Rect-Opti/GraphicsCoreWrapper/CanvasWrapper/CanvasThree/CanvasThree.ts","njslab/Tools/GA-legacy-Rect-Opti/GraphicsCoreWrapper/CanvasWrapper/index.ts","njslab/Tools/GA-legacy-Rect-Opti/GraphicsCoreWrapper/index.ts","njslab/Tools/GA-legacy-Rect-Opti/SceneWrapper/ActiveCommand/ActiveCommandController.ts","njslab/Tools/GA-legacy-Rect-Opti/SceneWrapper/GeometryCommon/GeometryCommon.ts","njslab/Tools/GA-legacy-Rect-Opti/SceneWrapper/Light/LightingController.ts","njslab/Tools/GA-legacy-Rect-Opti/SceneWrapper/Definition/Common/Renderer/index.ts","njslab/Tools/GA-legacy-Rect-Opti/SceneWrapper/Definition/AppGridOptimizer/Optimizer/Geometry/BoundingBox.ts","njslab/Tools/GA-legacy-Rect-Opti/SceneWrapper/Definition/Common/Geometry/Polyline.ts","njslab/Tools/GA-legacy-Rect-Opti/SceneWrapper/Definition/AppGridOptimizer/Optimizer/Core/Math.ts","njslab/Tools/GA-legacy-Rect-Opti/SceneWrapper/Definition/AppGridOptimizer/Optimizer/Geometry/Rect.ts","njslab/Tools/GA-legacy-Rect-Opti/SceneWrapper/Definition/AppGridOptimizer/Optimizer/GridSystem/Cell.ts","njslab/Tools/GA-legacy-Rect-Opti/SceneWrapper/Definition/AppGridOptimizer/Optimizer/GridSystem/GridSystem.ts","njslab/Tools/GA-legacy-Rect-Opti/SceneWrapper/Definition/AppGridOptimizer/Optimizer/index.ts","njslab/Tools/GA-legacy-Rect-Opti/SceneWrapper/Definition/AppGridOptimizer/AppGridOptimizer.ts","njslab/Tools/GA-legacy-Rect-Opti/SceneWrapper/Definition/AppRectOptimizer/Optimizer/index.ts","njslab/Tools/GA-legacy-Rect-Opti/SceneWrapper/Definition/AppRectOptimizer/AppRectOptimizer.ts","njslab/Tools/GA-legacy-Rect-Opti/SceneWrapper/Definition/index.ts","njslab/Tools/GA-legacy-Rect-Opti/SceneWrapper/index.ts","njslab/Tools/GA-legacy-Rect-Opti/IO/MouseInteraction/MouseInteraction.ts","njslab/Tools/GA-legacy-Rect-Opti/IO/index.ts","njslab/Tools/GA-legacy-Rect-Opti/index.ts"],"sourcesContent":["\r\nexport class Asset {\r\n    // tslint:disable-next-line:no-any\r\n    // rPoint: any;\r\n\r\n    constructor() {\r\n        //\r\n    }\r\n}","import { Demo300GA } from '..';\r\nexport class ViewWrapper {\r\n    app: Demo300GA;\r\n    constructor(app: Demo300GA) {\r\n        this.app = app;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { OrbitControls } from 'three-orbitcontrols-ts';\r\nimport { CLICK_TYPE } from '../../../../lib';\r\nimport { CanvasThree } from '../CanvasThree';\r\nimport { MouseEventData } from '../../../../IO/MouseInteraction/MouseInteraction';\r\n\r\n// const DeviceOrientationControls = require('../../lib/DeviceOrientationControls');\r\n// const StereoEffect = require('../../lib/StereoEffect');\r\n\r\n// import { StereoEffect } from '../lib/StereoEffect';\r\n\r\nexport enum CAMERA_TYPE {\r\n    PERSPECTIVE = 'PERSPECTIVE',\r\n    ORTHOGRAPHIC = 'ORTHOGRAPHIC',\r\n    STEREO = 'STEREO'\r\n}\r\n\r\nexport class CameraControllerThree {\r\n\r\n    canvas: CanvasThree;\r\n    cameraP: THREE.PerspectiveCamera; // Camera;\r\n    cameraO: THREE.OrthographicCamera; // Camera;\r\n    controls: OrbitControls;\r\n\r\n    initX: number = 0;\r\n    initY: number = 0;\r\n    prevX: number = 0;\r\n    prevY: number = 0;\r\n\r\n    yRotRate: number;\r\n    xRotRate: number;\r\n    xPanRate: number;\r\n    yPanRate: number;\r\n    zPanRate: number;\r\n\r\n    rotateRate: number = 150; // 0.000000001; // 150;\r\n    panRate: number = 50; // 0.000000001; // 400;\r\n    zoomRate: number = 200; // 0.000000001; // 200;\r\n\r\n    zoomFactor: number = 1;\r\n\r\n    frustumSize: number = 0.001; // 500;\r\n\r\n    type: CAMERA_TYPE;\r\n    cameraShift: number = 0;\r\n\r\n    width: number;\r\n    height: number;\r\n    ableToMove: boolean = true;\r\n\r\n    // tslint:disable-next-line:no-any\r\n    stereoCamera: THREE.StereoCamera;\r\n\r\n    constructor(canvas: CanvasThree, width: number, height: number, type: CAMERA_TYPE = CAMERA_TYPE.PERSPECTIVE) {\r\n        this.canvas = canvas;\r\n        this.type = type;\r\n        this.width = width; this.height = height;\r\n        // this.aspect = width / height;\r\n\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            this.GetPerspective(0, 10, 50);\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            this.GetOrthographic();\r\n        } else if (this.type === CAMERA_TYPE.STEREO) {\r\n            this.GetStereo();\r\n        }\r\n        this.stereoCamera = new THREE.StereoCamera(); // (this.canvas.renderer);\r\n    }\r\n    GetStereo() {\r\n\r\n        // console.log(StereoEffect);\r\n        // console.log(DeviceOrientationControls);\r\n\r\n    }\r\n    set aspect(aspect: number) {\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            this.cameraP.aspect = aspect;\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            //\r\n        }\r\n    }\r\n    get aspect() {\r\n        return this.width / this.height;\r\n    }\r\n    get camera() {\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            return this.cameraP;\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            return this.cameraO;\r\n        } else {\r\n            return this.cameraP;\r\n        }\r\n    }\r\n    GetPerspective(x: number = 0, y: number = 2, z: number = 2) {\r\n        this.cameraP = new THREE.PerspectiveCamera(45, this.width / this.height, 0.01, 10000);\r\n        this.cameraP.position.set(x, y, z);\r\n        this.InitOrbitController();\r\n    }\r\n    GetOrthographic() {\r\n        this.cameraO = new THREE.OrthographicCamera(this.frustumSize * this.aspect / - 2, this.frustumSize * this.aspect / 2, this.frustumSize / 2, this.frustumSize / - 2, 0.01, 50000);\r\n        this.cameraO.position.set(0, 1, 0);\r\n        this.InitOrbitController();\r\n    }\r\n    InitOrbitController() {\r\n\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            this.controls = new OrbitControls(this.cameraP, this.canvas.renderer.domElement);\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            this.controls = new OrbitControls(this.cameraO, this.canvas.renderer.domElement);\r\n        }\r\n        // this.controls.panningMode = THREE.HorizontalPanning; // default is THREE.ScreenSpacePanning\r\n        this.controls.minDistance = 0.01;\r\n        this.controls.maxDistance = 500;\r\n        // this.controls.maxPolarAngle = Math.PI / 2;\r\n        this.controls.enablePan = true;\r\n        this.controls.enableZoom = true;\r\n\r\n        this.yRotRate = this.rotateRate / this.width * Math.PI / 90;\r\n        this.xRotRate = this.rotateRate / this.height * Math.PI / 180;\r\n        this.xPanRate = (this.panRate / this.width) * this.zoomFactor;\r\n        this.yPanRate = (this.panRate / this.height) * this.zoomFactor;\r\n        this.zPanRate = this.zoomRate / this.height;\r\n        // this.EnableDamping(true);\r\n\r\n        // this.controls.maxPolarAngle = 1.5; // ground\r\n    }\r\n    EnableDamping(v: boolean, factor: number = 0.35) {\r\n        this.controls.enableDamping = v; // an animation loop is required when either damping or auto-rotation are enabled\r\n        this.controls.dampingFactor = factor;\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.initX = this.prevX = x; // - this.offsetX;\r\n        this.initY = this.prevY = y; // - this.offsetY;\r\n    }\r\n    MouseMove(x: number, y: number, shift: boolean = false) {\r\n        // console.log(x, y, shift);\r\n        // if (!this.ableToMove) { return; }\r\n\r\n        // console.log(x,y)\r\n        const dx = x - this.prevX;\t\t// Difference since last mouse move\r\n        const dy = y - this.prevY;\r\n\r\n        // When shift is being helt down, we pan around else we rotate.\r\n        if (!shift) {\r\n            this.controls.rotateLeft(dx * this.xRotRate);\r\n            this.controls.rotateUp(dy * this.yRotRate);\r\n        } else {\r\n            // this.controls.pan(dx * this.xPanRate, dy * this.yPanRate);\r\n\r\n            this.controls.panLeft(dx * this.xPanRate, this.cameraP.matrix);\r\n            this.controls.panUp(dy * this.yPanRate, this.cameraP.matrix);\r\n\r\n            // this.camera.transform.position.x += -dx * this.xPanRate;\r\n            // this.camera.transform.position.y += dy * this.yPanRate;\r\n        }\r\n        // this.controls.panUp(0.001, this.camera.matrix);\r\n        this.prevX = x;\r\n        this.prevY = y;\r\n        // this.controls.update();\r\n    }\r\n    MouseWheel(v: number) {\r\n        // console.log(v);\r\n        this.controls.enableZoom = true;\r\n        v *= 0.1;\r\n\r\n        const dd = this.cameraP.position.length() * 100;\r\n\r\n        this.zoomFactor = dd;\r\n\r\n        if (v > 0) {\r\n            this.cameraP.position.x *= 0.9;\r\n            this.cameraP.position.y *= 0.9;\r\n            this.cameraP.position.z *= 0.9;\r\n        } else {\r\n            this.cameraP.position.x *= 1.1;\r\n            this.cameraP.position.y *= 1.1;\r\n            this.cameraP.position.z *= 1.1;\r\n        }\r\n\r\n    }\r\n    ShiftCamera() {\r\n        this.cameraShift++;\r\n        if (this.cameraShift === 2) { this.cameraShift = 0; }\r\n        if (this.cameraShift === 0) {\r\n            this.GetPerspective();\r\n        } else if (this.cameraShift === 1) {\r\n            this.GetOrthographic();\r\n        }\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        if (e.CLICK_TYPE === CLICK_TYPE.DOWN) { this.MouseDown(e.x, e.y); }\r\n        if (e.CLICK_TYPE === CLICK_TYPE.DRAG) { this.MouseMove(e.x, e.y, e.pressedShift); }\r\n        if (e.CLICK_TYPE === CLICK_TYPE.WHEEL) { this.MouseWheel(e.wheel); }\r\n\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { WebGLRenderer } from 'three';\r\nimport { CanvasWrapper } from '..';\r\nimport { CameraControllerThree } from './CoreThree/CameraController';\r\nexport class CanvasThree {\r\n    hostDiv: HTMLElement;\r\n    camera: CameraControllerThree;\r\n    scene: THREE.Scene;\r\n    renderer: WebGLRenderer;\r\n\r\n    canvasWrapper: CanvasWrapper;\r\n    vrBtn: HTMLElement;\r\n    bg: number = 0x000000;\r\n    isActive: boolean = true;\r\n    constructor(canvasWrapper: CanvasWrapper, hostDiv: HTMLElement) {\r\n        this.canvasWrapper = canvasWrapper;\r\n        this.hostDiv = hostDiv;\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        const width = this.hostDiv.clientWidth;\r\n        const height = this.hostDiv.clientHeight;\r\n\r\n        // this.renderer = new WebGLRenderer({ antialias: true, alpha: true });\r\n        this.renderer = new WebGLRenderer();\r\n        this.renderer.setPixelRatio(width / height);\r\n\r\n        this.camera = new CameraControllerThree(this, width, height);\r\n        this.scene = new THREE.Scene();\r\n        // this.scene.background = this.bg;\r\n\r\n        this.renderer.domElement.id = 'dynamic-spring';\r\n        this.renderer.domElement.style.position = 'absolute';\r\n        this.renderer.domElement.style.pointerEvents = 'none';\r\n\r\n        this.renderer.setSize(width, height);\r\n        this.hostDiv.appendChild(this.renderer.domElement);\r\n        this.RenderLoop(this);\r\n    }\r\n    RenderLoop(canvas: CanvasThree) {\r\n        if (!this.isActive) { return; }\r\n        requestAnimationFrame(() => { this.RenderLoop(this); });\r\n        this.UpdateBinding();\r\n\r\n        this.camera.controls.update();\r\n        this.renderer.render(this.scene, this.camera.camera);\r\n    }\r\n    UpdateBinding() {\r\n        // console.log('implementation needed');\r\n    }\r\n    ResizeCanvas(width: number, height: number) {\r\n        this.camera.aspect = width / height;\r\n        this.camera.camera.updateProjectionMatrix(); // updateMatrix(); // updateProjectionMatrix();\r\n        this.renderer.setSize(width, height);\r\n    }\r\n    ResizeEffect(width: number, height: number) {\r\n        // this.camera.effect.setSize(width, height);\r\n    }\r\n    Remove() {\r\n        while (this.scene.children.length) {\r\n            this.scene.remove(this.scene.children[0]);\r\n        }\r\n        // this.scene.background = 0x000000;\r\n    }\r\n\r\n}","import { GraphicsCoreWrapper } from '..';\r\nimport { CanvasThree } from './CanvasThree/CanvasThree';\r\n\r\nexport class CanvasWrapper {\r\n    graphicsCoreWrapper: GraphicsCoreWrapper;\r\n    canvasThree: CanvasThree;\r\n\r\n    constructor(graphicsCoreWrapper: GraphicsCoreWrapper) {\r\n        this.graphicsCoreWrapper = graphicsCoreWrapper;\r\n\r\n        this.canvasThree = new CanvasThree(this, this.graphicsCoreWrapper.app.divHost);\r\n    }\r\n}","\r\nimport { Demo300GA } from '..';\r\nimport { CanvasWrapper } from './CanvasWrapper';\r\nexport class GraphicsCoreWrapper {\r\n    app: Demo300GA;\r\n    canvasWrapper: CanvasWrapper;\r\n    constructor(app: Demo300GA) {\r\n        this.app = app;\r\n        this.canvasWrapper = new CanvasWrapper(this);\r\n    }\r\n    Resize(width: number, height: number) {\r\n        this.canvasWrapper.canvasThree.ResizeCanvas(width, height);\r\n    }\r\n    Dispose() {\r\n        this.canvasWrapper.canvasThree.isActive = false;\r\n    }\r\n}","import { CLICK_TYPE } from '../../lib';\r\nimport { MouseEventData } from '../../IO/MouseInteraction/MouseInteraction';\r\nimport { SceneWrapper } from '..';\r\nexport class ActiveCommandController {\r\n    scene: SceneWrapper;\r\n    constructor(scene: SceneWrapper) {\r\n        this.scene = scene;\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.MouseEventController(e);\r\n        if (e.CLICK_TYPE === CLICK_TYPE.LEFT) {\r\n            this.MouseLeftClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MIDDLE) {\r\n            this.MouseMiddleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN_RIGHT) {\r\n            this.MouseRightClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOUBLE) {\r\n            this.MouseDoubleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MOVE) {\r\n            this.MouseMovePre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DRAG) {\r\n            this.MouseDragPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN) {\r\n            this.MouseDownPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.UP) { this.MouseUpPre(e); return; }\r\n    }\r\n\r\n    // .......................................................\r\n    MouseDown(e: MouseEventData) {/* */ }\r\n    MouseDownPre(e: MouseEventData) {\r\n        this.scene.MouseDown(e.x, e.y);\r\n        this.MouseDown(e);\r\n    }\r\n    MouseLeftClick(e: MouseEventData) {/* */ }\r\n    MouseLeftClickPre(e: MouseEventData) {\r\n\r\n        this.MouseLeftClick(e);\r\n    }\r\n    MouseMiddleClick(e: MouseEventData) {/* */ }\r\n    MouseMiddleClickPre(e: MouseEventData) {\r\n\r\n        this.MouseMiddleClick(e);\r\n    }\r\n    MouseRightClick(e: MouseEventData) { /* */ }\r\n    MouseRightClickPre(e: MouseEventData) {\r\n\r\n        this.MouseRightClick(e);\r\n    }\r\n    MouseUp(e: MouseEventData) { /* */ }\r\n    MouseUpPre(e: MouseEventData) {\r\n        this.scene.MouseUp(e.x, e.y);\r\n        this.MouseUp(e);\r\n\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {/* */ }\r\n    MouseDoubleClickPre(e: MouseEventData) {\r\n\r\n        this.MouseDoubleClick(e);\r\n    }\r\n    MouseMove(e: MouseEventData) {/* */ }\r\n    MouseMovePre(e: MouseEventData) {\r\n        this.scene.MouseMove(e.x, e.y);\r\n        this.MouseMove(e);\r\n    }\r\n    MouseDrag(e: MouseEventData) {/* */ }\r\n    MouseDragPre(e: MouseEventData) {\r\n        this.scene.MouseDrag(e.x, e.y);\r\n        this.MouseDrag(e);\r\n    }\r\n}","import { SceneWrapper } from '..';\r\nimport { NVector3 } from '../../lib';\r\nimport * as THREE from 'three';\r\nexport class PointInersection {\r\n    vec: NVector3;\r\n    data: THREE.Intersection;\r\n    constructor(x: number, y: number, z: number) {\r\n        this.vec = new NVector3(x, y, z);\r\n    }\r\n}\r\nexport class GeometryCommon {\r\n    scene: SceneWrapper;\r\n\r\n    // list: WallPaperBase[] = [];\r\n    listMesh: THREE.Object3D[] = [];\r\n\r\n    raycaster: THREE.Raycaster = new THREE.Raycaster();\r\n    m: THREE.Vector2 = new THREE.Vector2(0, 0);\r\n    point: PointInersection | undefined;\r\n\r\n    constructor(scene: SceneWrapper) {\r\n        this.scene = scene;\r\n        this.raycaster.params.Points = { threshold: 0.1 };\r\n    }\r\n    Raycast(x: number, y: number, listMesh: THREE.Object3D[]) {\r\n        this.m.x = (x / this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientWidth) * 2 - 1;\r\n        this.m.y = - (y / this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientHeight) * 2 + 1;\r\n\r\n        this.raycaster.setFromCamera(this.m, this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.camera);\r\n\r\n        // let i = this.list.length;\r\n        // while (i--) {\r\n        //     GeometryCommon.list[i].isHover = false;\r\n        // }\r\n\r\n        const intersects = this.raycaster.intersectObjects(listMesh);\r\n        if (intersects.length > 0) {\r\n            const d = intersects[0];\r\n            console.log(d.point);\r\n        }\r\n\r\n        /*\r\n        if (intersects.length > 0) {\r\n            this.point = new PointInersection(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z);\r\n            this.point.data = intersects[0];\r\n            // console.log(this.point);\r\n            // tslint:disable-next-line:no-string-literal\r\n            // let geo = intersects[0].object['geo'] as WallPaperBase;\r\n            // geo.isHover = true;\r\n            // this.Capture = geo;\r\n            // // helper.position.set(0, 0, 0);\r\n            // // helper.lookAt(intersects[0].face.normal);\r\n            // // helper.position.copy(intersects[0].point);\r\n            return intersects[0].object['geo'];\r\n        }\r\n        // }\r\n        this.point = undefined;\r\n        return undefined;\r\n        */\r\n    }\r\n    RaycastPoint(x: number, y: number, listMesh: THREE.Points[]) {\r\n        this.raycaster.params.Points = { threshold: 5 };\r\n        this.m.x = (x / this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientWidth) * 2 - 1;\r\n        this.m.y = - (y / this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientHeight) * 2 + 1;\r\n\r\n        this.raycaster.setFromCamera(this.m, this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.camera);\r\n\r\n        // let i = this.list.length;\r\n        // while (i--) {\r\n        //     GeometryCommon.list[i].isHover = false;\r\n        // }\r\n\r\n        const intersects = this.raycaster.intersectObjects(listMesh);\r\n        if (intersects.length > 0) {\r\n            const d = intersects[0];\r\n            return [d.point.x, d.point.y, d.point.z];\r\n        }\r\n\r\n        /*\r\n        if (intersects.length > 0) {\r\n            this.point = new PointInersection(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z);\r\n            this.point.data = intersects[0];\r\n            // console.log(this.point);\r\n            // tslint:disable-next-line:no-string-literal\r\n            // let geo = intersects[0].object['geo'] as WallPaperBase;\r\n            // geo.isHover = true;\r\n            // this.Capture = geo;\r\n            // // helper.position.set(0, 0, 0);\r\n            // // helper.lookAt(intersects[0].face.normal);\r\n            // // helper.position.copy(intersects[0].point);\r\n            return intersects[0].object['geo'];\r\n        }\r\n        // }\r\n        this.point = undefined;\r\n        return undefined;\r\n        */\r\n        return null;\r\n    }\r\n}","// import { LightUtility } from '../../../lib/NJSCore/GL/Libs/Three/Utility/LightUtility';\r\nimport * as THREE from 'three';\r\nimport { SceneWrapper } from '..';\r\nexport class LightingController {\r\n    sceneWrapper: SceneWrapper;\r\n    hemiLight: THREE.HemisphereLight;\r\n    dirLight: THREE.DirectionalLight;\r\n    constructor(sceneWrapper: SceneWrapper) {\r\n        this.sceneWrapper = sceneWrapper;\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // this.scene.add( LightUtility.GetAmbientLight());\r\n        // this.scene.add( LightUtility.GetHemiLight());\r\n        // this.scene.scene.add( LightUtility.GetDirLight());\r\n\r\n        this.hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.6);\r\n        this.hemiLight.color.setHSL(0.6, 1, 0.6);\r\n        this.hemiLight.groundColor.setHSL(0.095, 1, 0.75);\r\n        this.hemiLight.position.set(0, 50, 0);\r\n        this.sceneWrapper.scene.add(this.hemiLight);\r\n\r\n        // const hemiLightHelper = new THREE.HemisphereLightHelper( this.hemiLight, 10 );\r\n        // this.scene.scene.add( hemiLightHelper );\r\n\r\n        this.dirLight = new THREE.DirectionalLight(0xffffff, 1);\r\n        this.dirLight.color.setHSL(0.1, 1, 0.95);\r\n        this.dirLight.position.set(- 1, 1.75, 1);\r\n        this.dirLight.position.multiplyScalar(30);\r\n\r\n        this.dirLight.castShadow = true;\r\n        this.dirLight.shadow.mapSize.width = 2048 * 2;\r\n        this.dirLight.shadow.mapSize.height = 2048 * 2;\r\n\r\n        var d = 50;\r\n        this.dirLight.shadow.camera.left = - d;\r\n        this.dirLight.shadow.camera.right = d;\r\n        this.dirLight.shadow.camera.top = d;\r\n        this.dirLight.shadow.camera.bottom = - d;\r\n\r\n        this.dirLight.shadow.bias = - 0.0001;\r\n\r\n        this.dirLight.shadow.camera.near = 0.001;\r\n        this.dirLight.shadow.camera.far = 350;\r\n\r\n        this.sceneWrapper.scene.add(this.dirLight);\r\n        // this.dirLightHeper = new THREE.DirectionalLightHelper( this.dirLight, 10 );\r\n        // this.scene.scene.add( dirLightHeper );\r\n    }\r\n    Dispose() {\r\n        this.dirLight.visible = false;\r\n        this.hemiLight.visible = false;\r\n\r\n        this.sceneWrapper.scene.remove(this.dirLight);\r\n        this.sceneWrapper.scene.remove(this.hemiLight);\r\n    }\r\n}","// import * as THREE from 'three';\r\n\r\n// import { Definition } from '../..';\r\n\r\n// export class Renderer {\r\n//     definition: Definition;\r\n//     constructor(definition: Definition) {\r\n//         this.definition = definition;\r\n//     }\r\n//     public AddPolyline(vertices: number[][], color: string = 'red') {\r\n//         const points3D = new THREE.Geometry();\r\n//         vertices.forEach((pos: number[]) => {\r\n//             points3D.vertices.push(new THREE.Vector3(pos[0], pos[1], pos[2]));\r\n//         });\r\n//         const mat = new THREE.LineBasicMaterial({ color: color, linewidth: 1, transparent: true, opacity: 0.55, });\r\n//         // mat.linewidth = 1;\r\n//         const line2 = new THREE.Line(points3D, mat);\r\n//         this.definition.scene.add(line2);\r\n//     }\r\n\r\n//     public AddRect(vertices: number[][], color: string = 'red') {\r\n//         const points3D = new THREE.Geometry();\r\n//         // console.log(vertices.length);\r\n//         for (let i = 0; i < vertices.length; ++i) {\r\n//             points3D.vertices.push(new THREE.Vector3(vertices[i][0], vertices[i][1], vertices[i][2]));\r\n//         }\r\n//         const mat = new THREE.LineBasicMaterial({ color: color, linewidth: 5, });\r\n//         // mat.linewidth = 5;\r\n//         const line2 = new THREE.Line(points3D, mat);\r\n//         this.definition.scene.add(line2);\r\n//     }\r\n//     public AddRectMash(vertices: number[][], color: string = 'red') {\r\n//         const geometry = new THREE.Geometry();\r\n//         // console.log(vertices.length);\r\n//         for (let i = 0; i < vertices.length; ++i) {\r\n//             geometry.vertices.push(new THREE.Vector3(vertices[i][0], vertices[i][1], vertices[i][2]));\r\n//         }\r\n//         geometry.faces.push(new THREE.Face3(0, 1, 2));\r\n//         geometry.faces.push(new THREE.Face3(0, 2, 3));\r\n//         const mat = new THREE.MeshBasicMaterial({ color: 0xffff00, side: THREE.DoubleSide });\r\n//         const line2 = new THREE.Mesh(geometry, mat);\r\n//         this.definition.scene.add(line2);\r\n//     }\r\n//     public AddPoint(vert: number[], color: string = '#00afaf') {\r\n//         const dotGeometry = new THREE.Geometry();\r\n//         dotGeometry.vertices.push(new THREE.Vector3(vert[0], vert[1], vert[2]));\r\n//         const dotMaterial = new THREE.PointsMaterial({ size: 4, sizeAttenuation: false, color: color });\r\n//         const dot = new THREE.Points(dotGeometry, dotMaterial);\r\n//         this.definition.scene.add(dot);\r\n//     }\r\n// }\r\n\r\n\r\nimport * as THREE from 'three';\r\nimport { Definition } from '../..';\r\n\r\nexport class Renderer {\r\n    definition: Definition;\r\n\r\n    constructor(definition: Definition) {\r\n        this.definition = definition;\r\n    }\r\n\r\n    public AddPolyline(vertices: number[][], color: string = 'red') {\r\n        const geometry = new THREE.BufferGeometry();\r\n        const positions = new Float32Array(vertices.flatMap(v => v));\r\n        geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\r\n\r\n        const material = new THREE.LineBasicMaterial({\r\n            color: color,\r\n            linewidth: 1,\r\n            transparent: true,\r\n            opacity: 0.55,\r\n        });\r\n\r\n        const line = new THREE.Line(geometry, material);\r\n        this.definition.scene.add(line);\r\n    }\r\n\r\n    public AddRect(vertices: number[][], color: string = 'red') {\r\n        const geometry = new THREE.BufferGeometry();\r\n        const positions = new Float32Array(vertices.flatMap(v => v));\r\n        geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\r\n\r\n        const material = new THREE.LineBasicMaterial({\r\n            color: color,\r\n            linewidth: 5,\r\n        });\r\n\r\n        const line = new THREE.Line(geometry, material);\r\n        this.definition.scene.add(line);\r\n    }\r\n\r\n    public AddRectMesh(vertices: number[][], color: string = 'red') {\r\n        const geometry = new THREE.BufferGeometry();\r\n        const positions = new Float32Array(vertices.flatMap(v => v));\r\n        geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\r\n\r\n        // 인덱스를 사용하여 두 개의 삼각형 정의\r\n        const indices = new Uint16Array([0, 1, 2, 0, 2, 3]);\r\n        geometry.setIndex(new THREE.BufferAttribute(indices, 1));\r\n\r\n        const material = new THREE.MeshBasicMaterial({\r\n            color: 0xffff00,\r\n            side: THREE.DoubleSide\r\n        });\r\n\r\n        const mesh = new THREE.Mesh(geometry, material);\r\n        this.definition.scene.add(mesh);\r\n    }\r\n\r\n    public AddPoint(vert: number[], color: string = '#00afaf') {\r\n        const geometry = new THREE.BufferGeometry();\r\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(vert, 3));\r\n\r\n        const material = new THREE.PointsMaterial({\r\n            size: 4,\r\n            sizeAttenuation: false,\r\n            color: color\r\n        });\r\n\r\n        const point = new THREE.Points(geometry, material);\r\n        this.definition.scene.add(point);\r\n    }\r\n}","import { NVector3 } from '../../../../../lib';\r\n\r\nexport class BoundingBox {\r\n    min: NVector3 = new NVector3(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\r\n    max: NVector3 = new NVector3(Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER);\r\n    constructor() {\r\n\r\n    }\r\n    public Update(vs: NVector3[]) {\r\n        this.min = new NVector3(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\r\n        this.max = new NVector3(Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER);\r\n\r\n        for (let i = 0; i < vs.length; ++i) {\r\n            if (vs[i].x < this.min.x) { this.min.x = vs[i].x; }\r\n            if (vs[i].y < this.min.y) { this.min.y = vs[i].y; }\r\n            if (vs[i].z < this.min.z) { this.min.z = vs[i].z; }\r\n\r\n            if (vs[i].x > this.max.x) { this.max.x = vs[i].x; }\r\n            if (vs[i].y > this.max.y) { this.max.y = vs[i].y; }\r\n            if (vs[i].z > this.max.z) { this.max.z = vs[i].z; }\r\n        }\r\n    }\r\n}","\r\nimport { BoundingBox } from '../../AppGridOptimizer/Optimizer/Geometry/BoundingBox';\r\nimport { NVector3 } from '../../../../lib';\r\n\r\nexport class Polyline {\r\n\r\n    public static GetPolylineTemp() {\r\n        const pl = new Polyline();\r\n        pl.Add(10, 10);\r\n        pl.Add(-5, 8);\r\n        pl.Add(-7, -10);\r\n        pl.Add(-1, -8);\r\n        pl.Add(10, 10);\r\n        return pl;\r\n    }\r\n    boundingBox: BoundingBox;\r\n    vertices: NVector3[] = [];\r\n    constructor() {\r\n        this.boundingBox = new BoundingBox();\r\n    }\r\n    public Add(x: number, y: number, z: number = 0) {\r\n        this.vertices.push(new NVector3(x, y, z));\r\n        this.boundingBox.Update(this.vertices);\r\n    }\r\n    public GetVerticesForThree() {\r\n        const outList: number[][] = [];\r\n\r\n        this.vertices.forEach((e: NVector3) => {\r\n            outList.push([e.x, e.z, e.y]);\r\n        });\r\n        return outList;\r\n    }\r\n    public GetCenterVec() {\r\n        const cv = new NVector3(0, 0, 0);\r\n        for (let i = 0; i < this.vertices.length - 1; ++i) {\r\n            cv.x += this.vertices[i].x;\r\n            cv.y += this.vertices[i].y;\r\n            cv.z += this.vertices[i].z;\r\n        }\r\n        cv.x /= this.vertices.length - 1;\r\n        cv.y /= this.vertices.length - 1;\r\n        cv.z /= this.vertices.length - 1;\r\n        return cv;\r\n    }\r\n}","import { NVector3 } from '../../../../../../../../NJSCore';\r\n\r\nexport const RotateVecs = (vecs: NVector3[], angle: number) => {\r\n    for (let i = 0; i < vecs.length; ++i) {\r\n        RotateVec(vecs[i], angle);\r\n    }\r\n};\r\nexport const RotateVec = (v: NVector3, angle: number) => {\r\n    let cos = Math.cos(angle * (3.14159265358979 / 180.0));\r\n    let sin = Math.sin(angle * (3.14159265358979 / 180.0));\r\n    v.x = v.x * cos - v.y * sin;\r\n    v.y = v.x * sin + v.y * cos;\r\n};","\r\nimport { BoundingBox } from './BoundingBox';\r\nimport { NVector3 } from '../../../../../../../../NJSCore';\r\n\r\nexport class Rect {\r\n    // p0: NVector3;\r\n    // p1: NVector3;\r\n    // p2: NVector3;\r\n    // p3: NVector3;\r\n    boundingBox: BoundingBox;\r\n    vertices: NVector3[] = [];\r\n    color: string = 'green';\r\n    constructor(p0: NVector3, p1: NVector3, p2: NVector3, p3: NVector3) {\r\n        // this.p0 = p0;\r\n        // this.p1 = p1;\r\n        // this.p2 = p2;\r\n        // this.p3 = p3;\r\n        this.vertices = [p0, p1, p2, p3];\r\n    }\r\n    public GetVerticesForThree() {\r\n        return [\r\n            [this.vertices[0].x, this.vertices[0].z, this.vertices[0].y],\r\n            [this.vertices[1].x, this.vertices[1].z, this.vertices[1].y],\r\n            [this.vertices[2].x, this.vertices[2].z, this.vertices[2].y],\r\n            [this.vertices[3].x, this.vertices[3].z, this.vertices[3].y],\r\n            [this.vertices[0].x, this.vertices[0].z, this.vertices[0].y],\r\n        ];\r\n    }\r\n}","import { RotateVecs } from '../Core/Math';\r\nimport { NVector3 } from '../../../../../lib';\r\nimport { Rect } from '../Geometry/Rect';\r\nimport { GridSystem } from './GridSystem';\r\nexport class Cell {\r\n    grid: GridSystem;\r\n    i: number;\r\n    j: number;\r\n    v: NVector3;\r\n    width: number;\r\n    height: number;\r\n    rect: Rect;\r\n    isInside: boolean = true;\r\n    constructor(grid: GridSystem, i: number, j: number, v: NVector3, width: number, height: number) {\r\n        this.grid = grid;\r\n        this.i = i;\r\n        this.j = j;\r\n        this.v = v;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.rect = new Rect(\r\n            new NVector3(this.v.x - this.width * 0.5, this.v.y - this.height * 0.5),\r\n            new NVector3(this.v.x + this.width * 0.5, this.v.y - this.height * 0.5),\r\n            new NVector3(this.v.x + this.width * 0.5, this.v.y + this.height * 0.5),\r\n            new NVector3(this.v.x - this.width * 0.5, this.v.y + this.height * 0.5)\r\n        );\r\n    }\r\n    public GetVerticesForThree() {\r\n        // if (this.isInside) {\r\n        return this.rect.GetVerticesForThree();\r\n        // } else {\r\n        //     return undefined;\r\n        // }\r\n    }\r\n    public Rotate(v: number) {\r\n        RotateVecs([this.v, ...this.rect.vertices], v);\r\n    }\r\n    public get color() {\r\n        return this.rect.color;\r\n    }\r\n}","\r\nimport { NVector3 } from '../../../../../lib';\r\nimport { Cell } from './Cell';\r\nimport { Optimizer } from '..';\r\nexport class GridSystem {\r\n    optimizer: Optimizer;\r\n    min: NVector3;\r\n    max: NVector3;\r\n    rx: number;\r\n    ry: number;\r\n    intervalX: number;\r\n    intervalY: number;\r\n\r\n    pts: NVector3[] = [];\r\n    cells: Cell[][] = [];\r\n    constructor(optimizer: Optimizer, min: NVector3, max: NVector3) {\r\n        this.optimizer = optimizer;\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    public Init(rx: number, ry: number) {\r\n        this.rx = rx;\r\n        this.ry = ry;\r\n        this.intervalX = (this.max.x - this.min.x) / (this.rx - 1);\r\n        this.intervalY = (this.max.y - this.min.y) / (this.ry - 1);\r\n        this.cells = [];\r\n        this.InitCell();\r\n        this.Rotate();\r\n        this.UpdateInside();\r\n    }\r\n    public InitCell() {\r\n        for (let j = 0; j < this.ry; ++j) {\r\n            const y = this.min.y + j * this.intervalY;\r\n            const cellList: Cell[] = [];\r\n            for (let i = 0; i < this.rx; ++i) {\r\n                const x = this.min.x + i * this.intervalX;\r\n                const v = new NVector3(x, y);\r\n                this.pts.push(v);\r\n                cellList.push(new Cell(this, i, j, v, this.intervalX, this.intervalY));\r\n            }\r\n            this.cells.push(cellList);\r\n        }\r\n    }\r\n    public Rotate() {\r\n        for (let j = 0; j < this.ry; ++j) {\r\n            for (let i = 0; i < this.rx; ++i) {\r\n                const cell = this.cells[j][i];\r\n                cell.Rotate(15);\r\n            }\r\n        }\r\n    }\r\n    public UpdateInside() {\r\n        for (let j = 0; j < this.ry; ++j) {\r\n            for (let i = 0; i < this.rx; ++i) {\r\n                const cell = this.cells[j][i];\r\n                if (NVector3.IsInsideOfVecsWtihVecs(cell.rect.vertices, this.optimizer.polyline.vertices)) {\r\n                    cell.rect.color = 'black';\r\n                    cell.v.color = 'black';\r\n                    cell.isInside = true;\r\n                } else {\r\n                    cell.rect.color = '#efefef';\r\n                    cell.v.color = 'efefef';\r\n                    cell.isInside = false;\r\n\r\n                    cell.rect.vertices.forEach((v: NVector3) => {\r\n                        v.x -= 0.1;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { AppGridOptimizer } from '../AppGridOptimizer';\r\nimport { Polyline } from '../../Common/Geometry/Polyline';\r\nimport { GridSystem } from './GridSystem/GridSystem';\r\n\r\nexport class Optimizer {\r\n    gridOptimizerApp: AppGridOptimizer;\r\n    rx: number;\r\n    ry: number;\r\n    polyline: Polyline;\r\n    gridSystem: GridSystem;\r\n    constructor(gridOptimizerApp: AppGridOptimizer, rx: number, ry: number) {\r\n        this.gridOptimizerApp = gridOptimizerApp;\r\n        this.rx = rx;\r\n        this.ry = ry;\r\n\r\n        this.InitPolyline();\r\n        this.InitGridSyste();\r\n    }\r\n    public InitPolyline() {\r\n        this.polyline = Polyline.GetPolylineTemp();\r\n\r\n    }\r\n    public InitGridSyste() {\r\n        this.gridSystem = new GridSystem(this, this.polyline.boundingBox.min, this.polyline.boundingBox.max);\r\n        this.gridSystem.Init(this.rx, this.ry);\r\n        // console.log(this.gridSystem);\r\n    }\r\n}","// import * as THREE from 'three';\r\n\r\nimport { Optimizer } from './Optimizer';\r\n\r\nimport { Definition } from '..';\r\nimport { NVector3 } from '../../../lib';\r\n\r\nexport class AppGridOptimizer {\r\n    definition: Definition;\r\n    optimizer: Optimizer;\r\n    constructor(definition: Definition) {\r\n        this.definition = definition;\r\n        this.optimizer = new Optimizer(this, 15, 8);\r\n        this.AddPolyline();\r\n        this.AddPoints();\r\n        this.AddRects();\r\n    }\r\n    public AddPolyline() {\r\n        this.definition.renderer.AddPolyline(this.optimizer.polyline.GetVerticesForThree());\r\n    }\r\n    public AddPoints() {\r\n        this.optimizer.gridSystem.pts.forEach((p: NVector3) => {\r\n            this.definition.renderer.AddPoint([p.x, p.z, p.y], p.color);\r\n        });\r\n    }\r\n    public AddRects() {\r\n        for (let j = 0; j < this.optimizer.gridSystem.cells.length; ++j) {\r\n            for (let i = 0; i < this.optimizer.gridSystem.cells[j].length; ++i) {\r\n                const vert = this.optimizer.gridSystem.cells[j][i].GetVerticesForThree();\r\n                if (vert) {\r\n                    this.definition.renderer.AddRect(vert, this.optimizer.gridSystem.cells[j][i].color);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { NVector3 } from '../../../../lib';\r\nimport { AppRectOptimizer } from '../AppRectOptimizer';\r\nexport class Optimizer {\r\n    appRectOptimizer: AppRectOptimizer;\r\n\r\n    rectAgent: RectAgent;\r\n    cv: NVector3;\r\n    constructor(appRectOptimizer: AppRectOptimizer) {\r\n        this.appRectOptimizer = appRectOptimizer;\r\n        this.cv = this.GetInitPoint();\r\n\r\n        this.InitAgent();\r\n\r\n        this.AddRenderer();\r\n    }\r\n    public GetInitPoint() {\r\n        this.cv = this.appRectOptimizer.polyline.GetCenterVec();\r\n\r\n\r\n        return this.cv;\r\n    }\r\n    public InitAgent() {\r\n        this.rectAgent = new RectAgent(this.cv);\r\n        this.rectAgent.Update(this.appRectOptimizer.polyline.vertices);\r\n    }\r\n\r\n    public AddRenderer() {\r\n        this.appRectOptimizer.definition.renderer.AddPoint([this.cv.x, this.cv.z, this.cv.y]);\r\n        this.appRectOptimizer.definition.renderer.AddRect(this.rectAgent.GetVerticesForThree());\r\n    }\r\n}\r\n\r\n\r\nexport class RectAgent {\r\n    v: NVector3;\r\n    vs: NVector3[] = [];\r\n    widthHalf: number = 2;\r\n    heighthHalf: number = 2;\r\n    constructor(v: NVector3) {\r\n        this.v = v;\r\n        this.vs.push(\r\n            new NVector3(v.x - this.widthHalf, v.y - this.heighthHalf),\r\n            new NVector3(v.x + this.widthHalf, v.y - this.heighthHalf),\r\n            new NVector3(v.x + this.widthHalf, v.y + this.heighthHalf),\r\n            new NVector3(v.x - this.widthHalf, v.y + this.heighthHalf),\r\n        );\r\n    }\r\n    public Update(vs: NVector3[]) {\r\n        // this.Rotation(15);\r\n\r\n        // let v0 = this.vs[0];\r\n        let v1 = this.vs[1];\r\n        let v2 = this.vs[2];\r\n        // let v3 = this.vs[3];\r\n\r\n        let optimal = 0;\r\n        let areas = [];\r\n        for (let i = 0; i < 360; i += 5) {\r\n            optimal = i;\r\n            this.Rotation(i);\r\n            let sefeguard = 0;\r\n            while (this.Check(vs)) {\r\n                this.RotateVec(v1, i, 1.1, 1);\r\n                this.RotateVec(v2, i, 1.1, 1);\r\n                // v0.x -= 0.1;\r\n                // v3.x -= 0.1;\r\n\r\n                v1.x += 0.1;\r\n                v2.x += 0.1;\r\n                if (sefeguard++ > 1000) {\r\n                    break;\r\n                }\r\n            }\r\n            areas.push(this.GetArea());\r\n        }\r\n\r\n        console.log(areas);\r\n        this.Rotation(optimal);\r\n\r\n\r\n    }\r\n    public GetArea() {\r\n        return NVector3.GetArea(this.vs);\r\n    }\r\n    public Rotation(v: number) {\r\n        this.vs = NVector3.RotateVecsLoal(this.vs, v);\r\n    }\r\n    public RotateVec(v: NVector3, angle: number, xOff: number, yOff: number) {\r\n        let cos = Math.cos(angle * (3.14159265358979 / 180.0));\r\n        let sin = Math.sin(angle * (3.14159265358979 / 180.0));\r\n        v.x = v.x * xOff * cos - v.y * sin;\r\n        v.y = v.x * yOff * sin + v.y * cos;\r\n    }\r\n    public Check(vs: NVector3[]) {\r\n        return NVector3.IsInsideOfVecsWtihVecs(this.vs, vs);\r\n    }\r\n    public GetVerticesForThree() {\r\n        return [\r\n            [this.vs[0].x, 0, this.vs[0].y],\r\n            [this.vs[1].x, 0, this.vs[1].y],\r\n            [this.vs[2].x, 0, this.vs[2].y],\r\n            [this.vs[3].x, 0, this.vs[3].y],\r\n            [this.vs[0].x, 0, this.vs[0].y],\r\n        ];\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const RotateVecsLoal = (vecs: NVector3[], angle: number): NVector3[] => {\r\n    let cptToLocal = NVector3.GetCenterVecFromVecs(vecs);\r\n    let cptToWorld = new NVector3(-cptToLocal.x, -cptToLocal.y, -cptToLocal.z);\r\n    let temp: NVector3[] = NVector3.MoveVecs(vecs, cptToWorld);\r\n    temp = NVector3.RotateVecs(temp, angle);\r\n    temp = NVector3.MoveVecs(temp, cptToLocal);\r\n    return temp;\r\n}\r\nexport const RotateVecs = (vecs: NVector3[], angle: number) => {\r\n    let temp: NVector3[] = [];\r\n    for (let i = 0; i < vecs.length; ++i) {\r\n        temp.push(NVector3.RotateVec(vecs[i], angle));\r\n    }\r\n    return temp;\r\n}\r\nexport const RotateVec = (v: NVector3, angle: number): NVector3 => {\r\n    let cos = Math.cos(angle * (3.14159265358979 / 180.0));\r\n    let sin = Math.sin(angle * (3.14159265358979 / 180.0));\r\n    let x = v.x * cos - v.y * sin;\r\n    let y = v.x * sin + v.y * cos;\r\n    return new NVector3(x, y, v.z);\r\n}","import { Definition } from '..';\r\nimport { Optimizer } from './Optimizer';\r\nimport { Polyline } from '../Common/Geometry/Polyline';\r\nexport class AppRectOptimizer {\r\n    definition: Definition;\r\n    optimizer: Optimizer;\r\n    polyline: Polyline;\r\n    constructor(definition: Definition) {\r\n        this.definition = definition;\r\n        this.AddPolyline();\r\n\r\n        this.Init();\r\n    }\r\n    public AddPolyline() {\r\n        this.polyline = Polyline.GetPolylineTemp();\r\n        this.definition.renderer.AddPolyline(this.polyline.GetVerticesForThree());\r\n    }\r\n    public Init() {\r\n        this.optimizer = new Optimizer(this);\r\n    }\r\n}\r\n\r\n\r\n\r\n","import * as THREE from 'three';\r\nimport { NVector3 } from '../../lib';\r\nimport { Renderer } from './Common/Renderer';\r\nimport { AppGridOptimizer } from './AppGridOptimizer/AppGridOptimizer';\r\nimport { AppRectOptimizer } from './AppRectOptimizer/AppRectOptimizer';\r\n\r\n// import { initTestingNu } from './GeneticAlgorithm';\r\n\r\nexport class Definition {\r\n    scene: THREE.Scene;\r\n    renderer: Renderer;\r\n\r\n    _capture: Node | undefined;\r\n\r\n    m: NVector3 = new NVector3(0, 0, 0);\r\n    gridOptimizerApp: AppGridOptimizer;\r\n    appRectOptimizer: AppRectOptimizer;\r\n    constructor(scene: THREE.Scene) {\r\n        this.scene = scene;\r\n        this.renderer = new Renderer(this);\r\n        this.init();\r\n        // console.log('grid optimizer');\r\n    }\r\n    public init() {\r\n        this.gridOptimizerApp = new AppGridOptimizer(this);\r\n        this.appRectOptimizer = new AppRectOptimizer(this);\r\n\r\n        // initTesting('hereWego119');\r\n        // initTestingNum(3)\r\n\r\n    }\r\n    public update() {\r\n        //\r\n\r\n    }\r\n    public mouseMove(x: number, y: number, z: number) {\r\n\r\n    }\r\n    public mouseDrag(x: number, y: number) {\r\n\r\n    }\r\n    public mouseDown(x: number, y: number, z: number) {\r\n\r\n    }\r\n    public mouseUp() {\r\n\r\n    }\r\n    public dispose() {\r\n\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { Demo300GA } from '..';\r\nimport { ActiveCommandController } from './ActiveCommand/ActiveCommandController';\r\nimport { GeometryCommon } from './GeometryCommon/GeometryCommon';\r\nimport { LightingController } from './Light/LightingController';\r\nimport { Definition } from './Definition';\r\nexport class SceneWrapper {\r\n    app: Demo300GA;\r\n    activeCommandController: ActiveCommandController;\r\n    geometryCommon: GeometryCommon;\r\n    lightingController: LightingController;\r\n\r\n    scene: THREE.Scene;\r\n    definition: Definition;\r\n\r\n    constructor(app: Demo300GA) {\r\n        this.app = app;\r\n        this.activeCommandController = new ActiveCommandController(this);\r\n        this.scene = this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.scene;\r\n        this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.UpdateBinding = () => { this.Update(); };\r\n        this.lightingController = new LightingController(this);\r\n        this.geometryCommon = new GeometryCommon(this);\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.definition = new Definition(this.scene);\r\n\r\n        const size = 10;\r\n        const divisions = 10;\r\n        const colorGrid = 0xeeeeee;\r\n        const colorCenterLine = 0xcccccc;\r\n        const gridHelper = new THREE.GridHelper(size, divisions, colorCenterLine, colorGrid);\r\n        this.scene.add(gridHelper);\r\n    }\r\n    Update() {\r\n        this.definition.update();\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        //    const pos =  this.geometryCommon.RaycastPoint(x, y, this.definition.points.pointCloud );\r\n        // const pos = this.geometryCommon.RaycastPoint(x, y, this.definition.GetPointForRaycast());\r\n        // if (pos) {\r\n        // this.definition.mouseMove(pos[0], pos[1], pos[2]);\r\n        // }\r\n        this.definition.mouseMove(x, y, 0);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        // const pos = this.geometryCommon.RaycastPoint(x, y, this.definition.GetPointForRaycast());\r\n        // if (pos) {\r\n        this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.ableToMove = false;\r\n        // this.definition.mouseDown(pos[0], pos[1], pos[2]);\r\n        // }\r\n        this.definition.mouseDown(x, y, 0);\r\n    }\r\n    MouseUp(x: number, y: number) {\r\n        this.definition.mouseUp();\r\n        this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.ableToMove = true;\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        // const pos = this.geometryCommon.RaycastPoint(x, y, this.definition.GetPointForRaycast());\r\n        // if (pos) {\r\n        // this.definition.mouseDrag(pos[0], pos[1]);\r\n        // }\r\n        this.definition.mouseDrag(x, y);\r\n    }\r\n    Dispose() {\r\n        this.definition.dispose();\r\n    }\r\n}","import { CLICK_TYPE } from '../../lib';\r\n\r\n// import {IOWrapper} from '../'\r\nimport { Demo300GA } from '../..';\r\n\r\nexport interface IMouseInteractionMenu {\r\n  MouseInteractionMenu: (mouseEventData: MouseEventData) => void;\r\n}\r\nexport class MouseEventData {\r\n  app: Demo300GA;\r\n  x: number = -1; y: number = -1; z: number = -1;\r\n  preX: number = -1; preY: number = -1; preZ: number = -1;\r\n  yGLPicking: number;\r\n  // command: ActiveCommandBase; // = new CActiveCommandNone(this.app.activeCommands);\r\n  CLICK_TYPE: CLICK_TYPE = CLICK_TYPE.MOVE;\r\n  isDown: boolean = false;\r\n  isDoubleClick: boolean = false;\r\n  isMove: boolean = false;\r\n  pressedShift: boolean = false;\r\n  pressedAlt: boolean = false;\r\n  pressedCtrl: boolean = false;\r\n\r\n  lat: number = -1;\r\n  long: number = -1;\r\n  wheel: number = 0;\r\n  preWheel: number = 0;\r\n  isActive: boolean = true;\r\n  // premEvent: MouseEventData;\r\n  native: MouseEvent;\r\n  constructor(app?: Demo300GA) {\r\n    if (app !== null && app !== undefined) { this.app = app; }\r\n  }\r\n  DeepCopy() {\r\n    let mEvent = new MouseEventData(this.app);\r\n    mEvent.x = this.x; mEvent.y = this.y; mEvent.z = this.z; mEvent.preX = this.preX; mEvent.preY = this.preY; mEvent.preZ = this.preZ;\r\n    mEvent.pressedAlt = this.pressedAlt; mEvent.pressedShift = this.pressedShift; mEvent.pressedCtrl = this.pressedCtrl;\r\n    mEvent.isDoubleClick = this.isDoubleClick; mEvent.isDown = this.isDown; mEvent.isMove = this.isMove;\r\n    mEvent.lat = this.lat; mEvent.long = this.long; mEvent.wheel = this.wheel; mEvent.preWheel = this.preWheel;\r\n    mEvent.yGLPicking = this.yGLPicking;\r\n    mEvent.CLICK_TYPE = this.CLICK_TYPE;\r\n    // mEvent.command = this.command;\r\n    mEvent.native = this.native;\r\n    return mEvent;\r\n  }\r\n}\r\n\r\nexport class MouseInteraction {\r\n  mouseInteractionUI: IMouseInteractionMenu;\r\n  mouseEventDataPre: MouseEventData = new MouseEventData();\r\n  app: Demo300GA;\r\n  isEnable: boolean = true;\r\n  clickCount: number = 0;\r\n\r\n  click: boolean = false;\r\n  prevent: boolean = false;\r\n  delay: number = 250;\r\n  timer: NodeJS.Timer | number;\r\n  down: boolean = false;\r\n  e: MouseEventData;\r\n  private _stopPropagation: boolean = false;\r\n\r\n  constructor(app: Demo300GA) {\r\n    this.app = app;\r\n    // this.mouseEventDataPre = new MouseEventData();\r\n\r\n  }\r\n  InitNativeMouseEvent(div: HTMLElement) {\r\n    div.onclick = (e: MouseEvent) => {\r\n      this.prevent = false;\r\n      this.timer = setTimeout(\r\n        () => {\r\n          if (!this.prevent) {\r\n            this.MouseClick(e);\r\n            e.stopPropagation();\r\n          }\r\n          this.prevent = false;\r\n        },\r\n        this.delay);\r\n    };\r\n    div.ondblclick = (e: MouseEvent) => {\r\n      clearTimeout(this.timer as number);\r\n      this.prevent = true;\r\n      this.MouseDoubleClick(e);\r\n    };\r\n    div.onmousedown = (e: MouseEvent) => { this.MouseDown(e); e.stopPropagation(); };\r\n    div.onmouseup = (e: MouseEvent) => { this.MouseUp(e); e.stopPropagation(); };\r\n    div.onmousemove = (e: MouseEvent) => { this.MouseMove(e); e.stopPropagation(); };\r\n    div.addEventListener('wheel', (e: WheelEvent) => { this.MouseWheel(e, e.deltaY); e.stopPropagation(); });\r\n  }\r\n\r\n  MouseDown(e: MouseEvent) {\r\n    this.click = true;\r\n    this.down = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DOWN;\r\n    mEvent.isDown = true;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseClick(e: MouseEvent) {\r\n    if (!this.click) { return; }\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    if (e.button === 0) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.LEFT;\r\n    } else if (e.button === 1) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.MIDDLE;\r\n    } else if (e.button === 2) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.RIGHT;\r\n    }\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseDoubleClick(e: MouseEvent) {\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DOUBLE;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseDrag(e: MouseEvent) {\r\n    this.click = false;\r\n    this.prevent = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DRAG;\r\n    mEvent.isDown = true;\r\n    if (e.buttons === 1) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG;\r\n    } else if (e.buttons === 4) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG_MIDDLE;\r\n    } else if (e.buttons === 2) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG_RIGHT;\r\n    }\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseMove(e: MouseEvent) {\r\n    if (this.down) { this.MouseDrag(e); return; }\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.MOVE;\r\n    mEvent.isDown = true;\r\n    this.prevent = true;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseUp(e: MouseEvent) {\r\n    this.down = false;\r\n    this.click = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.UP;\r\n    mEvent.isDown = false;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseWheel(e: MouseEvent, v: number) {\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.wheel = v;\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.WHEEL;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  CommonEventBuilder(e: MouseEvent): MouseEventData {\r\n    let mEvent: MouseEventData = new MouseEventData(this.app);\r\n    mEvent.preX = this.mouseEventDataPre.x;\r\n    mEvent.preY = this.mouseEventDataPre.y;\r\n    // mEvent.premEvent = this.mouseEventDataPre;\r\n\r\n    mEvent.pressedShift = e.shiftKey;\r\n    mEvent.pressedAlt = e.altKey;\r\n    mEvent.pressedCtrl = e.ctrlKey;\r\n\r\n    mEvent.x = e.offsetX;\r\n    mEvent.y = e.offsetY;\r\n    mEvent.preWheel = this.mouseEventDataPre.wheel;\r\n    mEvent.wheel = 0;\r\n    mEvent.native = e;\r\n    this.mouseEventDataPre = mEvent;\r\n    this.e = mEvent;\r\n    return mEvent;\r\n  }\r\n  get stopPropagation() {\r\n    return this._stopPropagation;\r\n  }\r\n  set stopPropagation(v: boolean) {\r\n    if (v) {\r\n      this._stopPropagation = v;\r\n    } else {\r\n      setTimeout(() => { this._stopPropagation = v; }, 500);\r\n      // this._stopPropagation = v;\r\n    }\r\n  }\r\n  MouseEvenEmitting(mouseEventData: MouseEventData) {\r\n    this.app.MouseEventController(mouseEventData);\r\n  }\r\n}","import { Demo300GA } from '..';\r\nimport { MouseInteraction } from './MouseInteraction/MouseInteraction';\r\nexport class IO {\r\n    app: Demo300GA;\r\n    mouseInteraction: MouseInteraction;\r\n    constructor(app: Demo300GA) {\r\n        this.app = app;\r\n        this.mouseInteraction = new MouseInteraction(this.app);\r\n        this.mouseInteraction.InitNativeMouseEvent(this.app.divHost);\r\n    }\r\n}","import { MouseEventData } from './IO/MouseInteraction/MouseInteraction';\r\nimport { Asset } from './Asset';\r\nimport { ViewWrapper } from './ViewWrapper';\r\nimport { GraphicsCoreWrapper } from './GraphicsCoreWrapper';\r\nimport { SceneWrapper } from './SceneWrapper';\r\nimport { IO } from './IO';\r\n\r\nimport { initTestingNum, initTesting, initTestingNetwork } from './lib';\r\n\r\nexport class Demo300GA {\r\n    divHost: HTMLElement;\r\n    asset: Asset;\r\n    viewWrapper: ViewWrapper;\r\n    graphicsCoreWrapper: GraphicsCoreWrapper;\r\n    sceneWrapper: SceneWrapper;\r\n    io: IO;\r\n    public static Init(id: string) {\r\n        new Demo300GA(id);\r\n    }\r\n    constructor(id: string) {\r\n        const div = document.getElementById(id);\r\n        if (div) { this.divHost = div; }\r\n\r\n        this.asset = new Asset();\r\n        this.viewWrapper = new ViewWrapper(this);\r\n        this.graphicsCoreWrapper = new GraphicsCoreWrapper(this);\r\n        this.sceneWrapper = new SceneWrapper(this);\r\n        this.io = new IO(this);\r\n\r\n        initTesting('NJ3N6am8j');\r\n        initTestingNum(4);\r\n        initTestingNetwork();\r\n        // console.log('GA..');\r\n\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        this.sceneWrapper.activeCommandController.MouseEventController(e);\r\n    }\r\n    Resize(width: number, height: number) {\r\n        this.graphicsCoreWrapper.Resize(width, height);\r\n    }\r\n    Dispose() {\r\n        this.graphicsCoreWrapper.Dispose();\r\n        this.sceneWrapper.Dispose();\r\n    }\r\n    Dummy() {/* */ }\r\n}\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n\r\n    constructor(id: string ) {\r\n        this.divHost = document.getElementById(id);\r\n\r\n        Demo300GA.Init(id)\r\n    }\r\n    public destroy() {\r\n        if (this.divHost) {\r\n            try {\r\n                while (this.divHost.firstChild) {\r\n                    this.divHost.removeChild(this.divHost.firstChild);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error in destroy method:', error);\r\n            }\r\n        } else {\r\n            console.warn('divHost is undefined in destroy method');\r\n        }\r\n    }\r\n}"],"names":["Asset","constructor","ViewWrapper","app","this","CAMERA_TYPE","CameraControllerThree","canvas","width","height","type","PERSPECTIVE","cameraP","cameraO","controls","initX","initY","prevX","prevY","yRotRate","xRotRate","xPanRate","yPanRate","zPanRate","rotateRate","panRate","zoomRate","zoomFactor","frustumSize","cameraShift","ableToMove","stereoCamera","GetPerspective","ORTHOGRAPHIC","GetOrthographic","STEREO","GetStereo","THREE","aspect","camera","x","y","z","position","set","InitOrbitController","OrbitControls","renderer","domElement","minDistance","maxDistance","enablePan","enableZoom","Math","PI","EnableDamping","v","factor","enableDamping","dampingFactor","MouseDown","MouseMove","shift","dx","dy","panLeft","matrix","panUp","rotateLeft","rotateUp","MouseWheel","dd","length","ShiftCamera","MouseEventController","e","CLICK_TYPE","pressedShift","wheel","CanvasThree","canvasWrapper","hostDiv","scene","vrBtn","bg","isActive","Init","clientWidth","clientHeight","WebGLRenderer","setPixelRatio","id","style","pointerEvents","setSize","appendChild","RenderLoop","requestAnimationFrame","UpdateBinding","update","render","ResizeCanvas","updateProjectionMatrix","ResizeEffect","Remove","children","remove","CanvasWrapper","graphicsCoreWrapper","canvasThree","divHost","GraphicsCoreWrapper","Resize","Dispose","ActiveCommandController","MouseUpPre","MouseDownPre","MouseDragPre","MouseMovePre","MouseDoubleClickPre","MouseRightClickPre","MouseMiddleClickPre","MouseLeftClickPre","MouseLeftClick","MouseMiddleClick","MouseRightClick","MouseUp","MouseDoubleClick","MouseDrag","GeometryCommon","listMesh","raycaster","m","point","params","Points","threshold","Raycast","setFromCamera","intersects","intersectObjects","d","console","log","RaycastPoint","LightingController","sceneWrapper","hemiLight","dirLight","color","setHSL","groundColor","add","multiplyScalar","castShadow","shadow","mapSize","left","right","top","bottom","bias","near","far","visible","Renderer","definition","AddPolyline","vertices","geometry","positions","Float32Array","flatMap","setAttribute","material","linewidth","transparent","opacity","line","AddRect","AddRectMesh","indices","Uint16Array","setIndex","side","mesh","AddPoint","vert","size","sizeAttenuation","BoundingBox","min","NVector3","Number","MAX_SAFE_INTEGER","max","MIN_SAFE_INTEGER","Update","vs","i","Polyline","pl","Add","boundingBox","push","GetVerticesForThree","outList","forEach","GetCenterVec","cv","RotateVec","angle","cos","sin","Rect","p0","p1","p2","p3","Cell","grid","j","rect","isInside","Rotate","vecs","RotateVecs","GridSystem","optimizer","rx","ry","intervalX","intervalY","pts","cells","InitCell","UpdateInside","cellList","cell","polyline","Optimizer","gridOptimizerApp","gridSystem","InitPolyline","InitGridSyste","GetPolylineTemp","AppGridOptimizer","AddPoints","AddRects","p","appRectOptimizer","rectAgent","GetInitPoint","InitAgent","AddRenderer","RectAgent","widthHalf","heighthHalf","v1","v2","optimal","areas","Rotation","sefeguard","Check","GetArea","xOff","yOff","AppRectOptimizer","Definition","_capture","init","mouseMove","mouseDrag","mouseDown","mouseUp","dispose","SceneWrapper","activeCommandController","geometryCommon","lightingController","gridHelper","MouseEventData","preX","preY","preZ","yGLPicking","isDown","isDoubleClick","isMove","pressedAlt","pressedCtrl","lat","long","preWheel","native","undefined","DeepCopy","mEvent","MouseInteraction","mouseInteractionUI","mouseEventDataPre","isEnable","clickCount","click","prevent","delay","timer","down","_stopPropagation","InitNativeMouseEvent","div","onclick","setTimeout","MouseClick","stopPropagation","ondblclick","clearTimeout","onmousedown","onmouseup","onmousemove","addEventListener","deltaY","CommonEventBuilder","MouseEvenEmitting","button","buttons","shiftKey","altKey","ctrlKey","offsetX","offsetY","mouseEventData","IO","mouseInteraction","Demo300GA","asset","viewWrapper","io","document","getElementById","initTesting","initTestingNum","initTestingNetwork","Dummy","Solution","destroy","firstChild","removeChild","error","warn"],"sourceRoot":""}