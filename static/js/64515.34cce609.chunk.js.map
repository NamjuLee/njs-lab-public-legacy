{"version":3,"file":"static/js/64515.34cce609.chunk.js","mappings":"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","sources":["njslab/Project/Project_01_Third_Place/index.ts"],"sourcesContent":["import { RendererJSAPI } from '../../../lib'\r\nimport { getFalseColor, getJSONFromURL } from 'njscore';\r\n\r\nexport class Solution extends RendererJSAPI {\r\n\r\n    pts: number[][] = [];\r\n\r\n    ptsUni: number[][] = [];\r\n    ptsBook: number[][] = [];\r\n    ptsLib: number[][] = [];\r\n\r\n    colorArray: number[][] = [];\r\n\r\n    constructor(view: any) {\r\n        super(view);\r\n\r\n        getJSONFromURL('https://raw.githubusercontent.com/NamjuLee/data/master/Boston/thrid-place/ThridPlaceBoston.json').then((d) => {\r\n            for (let i = 0; i < d['dataset'].length; ++i) {\r\n                //     console.log(d['dataset'][i]['id'])\r\n                if (d['dataset'][i]['id'] === 'university') {\r\n                    d['dataset'][i].data.forEach((pos: any) => {\r\n                        this.ptsUni.push([pos['lon'], pos['lat']]);\r\n                    });\r\n                } else if (d['dataset'][i]['id'] === 'book_store') {\r\n                    d['dataset'][i].data.forEach((pos: any) => {\r\n                        this.ptsBook.push([pos['lon'], pos['lat']]);\r\n                    });\r\n                } else if (d['dataset'][i]['id'] === 'library') {\r\n                    d['dataset'][i].data.forEach((pos: any) => {\r\n                        this.ptsLib.push([pos['lon'], pos['lat']]);\r\n                    });\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        this.colorArray = [];\r\n        for (let i = 0; i < 255; ++i) {\r\n            const result = getFalseColor(i / 255);\r\n            this.colorArray.push(result);\r\n        }\r\n        // console.log(this.colorArray.length);\r\n\r\n        this.start();\r\n    }\r\n    render(ctx: CanvasRenderingContext2D) {\r\n        ctx.globalCompositeOperation = 'screen'; //'lighten';\r\n        for (let i = 0; i < this.ptsUni.length; ++i) {\r\n            const projected = this.toScreen(this.ptsUni[i][0], this.ptsUni[i][1]);\r\n            renderPoint(ctx, projected[0], projected[1], this.time, 'rgba(0, 255, 0, 0.6)');\r\n        }\r\n        for (let i = 0; i < this.ptsBook.length; ++i) {\r\n            const projected = this.toScreen(this.ptsBook[i][0], this.ptsBook[i][1]);\r\n            renderPoint(ctx, projected[0], projected[1], this.time + 1, 'rgba(0, 0, 255, 0.6)');\r\n        }\r\n        for (let i = 0; i < this.ptsLib.length; ++i) {\r\n            const projected = this.toScreen(this.ptsLib[i][0], this.ptsLib[i][1]);\r\n            renderPoint(ctx, projected[0], projected[1], this.time + 2, 'rgba(255, 0, 0, 0.6)');\r\n        }\r\n        for (let i = 0; i < this.pts.length; ++i) {\r\n            const projected = this.toScreen(this.pts[i][0], this.pts[i][1]);\r\n            renderPoint(ctx, projected[0], projected[1], this.time + 3, 'rgba(255, 255, 255, 0.6)');\r\n        }\r\n\r\n\r\n        const xOff = 100;\r\n        const yOff = ctx.canvas.height - 100;\r\n        const w = 2;\r\n        const h = 20;\r\n        for (let i = 0; i < this.colorArray.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.rect(i * w + xOff, yOff, w, h)\r\n            ctx.closePath();\r\n            ctx.fillStyle = `rgba(${this.colorArray[i][0]}, ${this.colorArray[i][1]}, ${this.colorArray[i][2]}, 1)`;\r\n            ctx.fill();\r\n        }\r\n    }\r\n    keyDown(k: KeyboardEvent): void {\r\n        //     console.log('key pressed', k);\r\n    }\r\n    mouseDown(x: number, y: number): void {\r\n        //     console.log('mouse down')\r\n    }\r\n    mouseUp(x: number, y: number): void {\r\n        //     console.log('mouse up')\r\n    }\r\n    mouseClick(x: number, y: number): void {\r\n        const mapProjected = this.toMap(x, y);\r\n        this.pts.push(mapProjected);\r\n    }\r\n    mouseMove(x: number, y: number) {\r\n\r\n    }\r\n}\r\n\r\nconst renderPoint = (ctx: CanvasRenderingContext2D, x: number, y: number, t: number, color: string) => {\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, (Math.sin(t * 0.8) + 4) * 2, 0, Math.PI * 2);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n}\r\n"],"names":["Solution","RendererJSAPI","constructor","view","super","pts","ptsUni","ptsBook","ptsLib","colorArray","getJSONFromURL","then","d","i","length","data","forEach","pos","this","push","result","getFalseColor","start","render","ctx","globalCompositeOperation","projected","toScreen","renderPoint","time","yOff","canvas","height","beginPath","rect","closePath","fillStyle","fill","keyDown","k","mouseDown","x","y","mouseUp","mouseClick","mapProjected","toMap","mouseMove","t","color","arc","Math","sin","PI"],"sourceRoot":""}