{"version":3,"file":"static/js/27995.bd256f0a.chunk.js","mappings":"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","sources":["njslab/LabStarter/AppNGL3d/NGL3dApp_05/WebGL/AttribLocations.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_05/WebGL/VAO.ts"],"sourcesContent":["export enum ATTR {\r\n    ATTR_POSITION_NAME = 'a_position',\r\n    ATTR_POSITION_LOC = 0,\r\n    ATTR_NORMAL_NAME = 'a_norm',\r\n    ATTR_NORMAL_LOC = 1,\r\n    ATTR_UV_NAME = 'a_uv',\r\n    ATTR_UV_LOC = 2,\r\n\r\n    ATTR_COLOR_LOC = 4,\r\n    ATTR_COLOR_NAME = 'a_color',\r\n}\r\n\r\nexport class AttribLocations {\r\n    position: number;\r\n    normal: number;\r\n    uv: number;\r\n    constructor(gl: WebGL2RenderingContext, program: WebGLProgram) {\r\n        this.position = gl.getAttribLocation(program, ATTR.ATTR_NORMAL_NAME);\r\n        this.normal = gl.getAttribLocation(program, ATTR.ATTR_NORMAL_NAME);\r\n        this.uv = gl.getAttribLocation(program, ATTR.ATTR_UV_NAME);\r\n    }\r\n}\r\n\r\nexport class UniformLocations {\r\n    uPointSize: WebGLUniformLocation | null;\r\n    uAngle: WebGLUniformLocation | null;\r\n\r\n    perspective: WebGLUniformLocation | null;\r\n    modalMatrix: WebGLUniformLocation | null;\r\n    cameraMatrix: WebGLUniformLocation | null;\r\n    mainTexture: WebGLUniformLocation | null;\r\n    constructor(gl: WebGL2RenderingContext, program: WebGLProgram) {\r\n        this.perspective =\tgl.getUniformLocation(program, 'uPMatrix');\r\n        this.modalMatrix =\tgl.getUniformLocation(program, 'uMVMatrix');\r\n        this.cameraMatrix =\tgl.getUniformLocation(program, 'uCameraMatrix');\r\n        this.mainTexture =\tgl.getUniformLocation(program, 'uMainTex' );\r\n    }\r\n}","import { ATTR } from './AttribLocations';\n\nexport enum DRAW_MODE {\n    // \n}\n\nexport class RTN {\n    name: string;\n    \n    vao: WebGLVertexArrayObject | null;\n    bufVertices: WebGLBuffer | null;\n    bufNormals: WebGLBuffer | null;\n    bufUV: WebGLBuffer | null;\n    bufIndex: WebGLBuffer | null;\n\n    vertexComponentLen: number;\n    vertexCount: number;\n    indexCount: number;\n    drawMode: number;\n\n    constructor() {\n        // \n    }\n}\n\nexport class VAO {\n\n    static createMeshVAO(gl: WebGL2RenderingContext, name: string , aryVert: number[], aryInd?: number[], aryNorm?: number[], aryUV?: number[]) {\n        let rtn =  new RTN();\n        rtn.name = name;\n        rtn.drawMode = gl.TRIANGLES;\n\n        rtn.vao = gl.createVertexArray();\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n        gl.bindVertexArray(rtn.vao);\t//  Bind it so all the calls to vertexAttribPointer/enableVertexAttribArray is saved to the vao.\n\n        // .......................................................\n        // Set up vertices\n        if (aryVert !== undefined && aryVert != null) {\n            rtn.bufVertices = gl.createBuffer();\t\t\t\t\t\t\t\t\t\t\t\t\t// Create buffer...\n            rtn.vertexComponentLen = 3;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// How many floats make up a vertex\n            rtn.vertexCount = aryVert.length / rtn.vertexComponentLen;\t\t\t\t\t\t\t\t// How many vertices in the array\n\n            gl.bindBuffer(gl.ARRAY_BUFFER, rtn.bufVertices);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(aryVert), gl.STATIC_DRAW);\t\t// then push array into it.\n            gl.enableVertexAttribArray(ATTR.ATTR_POSITION_LOC);\t\t\t\t\t\t\t\t\t\t// Enable Attribute location\n            gl.vertexAttribPointer(ATTR.ATTR_POSITION_LOC, 3, gl.FLOAT, false, 0, 0);\t\t\t\t\t\t// Put buffer at location of the vao\n        }\n\n        // .......................................................\n        // Setup normals\n        if (aryNorm !== undefined && aryNorm != null) {\n            rtn.bufNormals = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, rtn.bufNormals);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(aryNorm), gl.STATIC_DRAW);\n            gl.enableVertexAttribArray(ATTR.ATTR_NORMAL_LOC);\n            gl.vertexAttribPointer(ATTR.ATTR_NORMAL_LOC, 3, gl.FLOAT, false, 0, 0);\n        }\n\n        // .......................................................\n        // Setup UV\n        if (aryUV !== undefined && aryUV != null) {\n            rtn.bufUV = gl.createBuffer();\n            gl.bindBuffer(gl.ARRAY_BUFFER, rtn.bufUV);\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(aryUV), gl.STATIC_DRAW);\n            gl.enableVertexAttribArray(ATTR.ATTR_UV_LOC);\n            gl.vertexAttribPointer(ATTR.ATTR_UV_LOC, 2, gl.FLOAT, false, 0, 0);\t// UV only has two floats per component\n        }\n\n        // .......................................................\n        // Setup Index.\n        if (aryInd !== undefined && aryInd != null) {\n            rtn.bufIndex = gl.createBuffer();\n            rtn.indexCount = aryInd.length;\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, rtn.bufIndex);\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(aryInd), gl.STATIC_DRAW);\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n        }\n\n        // Clean up\n        gl.bindVertexArray(null);\t\t\t\t\t// Unbind the VAO, very Important. always unbind when your done using one.\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\t// Unbind any buffers that might be set\n\n        // this.mMeshCache[name] = rtn;\n        return rtn;\n    }\n    constructor() {\n        //\n    }\n}"],"names":["ATTR","AttribLocations","constructor","gl","program","position","normal","uv","this","getAttribLocation","ATTR_NORMAL_NAME","ATTR_UV_NAME","UniformLocations","uPointSize","uAngle","perspective","modalMatrix","cameraMatrix","mainTexture","getUniformLocation","DRAW_MODE","RTN","name","vao","bufVertices","bufNormals","bufUV","bufIndex","vertexComponentLen","vertexCount","indexCount","drawMode","VAO","static","aryVert","aryInd","aryNorm","aryUV","rtn","TRIANGLES","createVertexArray","bindVertexArray","undefined","createBuffer","length","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","ELEMENT_ARRAY_BUFFER","Uint16Array"],"sourceRoot":""}