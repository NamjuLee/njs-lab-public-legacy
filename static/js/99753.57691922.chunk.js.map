{"version":3,"file":"static/js/99753.57691922.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-pixel/02_pixelMap/index.ts","njslab/Workshop/workshop-vector/base/RendererCanvas.ts"],"sourcesContent":["import { RendererCanvas } from '../../workshop-vector/base/RendererCanvas';\r\n\r\nexport class Solution extends RendererCanvas {\r\n    t: number = 0.0;\r\n    pMap: PixelMap = undefined;\r\n    constructor(id: string) {\r\n        super(document.getElementById(id) as HTMLDivElement);\r\n        this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        this.init();\r\n    }\r\n    public init() {\r\n        const size = 200\r\n        this.pMap = new PixelMap(new Vector3(-size, -size, 0), new Vector3(size, size, 0) ,10, 10)\r\n        this.start();\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n\r\n        this.pMap.render(ctx);\r\n    }\r\n    public mouseMove(x: number, y: number): void {\r\n        //\r\n    }\r\n\r\n    public mouseClick(x: number, y: number): void {\r\n        //\r\n    }\r\n}\r\n\r\nclass PixelMap {\r\n    pixelList: Pixel[] = []\r\n    minV: Vector3;\r\n    maxV: Vector3;\r\n    xNum = 10;\r\n    yNum = 10;\r\n    intervalX;\r\n    intervalY;\r\n    constructor(minV: Vector3, maxV: Vector3, xNum: number, yNum: number) {\r\n        this.minV = minV;\r\n        this.maxV = maxV;\r\n        this.xNum = xNum;\r\n        this.yNum = yNum;\r\n        this.init()\r\n    }\r\n    init(){\r\n        this.pixelList = []\r\n        const x = this.minV.x\r\n        const y = this.minV.y\r\n\r\n        this.intervalX = (this.maxV.x - this.minV.x) / (this.xNum + 1)\r\n        this.intervalY = (this.maxV.y - this.minV.y) / (this.yNum + 1)\r\n        \r\n        for(let j = 0 ; j < this.yNum; j++) {\r\n            for(let i = 0 ; i < this.xNum; i++) {\r\n                const xV = x + i * this.intervalX;\r\n                const yV = y + j * this.intervalY;\r\n\r\n                let pix = new Pixel(this, xV , yV , 0);\r\n                this.pixelList.push(pix);\r\n            }\r\n        }\r\n\r\n    }\r\n    render(ctx) {\r\n        // console.log(this.pixelList.length)\r\n        this.pixelList.forEach((p: Pixel) => {\r\n            p.render(ctx);\r\n        })\r\n    }\r\n}\r\n\r\nclass Pixel {\r\n    pMap: PixelMap;\r\n    vec: Vector3\r\n    constructor(pMap: PixelMap, x: number, y: number, z: number) {\r\n        this.pMap = pMap;\r\n        this.vec = new Vector3(x,y,z)\r\n    }\r\n    render(ctx: CanvasRenderingContext2D) {\r\n\r\n        const width = this.pMap.intervalX \r\n        const height = this.pMap.intervalY\r\n\r\n        ctx.beginPath()\r\n        ctx.rect(this.vec.x - width * 0.5, this.vec.y - height * 0.5, width, height)\r\n        ctx.closePath()\r\n        ctx.stroke()\r\n\r\n        ctx.fillStyle = '#333';\r\n        ctx.beginPath();\r\n        ctx.arc(this.vec.x, this.vec.y, this.vec.r, 0, Math.PI * 2.0);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}\r\n\r\nclass Vector3 {\r\n    public x: number = 0.0;\r\n    public y: number = 0.0;\r\n    public z: number = 0.0;\r\n    public r: number = 3\r\n    constructor(x,y,z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n}","export class RendererCanvas {\r\n    public divHost: HTMLDivElement;\r\n    public canvas: HTMLCanvasElement;\r\n    public ctx: CanvasRenderingContext2D;\r\n    public isDown: boolean = false;\r\n    public debugMode: boolean = false;\r\n    public isStatic: boolean = false;\r\n    public m: number[] = [0,0];\r\n\r\n    private prevent: boolean = false;\r\n    private delay: number = 250;\r\n    private timer: NodeJS.Timer | number;\r\n    private isDrag: boolean = false;\r\n\r\n    constructor(div: HTMLDivElement) {\r\n        this.divHost = div;\r\n        const bounding = this.divHost.getBoundingClientRect();\r\n        this.canvas = document.createElement('canvas') as HTMLCanvasElement;\r\n        // this.canvas.style.position = 'absolute';\r\n        this.canvas.width = bounding.width;\r\n        this.canvas.height = bounding.height;\r\n        this.divHost.appendChild(this.canvas);\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        this.canvas.onclick = (e: MouseEvent) => {\r\n            this.timer = setTimeout(() => {\r\n                if (!this.prevent) {\r\n                    this.mouseClick(e.offsetX, e.offsetY);\r\n                }\r\n                this.isDrag = false;\r\n                this.prevent = false;\r\n            },\r\n                this.delay);\r\n        };\r\n        this.canvas.onwheel = (e: WheelEvent) => {\r\n            this.mouseWheel(e);\r\n        };\r\n        this.canvas.ondblclick = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.mouseDoubleClick(e.offsetX, e.offsetY);\r\n        };\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            this.isDown = true;\r\n            this.mouseDown(e.offsetX, e.offsetY);\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            this.isDown = false;\r\n            this.isDrag = false;\r\n            this.mouseUp(e.offsetX, e.offsetY);\r\n        };\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            if (this.isDown) {\r\n                this.isDrag = true;\r\n                this.prevent = true;\r\n                this.mouseDrag(e.offsetX, e.offsetY);\r\n            } else {\r\n                this.mouseMove(e.offsetX, e.offsetY);\r\n            }\r\n        };\r\n        window.addEventListener('resize', this.resize);\r\n        // this.loop(this.ctx);\r\n    }\r\n    public start() {\r\n        this.loop(this.ctx);\r\n    }\r\n    private resize = () => {\r\n        const bounding = this.divHost.getBoundingClientRect();\r\n        this.canvas.width = bounding.width;\r\n        this.canvas.height = bounding.height;\r\n    }\r\n    public destroy() {\r\n        window.removeEventListener('resize', this.resize);\r\n        this.isStatic = true;\r\n        try {\r\n            while (this.divHost !== undefined && this.divHost.lastElementChild !== undefined) {\r\n                this.divHost.removeChild(this.divHost.lastElementChild);\r\n            }\r\n        } catch (error) { }\r\n        this.destroyPost();\r\n    }\r\n    public destroyPost() {\r\n\r\n    }\r\n    public loop(ctx: CanvasRenderingContext2D) {\r\n        if (this.isStatic) { return; }\r\n        requestAnimationFrame(() => { this.loop(ctx); });\r\n        ctx.clearRect(ctx.canvas.width * -0.5, ctx.canvas.height * -0.5, ctx.canvas.width, ctx.canvas.height);\r\n        this.render(ctx);\r\n        this.renderPost();\r\n    }\r\n    public renderPost() {\r\n        this.renderMouse(this.ctx, this.m[0], this.m[1]);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        // Binding needed\r\n    }\r\n    public mouseClick(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('click'); }\r\n    }\r\n    public mouseDoubleClick(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('d-click'); }\r\n    }\r\n    public mouseDown(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('down'); }\r\n    }\r\n    public mouseUp(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('up'); }\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('move'); }\r\n    }\r\n    public mouseDrag(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('drag'); }\r\n    }\r\n    public mouseWheel(v: WheelEvent) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('wheel', v); }\r\n    }\r\n    public renderMouse(ctx: CanvasRenderingContext2D, x: number, y: number) {\r\n        ctx.fillStyle = '#f00';\r\n        ctx.beginPath();\r\n        ctx.arc(this.m[0], this.m[1], 3, 0, Math.PI * 2.0)\r\n        ctx.fillText(`x: ${this.m[0]}, y:${this.m[1]}`,this.m[0] - 15, this.m[1] - 8)\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    public mouseUpdate(x: number, y: number): void {\r\n        this.m[0] = Math.floor(x - this.canvas.width * 0.5);\r\n        this.m[1] = Math.floor(y - this.canvas.height * 0.5);\r\n    }\r\n}"],"names":["Solution","RendererCanvas","constructor","id","super","document","getElementById","t","pMap","undefined","this","ctx","translate","canvas","width","height","init","size","PixelMap","Vector3","start","render","mouseMove","x","y","mouseClick","minV","maxV","xNum","yNum","pixelList","intervalX","intervalY","j","i","xV","yV","pix","Pixel","push","forEach","p","z","vec","beginPath","rect","closePath","stroke","fillStyle","arc","r","Math","PI","fill","div","divHost","isDown","debugMode","isStatic","m","prevent","delay","timer","isDrag","resize","bounding","getBoundingClientRect","createElement","appendChild","getContext","onclick","e","setTimeout","offsetX","offsetY","onwheel","mouseWheel","ondblclick","mouseUpdate","clearTimeout","mouseDoubleClick","onmousedown","mouseDown","onmouseup","mouseUp","onmousemove","mouseDrag","window","addEventListener","loop","destroy","removeEventListener","lastElementChild","removeChild","error","destroyPost","requestAnimationFrame","clearRect","renderPost","renderMouse","console","log","v","fillText","floor"],"sourceRoot":""}