{"version":3,"file":"static/js/60026.c5890d0e.chunk.js","mappings":"mIAMO,MAAMA,EAQTC,YAAYC,GAAa,KAPzBA,SAAG,OACHC,SAAG,OACHC,YAAM,OACNC,GAAiB,GAAG,KACpBC,QAAkB,EAAM,KACxBC,OAAiB,EAAE,KACnBC,SAAG,EAECC,KAAKP,IAAMA,EAEX,MAAMM,EAAME,SAASC,eAAe,aAChCH,IAAOC,KAAKD,IAAMA,GACtBC,KAAKL,OAASM,SAASE,cAAc,UACjCH,KAAKP,IAAIW,OACTJ,KAAKP,IAAIW,KAAKC,YAAYL,KAAKL,QAC/BK,KAAKL,OAAOW,MAAQ,IACpBN,KAAKL,OAAOY,OAAS,KAEzBP,KAAKL,OAAOa,MAAMC,WAAa,UAC/BT,KAAKL,OAAOa,MAAME,OAAS,OAC3BV,KAAKL,OAAOa,MAAMG,OAAS,IAE3B,MAAMjB,EAAMM,KAAKL,OAAOiB,WAAW,MACvB,OAARlB,IAAgBM,KAAKN,IAAMA,GAC/BM,KAAKP,IAAIoB,KAAKb,KAAKN,KACnBM,KAAKc,YACLd,KAAKe,MACT,CACAD,YACId,KAAKL,OAAOqB,YAAeC,IAEvBjB,KAAKH,QAAS,EACdG,KAAKJ,GAAK,EAAE,EAEhBI,KAAKL,OAAOuB,UAAaD,IAErBjB,KAAKH,QAAS,EACd,MAAMsB,EAASnB,KAAKP,IAAI2B,eAAeC,aAAaC,QAAQtB,KAAKJ,IACjEI,KAAKD,IAAIwB,UAAY,UAAYJ,CAAM,EAG3CnB,KAAKL,OAAO6B,YAAeP,IAClBjB,KAAKH,SACVG,KAAKJ,GAAG6B,KAAK,CAACR,EAAGS,QAAST,EAAGU,UAC7B3B,KAAKe,OAAM,CAGnB,CA0CAA,OAGI,GAFAf,KAAK4B,WAEkB,IAAnB5B,KAAKJ,GAAGiC,OAAZ,CAEA7B,KAAKN,IAAIoC,UAAY,EACrB9B,KAAKN,IAAIqC,UAAY,yBACrB/B,KAAKN,IAAIsC,YAAc,yBACvBhC,KAAKN,IAAIuC,YACTjC,KAAKN,IAAIwC,OAAOlC,KAAKJ,GAAG,GAAG,GAAII,KAAKJ,GAAG,GAAG,IAC1C,IAAK,IAAIuC,EAAI,EAAGA,EAAInC,KAAKJ,GAAGiC,SAAUM,EAClCnC,KAAKN,IAAI0C,OAAOpC,KAAKJ,GAAGuC,GAAG,GAAInC,KAAKJ,GAAGuC,GAAG,IAE9CnC,KAAKN,IAAI2C,SACT,IAAK,IAAIF,KAAKnC,KAAKJ,GACfI,KAAKN,IAAIuC,YACTjC,KAAKN,IAAI4C,IAAIH,EAAE,GAAIA,EAAE,GAAInC,KAAKF,OAAQ,EAAG,MACzCE,KAAKN,IAAI6C,YACTvC,KAAKN,IAAI8C,MAfuB,CAiBxC,CACOC,QACHzC,KAAKJ,GAAK,GACVI,KAAKN,IAAIgD,UAAU,EAAG,EAAG1C,KAAKN,IAAIC,OAAOW,MAAON,KAAKN,IAAIC,OAAOY,QAChEP,KAAK4B,UACT,CACOA,WACH5B,KAAKN,IAAIuC,YACTjC,KAAKN,IAAIiD,KAAK,EAAG,EAAG3C,KAAKN,IAAIC,OAAOW,MAAON,KAAKN,IAAIC,OAAOY,QAC3DP,KAAKN,IAAI6C,YACTvC,KAAKN,IAAIqC,UAAY,UACrB/B,KAAKN,IAAI8C,MACb,E","sources":["njslab/Workshop/workshop-ml/SmartDrawingApp/Core/CanvasSD.ts"],"sourcesContent":["import { AppML } from '..';\r\n// import { NVector3 } from '../Lib/NVector3';\r\n\r\n// import { DouglasPeucker } from '../Lib/DouglasPeucker';\r\n// import { tf } from '@tensorflow/tfjs';\r\n// import { NODE_ENVS } from '@tensorflow/tfjs-core/dist/test_util';\r\nexport class CanvasSD {\r\n    app: AppML;\r\n    ctx: CanvasRenderingContext2D;\r\n    canvas: HTMLCanvasElement;\r\n    vs: number[][] = [];\r\n    isDown: boolean = false;\r\n    radius: number = 3;\r\n    div: HTMLElement;\r\n    constructor(app: AppML) {\r\n        this.app = app;\r\n\r\n        const div = document.getElementById('classText');\r\n        if (div) { this.div = div; }\r\n        this.canvas = document.createElement('canvas');\r\n        if (this.app.host) {\r\n            this.app.host.appendChild(this.canvas);\r\n            this.canvas.width = 300; // this.app.host.clientWidth;\r\n            this.canvas.height = 300; // this.app.host.clientHeight;\r\n        }\r\n        this.canvas.style.background = '#ffffff';\r\n        this.canvas.style.margin = '20px';\r\n        this.canvas.style.zIndex = '1';\r\n\r\n        const ctx = this.canvas.getContext('2d');\r\n        if (ctx !== null) { this.ctx = ctx; }\r\n        this.app.Init(this.ctx);\r\n        this.InitEvent();\r\n        this.Loop();\r\n    }\r\n    InitEvent() {\r\n        this.canvas.onmousedown = (ev: MouseEvent) => {\r\n            // console.log('dn');\r\n            this.isDown = true;\r\n            this.vs = [];\r\n        };\r\n        this.canvas.onmouseup = (ev: MouseEvent) => {\r\n            // console.log('dn');\r\n            this.isDown = false;\r\n            const result = this.app.implementation.smartDrawing.Predict(this.vs);\r\n            this.div.innerHTML = 'class: ' + result;\r\n            // console.debug(`pridiction:%c ${result} from MC model`, 'background: #4e2c7e; color: white');\r\n        };\r\n        this.canvas.onmousemove = (ev: MouseEvent) => {\r\n            if (!this.isDown) { return; }\r\n            this.vs.push([ev.offsetX, ev.offsetY]);\r\n            this.Loop();\r\n        };\r\n\r\n    }\r\n    // DotProductProcess(vs: number[][]) {\r\n\r\n    //     const nvs: NVector3[] = []\r\n    //     for (let i = 0; i < vs.length; ++i) {\r\n    //         nvs.push(new NVector3(vs[i][0], vs[i][1]))\r\n    //     }\r\n    //     console.log(nvs);\r\n\r\n    //     const length = 500;\r\n    //     const vsBySimplifyPath = DouglasPeucker.SimplifyPath(nvs, 5);\r\n\r\n    //     const nvsArray:number[][] = []\r\n    //     for (let i = 0 ; i < vsBySimplifyPath.length; ++i) {\r\n    //         nvsArray.push([vsBySimplifyPath[i].x, vsBySimplifyPath[i].y])\r\n    //     }\r\n    //     console.log(nvsArray);\r\n\r\n    //     console.log('vec len:', vsBySimplifyPath.length * 0.1);\r\n    //     let dotValue = NVector3.ComputeDotProducts(nvsArray);\r\n    //     dotValue = this.GetInterpolatedArray(dotValue, length);\r\n    //     dotValue.push(vsBySimplifyPath.length * 0.1);\r\n    //     // AFreehandSmartDrawing.dotArrayForTrainSimplify.push(dotValue);\r\n\r\n    //     let vArray = [];\r\n    //     for (let i = 0; i < vsBySimplifyPath.length; ++i) { vArray.push(vsBySimplifyPath[i].x, vsBySimplifyPath[i].y); }\r\n    //     // AFreehandSmartDrawing.dotVecArrayForTrainSimplify.push(vArray);\r\n\r\n    //     dotValue = NVector3.ComputeDotProducts(vs);\r\n    //     dotValue = this.GetInterpolatedArray(dotValue, length);\r\n    //     dotValue.push(vsBySimplifyPath.length * 0.1);\r\n    //     // AFreehandSmartDrawing.dotArrayForTrainOrigin.push(dotValue);\r\n\r\n    //     vArray = [];\r\n    //     for (let i = 0; i < vs.length; ++i) { vArray.push(vs[i][0], vs[i][1]); }\r\n    //     // AFreehandSmartDrawing.dotVecArrayForTrainOrigin.push(vArray);\r\n\r\n    //     // const resizeData = MathUtility.GetInterpolatedArray(dotValue, 500);\r\n    //     // console.log(resizeData);\r\n    //     // AFreehandSmartDrawing.dotVecArrayForTrain.push(resizeData);\r\n    // }\r\n\r\n    Loop() {\r\n        this.UpdateBG();\r\n\r\n        if (this.vs.length === 0) { return; }\r\n        // this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.lineWidth = 2;\r\n        this.ctx.fillStyle = 'rgba(250, 50, 15, 0.2)';\r\n        this.ctx.strokeStyle = 'rgba(250, 50, 15, 0.5)';\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(this.vs[0][0], this.vs[0][1]);\r\n        for (let i = 1; i < this.vs.length; ++i) {\r\n            this.ctx.lineTo(this.vs[i][0], this.vs[i][1]);\r\n        }\r\n        this.ctx.stroke();\r\n        for (let i of this.vs) {\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(i[0], i[1], this.radius, 0, 3.14 * 2);\r\n            this.ctx.closePath();\r\n            this.ctx.fill();\r\n        }\r\n    }\r\n    public Clear() {\r\n        this.vs = [];\r\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.UpdateBG();\r\n    }\r\n    public UpdateBG() {\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.closePath();\r\n        this.ctx.fillStyle = '#ddaadd';\r\n        this.ctx.fill();\r\n    }\r\n}"],"names":["CanvasSD","constructor","app","ctx","canvas","vs","isDown","radius","div","this","document","getElementById","createElement","host","appendChild","width","height","style","background","margin","zIndex","getContext","Init","InitEvent","Loop","onmousedown","ev","onmouseup","result","implementation","smartDrawing","Predict","innerHTML","onmousemove","push","offsetX","offsetY","UpdateBG","length","lineWidth","fillStyle","strokeStyle","beginPath","moveTo","i","lineTo","stroke","arc","closePath","fill","Clear","clearRect","rect"],"sourceRoot":""}