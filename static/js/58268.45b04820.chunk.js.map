{"version":3,"file":"static/js/58268.45b04820.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-pixel/08_pixelMapTerrainMeshObj/ControllerPixelMap/index.ts","njslab/Workshop/workshop-pixel/08_pixelMapTerrainMeshObj/PMapTerrain/index.ts","njslab/Workshop/workshop-pixel/08_pixelMapTerrainMeshObj/RendererPixelMap/Base.ts","njslab/Workshop/workshop-pixel/08_pixelMapTerrainMeshObj/RendererPixelMap/index.ts","njslab/Workshop/workshop-pixel/08_pixelMapTerrainMeshObj/index.ts"],"sourcesContent":["import { getImgFromURL } from '../../../../../lib';\nimport { Solution } from '..';\nexport class ControllerPixelMap {\n    public img: HTMLImageElement | undefined = undefined;\n\n    public rx: number = 20;\n    public ry: number = 20;\n    public rz: number = 2;\n    public scaleArrow: number = 0.5;\n\n    public app: Solution;\n    public hostDiv: HTMLElement;\n    public divMenu: HTMLElement;\n    public divText: HTMLElement;\n\n    constructor(app: Solution) {\n        this.app = app;\n        this.hostDiv = this.app.divMenu;\n        this.initUI();\n    }\n    public initUI() {\n        const path0 = 'https://upload.wikimedia.org/wikipedia/commons/5/57/Heightmap.png';\n        const path1 = 'https://upload.wikimedia.org/wikipedia/commons/1/15/Srtm_ramp2.world.21600x10800.jpg';\n        const path2 = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/heightMap/Heightmap_01.png';\n        const path3 = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/heightMap/Heightmap_02.jpg';\n        const path4 = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/heightMap/Heightmap_03.jpg';\n\n\n        const divMenu = document.createElement('div');\n        this.divMenu = divMenu;\n        this.hostDiv.appendChild(divMenu);\n        divMenu.style.display = 'block';\n        divMenu.style.position = 'absolute';\n        divMenu.style.top = '0px';\n\n        const divInput = document.createElement('input');\n        // divInput.value = 'https://upload.wikimedia.org/wikipedia/commons/f/ff/Mozilla_Firefox_logo_2013.png';\n        divInput.value = path2\n        divInput.addEventListener('keydown', (e: KeyboardEvent) => {\n            if (e.code === 'Enter') {\n                // this.buildMeshByImg(divInput.value)\n                this.loadImg(divInput.value)\n            }\n        });\n        divMenu.appendChild(divInput);\n\n        const slType = getSlider('rx', 10, 30)\n        slType.slider.defaultValue = '20';\n        divMenu.appendChild(slType.div);\n        slType.slider.oninput = () => {\n            const value = parseInt(slType.slider.value);\n            this.rx = value;\n            this.update();\n            // this.buildMeshByImg(this.img) \n        };\n        const slType2 = getSlider('ry', 10, 30)\n        slType2.slider.defaultValue = '20';\n        divMenu.appendChild(slType2.div);\n        slType2.slider.oninput = () => {\n            const value = parseInt(slType2.slider.value);\n            this.ry = value;\n            this.update();\n            // this.buildMeshByImg(this.img) \n        };\n\n        const slType3 = getSlider('rz', 0, 50)\n        slType3.slider.defaultValue = '20';\n        divMenu.appendChild(slType3.div);\n        slType3.slider.oninput = () => {\n            const value = parseInt(slType3.slider.value);\n            this.rz = value * 0.1;\n            this.update();\n            // this.buildMeshByImg(this.img) \n        };\n\n\n        const slType4 = getSlider('arrow', 5, 10)\n        slType4.slider.defaultValue = '5';\n        divMenu.appendChild(slType4.div);\n        slType4.slider.oninput = () => {\n            const value = parseInt(slType4.slider.value);\n            this.scaleArrow = value * 0.1;\n            this.update();\n        };\n\n        const check = getCheckBox();\n        check.defaultChecked = true;\n        check.onchange = (e: Event) => {\n            // @ts-ignore\n            const value = e.target.checked;\n            this.app.renderer.surfaceMesh.visible = value;\n        };\n        divMenu.appendChild(check);\n\n        const downloadDiv = document.createElement('button');\n        downloadDiv.textContent = 'Click here to download CSV';\n        downloadDiv.style.background = '#999';\n        downloadDiv.onclick = () => {\n            // console.log('click')\n            this.app.tMap.pMap.toCSV()\n        }\n        divMenu.appendChild(downloadDiv);\n\n        this.divText = document.createElement('div')\n        this.divText.textContent = ''\n        divMenu.appendChild(this.divText);\n\n\n        const downloadJSON = document.createElement('button');\n        downloadJSON.textContent = 'Click here to download JSON';\n        downloadJSON.style.background = '#999';\n        downloadJSON.onclick = () => {\n            this.app.toJSON()\n        }\n        divMenu.appendChild(downloadJSON);\n\n        const downloadOBJ = document.createElement('button');\n        downloadOBJ.textContent = 'Click here to download 3D terrain(OBJ)';\n        downloadOBJ.style.background = '#999';\n        downloadOBJ.onclick = () => {\n            this.app.toOBJ()\n        }\n        divMenu.appendChild(downloadOBJ);\n    }\n    public loadImg(url: string) {\n        getImgFromURL(url).then((img: HTMLImageElement) => {\n            if (this.img) {\n                this.divMenu.removeChild(this.img)\n            }\n\n            img.onload = (ev) => {\n                this.divMenu.appendChild(img)\n                this.img = img;\n                this.update();\n            };\n\n        });\n    }\n    public update() {\n        // console.log(this.rx, this.ry, this.size)\n        this.app.init(this.img)\n    }\n    public destroy() {\n        this.hostDiv.removeChild(this.divMenu);\n    }\n}\n\nconst getSlider = (title: string, min: number, max: number) => {\n    // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\n    const div = document.createElement('div');\n    div.style.display = 'flex';\n\n    const slider = document.createElement('input');\n    slider.type = 'range';\n    slider.min = `${min}`;\n    slider.max = `${max}`;\n\n    const text = document.createElement('div');\n    text.textContent = title;\n    text.style.color = '#aaa';\n    div.appendChild(slider);\n    div.appendChild(text);\n    return {\n        div, slider, text\n    }\n};\n\nconst getCheckBox = () => {\n    const inputFile = document.createElement('input');\n    inputFile.type = 'checkbox';\n    return inputFile;\n};","import { AnyLayer } from 'mapbox-gl';\nimport * as THREE from 'three';\n\nexport class PixelMap {\n    public pixelList: Pixel[] = []\n    public minV: Vector3;\n    public maxV: Vector3;\n    public rx = 10;\n    public ry = 10;\n    public rz = 2;\n    public intervalX;\n    public intervalY;\n    public selPixel: Pixel | undefined = undefined;\n    constructor() {\n\n\n    }\n    public init(minV: Vector3, maxV: Vector3, rx: number, ry: number) {\n        this.minV = minV;\n        this.maxV = maxV;\n        this.rx = rx;\n        this.ry = ry;\n\n        this.pixelList = []\n        const x = this.minV.x\n        const y = this.minV.y\n\n        this.intervalX = (this.maxV.x - this.minV.x) / (this.rx - 1)\n        this.intervalY = (this.maxV.y - this.minV.y) / (this.ry - 1)\n\n        for (let j = 0; j < this.ry; j++) {\n            for (let i = 0; i < this.rx; i++) {\n                const xV = x + i * this.intervalX;\n                const yV = y + j * this.intervalY;\n\n                let pix = new Pixel(this, xV * -1, yV, 0); // flip x\n                // let pix = new Pixel(this, xV * -1 , yV , 0);\n                pix.id = this.pixelList.length;\n                pix.xi = i;\n                pix.yi = j;\n                this.pixelList.push(pix);\n            }\n        }\n        this.initGridNeighbor();\n    }\n    public getPixel(x: number, y: number) {\n        return this.pixelList[x + y * this.rx]\n    }\n    private initGridNeighbor() {\n        for (let j = 0; j < this.ry; ++j) {\n            for (let i = 0; i < this.rx; ++i) {\n                let k = i + j * this.rx;\n                let px = this.pixelList[k];\n                if (i > 0) { px.nPix.push(this.pixelList[k - 1]); }\n                if (i < this.rx - 1) { px.nPix.push(this.pixelList[k + 1]); }\n                if (j > 0) { px.nPix.push(this.pixelList[k - this.rx]); }\n                if (j < this.ry - 1) { px.nPix.push(this.pixelList[k + this.rx]); }\n                if ((i > 0) && (j < this.ry - 1)) { px.nPix.push(this.pixelList[k + this.rx - 1]); }\n                if ((i > 0) && (j > 0)) { px.nPix.push(this.pixelList[k - this.rx - 1]); }\n                if ((i < this.rx - 1) && (j < this.ry - 1)) { px.nPix.push(this.pixelList[k + this.rx + 1]); }\n                if ((i < this.rx - 1) && (j > 0)) { px.nPix.push(this.pixelList[k - this.rx + 1]); }\n            }\n        }\n    }\n    public updateImage(img: HTMLImageElement) {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d', { willReadFrequently: true })\n        ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, this.rx, this.ry)\n\n        const imgData = ctx.getImageData(0, 0, this.rx, this.ry);\n\n        const px = (x: number, y: number) => {\n            return x * 4 + y * imgData.width * 4;\n        };\n\n        for (let j = 0; j < this.ry; ++j) {\n            for (let i = 0; i < this.rx; ++i) {\n                let k = px(i, j)\n                let indexList = i + j * this.rx;\n\n                this.pixelList[indexList].color = [\n                    imgData.data[k], imgData.data[k + 1], imgData.data[k + 2], imgData.data[k + 3]\n                ]\n                this.pixelList[indexList].vec.z = RGBtoGray(\n                    imgData.data[k] / 255, imgData.data[k + 1] / 255, imgData.data[k + 2] / 255\n                ) * this.rz\n            }\n        }\n    }\n    public picking(x: number, y: number, z: number) {\n        const mv = new Vector3(x, y, z)\n        let dis = Number.MAX_VALUE;\n        let id = -1\n        for (let i = 0; i < this.pixelList.length; ++i) {\n            const theDis = distance(this.pixelList[i].vec, mv);\n            if (dis > theDis) {\n                dis = theDis;\n                id = i;\n            }\n            this.pixelList[i].hover = false;\n        }\n\n        this.selPixel = undefined;\n        if (id > -1) {\n            this.pixelList[id].hover = true;\n            this.selPixel = this.pixelList[id];\n            // console.log(this.selPixel)\n        }\n        return this.selPixel;\n    }\n    public render(ctx) {\n        this.pixelList.forEach((p: Pixel) => {\n            p.render(ctx);\n        })\n\n        if (this.selPixel) {\n            this.selPixel.render(ctx);\n        }\n    }\n    public onClick(x: number, y: number, z: number) {\n        return this.picking(x, y, z)\n    }\n    public toCSV() {\n        const csv: any[] = [\n            ['id', 'location(lat, lon)', 'elevation', 'slope'],\n        ]\n\n        for (let i = 0; i < this.pixelList.length; ++i) {\n            const pix = this.pixelList[i];\n            csv.push([\n                pix.id, `${pix.vec.y},${pix.vec.x}`, `${pix.vec.z}`, `${pix.slope}`\n            ]);\n        }\n\n        downloadBlob(arrayToCsv(csv), 'terrainSlopeAnalysis.csv', 'text/csv;charset=utf-8;')\n    }\n    // public toOBJ() {\n    //     const theArray = []\n\n    //     for(let i = 0 ; i < this.pixelList.length; ++i) {\n    //         const v = this.pixelList[i].vec;\n    //         theArray.push(`v ${v.x} ${v.y} ${v.z}\\n`)\n    //     }\n\n    //     for(let i = 0 ; i < this.pixelList.length; ++i) {\n    //         // const v = this.pixelList[i].;\n    //         // theArray.push(`v ${v.x} ${v.y} ${v.z}\\n`)\n    //     }\n     \n    //     return theArray\n    // }\n}\n\nclass Pixel {\n    public id = 0;\n    public slope = [];\n    public nPixString = [];\n\n    public xi: number;\n    public yi: number;\n    public pMap: PixelMap;\n    public vec: Vector3;\n    public hover: boolean = false;\n    public nPix: Pixel[] = [];\n    public color: number[] = [];\n\n    public mesh: any;\n    public arrow: any = [];\n    constructor(pMap: PixelMap, x: number, y: number, z: number) {\n        this.pMap = pMap;\n        this.vec = new Vector3(x, y, z);\n    }\n    public onClick() {\n        // console.log(this)\n    }\n    public render(ctx: CanvasRenderingContext2D) {\n        const width = this.pMap.intervalX;\n        const height = this.pMap.intervalY;\n\n        ctx.beginPath();\n        ctx.rect(this.vec.x - width * 0.5, this.vec.y - height * 0.5, width, height);\n        ctx.closePath();\n        ctx.stroke();\n        if (this.hover) {\n            ctx.fillStyle = '#555';\n            ctx.fill();\n        } else {\n            ctx.fillStyle = `rgba(${this.color[0]}, ${this.color[1]}, ${this.color[2]}, ${this.color[3]})`;\n            ctx.fill();\n        }\n\n        ctx.beginPath();\n        ctx.arc(this.vec.x, this.vec.y, this.vec.r, 0, Math.PI * 2.0);\n        ctx.closePath();\n        if (this.hover) {\n            ctx.fillStyle = '#999';\n        } else {\n            ctx.fillStyle = '#333';\n        }\n        ctx.fill();\n\n        if (this.hover) {\n            for (let i = 0; i < this.nPix.length; ++i) {\n                ctx.beginPath();\n                ctx.moveTo(this.vec.x, this.vec.y);\n                ctx.lineTo(this.nPix[i].vec.x, this.nPix[i].vec.y);\n                ctx.closePath();\n                ctx.stroke();\n            }\n\n            ctx.strokeText(`x: ${this.xi}, y: ${this.yi}`, this.vec.x, this.vec.y);\n        }\n\n\n    }\n}\n\nexport class Vector3 {\n    public x: number = 0.0;\n    public y: number = 0.0;\n    public z: number = 0.0;\n    public r: number = 3\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n}\n\n\nconst distance = (v0: Vector3, v1: Vector3) => {\n    return Math.sqrt(distance2(v0, v1));\n}\nconst distance2 = (v0: Vector3, v1: Vector3) => {\n    return (v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z);\n}\n\nexport const RGBtoGray = (r: number, g: number, b: number) => {\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n}\n\nconst arrayToCsv = (data) => {\n    return data.map(row =>\n        row\n            .map(String)  // convert every value to String\n            .map(v => v.replaceAll('\"', '\"\"'))  // escape double quotes\n            .map(v => `\"${v}\"`)  // quote it\n            .join(',')  // comma-separated\n    ).join('\\r\\n');  // rows starting on new lines\n}\n\nconst downloadBlob = (content, filename, contentType) => {\n    // Create a blob\n    var blob = new Blob([content], { type: contentType });\n    var url = URL.createObjectURL(blob);\n\n    // Create a link to download it\n    var pom = document.createElement('a');\n    pom.href = url;\n    pom.setAttribute('download', filename);\n    pom.click();\n}","import * as THREE from 'three';\nimport { OrbitControls } from 'three-orbitcontrols-ts';\n\nexport class RendererThree {\n    public canvas: HTMLCanvasElement;\n    public hostDiv: HTMLElement;\n    public ctx: CanvasRenderingContext2D;\n    public t: number = 0.0;\n    public camera: THREE.PerspectiveCamera;\n    public scene: THREE.Scene;\n    public renderer: THREE.WebGLRenderer;\n    public controls: OrbitControls;\n    private requestFrame: number;\n    constructor(id: string) {\n        this.hostDiv = document.getElementById(id);\n        this.initCanvas();\n    }\n    private initCanvas() {\n        THREE.Object3D.DEFAULT_UP.set(0, 0, 1);\n\n        this.scene = new THREE.Scene();\n        \n        this.scene.castShadow = true;\n\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n        this.renderer.setPixelRatio(this.hostDiv.clientWidth / this.hostDiv.clientHeight);\n        this.renderer.domElement.id = 'Three';\n        this.renderer.domElement.style.position = 'absolute';\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.setSize(this.hostDiv.clientWidth, this.hostDiv.clientHeight);\n        this.hostDiv.appendChild(this.renderer.domElement);\n\n        this.camera = new THREE.PerspectiveCamera(30, this.hostDiv.clientWidth / this.hostDiv.clientHeight, 1, 5000);\n        this.controls = new OrbitControls( this.camera, this.renderer.domElement );\n        this.camera.position.set( 0, 0, 0 );\n        this.controls.update();\n\n        this.canvas = this.renderer.domElement;\n\n        this.init();\n    }\n    private init() {\n        this.eventBind();\n\n    }\n    private eventBind() {\n        this.renderer.domElement.onmousedown = (e: MouseEvent) => this.mouseDown(e);\n        this.renderer.domElement.onmouseup = (e: MouseEvent) => this.mouseUp(e);\n        this.renderer.domElement.onmousemove = (e: MouseEvent) => this.mouseMove(e);\n        this.renderer.domElement.addEventListener('click', (e: MouseEvent) =>this.mouseClick(e))\n\n        window.addEventListener('resize', () => this.onWindowResize());\n\n    }\n    private onWindowResize() {\n        this.camera.aspect = this.hostDiv.clientWidth / this.hostDiv.clientHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize( this.hostDiv.clientWidth, this.hostDiv.clientHeight );\n    }\n    private loop = () => {\n        this.requestFrame = requestAnimationFrame(this.loop);\n        this.controls.update();\n        this.update(this.scene);\n        this.renderer.render(this.scene, this.camera);\n        this.t += 0.01;\n\n        // console.log('rendering...');\n    }\n    // .............................................................................\n    public start() {\n        this.loop();\n    }\n    public mouseDown(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseUp(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseClick(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseDClick(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseMove(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseDrag(e: MouseEvent) {\n        // console.log(e);\n    }\n    public update(scene: THREE.Scene) {\n\n    }\n    public destroy() {\n        window.removeEventListener('resize', () => this.onWindowResize());\n        cancelAnimationFrame(this.requestFrame);\n        this.requestFrame = undefined;\n        while (this.hostDiv.lastChild) {\n            this.hostDiv.removeChild(this.hostDiv.lastChild);\n        }\n    }\n}","import * as THREE from 'three';\nimport { RendererThree } from './Base';\nimport { PixelMap } from '../PMapTerrain';\n\nexport class Renderer extends RendererThree {\n    public canvas: HTMLCanvasElement;\n    public pointLight: THREE.PointLight;\n\n    rayCaster = new THREE.Raycaster();\n\n    mouse2 = new THREE.Vector2();\n    mouse3: THREE.Vector3 | undefined = undefined;\n    sphere: THREE.Mesh;\n    surfaceMesh: THREE.Mesh;\n\n    preSelection: THREE.Mesh | undefined = undefined\n\n    public meshList: THREE.Mesh[] = [];\n    public arrowList: THREE.ArrowHelper[] = [];\n\n    public vertexArray = [];\n    public faceArray = [];\n    public colorArray = [];\n\n    constructor(id: string = 'main') {\n        super(id)\n\n        this.pointLight = new THREE.PointLight(0xffffff, 0.75);\n        this.pointLight.position.x = 80;\n        this.pointLight.position.z = 80;\n        this.scene.add(this.pointLight);\n\n        this.canvas = document.createElement('canvas');\n        this.hostDiv.append(this.canvas);\n\n        this.renderer.setClearColor(0x000000, 0);\n        this.scene.background = null;\n        this.camera.position.set(0, -80, 80);\n\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n        const geometrySphere = new THREE.SphereGeometry(0.05, 50, 50);\n        const objectSphere = new THREE.Mesh(geometrySphere, material);\n        objectSphere.translateX(1);\n        this.sphere = objectSphere;\n        this.scene.add(objectSphere);\n\n\n        this.start();\n    }\n    public reset() {\n        this.scene.remove(...this.meshList)\n        this.meshList = []\n\n        this.scene.remove(...this.arrowList)\n        this.arrowList = []\n\n        this.preSelection = undefined;\n    }\n    public buildPoint(pMap: PixelMap) {\n\n        for (let i = 0; i < pMap.pixelList.length; ++i) {\n            const vec = pMap.pixelList[i].vec;\n            const col = pMap.pixelList[i].color;\n\n            const geometry = new THREE.SphereGeometry(0.15, 8, 8);\n            const material = new THREE.MeshBasicMaterial({ color: new THREE.Color(col[0] / 255, col[1] / 255, col[2] / 255) });\n\n            const mesh = new THREE.Mesh(geometry, material);\n            mesh.userData['pixel'] = pMap.pixelList[i]\n            pMap.pixelList[i].mesh = mesh;\n\n            this.meshList.push(mesh);\n            mesh.position.set(vec.x, vec.y, vec.z);\n            this.scene.add(mesh);\n\n        }\n    }\n    public mouseClick(e: MouseEvent): void {\n        const obj = picking(e, this.meshList, this.renderer, this.camera, this.rayCaster, this.mouse2)\n        // console.log(obj)\n        if (obj) {\n            if (this.preSelection) {\n                const mat = this.preSelection.material as THREE.MeshBasicMaterial\n                if (mat.color) mat.color.setRGB(this.preSelection.userData.pixel.color[0] / 255, this.preSelection.userData.pixel.color[1] / 255, this.preSelection.userData.pixel.color[2] / 255)\n            }\n\n            this.mouse3 = new THREE.Vector3(obj.mouse3.x, obj.mouse3.y, obj.mouse3.z);\n\n            this.sphere.position.set(this.mouse3.x, this.mouse3.y, this.mouse3.z);\n\n            this.onClickBind(this.mouse3.x, this.mouse3.y, this.mouse3.z);\n            const mesh = obj.mesh[0].object as THREE.Mesh;\n            // console.log(mesh)\n            const mat = mesh.material as THREE.MeshBasicMaterial\n            if (mat.color) mat.color.setHex(0xff0000)\n            this.preSelection = mesh\n            return\n        }\n\n        this.mouse3 = undefined;\n    }\n    public onClickBind(x: number, y: number, z: number) { /* bind needed */ }\n\n    public buildMeshByImg = (pMap: PixelMap) => {\n        // ................................................................................\n        // your code goes here\n        const xNum = pMap.rx;\n        const yNum = pMap.ry;\n\n        const vertices = [];\n        for (let y = 0; y < yNum; ++y) {\n            for (let x = 0; x < xNum; ++x) {\n                const pix = pMap.getPixel(x, y);\n                vertices.push(pix.vec.x, pix.vec.y, pix.vec.z);\n\n                this.vertexArray.push([pix.vec.x, pix.vec.y, pix.vec.z, pix.color[0], pix.color[1], pix.color[2]]);\n            }\n        }\n\n        const faces = [];\n        for (let y = 0; y < yNum - 1; ++y) {\n            for (let x = 0; x < xNum - 1; ++x) {\n                let index = x + (y * xNum);\n                faces.push(index, index + xNum, index + 1,);\n                faces.push(index + 1, index + xNum, index + xNum + 1,);\n\n                this.faceArray.push([index, index + xNum, index + 1]);\n                this.faceArray.push([index + 1, index + xNum, index + xNum + 1]);\n            }\n        }\n\n        const material = new THREE.MeshNormalMaterial({\n            // side: THREE.DoubleSide,\n            vertexColors: true,\n            flatShading: false,\n        });\n        const geometry = new THREE.BufferGeometry();\n        geometry.setIndex(faces);\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n\n        geometry.computeVertexNormals();\n        geometry.computeBoundingBox();\n\n        const mesh = new THREE.Mesh(geometry, material);\n        this.surfaceMesh = mesh\n        this.meshList.push(mesh);\n        this.scene.add(mesh);\n\n    }\n    public buildArrow(pMap: PixelMap, size = 0.25 ) {\n        const zOff = 0.0075;\n        for (let j = 0; j < pMap.pixelList.length; ++j) {\n            const px = pMap.pixelList[j];\n            const origin = new THREE.Vector3(px.vec.x, px.vec.y, px.vec.z + zOff);\n            px.arrow = [];\n\n            for (let i = 0; i < px.nPix.length; ++i) {\n                const np = px.nPix[i];\n                const dir = new THREE.Vector3(np.vec.x - px.vec.x, np.vec.y - px.vec.y, np.vec.z + zOff - px.vec.z + zOff);\n                dir.normalize();\n\n                const slope = dir.z;\n                const r = slope <= 0 ? Math.abs(slope): 0;\n                const g = 0;\n                const b = slope > 0 ? Math.abs(slope): 0;\n\n                px.slope.push(`id:${np.id}; value:${slope}`);\n\n                const arrowHelper = new THREE.ArrowHelper(dir, origin, size, new THREE.Color(r,g,b));\n                px.arrow.push(arrowHelper);\n\n                this.arrowList.push(arrowHelper);\n                this.scene.add(arrowHelper);\n            }\n\n        }\n\n\n\n    }\n}\n\n\nconst picking = (e: MouseEvent, arrayMesh, renderer, camera, rayCaster, mouse2) => {\n    mouse2.x = (e.offsetX / renderer.domElement.clientWidth) * 2 - 1;\n    mouse2.y = -(e.offsetY / renderer.domElement.clientHeight) * 2 + 1;\n    rayCaster.setFromCamera(mouse2, camera);\n    const intersects = rayCaster.intersectObjects([...arrayMesh]);\n    if (intersects.length > 0) {\n        return {\n            mesh: intersects,\n            mouse3: new THREE.Vector3(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z)\n        };\n    }\n    return undefined;\n}","import * as THREE from 'three';\r\nimport { RGBtoGray } from '../../../../lib';\r\nimport { RendererThree } from './RendererPixelMap/Base';\r\nimport { ControllerPixelMap } from './ControllerPixelMap';\r\nimport { PixelMap, Vector3 } from './PMapTerrain';\r\nimport { Renderer } from './RendererPixelMap';\r\n\r\nexport class Solution {\r\n    public controller: ControllerPixelMap;\r\n    public renderer: Renderer;\r\n\r\n\r\n    public canvas: HTMLCanvasElement;\r\n\r\n    public divMain: HTMLElement;\r\n    public divMenu: HTMLElement;\r\n\r\n    tMap: TerrainMap\r\n\r\n    constructor(id: string = 'main') {\r\n        const divMain = document.getElementById(id);\r\n        this.divMain = divMain;\r\n\r\n        const divMenu = document.createElement('div');\r\n        this.divMenu = divMenu;\r\n        divMenu.style.height = '50px';\r\n        divMenu.style.position = 'absolute';\r\n        divMenu.style.backgroundColor = '#f00';\r\n        divMenu.style.zIndex = '1';\r\n        divMain.append(divMenu);\r\n        this.controller = new ControllerPixelMap(this);\r\n\r\n        const divCanvas = document.createElement('div');\r\n        divCanvas.id = 'pMap';\r\n        divCanvas.style.width = '100%';\r\n        divCanvas.style.height = '100%';\r\n        divMain.append(divCanvas);\r\n\r\n        this.renderer = new Renderer(divCanvas.id);\r\n\r\n        this.tMap = new TerrainMap(this)\r\n\r\n        this.controller.loadImg('https://raw.githubusercontent.com/NamjuLee/data/master/img/heightMap/Heightmap_03.jpg')\r\n    }\r\n    public init(img) {\r\n        this.tMap.init(img)\r\n    }\r\n    public toJSON() {\r\n        const jsonObj = this.renderer.surfaceMesh.toJSON();\r\n        downloadBlob(JSON.stringify(jsonObj), 'terrain.json')\r\n    }\r\n    public toOBJ() {\r\n        const theArray = []\r\n\r\n        this.renderer.vertexArray.forEach((vec) => {\r\n            const vertex = vec.map(index => index).join(' ');\r\n            // console.log(vertex)\r\n            theArray.push(`v ${vertex}\\n`);\r\n        });\r\n\r\n        this.renderer.faceArray.forEach((face) => {\r\n            const indices = face.map(index => index + 1).join(' ');\r\n            // console.log(indices)\r\n            theArray.push(`f ${indices}\\n`);\r\n        });\r\n\r\n        const out = theArray.flat().join(' ')\r\n        // console.log({ out })\r\n        downloadOBJ(out, 'terrain.obj')\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n\r\n        try {\r\n            while (this.divMain !== undefined && this.divMain.lastElementChild !== undefined) {\r\n                this.divMain.removeChild(this.divMain.lastElementChild);\r\n            }\r\n        } catch (error) { }\r\n    }\r\n}\r\n\r\nclass TerrainMap {\r\n    public solution: Solution;\r\n    public pMap: PixelMap;\r\n    constructor(solution: Solution) {\r\n        this.solution = solution;\r\n    }\r\n    public init(img) {\r\n        this.pMap = new PixelMap();\r\n        this.pMap.rx = this.solution.controller.rx;\r\n        this.pMap.ry = this.solution.controller.ry;\r\n        this.pMap.rz = this.solution.controller.rz;\r\n\r\n        this.pMap.init(\r\n            new Vector3(10, 10, 0), new Vector3(-10, -10, 0),\r\n            this.pMap.rx, this.pMap.ry\r\n        );\r\n\r\n        this.solution.renderer.reset();\r\n        this.pMap.updateImage(img);\r\n        this.solution.renderer.buildPoint(this.pMap);\r\n        this.solution.renderer.buildMeshByImg(this.pMap);\r\n        this.solution.renderer.buildArrow(this.pMap, this.solution.controller.scaleArrow);\r\n        this.solution.renderer.onClickBind = (x: number, y: number, z: number) => {\r\n            const pixel = this.pMap.onClick(x, y, z);\r\n            pixel.onClick();\r\n\r\n            this.solution.controller.divText.textContent = `Elevation: ${pixel.vec.z}, Col: ${pixel.color}`;\r\n        };\r\n    }\r\n}\r\n\r\n\r\nconst downloadBlob = (content, filename, contentType = 'text/json;charset=utf-8;') => {\r\n    // Create a blob\r\n    var blob = new Blob([content], { type: contentType });\r\n    var url = URL.createObjectURL(blob);\r\n\r\n    // Create a link to download it\r\n    var pom = document.createElement('a');\r\n    pom.href = url;\r\n    pom.setAttribute('download', filename);\r\n    pom.click();\r\n}\r\n\r\n\r\nconst downloadOBJ = (objContent, filename) => {\r\n    // Create Blob\r\n    const blob = new Blob([objContent], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    // Create anchor element for downloading\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = filename;\r\n\r\n    // Trigger download\r\n    link.click();\r\n\r\n    // Cleanup\r\n    URL.revokeObjectURL(url);\r\n}"],"names":["ControllerPixelMap","constructor","app","img","undefined","rx","ry","rz","scaleArrow","hostDiv","divMenu","divText","this","initUI","document","createElement","appendChild","style","display","position","top","divInput","value","addEventListener","e","code","loadImg","slType","getSlider","slider","defaultValue","div","oninput","parseInt","update","slType2","slType3","slType4","check","getCheckBox","defaultChecked","onchange","target","checked","renderer","surfaceMesh","visible","downloadDiv","textContent","background","onclick","tMap","pMap","toCSV","downloadJSON","toJSON","downloadOBJ","toOBJ","url","getImgFromURL","then","removeChild","onload","ev","init","destroy","title","min","max","type","text","color","inputFile","PixelMap","pixelList","minV","maxV","intervalX","intervalY","selPixel","x","y","j","i","xV","yV","pix","Pixel","id","length","xi","yi","push","initGridNeighbor","getPixel","k","px","nPix","updateImage","ctx","getContext","willReadFrequently","drawImage","width","height","imgData","getImageData","indexList","data","vec","z","RGBtoGray","picking","mv","Vector3","dis","Number","MAX_VALUE","theDis","distance","hover","render","forEach","p","onClick","csv","slope","downloadBlob","arrayToCsv","nPixString","mesh","arrow","beginPath","rect","closePath","stroke","fillStyle","fill","arc","r","Math","PI","moveTo","lineTo","strokeText","v0","v1","sqrt","distance2","g","b","map","row","String","v","replaceAll","join","content","filename","contentType","blob","Blob","URL","createObjectURL","pom","href","setAttribute","click","RendererThree","canvas","t","camera","scene","controls","requestFrame","loop","requestAnimationFrame","getElementById","initCanvas","THREE","castShadow","antialias","alpha","setPixelRatio","clientWidth","clientHeight","domElement","shadowMap","enabled","setSize","OrbitControls","set","eventBind","onmousedown","mouseDown","onmouseup","mouseUp","onmousemove","mouseMove","mouseClick","window","onWindowResize","aspect","updateProjectionMatrix","start","mouseDClick","mouseDrag","removeEventListener","cancelAnimationFrame","lastChild","Renderer","super","pointLight","rayCaster","mouse2","mouse3","sphere","preSelection","meshList","arrowList","vertexArray","faceArray","colorArray","buildMeshByImg","xNum","yNum","vertices","faces","index","material","vertexColors","flatShading","geometry","setIndex","computeVertexNormals","computeBoundingBox","add","append","setClearColor","geometrySphere","objectSphere","translateX","reset","remove","buildPoint","col","userData","obj","mat","setRGB","pixel","onClickBind","object","setHex","buildArrow","size","zOff","origin","np","dir","normalize","abs","arrowHelper","arrayMesh","offsetX","offsetY","setFromCamera","intersects","intersectObjects","point","Solution","controller","divMain","backgroundColor","zIndex","divCanvas","TerrainMap","jsonObj","JSON","stringify","theArray","vertex","face","indices","out","flat","lastElementChild","error","solution","objContent","link","download","revokeObjectURL"],"sourceRoot":""}