{"version":3,"file":"static/js/49714.fa88fbd4.chunk.js","mappings":"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","sources":["njslab/Tools/CircleCanvas/Implementation/DynamicGridA/AppCore/Geometry/Point.ts","njslab/Tools/CircleCanvas/Implementation/DynamicGridA/AppCore/Geometry/Line.ts","njslab/Tools/CircleCanvas/Implementation/DynamicGridA/AppCore/Geometry/Circle.ts","njslab/Tools/CircleCanvas/Implementation/DynamicGridA/AppCore/Controller/index.ts","njslab/Tools/CircleCanvas/Implementation/DynamicGridA/AppCore/Render/Render.ts","njslab/Tools/CircleCanvas/Implementation/DynamicGridA/AppCore/IO/index.ts","njslab/Tools/CircleCanvas/Implementation/DynamicGridA/AppCore/index.ts","njslab/Tools/CircleCanvas/Implementation/DynamicGridA/CanvasCore/index.ts","njslab/Tools/CircleCanvas/Implementation/DynamicGridA/index.ts","njslab/Tools/CircleCanvas/Implementation/index.ts","njslab/Tools/CircleCanvas/index.ts"],"sourcesContent":["import { NVector3 } from '../../../../../../../lib/NJSCore';\r\nimport { Render } from '../Render/Render';\r\n\r\nexport class Point {\r\n    v: NVector3;\r\n    render: Render;\r\n    r: number = 5;\r\n    fillColor: string = '';\r\n    static GetPoint(render: Render, x: number, y: number, z: number = 0) {\r\n        return new Point(render, x, y, z);\r\n    }\r\n\r\n\r\n    constructor(render: Render, x: number, y: number, z: number = 0) {\r\n        this.v = new NVector3(x, y, z);\r\n        this.render = render;\r\n        // console.log(this);\r\n        this.render.pointList.push(this);\r\n        this.fillColor = `rgb(${Math.round(Math.random() * 255)},${Math.round(Math.random() * 255)},${Math.round(Math.random() * 255)},${Math.random()})`;\r\n\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = this.fillColor;\r\n        ctx.beginPath();\r\n        ctx.arc(this.v.x, this.v.y, this.r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n    }\r\n}","\r\nimport { Render } from '../Render/Render';\r\nimport { Point } from './Point';\r\nexport class Line {\r\n    p0: Point;\r\n    p1: Point;\r\n    render: Render;\r\n    width: number = 5;\r\n    strokeColor: string = '';\r\n\r\n    static GetLine(render: Render, p0: Point, p1: Point) {\r\n        return new Line(render, p0, p1);\r\n    }\r\n    constructor(render: Render, p0: Point, p1: Point) {\r\n        this.p0 = p0;\r\n        this.p1 = p1;\r\n        this.render = render;\r\n        this.render.lineList.push(this);\r\n        this.strokeColor = `rgb(${Math.round(Math.random() * 255)},${Math.round(Math.random() * 255)},${Math.round(Math.random() * 255)},${(Math.random())})`;\r\n\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        if (!this.p0 || !this.p1) { return; }\r\n\r\n        ctx.strokeStyle = this.strokeColor;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0.v.x, this.p0.v.y);\r\n        ctx.lineTo(this.p1.v.x, this.p1.v.y);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n\r\n    }\r\n    public ToJson() {\r\n        const pt0 = this.p0;\r\n        const pt1 = this.p1;\r\n\r\n        return {\r\n            p0: {\r\n                x: pt0.v.x,\r\n                y: pt0.v.y\r\n            },\r\n            p1: {\r\n                x: pt1.v.x,\r\n                y: pt1.v.y\r\n            },\r\n        };\r\n    }\r\n}","\r\nimport { Render } from '../Render/Render';\r\nimport { NVector3 } from '../../../../../../../NJSCore';\r\nexport class Circle {\r\n    cv: NVector3;\r\n    radius: number = 5;\r\n    render: Render;\r\n    width: number = 5;\r\n\r\n    strokeColor: string = '';\r\n    fillColor: string = '';\r\n    static GetCircle(render: Render, cv: NVector3, radius: number) {\r\n        return new Circle(render, cv, radius);\r\n    }\r\n    constructor(render: Render, cv: NVector3, radius: number) {\r\n        this.cv = cv;\r\n        this.radius = radius;\r\n        this.render = render;\r\n        this.render.circleList.push(this);\r\n        this.strokeColor = `rgb(${Math.round(Math.random() * 255)},${Math.round(Math.random() * 255)},${Math.random() * 255},${(Math.random())})`;\r\n        this.fillColor = `rgb(${Math.round(Math.random() * 255)},${Math.round(Math.random() * 255)},${Math.random() * 255},${(Math.random())})`;\r\n\r\n\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        // if (!this.p0 || !this.p1) { return; }\r\n\r\n        ctx.strokeStyle = this.strokeColor;\r\n        ctx.fillStyle = this.fillColor;\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(this.cv.x, this.cv.y, this.radius, 0, Math.PI * 2);\r\n        // ctx.moveTo(this.p0.v.x, this.p0.v.y);\r\n        // ctx.lineTo(this.p1.v.x, this.p1.v.y);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n        ctx.fill();\r\n        // console.log(this.radius);\r\n\r\n    }\r\n}","import { NVector3 } from '../../../../../../../lib/NJSCore';\r\nimport { AppCore } from '..';\r\n\r\nimport { Point } from '../Geometry/Point';\r\nimport { Line } from '../Geometry/Line';\r\nimport { Render } from '../Render/Render';\r\nimport { Circle } from '../Geometry/Circle';\r\n\r\nexport class Controller {\r\n    appCore: AppCore;\r\n    render: Render;\r\n    commander: Commander;\r\n    mouse: NVector3 = new NVector3(0, 0);\r\n    capture: Node | undefined = undefined;\r\n\r\n    constructor(appCore: AppCore) {\r\n        this.appCore = appCore;\r\n        this.render = this.appCore.render;\r\n        this.commander = new Commander(this);\r\n    }\r\n    public MouseMove(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        // console.log('move', x, y);\r\n        // console.log(this.render.dt);\r\n\r\n    }\r\n    public MouseDClick(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        // console.log('double click', x, y);\r\n        this.commander.ToggleAutoPopulation();\r\n\r\n    }\r\n    public MouseDown(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        // console.log(this.render.lineList);\r\n        this.appCore.io.GetGraph(this.render.lineList);\r\n        // console.log('down', x, y, this.capture);\r\n    }\r\n    public MouseLeftClick(x: number, y: number) {\r\n        const p = Point.GetPoint(this.render, x, y);\r\n        // console.log('click', x, y, this.capture);\r\n\r\n        // console.log(this.render.pointList.length);\r\n        if (this.render.pointList.length > 1) {\r\n            const cp = this.commander.FindPoint(x, y);\r\n            if (cp) {\r\n                const ln = Line.GetLine(this.render, p, cp);\r\n                this.commander.GetCircleByLine(ln);\r\n            }\r\n        }\r\n    }\r\n    public MouseUp(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        // console.log('up', x, y);\r\n    }\r\n    public MouseDrag(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        // console.log('drag', x, y);\r\n    }\r\n\r\n}\r\n\r\nclass Commander {\r\n    controller: Controller;\r\n    autoPopulation: boolean = false;\r\n    constructor(controller: Controller) {\r\n        this.controller = controller;\r\n    }\r\n\r\n    public ToggleAutoPopulation() {\r\n        this.autoPopulation = !this.autoPopulation;\r\n    }\r\n\r\n    public FindPoint(x: number, y: number) {\r\n        const renderer = this.controller.render;\r\n        let dis = Number.MAX_SAFE_INTEGER;\r\n        let p: Point | undefined = undefined;\r\n        let tv = new NVector3(x, y);\r\n        for (let i of renderer.pointList) {\r\n            let theDis = tv.Distance(i.v);\r\n            if (theDis > 0.1 && theDis < dis) { dis = theDis; p = i; }\r\n        }\r\n        if (p) {\r\n            return p;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n    public GetCircleByLine(ln: Line) {\r\n        const mv = NVector3.MidVec(ln.p0.v, ln.p1.v);\r\n\r\n        // const pts = NVector3.DivideByNum(ln.p0.v, ln.p1.v, 10);\r\n        // for (let i of pts) { new Point(this.controller.render, i.x, i.y); }\r\n\r\n        const dis = NVector3.Distance(ln.p0.v, ln.p1.v);\r\n        Circle.GetCircle(this.controller.render, mv, dis * 0.5);\r\n    }\r\n}","import { AppCore } from '..';\r\nimport { Point } from '../Geometry/Point';\r\nimport { Line } from '../Geometry/Line';\r\nimport { Circle } from '../Geometry/Circle';\r\nexport class Render {\r\n    appCore: AppCore;\r\n    pointList: Point[] = [];\r\n    lineList: Line[] = [];\r\n    circleList: Circle[] = [];\r\n    dt: number = 0.0;\r\n    constructor(appCore: AppCore) {\r\n        this.appCore = appCore;\r\n\r\n    }\r\n    public RenderPre(ctx: CanvasRenderingContext2D) {\r\n        this.Render(ctx);\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        for (let i = 0; i < this.circleList.length; ++i) {\r\n            this.circleList[i].Render(ctx);\r\n        }\r\n        for (let i = 0; i < this.lineList.length; ++i) {\r\n            this.lineList[i].Render(ctx);\r\n        }\r\n        for (let i = 0; i < this.pointList.length; ++i) {\r\n            this.pointList[i].Render(ctx);\r\n        }\r\n        this.dt += 0.1;\r\n        // console.log(this.pointList.length);\r\n    }\r\n    public RenderPost(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n\r\n}","import { AppCore } from '..';\r\nimport { Line } from '../Geometry/Line';\r\nexport class IO {\r\n    appCore: AppCore;\r\n    constructor(appCore: AppCore) {\r\n        this.appCore = appCore;\r\n    }\r\n    public GetGraph(line: Line[]) {\r\n        console.log('get Graph', line);\r\n\r\n\r\n        const myList = {};\r\n        let index = 0;\r\n        line.forEach((ln) => {\r\n            myList[index] = ln.ToJson();\r\n            index++;\r\n        });\r\n        console.log(myList);\r\n        // JSON.parse({line});\r\n    }\r\n}","import { Controller } from './Controller';\r\nimport { Render } from './Render/Render';\r\nimport { IO } from './IO';\r\nimport { DynamicGrid } from '..';\r\nexport class AppCore {\r\n    DynamicGrid: DynamicGrid;\r\n    width: number;\r\n    height: number;\r\n\r\n    controller: Controller;\r\n    render: Render;\r\n    io: IO;\r\n\r\n    frame = 0;\r\n    constructor(DynamicGrid: DynamicGrid, width: number, height: number) {\r\n        this.DynamicGrid = DynamicGrid;\r\n        this.Init(width - 100, height - 100);\r\n    }\r\n    public Init(width: number, height: number) {\r\n        this.io = new IO(this);\r\n        this.render = new Render(this);\r\n        this.controller = new Controller(this);\r\n    }\r\n    public MouseMove(x: number, y: number) {\r\n        this.controller.MouseMove(x, y);\r\n    }\r\n    public MouseDClick(x: number, y: number) {\r\n        this.controller.MouseDClick(x, y);\r\n    }\r\n    public MouseDown(x: number, y: number) {\r\n        this.controller.MouseDown(x, y);\r\n    }\r\n    public MouseLeftClick(x: number, y: number) {\r\n        this.controller.MouseLeftClick(x, y);\r\n    }\r\n    public MouseUp(x: number, y: number) {\r\n        this.controller.MouseUp(x, y);\r\n    }\r\n    public MouseDrag(x: number, y: number) {\r\n        this.controller.MouseDrag(x, y);\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        this.render.RenderPre(ctx);\r\n\r\n        // if (this.frame++ % 2 === 0) {\r\n        // this.MouseLeftClick(x, y);\r\n        if (this.controller.commander.autoPopulation) {\r\n            let theWidth = this.DynamicGrid.CanvasCore.canvas.width;\r\n            let theHeight = this.DynamicGrid.CanvasCore.canvas.height;\r\n            let xx = ((Math.random() * theWidth) - theWidth * 0.5) + 10;\r\n            let yy = ((Math.random() * theHeight) - theHeight * 0.5) + 10;\r\n            // console.log(xx, yy);\r\n            this.MouseLeftClick(xx, yy);\r\n        }\r\n\r\n    }\r\n}\r\n","import { DynamicGrid } from '..';\r\nexport class CanvasCore {\r\n    app: DynamicGrid;\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n\r\n    divLocalMain: HTMLElement;\r\n    divCanvas: HTMLElement;\r\n    divUI: HTMLElement;\r\n\r\n    ctx: CanvasRenderingContext2D;\r\n    timer: NodeJS.Timer | number;\r\n    click: boolean = false;\r\n    pressed: boolean = false;\r\n    prevent: boolean = false;\r\n    delay: number = 500;\r\n    down: boolean = false;\r\n    t: number = 0.0;\r\n    width: number;\r\n    height: number;\r\n    divConsole: HTMLElement;\r\n    constructor(app: DynamicGrid, width: number = 600, height: number = 400) {\r\n        this.app = app;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const host = document.getElementById(app.id);\r\n        if (!host) { return; } this.host = host;\r\n\r\n        this.InitCanvas();\r\n    }\r\n    InitCanvas() {\r\n        const divLocalMain = document.createElement('div');\r\n        if (!divLocalMain) { return; } this.divLocalMain = divLocalMain;\r\n        this.divLocalMain.style.display = 'flex';\r\n        // this.divLocalMain.style.width = '100%';\r\n        this.divLocalMain.style.width = this.width + 'px'; // this.host.clientWidth;\r\n        this.divLocalMain.style.height = this.height + 'px'; // this.host.clientHeight;\r\n        this.divLocalMain.style.margin = '10px';\r\n        this.divLocalMain.style.padding = '10px';\r\n        this.host.append(divLocalMain);\r\n\r\n        const divCanvas = document.createElement('div');\r\n        if (!divCanvas) { return; } this.divCanvas = divCanvas;\r\n        // this.divCanvas.style.width = '50%';\r\n        this.divLocalMain.append(divCanvas);\r\n\r\n        const canvas = document.createElement('canvas');\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            this.divCanvas.append(this.canvas);\r\n\r\n            this.canvas.width = this.width; // this.host.clientWidth;\r\n            this.canvas.height = this.height; // this.host.clientHeight;\r\n            this.canvas.style.backgroundColor = '#aaaaaa';\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.Init();\r\n            }\r\n        }\r\n    }\r\n    Init() {\r\n        this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        // this.ctx.scale(2, 2);\r\n        this.ctx.scale(1, 1);\r\n        this.EventBind();\r\n        this.Loop();\r\n    }\r\n    EventBind() {\r\n        this.divCanvas.onclick = (e: MouseEvent) => {\r\n            this.prevent = false;\r\n            this.timer = setTimeout(\r\n                () => {\r\n                    if (!this.prevent) {\r\n                        if (!this.click) { return; }\r\n                        this.MouseClickPre(e);\r\n                    }\r\n                    this.prevent = false;\r\n                },\r\n                this.delay);\r\n        };\r\n        this.divCanvas.ondblclick = (e: MouseEvent) => {\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.MouseDoubleClickPre(e);\r\n        };\r\n        this.divCanvas.addEventListener('wheel', (e: WheelEvent) => this.MouseWheel(e, e.deltaY));\r\n\r\n        // this.canvas.onclick = (e: MouseEvent) => {\r\n        //     this.timer = setTimeout(() => {\r\n        //         if (!this.prevent) { this.MouseClick(e); }\r\n        //         this.prevent = false;\r\n        //     }, this.delay);\r\n        // };\r\n        // this.canvas.ondblclick = (e: MouseEvent) => {\r\n        //     clearTimeout(this.timer as number);\r\n        //     this.prevent = true;\r\n        //     this.MouseDoubleClick(e);\r\n        // };\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.click = true;\r\n            this.pressed = true;\r\n            this.MouseDownPre(e);\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.pressed = false;\r\n            this.MouseUpPre(e);\r\n        };\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            if (this.pressed) { this.click = false; this.MouseDragPre(e); }\r\n            this.MouseMovePre(e);\r\n        };\r\n        window.onresize = (e: UIEvent) => this.Resize(e);\r\n\r\n    }\r\n    Resize(e: UIEvent) {\r\n        // console.log(e);\r\n        // this.canvas.width = this.divCanvas.clientWidth;\r\n        // this.canvas.height = this.divCanvas.clientHeight;\r\n    }\r\n    Loop() {\r\n        requestAnimationFrame(() => { this.Loop(); });\r\n\r\n        this.ctx.clearRect(-this.ctx.canvas.width * 0.5, -this.ctx.canvas.height * 0.5, this.ctx.canvas.width, this.ctx.canvas.height);\r\n\r\n        this.Grid(this.ctx);\r\n\r\n        this.ctx.fillStyle = '#dddddd';\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(-this.ctx.canvas.width * 0.5, -this.ctx.canvas.height * 0.5, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n        this.Render(this.ctx);\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        for (let i = -10; i < 10; ++i) {\r\n            for (let j = -10; j < 10; ++j) {\r\n                ctx.beginPath();\r\n                ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n                ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n        }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(ctx);\r\n    }\r\n    MouseClickPre(e: MouseEvent) {\r\n\r\n        this.MouseClick(e);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDoubleClickPre(e: MouseEvent) {\r\n\r\n        this.MouseDoubleClick(e);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDownPre(e: MouseEvent) {\r\n        this.MouseDown(e);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUpPre(e: MouseEvent) {\r\n\r\n        this.MouseUp(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMovePre(e: MouseEvent) {\r\n        // e.x = ((e.x - this.divCanvas.clientWidth) - this.canvas.width * 0.5) * 1;\r\n        // e.yPos = ((e.y - this.divCanvas.clientTop) - this.canvas.height * 0.5) * 1;\r\n        this.MouseMove(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDragPre(e: MouseEvent) {\r\n\r\n        this.MouseDrag(e);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        //\r\n    }\r\n    MouseWheel(e: WheelEvent, deltaY: number) {\r\n        // console.log(e);\r\n    }\r\n}","import { AppCore } from './AppCore';\r\nimport { NVector3 } from '../../../../../lib/NJSCore';\r\nimport { CanvasCore } from './CanvasCore';\r\nexport class DynamicGrid {\r\n    CanvasCore: CanvasCore;\r\n    appCore: AppCore;\r\n    t = 0.9;\r\n    id: string;\r\n    m: NVector3 = new NVector3(0, 0, 0);\r\n    constructor(id: string) {\r\n        this.id = id;\r\n        this.CanvasCore = new CanvasCore(this);\r\n\r\n        this.Init();\r\n        this.InitApp();\r\n    }\r\n    InitApp() {\r\n        this.appCore = new AppCore(this, this.CanvasCore.canvas.width, this.CanvasCore.canvas.height);\r\n    }\r\n    Init() {\r\n        this.CanvasCore.Render = (ctx: CanvasRenderingContext2D) => this.Render(ctx);\r\n        this.CanvasCore.MouseDown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.CanvasCore.MouseClick = (e: MouseEvent) => this.MouseClick(e);\r\n        this.CanvasCore.MouseDoubleClick = (e: MouseEvent) => this.MouseDoubleClick(e);\r\n        this.CanvasCore.MouseUp = (e: MouseEvent) => this.MouseUp(e);\r\n        this.CanvasCore.MouseMove = (e: MouseEvent) => this.MouseMove(e);\r\n        this.CanvasCore.MouseDrag = (e: MouseEvent) => this.MouseDrag(e);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.appCore.Render(ctx);\r\n\r\n        ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        ctx.beginPath();\r\n        ctx.arc(this.m.x, this.m.y, 2.5, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        // for (let i = -10; i < 10; ++i) {\r\n        //     for (let j = -10; j < 10; ++j) {\r\n        //         ctx.beginPath();\r\n        //         ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        //         ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n        //         ctx.closePath();\r\n        //         ctx.fill();\r\n        //     }\r\n        // }\r\n    }\r\n\r\n\r\n    mouseRemap(e: MouseEvent) {\r\n        const bounding = this.CanvasCore.ctx.canvas.getBoundingClientRect()\r\n        this.m.x = ((e.x - bounding.left) - this.CanvasCore.canvas.width * 0.5);\r\n        this.m.y = ((e.y - bounding.top) - this.CanvasCore.canvas.height * 0.5);\r\n    }\r\n\r\n    // .......................................................................................\r\n    MouseDown(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        this.appCore.MouseDown(this.m.x, this.m.y);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        this.appCore.MouseUp(this.m.x, this.m.y);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        this.appCore.MouseMove(this.m.x, this.m.y);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n\r\n        this.appCore.MouseDrag(this.m.x, this.m.y);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n\r\n        this.appCore.MouseLeftClick(this.m.x, this.m.y);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n\r\n        this.appCore.MouseDClick(this.m.x, this.m.y);\r\n    }\r\n}","import { DynamicGrid as DynamicGridA } from './DynamicGridA';\r\nexport class Implementation {\r\n    DynamicGridA: DynamicGridA;\r\n    constructor(id: string) {\r\n        this.DynamicGridA = new DynamicGridA(id);\r\n    }\r\n}","import { Implementation } from './Implementation';\r\nexport class AppCanvasTemplate {\r\n    implementation: Implementation;\r\n    static Init(id: string) {\r\n        const n = new AppCanvasTemplate(id);\r\n        n.Dummy();\r\n    }\r\n    constructor(id: string = 'SandBox') {\r\n        this.implementation = new Implementation(id);\r\n        console.log('AppCanvasTemplate 1000');\r\n    }\r\n    public Dummy() {\r\n        //\r\n    }\r\n}\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n\r\n    constructor(id: string) {\r\n        this.divHost = document.getElementById(id);\r\n\r\n        AppCanvasTemplate.Init(id)\r\n    }\r\n    public destroy() {\r\n        if (this.divHost) {\r\n            try {\r\n                while (this.divHost.firstChild) {\r\n                    this.divHost.removeChild(this.divHost.firstChild);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error in destroy method:', error);\r\n            }\r\n        } else {\r\n            console.warn('divHost is undefined in destroy method');\r\n        }\r\n    }\r\n}"],"names":["Point","static","render","x","y","constructor","z","v","r","fillColor","this","NVector3","pointList","push","Math","round","random","Render","ctx","fillStyle","beginPath","arc","PI","closePath","fill","Line","p0","p1","width","strokeColor","lineList","strokeStyle","moveTo","lineTo","stroke","ToJson","pt0","pt1","Circle","cv","radius","circleList","Controller","appCore","commander","mouse","capture","undefined","Commander","MouseMove","MouseDClick","ToggleAutoPopulation","MouseDown","io","GetGraph","MouseLeftClick","p","GetPoint","length","cp","FindPoint","ln","GetLine","GetCircleByLine","MouseUp","MouseDrag","controller","autoPopulation","renderer","dis","Number","MAX_SAFE_INTEGER","tv","i","theDis","Distance","mv","GetCircle","dt","RenderPre","RenderPost","IO","line","console","log","myList","index","forEach","AppCore","DynamicGrid","height","frame","Init","theWidth","CanvasCore","canvas","theHeight","xx","yy","app","host","divLocalMain","divCanvas","divUI","timer","click","pressed","prevent","delay","down","t","divConsole","document","getElementById","id","InitCanvas","createElement","style","display","margin","padding","append","backgroundColor","getContext","translate","scale","EventBind","Loop","onclick","e","setTimeout","MouseClickPre","ondblclick","clearTimeout","MouseDoubleClickPre","addEventListener","MouseWheel","deltaY","onmousedown","MouseDownPre","onmouseup","MouseUpPre","onmousemove","MouseDragPre","MouseMovePre","window","onresize","Resize","requestAnimationFrame","clearRect","Grid","rect","j","MouseClick","MouseDoubleClick","m","InitApp","mouseRemap","bounding","getBoundingClientRect","left","top","Implementation","DynamicGridA","AppCanvasTemplate","Dummy","implementation","Solution","divHost","destroy","firstChild","removeChild","error","warn"],"sourceRoot":""}