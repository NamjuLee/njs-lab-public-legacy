{"version":3,"file":"static/js/64854.2e685ccb.chunk.js","mappings":"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","sources":["njslab/Env/AppAlgorithmEnv/Implementation/AlgorithmImplementation/Core/ActiveCommandController.ts","njslab/Env/AppAlgorithmEnv/Implementation/AlgorithmImplementation/Core/GeometryCommon.ts","njslab/Env/AppAlgorithmEnv/Implementation/AlgorithmImplementation/Core/DefinitionIndeCanvasCore.ts","njslab/Env/AppAlgorithmEnv/Implementation/AlgorithmImplementation/Definition/GeometryInter.ts","njslab/Env/AppAlgorithmEnv/Implementation/AlgorithmImplementation/Definition/Template.ts","njslab/Env/AppAlgorithmEnv/Implementation/AlgorithmImplementation/Definition/Blank.ts","njslab/Env/AppAlgorithmEnv/Implementation/AlgorithmImplementation/index.ts"],"sourcesContent":["import { CLICK_TYPE } from '../../../lib';\r\n\r\nimport { MouseEventData } from '../../../Model/AppCoreWrapper/IOWrapper/EventInteraction/MouseInteraction';\r\n\r\nimport { AlgorithmImplementation } from '..';\r\n\r\nexport class ActiveCommandController {\r\n    scene: AlgorithmImplementation;\r\n\r\n    constructor(scene: AlgorithmImplementation) {\r\n        this.scene = scene;\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n\r\n        if (e.CLICK_TYPE === CLICK_TYPE.LEFT) {\r\n            this.MouseLeftClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MIDDLE) {\r\n            this.MouseMiddleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN_RIGHT) {\r\n            this.MouseRightClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOUBLE) {\r\n            this.MouseDoubleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MOVE) {\r\n            this.MouseMovePre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DRAG) {\r\n            this.MouseDragPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN) {\r\n            this.MouseDownPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.WHEEL) {\r\n            this.MouseWheelPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.UP) { this.MouseUpPre(e); return; }\r\n    }\r\n\r\n    // .......................................................\r\n    MouseDown(e: MouseEventData) {/* */ }\r\n    MouseDownPre(e: MouseEventData) {\r\n        this.scene.MouseDown(e.x, e.y);\r\n        this.MouseDown(e);\r\n    }\r\n    MouseLeftClick(e: MouseEventData) {/* */ }\r\n    MouseLeftClickPre(e: MouseEventData) {\r\n        this.scene.MouseLeftClick(e.x, e.y);\r\n        this.MouseLeftClick(e);\r\n    }\r\n    MouseMiddleClick(e: MouseEventData) {/* */ }\r\n    MouseMiddleClickPre(e: MouseEventData) {\r\n        this.scene.MouseMiddleClick(e.x, e.y);\r\n        this.MouseMiddleClick(e);\r\n    }\r\n    MouseRightClick(e: MouseEventData) { /* */ }\r\n    MouseRightClickPre(e: MouseEventData) {\r\n        this.scene.MouseRightClick(e.x, e.y);\r\n        this.MouseRightClick(e);\r\n    }\r\n    MouseUp(e: MouseEventData) { /* */ }\r\n    MouseUpPre(e: MouseEventData) {\r\n        this.scene.MouseUp(e.x, e.y);\r\n        this.MouseUp(e);\r\n\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {/* */ }\r\n    MouseDoubleClickPre(e: MouseEventData) {\r\n        this.scene.MouseDoubleClick(e.x, e.y);\r\n        this.MouseDoubleClick(e);\r\n    }\r\n    MouseMove(e: MouseEventData) {/* */ }\r\n    MouseMovePre(e: MouseEventData) {\r\n        this.scene.MouseMove(e.x, e.y);\r\n        this.MouseMove(e);\r\n    }\r\n    MouseDrag(e: MouseEventData) {/* */ }\r\n    MouseDragPre(e: MouseEventData) {\r\n        this.scene.MouseDrag(e.x, e.y);\r\n        this.MouseDrag(e);\r\n    }\r\n    MouseWheel(e: MouseEventData) {/* */ }\r\n    MouseWheelPre(e: MouseEventData) {\r\n        this.scene.MouseWheel(e.x, e.y, e.wheel);\r\n        // console.log(\"drag\");\r\n        this.MouseWheel(e);\r\n    }\r\n}","import { AlgorithmImplementation } from '..';\r\n\r\nexport class GeomeetryCommon {\r\n\r\n    scene: AlgorithmImplementation;\r\n\r\n    constructor(scene: AlgorithmImplementation) {\r\n        this.scene = scene;\r\n    }\r\n\r\n}","import { IndependentPanelCanvas } from '../../../lib';\r\n\r\nimport { AlgorithmImplementation } from '..';\r\nexport class DefinitionIndeCanvasCore {\r\n    scene: AlgorithmImplementation;\r\n    indeCanvas: IndependentPanelCanvas;\r\n    mOffX = -12;\r\n    mOffY = -12;\r\n    constructor(AlgorithmImplementation: AlgorithmImplementation) {\r\n        this.scene = AlgorithmImplementation;\r\n        this.scene.definitions.push(this);\r\n        this.InitIndeCanvas();\r\n    }\r\n    InitIndeCanvas() {\r\n        if (this.scene.implementation.app.needUI) {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 50, 50, 650, 350, true);\r\n        } else {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 1, -25, 650, 450, true);\r\n        }\r\n        this.indeCanvas.title = 'Title';\r\n        this.indeCanvas.btnHam.isHidden = true;\r\n        this.indeCanvas.btnMini.isHidden = true;\r\n        this.indeCanvas.RenderIndependentCanvas = (ctx: CanvasRenderingContext2D) => (this.RenderIndependentCanvas(ctx));\r\n    }\r\n    Dummy() {\r\n        //\r\n    }\r\n    get width() {\r\n        return this.indeCanvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.indeCanvas.canvas.height;\r\n    }\r\n    Init(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    MouseMove(x: number, y: number) { /* */ }\r\n    MouseMovePre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMove(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDown(x: number, y: number) { /* */ }\r\n    MouseDownPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDown(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseUp(x: number, y: number) { /* */ }\r\n    MouseUpPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseUp(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDrag(x: number, y: number) { /* */ }\r\n    MouseDragPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDrag(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseLeftClick(x: number, y: number) { /* */ }\r\n    MouseLeftClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseLeftClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseMiddleClick(x: number, y: number) { /* */ }\r\n    MouseMiddleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMiddleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseRightClick(x: number, y: number) { /* */ }\r\n    MouseRightClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseRightClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDoubleClick(x: number, y: number) { /* */ }\r\n    MouseDoubleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDoubleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) { /* */ }\r\n    MouseWheelPre(x: number, y: number, v: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseWheel(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY, v);\r\n    }\r\n\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n// import { NVector3 } from '../../../lib';\r\nimport { AlgorithmImplementation } from '..';\r\nexport class GeometryInter extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n    pts: number[][];\r\n    r: number = 5;\r\n    t: number = 0.0;\r\n    constructor(AlgorithmImplementation: AlgorithmImplementation) {\r\n        super(AlgorithmImplementation);\r\n        this.indeCanvas.title = 'Geometry Intersect';\r\n        this.Init();\r\n    }\r\n    public Init() { this.mouse = [0, 0]; }\r\n    public MouseMove(x: number, y: number) { this.mouse = [x, y]; }\r\n    public RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.t = 0.01;\r\n        ctx.beginPath();\r\n        ctx.arc(this.mouse[0], this.mouse[1], Math.sin(this.t) * 3 + this.r, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\nimport { AlgorithmImplementation } from '..';\r\nexport class Template extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n    pts: number[][];\r\n    r: number = 5;\r\n    t: number = 0.0;\r\n    constructor(AlgorithmImplementation: AlgorithmImplementation) {\r\n        super(AlgorithmImplementation);\r\n        this.indeCanvas.title = 'template';\r\n        this.Init();\r\n    }\r\n    public Init() { this.mouse = [0, 0]; }\r\n    public MouseMove(x: number, y: number) { this.mouse = [x, y]; }\r\n    public RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.t = 0.01;\r\n        ctx.beginPath();\r\n        ctx.arc(this.mouse[0], this.mouse[1], Math.sin(this.t) * 3 + this.r, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { AlgorithmImplementation } from '..';\r\n\r\nexport class Blank extends DefinitionIndeCanvasCore {\r\n    p: number[] = [0, 0];\r\n    constructor(AlgorithmImplementation: AlgorithmImplementation) {\r\n        super(AlgorithmImplementation);\r\n    }\r\n    public Init() {\r\n        //\r\n    }\r\n    public RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    public MouseDown(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n}","import { Canvas } from '../../Model/GraphicsCoreWrapper/CanvasWrapper/Canvas/Canvas';\r\nimport { ActiveCommandController } from './Core/ActiveCommandController';\r\nimport { GeomeetryCommon } from './Core/GeometryCommon';\r\nimport { DefinitionIndeCanvasCore } from './Core/DefinitionIndeCanvasCore';\r\n// import { BallBounce } from './Definition/BallBounce';\r\n// import { BallBounceClass } from './Definition/BallBounceClass';\r\n// // import { GaussianDistribution } from '../SceneVis/Definition/GaussianDistribution';\r\n\r\nimport { GeometryInter } from './Definition/GeometryInter';\r\nimport { Template } from './Definition/Template';\r\nimport { Blank } from './Definition/Blank';\r\n\r\nimport { Implementation } from '..';\r\nexport class AlgorithmImplementation {\r\n    implementation: Implementation;\r\n    canvas: Canvas;\r\n    activeCommandController: ActiveCommandController;\r\n    geomeetryCommon: GeomeetryCommon;\r\n\r\n    definitions: DefinitionIndeCanvasCore[] = [];\r\n\r\n    constructor(implementation: Implementation) {\r\n        this.implementation = implementation;\r\n        this.canvas = implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas;\r\n\r\n        this.activeCommandController = new ActiveCommandController(this);\r\n        this.geomeetryCommon = new GeomeetryCommon(this);\r\n        this.Init();\r\n        this.InitDefinition();\r\n    }\r\n    public Init() {\r\n        this.definitions = [];\r\n    }\r\n\r\n    get width() {\r\n        return this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.canvas.height;\r\n    }\r\n    InitDefinition() {\r\n        for (let d of this.definitions) { d.Init(this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.ctx); }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // for (let d of this.definitions) {d.Render(ctx); }\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseMovePre(x, y); }\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseLeftClickPre(x, y); }\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDownPre(x, y); }\r\n    }\r\n    MouseUp(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseUpPre(x, y); }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDragPre(x, y); }\r\n    }\r\n    MouseMiddleClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseMiddleClickPre(x, y); }\r\n    }\r\n    MouseRightClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseRightClickPre(x, y); }\r\n    }\r\n    MouseDoubleClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDoubleClickPre(x, y); }\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) {\r\n        for (let d of this.definitions) { d.MouseWheelPre(x, y, v); }\r\n    }\r\n    Dispose() {\r\n        this.definitions = [];\r\n    }\r\n    LoadDefinition(v: string) {\r\n        //\r\n    }\r\n    public InitPost() {\r\n        this.implementation.AddMenu('AlgorithmEnv', 'definition', 'blank', () => {\r\n            this.definitions = [];\r\n            const d0 = new Blank(this); d0.Dummy();\r\n        });\r\n        this.implementation.AddMenu('AlgorithmEnv', 'definition', 'Template', () => {\r\n            this.definitions = [];\r\n            const d0 = new Template(this); d0.Dummy();\r\n        });\r\n        this.implementation.AddMenu('AlgorithmEnv', 'definition', 'Geo Inter', () => {\r\n            this.definitions = [];\r\n            const d0 = new GeometryInter(this); d0.Dummy();\r\n        });\r\n\r\n    }\r\n}"],"names":["ActiveCommandController","constructor","scene","this","MouseEventController","e","CLICK_TYPE","MouseUpPre","MouseWheelPre","MouseDownPre","MouseDragPre","MouseMovePre","MouseDoubleClickPre","MouseRightClickPre","MouseMiddleClickPre","MouseLeftClickPre","MouseDown","x","y","MouseLeftClick","MouseMiddleClick","MouseRightClick","MouseUp","MouseDoubleClick","MouseMove","MouseDrag","MouseWheel","wheel","GeomeetryCommon","DefinitionIndeCanvasCore","AlgorithmImplementation","indeCanvas","mOffX","mOffY","definitions","push","InitIndeCanvas","implementation","app","needUI","IndependentPanelCanvas","viewController","NUIWrapper","NUI","independentPanelWrapper","title","btnHam","isHidden","btnMini","RenderIndependentCanvas","ctx","Dummy","width","canvas","height","Init","IsMouseInsidePanel","vec","HeadHeight","v","GeometryInter","super","mouse","pts","r","t","beginPath","arc","Math","sin","PI","stroke","Template","Blank","p","fillStyle","closePath","fill","activeCommandController","geomeetryCommon","model","graphicsCoreWrapper","canvasWrapper","InitDefinition","d","Render","Dispose","LoadDefinition","InitPost","AddMenu"],"sourceRoot":""}