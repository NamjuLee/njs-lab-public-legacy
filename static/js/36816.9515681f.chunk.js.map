{"version":3,"file":"static/js/36816.9515681f.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-pixel/01_pixel/index.ts","njslab/Workshop/workshop-vector/base/RendererCanvas.ts"],"sourcesContent":["import { RendererCanvas } from '../../workshop-vector/base/RendererCanvas';\r\n\r\nexport class Solution extends RendererCanvas {\r\n    t: number = 0.0;\r\n    pixelList: Pixel[] = []\r\n    constructor(id: string) {\r\n        super(document.getElementById(id) as HTMLDivElement);\r\n        this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        this.init();\r\n    }\r\n    public init() {\r\n        this.pixelList = []\r\n        const x = 10\r\n        const y = 10\r\n        const space = 50\r\n        const x0 = x * 0.5 * -space\r\n        const y0 = y * 0.5 * -space\r\n        \r\n        for(let j = 0 ; j <= y; j++) {\r\n            for(let i = 0 ; i <= x; i++) {\r\n                const x = i * space\r\n                const y = j * space\r\n\r\n                let pix = new Pixel(x0 + x, y0 + y, 0, space)\r\n                this.pixelList.push(pix)\r\n            }\r\n        }\r\n\r\n        this.start();\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n\r\n        this.pixelList.forEach((p: Pixel) => {\r\n            p.render(ctx);\r\n        })\r\n    }\r\n    public mouseMove(x: number, y: number): void {\r\n        //\r\n    }\r\n\r\n    public mouseClick(x: number, y: number): void {\r\n        //\r\n    }\r\n}\r\n\r\nclass Pixel {\r\n    vec: Vector3\r\n    space: number = 0\r\n    constructor(x: number, y: number, z: number, space) {\r\n        this.vec = new Vector3(x,y,z)\r\n        this.space = space;\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n\r\n        ctx.beginPath()\r\n        ctx.rect(this.vec.x - this.space * 0.5, this.vec.y - this.space * 0.5, this.space, this.space)\r\n        ctx.closePath()\r\n        ctx.stroke()\r\n\r\n        ctx.fillStyle = '#333';\r\n        ctx.beginPath();\r\n        ctx.arc(this.vec.x, this.vec.y, this.vec.r, 0, Math.PI * 2.0);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}\r\n\r\nclass Vector3 {\r\n    public x: number = 0.0;\r\n    public y: number = 0.0;\r\n    public z: number = 0.0;\r\n    public r: number = 3\r\n    constructor(x,y,z) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n}","export class RendererCanvas {\r\n    public divHost: HTMLDivElement;\r\n    public canvas: HTMLCanvasElement;\r\n    public ctx: CanvasRenderingContext2D;\r\n    public isDown: boolean = false;\r\n    public debugMode: boolean = false;\r\n    public isStatic: boolean = false;\r\n    public m: number[] = [0,0];\r\n\r\n    private prevent: boolean = false;\r\n    private delay: number = 250;\r\n    private timer: NodeJS.Timer | number;\r\n    private isDrag: boolean = false;\r\n\r\n    constructor(div: HTMLDivElement) {\r\n        this.divHost = div;\r\n        const bounding = this.divHost.getBoundingClientRect();\r\n        this.canvas = document.createElement('canvas') as HTMLCanvasElement;\r\n        // this.canvas.style.position = 'absolute';\r\n        this.canvas.width = bounding.width;\r\n        this.canvas.height = bounding.height;\r\n        this.divHost.appendChild(this.canvas);\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        this.canvas.onclick = (e: MouseEvent) => {\r\n            this.timer = setTimeout(() => {\r\n                if (!this.prevent) {\r\n                    this.mouseClick(e.offsetX, e.offsetY);\r\n                }\r\n                this.isDrag = false;\r\n                this.prevent = false;\r\n            },\r\n                this.delay);\r\n        };\r\n        this.canvas.onwheel = (e: WheelEvent) => {\r\n            this.mouseWheel(e);\r\n        };\r\n        this.canvas.ondblclick = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.mouseDoubleClick(e.offsetX, e.offsetY);\r\n        };\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            this.isDown = true;\r\n            this.mouseDown(e.offsetX, e.offsetY);\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            this.isDown = false;\r\n            this.isDrag = false;\r\n            this.mouseUp(e.offsetX, e.offsetY);\r\n        };\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            this.mouseUpdate(e.offsetX, e.offsetY);\r\n            if (this.isDown) {\r\n                this.isDrag = true;\r\n                this.prevent = true;\r\n                this.mouseDrag(e.offsetX, e.offsetY);\r\n            } else {\r\n                this.mouseMove(e.offsetX, e.offsetY);\r\n            }\r\n        };\r\n        window.addEventListener('resize', this.resize);\r\n        // this.loop(this.ctx);\r\n    }\r\n    public start() {\r\n        this.loop(this.ctx);\r\n    }\r\n    private resize = () => {\r\n        const bounding = this.divHost.getBoundingClientRect();\r\n        this.canvas.width = bounding.width;\r\n        this.canvas.height = bounding.height;\r\n    }\r\n    public destroy() {\r\n        window.removeEventListener('resize', this.resize);\r\n        this.isStatic = true;\r\n        try {\r\n            while (this.divHost !== undefined && this.divHost.lastElementChild !== undefined) {\r\n                this.divHost.removeChild(this.divHost.lastElementChild);\r\n            }\r\n        } catch (error) { }\r\n        this.destroyPost();\r\n    }\r\n    public destroyPost() {\r\n\r\n    }\r\n    public loop(ctx: CanvasRenderingContext2D) {\r\n        if (this.isStatic) { return; }\r\n        requestAnimationFrame(() => { this.loop(ctx); });\r\n        ctx.clearRect(ctx.canvas.width * -0.5, ctx.canvas.height * -0.5, ctx.canvas.width, ctx.canvas.height);\r\n        this.render(ctx);\r\n        this.renderPost();\r\n    }\r\n    public renderPost() {\r\n        this.renderMouse(this.ctx, this.m[0], this.m[1]);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        // Binding needed\r\n    }\r\n    public mouseClick(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('click'); }\r\n    }\r\n    public mouseDoubleClick(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('d-click'); }\r\n    }\r\n    public mouseDown(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('down'); }\r\n    }\r\n    public mouseUp(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('up'); }\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('move'); }\r\n    }\r\n    public mouseDrag(x: number, y: number) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('drag'); }\r\n    }\r\n    public mouseWheel(v: WheelEvent) {\r\n        // Binding needed\r\n        if (this.debugMode) { console.log('wheel', v); }\r\n    }\r\n    public renderMouse(ctx: CanvasRenderingContext2D, x: number, y: number) {\r\n        ctx.fillStyle = '#f00';\r\n        ctx.beginPath();\r\n        ctx.arc(this.m[0], this.m[1], 3, 0, Math.PI * 2.0)\r\n        ctx.fillText(`x: ${this.m[0]}, y:${this.m[1]}`,this.m[0] - 15, this.m[1] - 8)\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    public mouseUpdate(x: number, y: number): void {\r\n        this.m[0] = Math.floor(x - this.canvas.width * 0.5);\r\n        this.m[1] = Math.floor(y - this.canvas.height * 0.5);\r\n    }\r\n}"],"names":["Solution","RendererCanvas","constructor","id","super","document","getElementById","t","pixelList","this","ctx","translate","canvas","width","height","init","j","i","pix","Pixel","x","y","push","start","render","forEach","p","mouseMove","mouseClick","z","space","vec","Vector3","beginPath","rect","closePath","stroke","fillStyle","arc","r","Math","PI","fill","div","divHost","isDown","debugMode","isStatic","m","prevent","delay","timer","isDrag","resize","bounding","getBoundingClientRect","createElement","appendChild","getContext","onclick","e","setTimeout","offsetX","offsetY","onwheel","mouseWheel","ondblclick","mouseUpdate","clearTimeout","mouseDoubleClick","onmousedown","mouseDown","onmouseup","mouseUp","onmousemove","mouseDrag","window","addEventListener","loop","destroy","removeEventListener","undefined","lastElementChild","removeChild","error","destroyPost","requestAnimationFrame","clearRect","renderPost","renderMouse","console","log","v","fillText","floor"],"sourceRoot":""}