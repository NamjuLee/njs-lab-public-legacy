{"version":3,"file":"static/js/22455.f8ef9bba.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneVis/Core/ActiveCommandController.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneVis/Core/GeometryCommon.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneVis/Core/DefinitionCore.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneVis/Definition/GaussianDistribution.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneVis/index.ts"],"sourcesContent":["import { CLICK_TYPE } from '../../../lib';\r\n\r\nimport { MouseEventData } from '../../../Model/AppCoreWrapper/IOWrapper/EventInteraction/MouseInteraction';\r\n\r\nimport { SceneVis } from '..';\r\n\r\nexport class ActiveCommandController {\r\n    scene: SceneVis;\r\n\r\n    constructor(scene: SceneVis) {\r\n        this.scene = scene;\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        if (e.CLICK_TYPE === CLICK_TYPE.LEFT) {\r\n            this.MouseLeftClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MIDDLE) {\r\n            this.MouseMiddleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN_RIGHT) {\r\n            this.MouseRightClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOUBLE) {\r\n            this.MouseDoubleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MOVE) {\r\n            this.MouseMovePre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DRAG) {\r\n            this.MouseDragPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN) {\r\n            this.MouseDownPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.WHEEL) {\r\n            this.MouseWheelPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.UP) { this.MouseUpPre(e); return; }\r\n    }\r\n\r\n    // .......................................................\r\n    MouseDown(e: MouseEventData) {/* */ }\r\n    MouseDownPre(e: MouseEventData) {\r\n        this.scene.MouseDown(e.x, e.y);\r\n        this.MouseDown(e);\r\n    }\r\n    MouseLeftClick(e: MouseEventData) {/* */ }\r\n    MouseLeftClickPre(e: MouseEventData) {\r\n        this.scene.MouseLeftClick(e.x, e.y);\r\n        this.MouseLeftClick(e);\r\n    }\r\n    MouseMiddleClick(e: MouseEventData) {/* */ }\r\n    MouseMiddleClickPre(e: MouseEventData) {\r\n        this.scene.MouseMiddleClick(e.x, e.y);\r\n        this.MouseMiddleClick(e);\r\n    }\r\n    MouseRightClick(e: MouseEventData) { /* */ }\r\n    MouseRightClickPre(e: MouseEventData) {\r\n        this.scene.MouseRightClick(e.x, e.y);\r\n        this.MouseRightClick(e);\r\n    }\r\n    MouseUp(e: MouseEventData) { /* */ }\r\n    MouseUpPre(e: MouseEventData) {\r\n        this.scene.MouseUp(e.x, e.y);\r\n        this.MouseUp(e);\r\n\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {/* */ }\r\n    MouseDoubleClickPre(e: MouseEventData) {\r\n        this.scene.MouseDoubleClick(e.x, e.y);\r\n        this.MouseDoubleClick(e);\r\n    }\r\n    MouseMove(e: MouseEventData) {/* */ }\r\n    MouseMovePre(e: MouseEventData) {\r\n        this.scene.MouseMove(e.x, e.y);\r\n        this.MouseMove(e);\r\n    }\r\n    MouseDrag(e: MouseEventData) {/* */ }\r\n    MouseDragPre(e: MouseEventData) {\r\n        this.scene.MouseDrag(e.x, e.y);\r\n        this.MouseDrag(e);\r\n    }\r\n    MouseWheel(e: MouseEventData) {/* */ }\r\n    MouseWheelPre(e: MouseEventData) {\r\n        this.scene.MouseWheel(e.wheel);\r\n        // console.log(\"drag\");\r\n        this.MouseWheel(e);\r\n    }\r\n\r\n}","import { SceneVis } from '..';\r\n\r\nexport class GeomeetryCommon {\r\n    scene: SceneVis;\r\n\r\n    constructor(scene: SceneVis) {\r\n        this.scene = scene;\r\n    }\r\n\r\n}","\r\nimport { SceneVis } from '..';\r\n\r\nexport class DefinitionCore {\r\n    scene: SceneVis;\r\n    constructor(sceneVis: SceneVis) {\r\n        this.scene = sceneVis;\r\n        this.scene.definitions.push(this);\r\n    }\r\n    get width() {\r\n        return this.scene.width;\r\n     }\r\n    get height() {\r\n         return this.scene.height;\r\n    }\r\n    Init(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        //\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        //\r\n    }\r\n    MouseUp(x: number, y: number) {\r\n        //\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        //\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        //\r\n    }\r\n    MouseMiddleClick(x: number, y: number) {\r\n        //\r\n    }\r\n    MouseRightClick(x: number, y: number) {\r\n        //\r\n    }\r\n    MouseDoubleClick(x: number, y: number) {\r\n        //\r\n    }\r\n    MouseWheel(v: number) {\r\n        //\r\n    }\r\n}","import { DefinitionCore } from '../Core/DefinitionCore';\r\n\r\nimport { SceneVis } from '../index';\r\n\r\nimport { NDataUtility } from '../../../lib';\r\n\r\nexport class GaussianDistribution extends DefinitionCore {\r\n\r\n    mouse: number[] = [0, 0];\r\n    pts: number[][];\r\n\r\n    scale: number = 30;\r\n\r\n    dataVis: number[][][] = [];\r\n\r\n    linspace: number[];\r\n\r\n    v: number = 1.0;\r\n\r\n    constructor(sceneVis: SceneVis) {\r\n        super(sceneVis);\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.linspace = NDataUtility.Linspace(-5, 5, 100);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.dataVis = [];\r\n        this.pts = [];\r\n\r\n        // const inData: number[][] = [ [0, 1], [0, 2], [1, 0.5], [1, 0.75], [1, 1], [1, 2]];\r\n        const inData: number[][] = [[0, 1 + this.v], [0, 2 + this.v], [1, 0.5 + this.v], [1, 0.75 + this.v], [1, 1 + this.v], [1, 2 + this.v]];\r\n\r\n        for (let d of inData) {\r\n            const array = [];\r\n            for (let x of this.linspace) {\r\n                const y = NDataUtility.GetGaussian(x, d[0], d[1]);\r\n                array.push([x * this.scale, y * -this.scale]);\r\n            }\r\n            this.dataVis.push(array);\r\n        }\r\n\r\n        let i = 0;\r\n        for (let d of this.dataVis) {\r\n            for (let p of d) {\r\n                let col = [50, 50, 50, 1];\r\n                col[0] = this.Distance(p[0] + 300, p[1] + 150, this.mouse[0], this.mouse[1]);\r\n                ctx.fillStyle = `rgba(${col[0]},${col[1]},${col[2]},${col[3]})`;\r\n\r\n                ctx.beginPath();\r\n                ctx.arc(p[0] + 300, p[1] + 150 * i, 2, 0, 3.14 * 2);\r\n                ctx.fill();\r\n            }\r\n            i++;\r\n        }\r\n        ctx.fillStyle = `rgba(0,0,0,1)`;\r\n        ctx.beginPath();\r\n        ctx.arc(this.mouse[0], this.mouse[1], 2, 0, 3.14 * 2);\r\n        ctx.fill();\r\n    }\r\n    Distance(x0: number, y0: number, x1: number, y1: number): number {\r\n        return Math.sqrt((x0 - x1) * (x0 - x1) + (y0 - y1) * (y0 - y1));\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    MouseWheel(v: number) {\r\n        this.v += v * 0.001;\r\n    }\r\n}","\r\nimport { Canvas } from '../../Model/GraphicsCoreWrapper/CanvasWrapper/Canvas/Canvas';\r\n\r\nimport { ActiveCommandController } from './Core/ActiveCommandController';\r\nimport { GeomeetryCommon } from './Core/GeometryCommon';\r\n\r\nimport { DefinitionCore } from './Core/DefinitionCore';\r\n\r\nimport { Implementation } from '..';\r\n\r\n// import { Blank } from './Definition/Blank';\r\n// import { BallBounce } from './Definition/BallBounce';\r\n// import { BallBounceClass } from './Definition/BallBounceClass';\r\nimport { GaussianDistribution } from './Definition/GaussianDistribution';\r\n// import { CircleGrid } from './Definition/CircleGrid';\r\n// import { CircleGridAttractors1 } from './Definition/CircleGridAttractors1';\r\n// import { CircleGridAttractors2 } from './Definition/CircleGridAttractors2';\r\n\r\nexport class SceneVis {\r\n    implementation: Implementation;\r\n    canvas: Canvas;\r\n    activeCommandController: ActiveCommandController;\r\n    geomeetryCommon: GeomeetryCommon;\r\n\r\n    definitions: DefinitionCore[] = [];\r\n\r\n    constructor(implementation: Implementation) {\r\n        this.implementation = implementation;\r\n        this.canvas = implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas;\r\n\r\n        this.activeCommandController = new ActiveCommandController(this);\r\n        this.geomeetryCommon = new GeomeetryCommon(this);\r\n        this.Init();\r\n        this.InitDefinition();\r\n    }\r\n    public Init() {\r\n        //\r\n    }\r\n    get width() {\r\n        return this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.canvas.height;\r\n    }\r\n    InitDefinition() {\r\n        for (let d of this.definitions) { d.Init(this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.ctx); }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        for (let d of this.definitions) { d.Render(ctx); }\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseMove(x, y); }\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseLeftClick(x, y); }\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDown(x, y); }\r\n    }\r\n    MouseUp(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseUp(x, y); }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDrag(x, y); }\r\n    }\r\n    MouseMiddleClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseMiddleClick(x, y); }\r\n    }\r\n    MouseRightClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseRightClick(x, y); }\r\n    }\r\n    MouseDoubleClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDoubleClick(x, y); }\r\n    }\r\n    MouseWheel(v: number) {\r\n        for (let d of this.definitions) { d.MouseWheel(v); }\r\n    }\r\n    Dispose() {\r\n        //\r\n    }\r\n    LoadDefinition(v: string) {\r\n        this.definitions = [];\r\n        // if (v === 'Blank') { const d0 = new Blank(this); console.log(d0); }\r\n        if (v === 'GaussianDistribution') { const d0 = new GaussianDistribution(this); console.log(d0); }\r\n        // if (v === 'BallBounce') { const d0 = new BallBounce(this); console.log(d0); }\r\n        // if (v === 'BallBounceClass') { const d0 = new BallBounceClass(this); console.log(d0); }\r\n        // if (v === 'CircleGrid') { const d0 = new CircleGrid(this); console.log(d0); }\r\n        // if (v === 'CircleGridAttractors1') { const d0 = new CircleGridAttractors1(this); console.log(d0); }\r\n        // if (v === 'CircleGridAttractors2') { const d0 = new CircleGridAttractors2(this); console.log(d0); }\r\n    }\r\n}"],"names":["ActiveCommandController","constructor","scene","this","MouseEventController","e","CLICK_TYPE","MouseUpPre","MouseWheelPre","MouseDownPre","MouseDragPre","MouseMovePre","MouseDoubleClickPre","MouseRightClickPre","MouseMiddleClickPre","MouseLeftClickPre","MouseDown","x","y","MouseLeftClick","MouseMiddleClick","MouseRightClick","MouseUp","MouseDoubleClick","MouseMove","MouseDrag","MouseWheel","wheel","GeomeetryCommon","DefinitionCore","sceneVis","definitions","push","width","height","Init","ctx","Render","v","GaussianDistribution","super","mouse","pts","scale","dataVis","linspace","NDataUtility","inData","d","array","i","p","col","Distance","fillStyle","beginPath","arc","fill","x0","y0","x1","y1","Math","sqrt","SceneVis","implementation","canvas","activeCommandController","geomeetryCommon","app","model","graphicsCoreWrapper","canvasWrapper","InitDefinition","Dispose","LoadDefinition","d0","console","log"],"sourceRoot":""}