"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[23150],{23150:(e,t,r)=>{r.r(t),r.d(t,{getGeometryServiceURL:()=>S,projectGeometry:()=>w});var o=r(42265),i=r(10064),n=r(70032),a=r(76200),s=r(25243),l=r(77981),u=r(23084),c=r(35594),f=r(27366),g=r(46784),m=r(49861),p=(r(63780),r(69912));let d=class extends g.wq{constructor(e){super(e),this.geometries=null,this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const e=this.geometries.map((e=>e.toJSON())),t=this.geometries[0],r={};return r.outSR=this.outSpatialReference.wkid||JSON.stringify(this.outSpatialReference.toJSON()),r.inSR=t.spatialReference.wkid||JSON.stringify(t.spatialReference.toJSON()),r.geometries=JSON.stringify({geometryType:(0,l.Ji)(t),geometries:e}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),null!=this.transformForward&&(r.transformForward=this.transformForward),r}};(0,f._)([(0,m.Cb)()],d.prototype,"geometries",void 0),(0,f._)([(0,m.Cb)({json:{read:{source:"outSR"}}})],d.prototype,"outSpatialReference",void 0),(0,f._)([(0,m.Cb)()],d.prototype,"transformation",void 0),(0,f._)([(0,m.Cb)()],d.prototype,"transformForward",void 0),d=(0,f._)([(0,p.j)("esri.rest.support.ProjectParameters")],d);const h=d,y=(0,s.se)(h);async function S(){var e,t;let r,a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,s=arguments.length>1?arguments[1]:void 0;if(o.Z.geometryServiceUrl)return o.Z.geometryServiceUrl;if(!a)throw new i.Z("internal:geometry-service-url-not-configured");r="portal"in a?a.portal||n.Z.getDefault():a,await r.load({signal:s});const l=null===(e=r.helperServices)||void 0===e||null===(t=e.geometry)||void 0===t?void 0:t.url;if(!l)throw new i.Z("internal:geometry-service-url-not-configured");return l}async function w(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3?arguments[3]:void 0;const n=await S(r,o),s=new h;s.geometries=[e],s.outSpatialReference=t;const f=await async function(e,t,r){t=y(t);const o=(0,u.en)(e),i={...o.query,f:"json",...t.toJSON()},n=t.outSpatialReference,s=(0,l.Ji)(t.geometries[0]),f=(0,u.lA)(i,r);return(0,a.default)(o.path+"/project",f).then((e=>{let{data:{geometries:t}}=e;return(0,c.o)(t,s,n)}))}(n,s,{signal:o});if(f&&Array.isArray(f)&&1===f.length)return f[0];throw new i.Z("internal:geometry-service-projection-failed")}}}]);
//# sourceMappingURL=23150.12817edb.chunk.js.map