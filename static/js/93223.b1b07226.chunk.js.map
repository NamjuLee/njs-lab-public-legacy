{"version":3,"file":"static/js/93223.b1b07226.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-graph-dynamics/base/GraphDynamics.ts","njslab/Workshop/workshop-graph-dynamics/base/index.ts"],"sourcesContent":["// import { NVector3 } from '../../../../lib/NJSCore';\r\n\r\nexport class GraphDynamics {\r\n\r\n    public width: number;\r\n    public height: number;\r\n    public nodes: Node[] = [];\r\n    public edges: Edge[] = [];\r\n    public dt: number = 0.0;\r\n\r\n    public mouse: NVector3 = new NVector3(0, 0);\r\n\r\n    public damping = 0.96;\r\n    public gravity = -0.032;\r\n    public timeStep = 0.16; // 0.316; // 0.18; // 0.26;\r\n    public groundZ = -9.26;\r\n\r\n    public capture: Node | undefined = undefined;\r\n\r\n    constructor(x: number, y: number, width: number, height: number) {\r\n\r\n        this.init(x, y, width, height);\r\n    }\r\n    public init(x: number, y: number, width: number, height: number) {\r\n        this.initGridR(x, y, width, height);\r\n        this.nodes[0].fixed = true;\r\n        this.nodes[9].fixed = true;\r\n        this.nodes[this.nodes.length - 1].fixed = true;\r\n        this.nodes[this.nodes.length - 1 - 9].fixed = true;\r\n    }\r\n    public updateOptionA(v: number) {\r\n        this.damping = v * 0.1;\r\n        // console.log(this.damping, 'damping');\r\n    }\r\n    public updateOptionB(v: number) {\r\n        this.timeStep = v * 0.05;\r\n        // console.log(this.timeStep, 'timeStep');\r\n    }\r\n    public updateOptionC(v: number) {\r\n        // this.gravity = v * 0.1;\r\n        // console.log(this.gravity, 'gravity');\r\n    }\r\n    public initGridR(xS: number, yS: number, width: number, height: number, xNum: number = 10, yNum: number = 10) {\r\n        const xOff = 0;\r\n        const yOff = 0;\r\n        const xInterval = (width / xNum) + 1;\r\n        const yInterval = (height / yNum) + 1;\r\n        const nbase = this.nodes.length;\r\n        for (let i = 0; i < yNum; ++i) {\r\n            for (let j = 0; j < xNum; ++j) {\r\n                let x = xS + xOff + xInterval * j;\r\n                let y = yS + yOff + yInterval * i;\r\n                let z = 0;\r\n                this.addNode(new NVector3(x, y, z), NVector3.zero(), 1.0);\r\n                // this.nodes.push(new Node(new NVector3(x, y), new NVector3(0, 0), 1));\r\n            }\r\n        }\r\n        for (let j = 0; j < yNum; ++j) {\r\n            for (let i = 0; i < xNum; ++i) {\r\n                let k = j * xNum + i;\r\n\r\n                if (i !== 0) { this.addEdge(this.nodes[nbase + k - 1], this.nodes[nbase + k]); }\r\n                if (j !== 0) { this.addEdge(this.nodes[nbase + k - xNum], this.nodes[nbase + k]); }\r\n\r\n                // if (i !== 0 && j !== 0) {this.AddEdge(this.nodes[nbase + k - xNum - 1], this.nodes[nbase + k]); }\r\n\r\n                // if (i !== 0 && j !== yNum - 1) {this.AddEdge(this.nodes[nbase + k + xNum - 1], this.nodes[nbase + k]); }\r\n            }\r\n        }\r\n    }\r\n    public clear() {\r\n        this.nodes = [];\r\n        this.edges = [];\r\n    }\r\n    public addNode(_p0: NVector3, _u0: NVector3, _mass: number): Node {\r\n        const n = new Node(_p0, _u0, _mass);\r\n        this.nodes.push(n);\r\n        return n;\r\n    }\r\n    public addEdge(n0: Node, n1: Node): Edge {\r\n        const e = new Edge(n0, n1);\r\n        this.edges.push(e);\r\n        return e;\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        // console.log('move', x, y);\r\n    }\r\n    public mouseDClick(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        const n = this.findNode(this.mouse);\r\n        if (n) {\r\n            n.fixed = !n.fixed;\r\n        }\r\n        // console.log('click', x, y);\r\n    }\r\n    public mouseDown(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        this.capture = this.findNode(this.mouse);\r\n        if (this.capture) {\r\n            this.capture.fixed = true;\r\n            this.capture.isCapture = true;\r\n        }\r\n        // console.log('down', x, y, this.capture);\r\n    }\r\n    public mouseLeftClick(x: number, y: number) {\r\n        // console.log('click', x, y, this.capture);\r\n    }\r\n    public mouseUp(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        if (this.capture) {\r\n            this.capture.isCapture = false;\r\n            this.capture = undefined;\r\n        }\r\n        // console.log('up', x, y);\r\n    }\r\n    public mouseDrag(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        if (this.capture) {\r\n            this.capture.v.x = x;\r\n            this.capture.v.y = y;\r\n        }\r\n        // console.log('drag', x, y);\r\n    }\r\n    public render(ctx?: CanvasRenderingContext2D) {\r\n\r\n        this.dt += 0.1;\r\n        this.move(this.mouse.x, this.mouse.y, this.mouse.z, this.damping, 0, this.timeStep, this.groundZ, 1);\r\n\r\n        for (let e of this.edges) { e.render(ctx); }\r\n        for (let n of this.nodes) { n.render(ctx, this.mouse); }\r\n    }\r\n    public findNode(mv: NVector3) {\r\n        for (let n of this.nodes) {\r\n            if (n.v.distance(mv) < n.m + 3) {\r\n                return n;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    public move(x: number, y: number, z: number, damping: number, g: number = 0, dt: number = 0.01, groundZ: number = -10, step: number = 1) {\r\n        const atr = new NVector3(x, y, z);\r\n        for (let i = 0; i < step; ++i) {\r\n            for (const n of this.nodes) {\r\n                \r\n                // const dv: NVector3 = atr - n.p;\r\n                //  L = dv.Length;\r\n                // dv.Unitize();\r\n                // n.f = dv * Math.Exp(-0.1 * L * L) * 0.1 + Vector3d.ZAxis * g;\r\n\r\n                const dv = NVector3.sub(atr, n.v);\r\n                const L = dv.length();\r\n                dv.normalize();\r\n                n.f = NVector3.add(NVector3.scale(dv, Math.exp(-0.1 * L * L) * 0.1), (NVector3.scale(NVector3.YAxis(), g)));\r\n            }\r\n            for (const e of this.edges) { e.applySpringForce(); }\r\n            for (const n of this.nodes) { n.move(dt, damping, groundZ); }\r\n        }\r\n    }\r\n}\r\nexport class Edge {\r\n    n0: Node;\r\n    n1: Node;\r\n    public targetLength: number = 0.0;\r\n    public springConstant: number = 0.8; // 1; // 0.8;\r\n    constructor(n0: Node, n1: Node) {\r\n        this.n0 = n0;\r\n        this.n1 = n1;\r\n        this.targetLength = this.n0.v.distance(this.n1.v) * 1;\r\n    }\r\n    render(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#ff0000';\r\n\r\n        if (NVector3.distance(this.n0.v, this.n1.v) < this.targetLength * 2) {\r\n            ctx.strokeStyle = '#0000ff';\r\n            // this.n0.isShort = true;\r\n            // this.n1.isShort = true;\r\n        }\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.n0.v.x, this.n0.v.y);\r\n        ctx.lineTo(this.n1.v.x, this.n1.v.y);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n    public applySpringForce() {\r\n        // Vector3d dp = n1.p - n0.p;\r\n        // double dist = dp.Length;\r\n        // dp.Unitize();\r\n\r\n        // n0.f += dp * (dist - TargetLength) * SpringConstant;\r\n        // n1.f -= dp * (dist - TargetLength) * SpringConstant;\r\n\r\n        // const dp: NVector3 = NVector3.Sub(this.n1.p, this.n0.p);\r\n        // const dist:number = dp.Length();\r\n        // dp.Unitize();\r\n\r\n        let dp = NVector3.sub(this.n1.v, this.n0.v);\r\n        let dist = dp.length();\r\n        dp.normalize();\r\n\r\n        const length = NVector3.scale(dp, (dist - this.targetLength) * this.springConstant);\r\n        this.n0.f = NVector3.add(this.n0.f, length);\r\n        this.n1.f = NVector3.sub(this.n1.f, length);\r\n\r\n    }\r\n}\r\nexport class Node {\r\n    public nNodes: Node[] = [];\r\n    public v: NVector3 = NVector3.zero();\r\n    public f: NVector3 = NVector3.zero();\r\n    public u: NVector3 = NVector3.zero();\r\n    public m: number = 0.0;\r\n\r\n    public fixed: boolean = false;\r\n    public isCapture: boolean = false;\r\n\r\n    constructor(_p0: NVector3, _u0: NVector3, _mass: number) {\r\n        this.v = new NVector3(_p0.x, _p0.y, _p0.z);\r\n        this.u = new NVector3(_u0.x, _u0.y, _u0.z);\r\n        this.m = _mass;\r\n    }\r\n    public move(dt: number, damping: number, groundZ: number = 0.0) {\r\n        if (this.fixed || this.isCapture) { return; }\r\n\r\n        // u *= damping;\r\n        // u += f * (dt / m);\r\n        // p += u * dt;\r\n\r\n        // this.u = NVector3.Scale(this.u , damping );\r\n        // this.u = NVector3.Add( this.u,  NVector3.Scale(this.f, dt / this.m));\r\n        // this.p  = NVector3.Add(this.p, NVector3.Scale(this.u, dt));\r\n\r\n        this.u.scale(damping);\r\n        this.u.add(NVector3.scale(this.f, dt / this.m));\r\n\r\n        const v = NVector3.scale(this.u, dt);\r\n        // this.v.Add( );\r\n        this.v.x += v.x;\r\n        this.v.y += v.y;\r\n\r\n        // if (this.p.y < groundZ) {\r\n        //     this.p.y = groundZ;\r\n        //     if (this.u.y < 0.0) {this.u.y = -this.u.y; }\r\n        // }\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D, m: NVector3) {\r\n        ctx.beginPath();\r\n\r\n        if (m.distance(this.v) < this.m + 3) {\r\n            ctx.fillStyle = '#000000';\r\n            ctx.arc(this.v.x, this.v.y, this.m + 6, 0.0, Math.PI * 2);\r\n        } else {\r\n            ctx.fillStyle = '#f90000';\r\n            ctx.arc(this.v.x, this.v.y, this.m + 3, 0.0, Math.PI * 2);\r\n        }\r\n\r\n        if (this.fixed) {\r\n            ctx.fillStyle = '#000000';\r\n            ctx.arc(this.v.x, this.v.y, this.m + 7.5, 0.0, Math.PI * 2);\r\n        }\r\n\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}\r\n\r\n\r\nexport class NVector3 { \r\n    public static zero(): NVector3 {\r\n        return new NVector3(0, 0, 0);\r\n    }\r\n    public static YAxis(): NVector3 {\r\n        return new NVector3(0, 1, 0);\r\n    }\r\n    public static distance(v0: NVector3, v1: NVector3): number {\r\n        return Math.sqrt((v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z));\r\n    }\r\n    public static add(v0: NVector3, v1: NVector3): NVector3 {\r\n        return new NVector3(v0.x + v1.x, v0.y + v1.y, v0.z + v1.z);\r\n      }\r\n    public static sub(v0: NVector3, v1: NVector3): NVector3 {\r\n        return new NVector3(v0.x - v1.x, v0.y - v1.y, v0.z - v1.z);\r\n    }\r\n    public static scale(v: NVector3, s: number): NVector3 {\r\n        return new NVector3(v.x * s, v.y * s, v.z * s);\r\n    }\r\n    public x: number = 0;\r\n    public y: number = 0;\r\n    public z: number = 0;\r\n    constructor(x: number, y: number, z: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n      }\r\n    public distance(v: NVector3): number {\r\n        return NVector3.distance(new NVector3(this.x, this.y, this.z), v);\r\n    }\r\n    public add(v: NVector3): NVector3 {\r\n        this.x += v.x;\r\n        this.y += v.y;\r\n        this.z += v.z;\r\n        return this;\r\n    }\r\n    public scale(v: number): NVector3 {\r\n        this.x *= v;\r\n        this.y *= v;\r\n        this.z *= v;\r\n        return this;\r\n    }\r\n    public length(): number {\r\n        const len = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n        if (len < 0.00001) {\r\n          return 0.00001;\r\n        }\r\n        return len;\r\n    }\r\n    public normalize(): NVector3 {\r\n        let len: number = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n        if (len < 0.0001) {\r\n          return this;\r\n        }\r\n        this.x = this.x / len;\r\n        this.y = this.y / len;\r\n        this.z = this.z / len;\r\n        return this;\r\n      }\r\n}","import { RendererCanvas } from '../../../../lib';\r\nimport { GraphDynamics, NVector3 } from './GraphDynamics';\r\n\r\nexport class Solution extends RendererCanvas {\r\n\r\n    public graph: GraphDynamics;\r\n    public m = new NVector3(0,0,0)\r\n    \r\n    constructor(id: string) {\r\n        super(document.getElementById(id) as HTMLDivElement);\r\n        this.canvas.style.position = 'absolute';\r\n        \r\n        this.init();\r\n    }\r\n    public init() {\r\n        // TODO\r\n        this.graph = new GraphDynamics(100, 100, 500, 500);\r\n        this.mouseClick(100, 100);\r\n        \r\n        this.start()\r\n    }\r\n    public populate() {\r\n        const x = Math.random() * this.canvas.width;\r\n        const y = Math.random() * this.canvas.height;\r\n        this.mouseClick(x, y);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        this.graph.render(ctx);\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(this.m.x, this.m.y, 3, 0, 3.14 * 2)\r\n        ctx.closePath();\r\n        ctx.fillStyle = '#888';\r\n        ctx.fill();\r\n\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n        this.graph.mouseDown(x, y)\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n        this.graph.mouseLeftClick(x, y)\r\n    }\r\n    public mouseMove(x: number, y: number): void {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n        this.graph.mouseMove(x,y)\r\n    }\r\n    public mouseDrag(x: number, y: number): void {\r\n        this.graph.mouseDrag(x, y)\r\n    }\r\n}\r\n\r\n"],"names":["GraphDynamics","constructor","x","y","width","height","nodes","edges","dt","mouse","NVector3","damping","gravity","timeStep","groundZ","capture","undefined","this","init","initGridR","fixed","length","updateOptionA","v","updateOptionB","updateOptionC","xS","yS","xNum","yNum","xInterval","yInterval","nbase","i","j","z","addNode","zero","k","addEdge","clear","_p0","_u0","_mass","n","Node","push","n0","n1","e","Edge","mouseMove","mouseDClick","findNode","mouseDown","isCapture","mouseLeftClick","mouseUp","mouseDrag","render","ctx","move","mv","distance","m","g","step","atr","dv","sub","L","normalize","f","add","scale","Math","exp","YAxis","applySpringForce","targetLength","springConstant","strokeStyle","beginPath","moveTo","lineTo","closePath","stroke","dp","dist","nNodes","u","fillStyle","arc","PI","fill","v0","v1","sqrt","s","len","Solution","RendererCanvas","id","super","document","getElementById","graph","canvas","style","position","mouseClick","start","populate","random"],"sourceRoot":""}