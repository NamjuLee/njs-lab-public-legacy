{"version":3,"file":"static/js/3044.c4543c65.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-mapping/UrbanNetwork/01_Interaction.ts"],"sourcesContent":["import { RendererJSAPI } from '../../../../lib'\r\n\r\nimport { distanceTo } from 'njscore';\r\n\r\nexport class Solution extends RendererJSAPI {\r\n\r\n    pts: Point[] = [];\r\n    lns: Line[] = [];\r\n\r\n    path: any;\r\n\r\n    previousPt: Point | undefined = undefined;\r\n\r\n    ptStart: InteractivePoint;\r\n    ptEnd: InteractivePoint;\r\n    captured: InteractivePoint | undefined = undefined;\r\n\r\n    constructor(id: string) {\r\n        super(id);\r\n    }\r\n    public initPost(): void {\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        // disable interaction with a base map\r\n        // https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html\r\n        this.mView.on(\"drag\", (event) => {\r\n            event.stopPropagation();\r\n        });\r\n        this.mView.navigation.mouseWheelZoomEnabled = false;\r\n        this.center(-71.102761, 42.366946);\r\n        this.zoom(15)\r\n\r\n\r\n        this.ptStart = new InteractivePoint(315, 90);\r\n        this.ptEnd = new InteractivePoint(1268, 1120);\r\n\r\n        // !! you should execute it for rendering\r\n        this.start();\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n\r\n\r\n        this.lns.map( (l: Line) => {\r\n            return l.render(ctx, this.time);\r\n        });\r\n        this.pts.map( (p: Point) => {\r\n            return  p.render(ctx, this.time);\r\n        });\r\n\r\n\r\n        if (this.path) {\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(this.path[0].x, this.path[0].y);\r\n            for(let i = 1; i < this.path.length; ++i) {\r\n                ctx.lineTo(this.path[i].x, this.path[i].y);\r\n            }\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeStyle = '#f00';\r\n            ctx.stroke();\r\n\r\n        }\r\n\r\n        this.ptStart.Render(ctx, this.time);\r\n        this.ptEnd.Render(ctx, this.time);\r\n\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n        if (this.ptStart.inInside(x,y)) {\r\n            this.captured = this.ptStart;\r\n            return;\r\n        }\r\n        if (this.ptEnd.inInside(x,y)) {\r\n            this.captured = this.ptEnd;\r\n            return;\r\n        }\r\n       \r\n    }\r\n    public mouseUp(x: number, y: number): void {\r\n        this.captured = undefined;\r\n    }\r\n    public mouseDrag(x: number, y: number): void {\r\n        // TODO\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n\r\n        if (this.previousPt === undefined) {\r\n            const p = new Point(x, y);\r\n            this.previousPt = p\r\n            this.pts.push(p);\r\n        } else {\r\n            const p = new Point(x, y);\r\n            this.pts.push(p);\r\n            \r\n            this.lns.push(new Line(this.previousPt, p));\r\n            this.previousPt = undefined;\r\n\r\n\r\n       }\r\n\r\n\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n        if (this.captured) {\r\n        //     console.log(x, y)\r\n            this.captured.x = x;\r\n            this.captured.y = y;\r\n        }    \r\n    }\r\n}\r\n\r\n\r\nexport class InteractivePoint {\r\n    x: number;\r\n    y: number;\r\n    r: number = 10;\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D, t: number) {\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, Math.sin(t) + this.r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fillStyle = '#00f'\r\n        ctx.fill();\r\n\r\n        ctx.strokeStyle = '#fff'\r\n        ctx.stroke();\r\n    }\r\n    public inInside(x: number, y: number) {\r\n        if (distanceTo(x, y, 0, this.x, this.y, 0) < this.r + 2){\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Line {\r\n    public p0: Point;\r\n    public p1: Point;\r\n    public lineWidth = 2;\r\n    constructor(p0: Point, p1: Point) {\r\n        this.p0 = p0;\r\n        this.p1 = p1;\r\n    }\r\n    render(ctx: CanvasRenderingContext2D, t: number) {\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0.x, this.p0.y);\r\n        ctx.lineTo(this.p1.x, this.p1.y);\r\n        ctx.closePath();\r\n\r\n        ctx.lineWidth = this.lineWidth;\r\n        ctx.strokeStyle = '#fff';\r\n        ctx.stroke();\r\n\r\n    }\r\n}\r\nexport class Point {\r\n    x: number;\r\n    y: number;\r\n    z: number = 0;\r\n    r: number = 6;\r\n    constructor(x: number, y: number)  {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    render(ctx: CanvasRenderingContext2D, t: number) {\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, Math.sin(t) + this.r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fillStyle = '#0f0'\r\n        ctx.fill();\r\n        ctx.strokeStyle = '#fff'\r\n        ctx.stroke();\r\n    }\r\n}"],"names":["Solution","RendererJSAPI","constructor","id","super","pts","lns","path","previousPt","undefined","ptStart","ptEnd","captured","initPost","this","mView","on","event","stopPropagation","navigation","mouseWheelZoomEnabled","center","zoom","InteractivePoint","start","render","ctx","map","l","time","p","beginPath","moveTo","x","y","i","length","lineTo","lineWidth","strokeStyle","stroke","Render","mouseDown","inInside","mouseUp","mouseDrag","mouseClick","Point","push","Line","mouseMove","r","t","arc","Math","sin","PI","closePath","fillStyle","fill","distanceTo","p0","p1","z"],"sourceRoot":""}