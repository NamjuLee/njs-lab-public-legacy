"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[40210],{40210:(t,i,s)=>{s.r(i),s.d(i,{Solution:()=>x});var e=s(458);class h{constructor(t,i,s){this.graph=void 0,this.pos=void 0,this.u=void 0,this.f=void 0,this.m=5,this.r=17,this.colorFill="#0099ff",this.MAX_VELOCITY=5.5,this.velocity=void 0,this.listCollision=[],this.isCaptured=!1,this.graph=t,this.pos=new e.h9(i,s)}Update(t){this.isCaptured||this.UpdatePos(t)}UpdatePos(t){const i=e.h9.Sub(this.pos,t),s=e.h9.Normalize(i),h=e.h9.CalculateFalloff(this.pos,t,1,.01);this.velocity=e.h9.Scale(s,h),this.UpdateCollision(),this.velocity.y+=1.1,this.pos=e.h9.Add(this.pos,this.velocity),this.UpdatePosInScreen(this.graph.graphSystem.CanvasCore.ctx)}UpdateCollision(){for(let t=0;t<this.listCollision.length;++t){const i=e.h9.Sub(this.pos,this.listCollision[t].pos),s=e.h9.Normalize(i),h=e.h9.CalculateFalloff(this.pos,this.listCollision[t].pos,1,.01);this.velocity=e.h9.Scale(s,h),this.pos=e.h9.Add(this.pos,this.velocity)}}IsMouseHover(t,i){return e.h9.Distance(this.pos,new e.h9(t,i))<this.r}Render(t){t.lineWidth=1,t.strokeStyle="#000000",this.isCaptured?t.fillStyle="#ff0000":t.fillStyle=this.colorFill,t.beginPath(),t.arc(this.pos.x,this.pos.y,this.r,0,2*Math.PI),t.closePath(),t.fill(),t.stroke()}UpdatePosInScreen(t){const i=10;this.pos.y>.5*t.canvas.height-i&&(this.pos.y=.5*t.canvas.height-i),this.pos.x<.5*-t.canvas.width+i&&(this.pos.x=.5*-t.canvas.width+i),this.pos.x>.5*t.canvas.width-i&&(this.pos.x=.5*t.canvas.width-i)}}class o{static AABBvsAABB(t,i){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1.5;return!(t.vec.x+s+.5*t.width<i.vec.x-s-.5*i.width||t.vec.x-s-.5*t.width>i.vec.x+s+.5*i.width)&&!(t.vec.y+s+.5*t.height<i.vec.y-s-.5*i.height||t.vec.y-s-.5*t.height>i.vec.y+s+.5*i.height)}constructor(t,i,s,h){this.graph=void 0,this.vec=void 0,this.width=void 0,this.height=void 0,this.listCollision=[],this.fixed=!1,this.velocity=void 0,this.hover=!1,this.graph=t,this.vec=new e.h9(i.x,i.y),this.width=s,this.height=h}Overlaps(t){return o.AABBvsAABB(this,t)}Update(){this.fixed||this.UpdatePos()}UpdatePos(){for(let t=0;t<this.listCollision.length;++t){const i=e.h9.Sub(this.vec,this.listCollision[t].vec),s=e.h9.Normalize(i);this.velocity=e.h9.Scale(s,.3+Math.random()),this.vec=e.h9.Add(this.vec,this.velocity)}}Render(t){this.hover?t.fillStyle="#0ff000":t.fillStyle="#ff0000",this.fixed&&(t.fillStyle="#000000"),t.strokeStyle="#000000",t.beginPath(),t.rect(this.vec.x-.5*this.width,this.vec.y-.5*this.height,this.width,this.height),t.closePath(),t.fill(),t.lineWidth=1,t.stroke()}}class a{constructor(t){this.graphSystem=void 0,this.particles=[],this.listRect=[],this.offset=1,this.m=void 0,this.t=1,this.num=50,this.capture=void 0,this.graphSystem=t,this.Init()}Init(){this.m=new e.h9(0,0),this.particles=[],this.listRect=[];for(let t=0;t<this.num;++t)this.listRect.push(new o(this,new e.h9(-.5+Math.random(),-.5+Math.random()),20+20*Math.random(),5+10*Math.random()))}UpdateNumber(t){this.num=t,this.Init(),console.log(t,"num")}UpdateOffset(t){this.offset=t,console.log(t,"off")}MouseDown(t,i){for(let s=0;s<this.particles.length;++s)this.particles[s].IsMouseHover(t,i)&&(this.capture=this.particles[s],this.capture.isCaptured=!0)}MouseUp(){this.capture&&(this.capture.isCaptured=!1),this.capture=void 0}MouseLeftClick(t,i){this.particles.push(new h(this,t,i))}MouseMove(t,i){this.m.x=t,this.m.y=i}MouseDrag(t,i){this.capture&&(this.capture.pos.x=t,this.capture.pos.y=i)}Render(t){this.UpdateCollisionRect(),this.UpdateCollision();for(let i=0;i<this.listRect.length;++i)this.listRect[i].Update();for(let i=0;i<this.listRect.length;++i)this.listRect[i].Render(t);0===(5&this.t)&&this.particles.length<10&&this.particles.push(new h(this,0,0)),this.t+=1}UpdateCollisionRect(){for(let t=0;t<this.listRect.length;++t){let i=this.listRect[t];i.listCollision=[];let s=!1;for(let t=0;t<this.listRect.length;++t){let e=this.listRect[t];i!==e&&o.AABBvsAABB(i,e,this.offset)&&(i.listCollision.push(e),s=!0)}i.hover=s}}UpdateCollision(){for(let t=0;t<this.particles.length;++t){let i=this.particles[t];i.listCollision=[];for(let t=0;t<this.particles.length;++t){let s=this.particles[t];i!==s&&i.pos.Distance(s.pos)<i.r+s.r&&i.listCollision.push(s)}}}}class n{constructor(t){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:400,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:250;this.graphSystem=void 0,this.canvas=void 0,this.host=void 0,this.divLocalMain=void 0,this.divCanvas=void 0,this.divUI=void 0,this.ctx=void 0,this.timer=void 0,this.click=!1,this.pressed=!1,this.prevent=!1,this.delay=500,this.down=!1,this.t=0,this.width=void 0,this.height=void 0,this.graphSystem=t,this.width=i,this.height=s;const e=document.getElementById(t.id);e&&(this.host=e,this.InitCanvas())}InitCanvas(){const t=document.createElement("div");if(!t)return;this.divLocalMain=t,this.divLocalMain.style.display="flex",this.divLocalMain.style.width=this.width+"px",this.divLocalMain.style.height=this.height+"px",this.divLocalMain.style.margin="10px",this.divLocalMain.style.padding="10px",this.host.append(t);const i=document.createElement("div");if(!i)return;this.divCanvas=i,this.divLocalMain.append(i);const s=document.createElement("canvas");if(s){this.canvas=s,this.divCanvas.append(this.canvas),this.canvas.width=this.width,this.canvas.height=this.height,this.canvas.style.backgroundColor="#aaaaaa";const t=this.canvas.getContext("2d");t&&(this.ctx=t,this.InitUI(),this.Init())}}InitUI(){const t=document.createElement("div");if(!t)return;this.divUI=t,this.divLocalMain.append(t),this.divUI.style.marginLeft="10px",this.divUI.style.width="100%";const i=document.createElement("button");i.textContent="reset",i.onclick=()=>{this.graphSystem.InitGraph()},this.divUI.append(i);let s=document.createElement("input");s.oninput=()=>{const t=+s.value;this.graphSystem.graph.UpdateNumber(t)},s.type="range",s.min="10",s.max="200.0",s.value="50",this.divUI.append(s);let e=document.createElement("input");e.oninput=()=>{const t=+e.value;this.graphSystem.graph.UpdateOffset(t)},e.type="range",e.min="1",e.max="10.0",e.value="4",this.divUI.append(e);const h=document.createElement("p");h&&(this.divUI.append(h),h.style.width="max-content",h.innerHTML="1. clikc to reset! <br> ",h.innerHTML+="2. first slider for num of Nodes! <br> ",h.innerHTML+="3. second slider for offset! <br> ")}Init(){this.ctx.translate(.5*this.ctx.canvas.width,.5*this.ctx.canvas.height),this.ctx.scale(1,1),this.EventBind(),this.Loop()}EventBind(){this.canvas.onclick=t=>{this.prevent=!1,this.timer=setTimeout((()=>{if(!this.prevent){if(!this.click)return;this.MouseClick(t)}this.prevent=!1}),this.delay)},this.canvas.ondblclick=t=>{clearTimeout(this.timer),this.prevent=!0,this.MouseDoubleClick(t)},this.canvas.addEventListener("wheel",(t=>this.MouseWheel(t,t.deltaY))),this.canvas.onmousedown=t=>{this.click=!0,this.pressed=!0,this.MouseDown(t)},this.canvas.onmouseup=t=>{this.pressed=!1,this.MouseUp(t)},this.canvas.onmousemove=t=>{this.pressed&&(this.click=!1,this.MouseDrag(t)),this.MouseMove(t)},window.onresize=t=>this.Resize(t)}Resize(t){}Loop(){requestAnimationFrame((()=>{this.Loop()})),this.ctx.clearRect(.5*-this.ctx.canvas.width,.5*-this.ctx.canvas.height,this.ctx.canvas.width,this.ctx.canvas.height),this.ctx.fillStyle="#dddddd",this.ctx.beginPath(),this.ctx.rect(.5*-this.ctx.canvas.width,.5*-this.ctx.canvas.height,this.ctx.canvas.width,this.ctx.canvas.height),this.ctx.closePath(),this.ctx.fill(),this.Render(this.ctx)}Render(t){}MouseClick(t){}MouseDoubleClick(t){}MouseDown(t){}MouseUp(t){}MouseMove(t){}MouseDrag(t){}MouseWheel(t,i){}}class l{constructor(t){this.CanvasCore=void 0,this.graph=void 0,this.t=.9,this.id=void 0,this.m=new e.h9(0,0,0),this.id=t,this.CanvasCore=new n(this),this.Init(),this.InitGraph()}Init(){this.CanvasCore.Render=t=>this.Render(t),this.CanvasCore.MouseDown=t=>this.MouseDown(t),this.CanvasCore.MouseClick=t=>this.MouseClick(t),this.CanvasCore.MouseDoubleClick=t=>this.MouseDoubleClick(t),this.CanvasCore.MouseUp=t=>this.MouseUp(t),this.CanvasCore.MouseMove=t=>this.MouseMove(t),this.CanvasCore.MouseDrag=t=>this.MouseDrag(t)}InitGraph(){this.graph=new a(this)}Render(t){this.graph.Render(t),t.fillStyle="rgba(255, 0, 0, 0.9)",t.beginPath(),t.arc(this.m.x,this.m.y,2.5,0,2*Math.PI),t.closePath(),t.fill()}Grid(t){for(let i=-10;i<10;++i)for(let s=-10;s<10;++s)t.beginPath(),t.fillStyle="rgba(255, 0, 0, 0.9)",t.arc(i,s,.05,0,2*Math.PI),t.closePath(),t.fill()}mouseRemap(t){this.m.x=t.offsetX-.5*this.CanvasCore.canvas.width,this.m.y=t.offsetY-.5*this.CanvasCore.canvas.height}MouseDown(t){this.mouseRemap(t),this.graph.MouseDown(this.m.x,this.m.y)}MouseUp(t){this.mouseRemap(t),this.graph.MouseUp()}MouseMove(t){this.mouseRemap(t),this.graph.MouseMove(this.m.x,this.m.y)}MouseDrag(t){this.mouseRemap(t),this.graph.MouseDrag(this.m.x,this.m.y)}MouseClick(t){this.mouseRemap(t),this.graph.MouseLeftClick(this.m.x,this.m.y)}MouseDoubleClick(t){this.mouseRemap(t)}}class c{constructor(t,i,s){this.graph=void 0,this.pos=void 0,this.u=void 0,this.f=void 0,this.m=5,this.r=17,this.colorFill="#0099ff",this.MAX_VELOCITY=5.5,this.velocity=void 0,this.listCollision=[],this.isCaptured=!1,this.graph=t,this.pos=new e.h9(i,s)}Update(t){this.isCaptured||this.UpdatePos(t)}UpdatePos(t){const i=e.h9.Sub(this.pos,t),s=e.h9.Normalize(i),h=e.h9.CalculateFalloff(this.pos,t,1,.01);this.velocity=e.h9.Scale(s,h),this.UpdateCollision(),this.velocity.y+=1.1,this.pos=e.h9.Add(this.pos,this.velocity),this.UpdatePosInScreen(this.graph.graphSystem.CanvasCore.ctx)}UpdateCollision(){for(let t=0;t<this.listCollision.length;++t){const i=e.h9.Sub(this.pos,this.listCollision[t].pos),s=e.h9.Normalize(i),h=e.h9.CalculateFalloff(this.pos,this.listCollision[t].pos,1,.01);this.velocity=e.h9.Scale(s,h),this.pos=e.h9.Add(this.pos,this.velocity)}}IsMouseHover(t,i){return e.h9.Distance(this.pos,new e.h9(t,i))<this.r}Render(t){t.lineWidth=1,t.strokeStyle="#000000",this.isCaptured?t.fillStyle="#ff0000":t.fillStyle=this.colorFill,t.beginPath(),t.arc(this.pos.x,this.pos.y,this.r,0,2*Math.PI),t.closePath(),t.fill(),t.stroke()}UpdatePosInScreen(t){const i=10;this.pos.y>.5*t.canvas.height-i&&(this.pos.y=.5*t.canvas.height-i),this.pos.x<.5*-t.canvas.width+i&&(this.pos.x=.5*-t.canvas.width+i),this.pos.x>.5*t.canvas.width-i&&(this.pos.x=.5*t.canvas.width-i)}}class r{static AABBvsAABB(t,i){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1.5;return!(t.vec.x+s+.5*t.width<i.vec.x-s-.5*i.width||t.vec.x-s-.5*t.width>i.vec.x+s+.5*i.width)&&!(t.vec.y+s+.5*t.height<i.vec.y-s-.5*i.height||t.vec.y-s-.5*t.height>i.vec.y+s+.5*i.height)}constructor(t,i,s,h){this.graph=void 0,this.vec=void 0,this.width=void 0,this.height=void 0,this.listCollision=[],this.fixed=!1,this.velocity=void 0,this.hover=!1,this.graph=t,this.vec=new e.h9(i.x,i.y),this.width=s,this.height=h}Overlaps(t){return r.AABBvsAABB(this,t)}Update(){this.fixed||(this.UpdatePos(),this.UpdatePosInScreen(this.graph.graphSystem.CanvasCore.ctx))}UpdatePos(){for(let t=0;t<this.listCollision.length;++t){const i=e.h9.Sub(this.vec,this.listCollision[t].vec),s=e.h9.Normalize(i);this.velocity=e.h9.Scale(s,Math.random()*this.graph.optiLevel),this.vec=e.h9.Add(this.vec,this.velocity)}}Render(t){this.hover?t.fillStyle="#0ff000":t.fillStyle="#ff0000",this.fixed&&(t.fillStyle="#000000"),t.strokeStyle="#000000",t.beginPath(),t.rect(this.vec.x-.5*this.width,this.vec.y-.5*this.height,this.width,this.height),t.closePath(),t.fill(),t.lineWidth=1,t.stroke()}UpdatePosInScreen(t){const i=10;this.vec.y>.5*t.canvas.height-i&&(this.vec.y=.5*t.canvas.height-i),this.vec.x-.5*this.width-i<.5*-t.canvas.width+i&&(this.vec.x=.5*-t.canvas.width+i+.5*this.width+i),this.vec.x+.5*this.width+i>.5*t.canvas.width-i&&(this.vec.x=.5*t.canvas.width-i-.5*this.width-i)}}class d{constructor(t){this.graphSystem=void 0,this.particles=[],this.listRect=[],this.offset=1,this.optiLevel=3,this.m=void 0,this.t=1,this.num=50,this.capture=void 0,this.graphSystem=t,this.Init()}Init(){this.m=new e.h9(0,0),this.particles=[],this.listRect=[];for(let i=0;i<this.num;++i)this.listRect.push(new r(this,new e.h9(-.5+Math.random(),-.5+Math.random()),20+20*Math.random(),5+10*Math.random()));let t=new r(this,new e.h9(-50,-50),50,50);t.fixed=!0,this.listRect.push(t),t=new r(this,new e.h9(50,20),40,20),t.fixed=!0,this.listRect.push(t)}UpdateNumber(t){this.num=t,this.Init(),console.log(t,"num")}UpdateOffset(t){this.offset=t,console.log(t,"off")}UpdateOptiLevel(t){this.optiLevel=t,this.Init(),console.log(t,"opti")}MouseDown(t,i){for(let s=0;s<this.particles.length;++s)this.particles[s].IsMouseHover(t,i)&&(this.capture=this.particles[s],this.capture.isCaptured=!0)}MouseUp(){this.capture&&(this.capture.isCaptured=!1),this.capture=void 0}MouseLeftClick(t,i){this.particles.push(new c(this,t,i))}MouseMove(t,i){this.m.x=t,this.m.y=i}MouseDrag(t,i){this.capture&&(this.capture.pos.x=t,this.capture.pos.y=i)}Render(t){this.UpdateCollisionRect(),this.UpdateCollision();for(let i=0;i<this.listRect.length;++i)this.listRect[i].Update();for(let i=0;i<this.listRect.length;++i)this.listRect[i].Render(t);0===(5&this.t)&&this.particles.length<10&&this.particles.push(new c(this,0,0)),this.t+=1}UpdateCollisionRect(){for(let t=0;t<this.listRect.length;++t){let i=this.listRect[t];i.listCollision=[];let s=!1;for(let t=0;t<this.listRect.length;++t){let e=this.listRect[t];i!==e&&r.AABBvsAABB(i,e,this.offset)&&(i.listCollision.push(e),s=!0)}i.hover=s}}UpdateCollision(){for(let t=0;t<this.particles.length;++t){let i=this.particles[t];i.listCollision=[];for(let t=0;t<this.particles.length;++t){let s=this.particles[t];i!==s&&i.pos.Distance(s.pos)<i.r+s.r&&i.listCollision.push(s)}}}}class v{constructor(t){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:400,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:250;this.graphSystem=void 0,this.canvas=void 0,this.host=void 0,this.divLocalMain=void 0,this.divCanvas=void 0,this.divUI=void 0,this.ctx=void 0,this.timer=void 0,this.click=!1,this.pressed=!1,this.prevent=!1,this.delay=500,this.down=!1,this.t=0,this.width=void 0,this.height=void 0,this.graphSystem=t,this.width=i,this.height=s;const e=document.getElementById(t.id);e&&(this.host=e,this.InitCanvas())}InitCanvas(){const t=document.createElement("div");if(!t)return;this.divLocalMain=t,this.divLocalMain.style.display="flex",this.divLocalMain.style.width=this.width+"px",this.divLocalMain.style.height=this.height+"px",this.divLocalMain.style.margin="10px",this.divLocalMain.style.padding="10px",this.host.append(t);const i=document.createElement("div");if(!i)return;this.divCanvas=i,this.divLocalMain.append(i);const s=document.createElement("canvas");if(s){this.canvas=s,this.divCanvas.append(this.canvas),this.canvas.width=this.width,this.canvas.height=this.height,this.canvas.style.backgroundColor="#aaaaaa";const t=this.canvas.getContext("2d");t&&(this.ctx=t,this.InitUI(),this.Init())}}InitUI(){const t=document.createElement("div");if(!t)return;this.divUI=t,this.divLocalMain.append(t),this.divUI.style.marginLeft="10px",this.divUI.style.width="100%";const i=document.createElement("button");i.textContent="reset",i.onclick=()=>{this.graphSystem.InitGraph()},this.divUI.append(i);let s=document.createElement("input");s.oninput=()=>{const t=+s.value;this.graphSystem.graph.UpdateNumber(t)},s.type="range",s.min="10",s.max="200.0",s.value="50",this.divUI.append(s);let e=document.createElement("input");e.oninput=()=>{const t=+e.value;this.graphSystem.graph.UpdateOffset(t)},e.type="range",e.min="1",e.max="10.0",e.value="4",this.divUI.append(e);let h=document.createElement("input");h.oninput=()=>{const t=+h.value;this.graphSystem.graph.UpdateOptiLevel(t)},h.type="range",h.min="1",h.max="8",h.value="4",this.divUI.append(h);const o=document.createElement("p");o&&(this.divUI.append(o),o.style.width="max-content",o.innerHTML="1. clikc to reset! <br> ",o.innerHTML+="2. first slider for num of Nodes! <br> ",o.innerHTML+="3. second slider for offset! <br> ",o.innerHTML+="4. third slider for Opti level! <br> ")}Init(){this.ctx.translate(.5*this.ctx.canvas.width,.5*this.ctx.canvas.height),this.ctx.scale(1,1),this.EventBind(),this.Loop()}EventBind(){this.canvas.onclick=t=>{this.prevent=!1,this.timer=setTimeout((()=>{if(!this.prevent){if(!this.click)return;this.MouseClick(t)}this.prevent=!1}),this.delay)},this.canvas.ondblclick=t=>{clearTimeout(this.timer),this.prevent=!0,this.MouseDoubleClick(t)},this.canvas.addEventListener("wheel",(t=>this.MouseWheel(t,t.deltaY))),this.canvas.onmousedown=t=>{this.click=!0,this.pressed=!0,this.MouseDown(t)},this.canvas.onmouseup=t=>{this.pressed=!1,this.MouseUp(t)},this.canvas.onmousemove=t=>{this.pressed&&(this.click=!1,this.MouseDrag(t)),this.MouseMove(t)},window.onresize=t=>this.Resize(t)}Resize(t){}Loop(){requestAnimationFrame((()=>{this.Loop()})),this.ctx.clearRect(.5*-this.ctx.canvas.width,.5*-this.ctx.canvas.height,this.ctx.canvas.width,this.ctx.canvas.height),this.ctx.fillStyle="#dddddd",this.ctx.beginPath(),this.ctx.rect(.5*-this.ctx.canvas.width,.5*-this.ctx.canvas.height,this.ctx.canvas.width,this.ctx.canvas.height),this.ctx.closePath(),this.ctx.fill(),this.Render(this.ctx)}Render(t){}MouseClick(t){}MouseDoubleClick(t){}MouseDown(t){}MouseUp(t){}MouseMove(t){}MouseDrag(t){}MouseWheel(t,i){}}class p{constructor(t){this.CanvasCore=void 0,this.graph=void 0,this.t=.9,this.id=void 0,this.m=new e.h9(0,0,0),this.id=t,this.CanvasCore=new v(this),this.Init(),this.InitGraph()}Init(){this.CanvasCore.Render=t=>this.Render(t),this.CanvasCore.MouseDown=t=>this.MouseDown(t),this.CanvasCore.MouseClick=t=>this.MouseClick(t),this.CanvasCore.MouseDoubleClick=t=>this.MouseDoubleClick(t),this.CanvasCore.MouseUp=t=>this.MouseUp(t),this.CanvasCore.MouseMove=t=>this.MouseMove(t),this.CanvasCore.MouseDrag=t=>this.MouseDrag(t)}InitGraph(){this.graph=new d(this)}Render(t){this.graph.Render(t),t.fillStyle="rgba(255, 0, 0, 0.9)",t.beginPath(),t.arc(this.m.x,this.m.y,2.5,0,2*Math.PI),t.closePath(),t.fill()}Grid(t){for(let i=-10;i<10;++i)for(let s=-10;s<10;++s)t.beginPath(),t.fillStyle="rgba(255, 0, 0, 0.9)",t.arc(i,s,.05,0,2*Math.PI),t.closePath(),t.fill()}mouseRemap(t){this.m.x=t.offsetX-.5*this.CanvasCore.canvas.width,this.m.y=t.offsetY-.5*this.CanvasCore.canvas.height}MouseDown(t){this.mouseRemap(t),this.graph.MouseDown(this.m.x,this.m.y)}MouseUp(t){this.graph.MouseUp()}MouseMove(t){this.mouseRemap(t),this.graph.MouseMove(this.m.x,this.m.y)}MouseDrag(t){this.mouseRemap(t),this.graph.MouseDrag(this.m.x,this.m.y)}MouseClick(t){this.mouseRemap(t),this.graph.MouseLeftClick(this.m.x,this.m.y)}MouseDoubleClick(t){this.mouseRemap(t),console.log("d click")}}class u{constructor(t,i,s){this.graph=void 0,this.pos=void 0,this.u=void 0,this.f=void 0,this.m=5,this.r=17,this.colorFill="#0099ff",this.MAX_VELOCITY=5.5,this.velocity=void 0,this.listCollision=[],this.isCaptured=!1,this.graph=t,this.pos=new e.h9(i,s)}Update(t){this.isCaptured||this.UpdatePos(t)}UpdatePos(t){const i=e.h9.Sub(this.pos,t),s=e.h9.Normalize(i),h=e.h9.CalculateFalloff(this.pos,t,1,.01);this.velocity=e.h9.Scale(s,h),this.UpdateCollision(),this.velocity.y+=1.1,this.pos=e.h9.Add(this.pos,this.velocity),this.UpdatePosInScreen(this.graph.graphSystem.CanvasCore.ctx)}UpdateCollision(){for(let t=0;t<this.listCollision.length;++t){const i=e.h9.Sub(this.pos,this.listCollision[t].pos),s=e.h9.Normalize(i),h=e.h9.CalculateFalloff(this.pos,this.listCollision[t].pos,1,.01);this.velocity=e.h9.Scale(s,h),this.pos=e.h9.Add(this.pos,this.velocity)}}IsMouseHover(t,i){return e.h9.Distance(this.pos,new e.h9(t,i))<this.r}Render(t){t.lineWidth=1,t.strokeStyle="#000000",this.isCaptured?t.fillStyle="#ff0000":t.fillStyle=this.colorFill,t.beginPath(),t.arc(this.pos.x,this.pos.y,this.r,0,2*Math.PI),t.closePath(),t.fill(),t.stroke()}UpdatePosInScreen(t){const i=10;this.pos.y>.5*t.canvas.height-i&&(this.pos.y=.5*t.canvas.height-i),this.pos.x<.5*-t.canvas.width+i&&(this.pos.x=.5*-t.canvas.width+i),this.pos.x>.5*t.canvas.width-i&&(this.pos.x=.5*t.canvas.width-i)}}class m{static AABBvsAABB(t,i){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1.5;return!(t.vec.x+s+.5*t.width<i.vec.x-s-.5*i.width||t.vec.x-s-.5*t.width>i.vec.x+s+.5*i.width)&&!(t.vec.y+s+.5*t.height<i.vec.y-s-.5*i.height||t.vec.y-s-.5*t.height>i.vec.y+s+.5*i.height)}constructor(t,i,s,h){this.graph=void 0,this.vec=void 0,this.width=void 0,this.height=void 0,this.listCollision=[],this.RectCloset=void 0,this.fixed=!1,this.velocity=void 0,this.hover=!1,this.graph=t,this.vec=new e.h9(i.x,i.y),this.width=s,this.height=h}Overlaps(t){return m.AABBvsAABB(this,t)}Update(){this.fixed||(this.UpdatePosExpel(),this.UpdatePosContract(),this.UpdatePosInScreen(this.graph.graphSystem.CanvasCore.ctx))}UpdatePosExpel(){for(let t=0;t<this.listCollision.length;++t){const i=e.h9.Sub(this.vec,this.listCollision[t].vec),s=e.h9.Normalize(i);this.velocity=e.h9.Scale(s,Math.random()*this.graph.optiLevel),this.vec=e.h9.Add(this.vec,this.velocity)}}UpdatePosContract(){if(this.RectCloset){const t=e.h9.Sub(this.RectCloset.vec,this.vec),i=e.h9.Normalize(t);this.velocity=e.h9.Scale(i,.2*Math.random()),this.vec=e.h9.Add(this.vec,this.velocity)}}Render(t){this.hover?t.fillStyle="#0ff000":t.fillStyle="#ff0000",0===this.listCollision.length&&(t.fillStyle="#ff0000"),this.fixed&&(t.fillStyle="#000000"),t.strokeStyle="#000000",t.beginPath(),t.rect(this.vec.x-.5*this.width,this.vec.y-.5*this.height,this.width,this.height),t.closePath(),t.fill(),t.lineWidth=1,t.stroke()}UpdatePosInScreen(t){const i=10;this.vec.y>.5*t.canvas.height-i&&(this.vec.y=.5*t.canvas.height-i),this.vec.x-.5*this.width-i<.5*-t.canvas.width+i&&(this.vec.x=.5*-t.canvas.width+i+.5*this.width+i),this.vec.x+.5*this.width+i>.5*t.canvas.width-i&&(this.vec.x=.5*t.canvas.width-i-.5*this.width-i)}}class g{constructor(t){this.graphSystem=void 0,this.particles=[],this.listRect=[],this.offset=1,this.optiLevel=3,this.m=void 0,this.t=1,this.num=50,this.capture=void 0,this.graphSystem=t,this.Init()}Init(){this.m=new e.h9(0,0),this.particles=[],this.listRect=[];for(let i=0;i<2;++i)this.listRect.push(new m(this,new e.h9(-.5+Math.random(),-.5+Math.random()),20+20*Math.random(),5+10*Math.random()));let t=new m(this,new e.h9(-50,-50),50,50);t.fixed=!0,this.listRect.push(t),t=new m(this,new e.h9(50,20),40,20),t.fixed=!0,this.listRect.push(t),t=new m(this,new e.h9(-30,30),20,30),t.fixed=!0,this.listRect.push(t)}UpdateNumber(t){this.num=t,this.Init(),console.log(t,"num")}UpdateOffset(t){this.offset=t,console.log(t,"off")}UpdateOptiLevel(t){this.optiLevel=t,this.Init(),console.log(t,"opti")}MouseDown(t,i){for(let s=0;s<this.particles.length;++s)this.particles[s].IsMouseHover(t,i)&&(this.capture=this.particles[s],this.capture.isCaptured=!0)}MouseUp(){this.capture&&(this.capture.isCaptured=!1),this.capture=void 0}MouseLeftClick(t,i){this.particles.push(new u(this,t,i))}MouseMove(t,i){this.m.x=t,this.m.y=i}MouseDrag(t,i){this.capture&&(this.capture.pos.x=t,this.capture.pos.y=i)}Render(t){this.UpdateCollisionRect(),this.UpdateAtt(),this.UpdateCollision();for(let i=0;i<this.listRect.length;++i)this.listRect[i].Update();for(let i=0;i<this.listRect.length;++i)this.listRect[i].Render(t);0===(5&this.t)&&this.particles.length<10&&this.particles.push(new u(this,0,0)),this.t%10===0&&this.listRect.length<this.num&&(this.listRect.push(new m(this,new e.h9(-.5+Math.random(),-.5+Math.random()),20+20*Math.random(),5+10*Math.random())),this.graphSystem.CanvasCore.divConsole.innerHTML="1. clikc to reset! <br> ",this.graphSystem.CanvasCore.divConsole.innerHTML+="2. first slider for num of Nodes! <br> ",this.graphSystem.CanvasCore.divConsole.innerHTML+="3. second slider for offset! <br> ",this.graphSystem.CanvasCore.divConsole.innerHTML+="4. third slider for Opti level! <br> ",this.graphSystem.CanvasCore.divConsole.innerHTML+="* num of node: "+this.listRect.length),this.t+=1}UpdateAtt(){for(let t=0;t<this.listRect.length;++t){let i=this.listRect[t];i.RectCloset=void 0;for(let t=0;t<this.listRect.length;++t){let s=this.listRect[t],h=Number.MAX_SAFE_INTEGER,o=-1;if(i!==s){const a=e.h9.Distance(i.vec,s.vec);a<h&&(h=a,o=t)}o>0&&(i.RectCloset=this.listRect[o])}}}UpdateCollisionRect(){for(let t=0;t<this.listRect.length;++t){let i=this.listRect[t];i.listCollision=[];let s=!1;for(let t=0;t<this.listRect.length;++t){let e=this.listRect[t];i!==e&&m.AABBvsAABB(i,e,this.offset)&&(i.listCollision.push(e),s=!0)}i.hover=s}}UpdateCollision(){for(let t=0;t<this.particles.length;++t){let i=this.particles[t];i.listCollision=[];for(let t=0;t<this.particles.length;++t){let s=this.particles[t];i!==s&&i.pos.Distance(s.pos)<i.r+s.r&&i.listCollision.push(s)}}}}class C{constructor(t){let i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:400,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:250;this.graphSystem=void 0,this.canvas=void 0,this.host=void 0,this.divLocalMain=void 0,this.divCanvas=void 0,this.divUI=void 0,this.ctx=void 0,this.timer=void 0,this.click=!1,this.pressed=!1,this.prevent=!1,this.delay=500,this.down=!1,this.t=0,this.width=void 0,this.height=void 0,this.divConsole=void 0,this.graphSystem=t,this.width=i,this.height=s;const e=document.getElementById(t.id);e&&(this.host=e,this.InitCanvas())}InitCanvas(){const t=document.createElement("div");if(!t)return;this.divLocalMain=t,this.divLocalMain.style.display="flex",this.divLocalMain.style.width=this.width+"px",this.divLocalMain.style.height=this.height+"px",this.divLocalMain.style.margin="10px",this.divLocalMain.style.padding="10px",this.host.append(t);const i=document.createElement("div");if(!i)return;this.divCanvas=i,this.divLocalMain.append(i);const s=document.createElement("canvas");if(s){this.canvas=s,this.divCanvas.append(this.canvas),this.canvas.width=this.width,this.canvas.height=this.height,this.canvas.style.backgroundColor="#aaaaaa";const t=this.canvas.getContext("2d");t&&(this.ctx=t,this.InitUI(),this.Init())}}InitUI(){const t=document.createElement("div");if(!t)return;this.divUI=t,this.divLocalMain.append(t),this.divUI.style.marginLeft="10px",this.divUI.style.width="100%";const i=document.createElement("button");i.textContent="reset",i.onclick=()=>{this.graphSystem.InitGraph()},this.divUI.append(i);let s=document.createElement("input");s.oninput=()=>{const t=+s.value;this.graphSystem.graph.UpdateNumber(t)},s.type="range",s.min="10",s.max="200.0",s.value="50",this.divUI.append(s);let e=document.createElement("input");e.oninput=()=>{const t=+e.value;this.graphSystem.graph.UpdateOffset(t)},e.type="range",e.min="1",e.max="10.0",e.value="4",this.divUI.append(e);let h=document.createElement("input");h.oninput=()=>{const t=+h.value;this.graphSystem.graph.UpdateOptiLevel(t)},h.type="range",h.min="1",h.max="8",h.value="4",this.divUI.append(h),this.divConsole=document.createElement("p"),this.divConsole&&(this.divUI.append(this.divConsole),this.divConsole.style.width="max-content",this.divConsole.innerHTML="1. clikc to reset! <br> ",this.divConsole.innerHTML+="2. first slider for num of Nodes! <br> ",this.divConsole.innerHTML+="3. second slider for offset! <br> ",this.divConsole.innerHTML+="4. third slider for Opti level! <br> ",this.divConsole.innerHTML+="* num of node: ")}Init(){this.ctx.translate(.5*this.ctx.canvas.width,.5*this.ctx.canvas.height),this.ctx.scale(1,1),this.EventBind(),this.Loop()}EventBind(){this.canvas.onclick=t=>{this.prevent=!1,this.timer=setTimeout((()=>{if(!this.prevent){if(!this.click)return;this.MouseClick(t)}this.prevent=!1}),this.delay)},this.canvas.ondblclick=t=>{clearTimeout(this.timer),this.prevent=!0,this.MouseDoubleClick(t)},this.canvas.addEventListener("wheel",(t=>this.MouseWheel(t,t.deltaY))),this.canvas.onmousedown=t=>{this.click=!0,this.pressed=!0,this.MouseDown(t)},this.canvas.onmouseup=t=>{this.pressed=!1,this.MouseUp(t)},this.canvas.onmousemove=t=>{this.pressed&&(this.click=!1,this.MouseDrag(t)),this.MouseMove(t)},window.onresize=t=>this.Resize(t)}Resize(t){}Loop(){requestAnimationFrame((()=>{this.Loop()})),this.ctx.clearRect(.5*-this.ctx.canvas.width,.5*-this.ctx.canvas.height,this.ctx.canvas.width,this.ctx.canvas.height),this.ctx.fillStyle="#dddddd",this.ctx.beginPath(),this.ctx.rect(.5*-this.ctx.canvas.width,.5*-this.ctx.canvas.height,this.ctx.canvas.width,this.ctx.canvas.height),this.ctx.closePath(),this.ctx.fill(),this.Render(this.ctx)}Render(t){}MouseClick(t){}MouseDoubleClick(t){}MouseDown(t){}MouseUp(t){}MouseMove(t){}MouseDrag(t){}MouseWheel(t,i){}}class f{constructor(t){this.CanvasCore=void 0,this.graph=void 0,this.t=.9,this.id=void 0,this.m=new e.h9(0,0,0),this.id=t,this.CanvasCore=new C(this),this.Init(),this.InitGraph()}Init(){this.CanvasCore.Render=t=>this.Render(t),this.CanvasCore.MouseDown=t=>this.MouseDown(t),this.CanvasCore.MouseClick=t=>this.MouseClick(t),this.CanvasCore.MouseDoubleClick=t=>this.MouseDoubleClick(t),this.CanvasCore.MouseUp=t=>this.MouseUp(t),this.CanvasCore.MouseMove=t=>this.MouseMove(t),this.CanvasCore.MouseDrag=t=>this.MouseDrag(t)}InitGraph(){this.graph=new g(this)}Render(t){this.graph.Render(t),t.fillStyle="rgba(255, 0, 0, 0.9)",t.beginPath(),t.arc(this.m.x,this.m.y,2.5,0,2*Math.PI),t.closePath(),t.fill()}Grid(t){for(let i=-10;i<10;++i)for(let s=-10;s<10;++s)t.beginPath(),t.fillStyle="rgba(255, 0, 0, 0.9)",t.arc(i,s,.05,0,2*Math.PI),t.closePath(),t.fill()}mouseRemap(t){this.m.x=t.offsetX-.5*this.CanvasCore.canvas.width,this.m.y=t.offsetY-.5*this.CanvasCore.canvas.height}MouseDown(t){this.mouseRemap(t),this.graph.MouseDown(this.m.x,this.m.y)}MouseUp(t){this.mouseRemap(t),this.graph.MouseUp()}MouseMove(t){this.mouseRemap(t),this.graph.MouseMove(this.m.x,this.m.y)}MouseDrag(t){this.mouseRemap(t),this.graph.MouseDrag(this.m.x,this.m.y)}MouseClick(t){this.mouseRemap(t),this.graph.MouseLeftClick(this.m.x,this.m.y)}MouseDoubleClick(t){this.mouseRemap(t)}}class M{constructor(t){this.OptimizerRectPosAgentSystemA=void 0,this.OptimizerRectPosAgentSystemB=void 0,this.OptimizerRectPosAgentSystemC=void 0,this.OptimizerRectPosAgentSystemA=new l(t),this.OptimizerRectPosAgentSystemB=new p(t),this.OptimizerRectPosAgentSystemC=new f(t),document.body.style.overflow="auto"}}class y{static Init(t){new y(t).Dummy()}constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"SandBox";this.canvasCore=void 0,this.implementation=void 0,this.implementation=new M(t)}Dummy(){}}class x{constructor(t){this.divHost=void 0,this.divHost=document.getElementById(t);const i=document.createElement("div");i.id="ngl3d",i.style.width="100%",i.style.height="100%",this.divHost.appendChild(i),y.Init(i.id)}destroy(){try{for(;void 0!==this.divHost&&void 0!==this.divHost.lastElementChild;)this.divHost.removeChild(this.divHost.lastElementChild)}catch(t){console.debug(t)}}}}}]);
//# sourceMappingURL=40210.736f18e0.chunk.js.map