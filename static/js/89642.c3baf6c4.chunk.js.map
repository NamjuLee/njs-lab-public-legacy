{"version":3,"file":"static/js/89642.c3baf6c4.chunk.js","mappings":"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","sources":["njslab/Tools/WaterQualityInspector/ChartVizWater/WaterQualityInspector.ts","njslab/Tools/WaterQualityInspector/ChartVizWater/index.ts","njslab/Tools/WaterQualityInspector/index.ts"],"sourcesContent":["import { getCSVFromURL, remap } from 'njscore';\r\n\r\nexport class WaterQualityInspector {\r\n    public data = {};\r\n\r\n    public day = 24;\r\n\r\n    public scale = 0.25\r\n    public dataSampling = 4;\r\n    public margin = 25;\r\n    public ctx: CanvasRenderingContext2D;\r\n\r\n    public m: number[] = [0, 0];\r\n    public selVal: number = 0;\r\n    public selID: number = 0;\r\n\r\n    public dataRaw: string[] = [];\r\n\r\n    public index = 0;\r\n    public id = [\r\n        'mass_concentration_of_blue_green_algae_in_sea_water_rfu (RFU)', // 0.10000000149011612   3.700000047683716\r\n        'chlorophyll_fluorescence (RFU)',  // 0.10000000149011612   8\r\n        'sea_water_turbidity (1)', // 0.009999999776482582   335.9800109863281\r\n        'sea_water_temperature (K)', // 255.37222290039062   300.00555419921875\r\n        'sea_water_ph_reported_on_total_scale (1)', // 255.37222290039062   300.00555419921875\r\n    ];\r\n\r\n    constructor(ctx: CanvasRenderingContext2D, i = 0) {\r\n        this.ctx = ctx;\r\n        this.index = i;\r\n        document.onkeydown = (k) => {\r\n            this.dataSampling++;\r\n            // console.log(this.dataSampling)\r\n        }\r\n        getCSVFromURL(process.env.PUBLIC_URL + '/static/data/Watabot/obs_104_1928_d047_15c7.csv').then((d) => {\r\n            const lines = d.split(/\\r\\n|\\r|\\n/g);\r\n            this.dataRaw = lines;\r\n\r\n            const index = lines[0].split(',');\r\n\r\n            const dataDic = {}\r\n            let needComputeData = true;\r\n            for (let i = 0; i < index.length; ++i) {\r\n                // console.log(index[i]);\r\n                if (needComputeData && index[i] === 'time (UTC)') {\r\n                    dataDic[index[i]] = [];\r\n                    needComputeData = false;\r\n                } else {\r\n                    dataDic[index[i]] = new Float32Array(lines.length - 1);\r\n                }\r\n            }\r\n\r\n            for (let i = 1; i < lines.length; ++i) {\r\n                const row = lines[i].split(',');\r\n                for (let j = 0; j < index.length; ++j) {\r\n                    const theIndex = index.indexOf(index[j]);\r\n                    if (theIndex !== -1) {\r\n                        dataDic[index[j]][i - 1] = row[theIndex];\r\n                    }\r\n                }\r\n\r\n            }\r\n            this.data = dataDic;\r\n            // console.log(dataDic);\r\n            // const divContainer = this.ctx.canvas.parentElement;\r\n            // const domRect = this.ctx.canvas.getBoundingClientRect();\r\n\r\n            const div = document.createElement('div');\r\n            div.style.zIndex = '1';\r\n            div.style.color = '#000';\r\n            div.style.fontSize = '11px';\r\n            div.style.position = 'absolute';\r\n            div.style.left = '10px';\r\n            div.style.top = '5px';\r\n            div.textContent = this.id[i];\r\n\r\n            this.ctx.canvas.parentElement.appendChild(div);\r\n\r\n            this.render(this.ctx);\r\n        });\r\n    }\r\n    public Offset(v) {\r\n        if (v < 0) {\r\n            // this.offsetData -= this.offsetData * 0.5;\r\n        } else {\r\n            // this.offsetData += this.offsetData * 0.5;\r\n        }\r\n    }\r\n    public wheel(e: WheelEvent) {\r\n        if (e.deltaY < 0) {\r\n            this.scale += this.scale * .25;\r\n        } else {\r\n            this.scale -= this.scale * .25;\r\n        }\r\n        this.scale = this.scale < 0.012 ? 0.012 : this.scale;\r\n        // console.log(this.scale);\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n        this.m[0] = x;\r\n        this.m[1] = y;\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(this.m[0], this.m[1]);\r\n        // console.trace();\r\n        // ctx.save();\r\n        // ctx.scale(-1,1)\r\n        // ctx.translate(-this.ctx.canvas.width, 0)\r\n\r\n        // console.log('o')\r\n\r\n        // let index = ;\r\n\r\n        const xP = (this.m[0] * -1) + this.ctx.canvas.width;\r\n\r\n\r\n        let d = this.data[this.id[this.index]]; // sea_water_temperature (K) sea_water_turbidity (1)\r\n        if (d === undefined) { return; }\r\n\r\n        // console.log('this.index', this.index);\r\n\r\n        vizBG(ctx, d, this.scale, this.day, this.margin);\r\n\r\n        const domain = getMinMax(d, this.dataSampling);\r\n        // console.log('domain', domain);\r\n\r\n        ctx.lineWidth = 4;\r\n        ctx.strokeStyle = '#000';\r\n        this.vizData(ctx, d, domain, this.scale, this.day, this.dataSampling, this.margin, xP);\r\n\r\n        // d = this.data['sea_water_turbidity (1)'];\r\n        // vizData(ctx, d, '#0f0', this.scale, this.day, this.dataSampling, this.margin);\r\n\r\n        // d = this.data['chlorophyll_fluorescence (RFU)'];\r\n        // vizData(ctx, d, '#00f', this.scale, this.day, this.dataSampling, this.margin);\r\n\r\n        // d = this.data['oxidation_reduction_potential (mV)'];\r\n        // vizData(ctx, d, '#0ff', this.scale, this.day, this.dataSampling, this.margin);\r\n        // ctx.restore();\r\n        // ctx.scale(1,1);\r\n\r\n        ctx.lineWidth = 0.5;\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(xP, 0);\r\n        ctx.lineTo(xP, this.ctx.canvas.height);\r\n        ctx.stroke();\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(xP, this.m[1], 1, 0, Math.PI * 2);\r\n        ctx.fill();\r\n\r\n        // let scaleLocalY = ctx.canvas.height - this.margin;\r\n        \r\n        // let id = Math.floor(xP * this.scale);\r\n        // console.log('id', id);\r\n        // const yP = remap(d[id], domain[0], domain[1], scaleLocalY, this.margin);\r\n        // console.log(yP);\r\n\r\n        ctx.fillStyle = '#f00';\r\n        ctx.beginPath();\r\n        ctx.arc(xP, this.selVal, 7, 0, Math.PI * 2);\r\n        ctx.fill();\r\n\r\n        // ctx.fillText(id[this.index], this.ctx.canvas.width * 0.5, 10);\r\n    }\r\n    public vizData = (ctx: CanvasRenderingContext2D, d, domain, scale, day, dataSampling, margin, mX) => {\r\n        let scaleLocalY = ctx.canvas.height - margin;\r\n        // console.log(ctx.canvas.height);\r\n\r\n        ctx.beginPath();\r\n        let x = margin;\r\n        let y = remap(d[0], domain[0], domain[1], scaleLocalY, margin);\r\n\r\n        mX = Math.floor((mX - margin) / scale);\r\n\r\n        // console.log('mX', mX);\r\n\r\n        ctx.moveTo(x, y);\r\n\r\n        for (let i = 1; i < d.length; i += dataSampling) {\r\n            x += 1;\r\n\r\n            const xP = margin + (x * scale * dataSampling);\r\n\r\n            let yP = 0 + margin;\r\n            let val = 0;\r\n            let key = 'max'; // max\r\n\r\n            switch (key) {\r\n                case 'mean':\r\n                    for (let j = 0; j < dataSampling; ++j) {\r\n                        val += d[i + j];\r\n                    }\r\n\r\n                    yP = val / dataSampling * scaleLocalY;\r\n                    yP = remap(yP, domain[0], domain[1], scaleLocalY, margin);\r\n                    ctx.lineTo(xP, yP);\r\n                    break;\r\n\r\n                default:\r\n                    let hover = false;\r\n                    for (let j = 0; j < dataSampling; ++j) {\r\n                        const id = i + j;\r\n\r\n                        // console.log(id);\r\n                        \r\n                        if (id === mX) {\r\n                            hover = true;\r\n                            this.selID = id;\r\n                        }\r\n\r\n                        if (val < d[id]) {\r\n                            val = d[id];\r\n                        }\r\n                    }\r\n\r\n                    yP = remap(val, domain[0], domain[1], scaleLocalY, margin); // offsetData;\r\n\r\n                    if (hover) {\r\n                        this.selVal = yP;\r\n                        // console.log(this.selID);\r\n                    }\r\n                    // const dd = mX * dataSampling * scaleLocalY;\r\n                    // if (dd === xP) {\r\n                    //     console.log('yP', yP);\r\n                    //     this.val = yP;\r\n                    // }\r\n\r\n                    ctx.lineTo(xP, yP);\r\n                    break;\r\n            }\r\n        }\r\n        ctx.stroke();\r\n\r\n        // console.log(d[this.selID], this.dataRaw[this.selID]);\r\n\r\n        // console.log(this.dataRaw[this.selID].split(',')[0]);\r\n\r\n        ctx.save();\r\n\r\n        ctx.scale(-1, 1);\r\n\r\n        ctx.fillText(this.dataRaw[this.selID].split(',')[0], 10, 10);\r\n\r\n        ctx.restore();\r\n    };\r\n}\r\n\r\n// Possibility of harmful algae bloom (to be calculated based on prediction model)\r\n// blue_green_algae_in_sea_water_rfu (RFU)\r\n// chlorophyll_fluorescence (RFU)\r\n// sea_water_turbidity\r\n// sea_water_temperature (K)\r\n// Sea_water_ph\r\n\r\n// time (UTC)\r\n// mass_concentration_of_chlorophyll_in_sea_water (kg m-3)\r\n// chlorophyll_fluorescence (RFU)\r\n// sea_water_electrical_conductivity (S m-1)\r\n// mass_concentration_of_oxygen_in_sea_water (kg m-3)\r\n// oxidation_reduction_potential (mV)\r\n// sea_water_ph_reported_on_total_scale (1)\r\n// mass_concentration_of_blue_green_algae_in_sea_water (ug L-1)\r\n// mass_concentration_of_blue_green_algae_in_sea_water_rfu (RFU)\r\n// sea_water_turbidity (1)\r\n// sea_water_temperature (K)\r\n// platform\r\n\r\nconst getMinMax = (d: number[], dataSampling: number) => {\r\n    let min = Number.MAX_VALUE;\r\n    let max = Number.MIN_VALUE;\r\n    // dataSampling = 1;\r\n\r\n    for (let i = 1; i < d.length; i += dataSampling) {\r\n        let val = d[i];\r\n        let key = 'max';\r\n        switch (key) {\r\n            case 'mean':\r\n                for (let j = 0; j < dataSampling; ++j) {\r\n                    min = min > val ? val : min;\r\n                    max = max < val ? val : max;\r\n                }\r\n                break;\r\n            default:\r\n                for (let j = 0; j < dataSampling; ++j) {\r\n                    min = min > val ? val : min;\r\n                    max = max < val ? val : max;\r\n                }\r\n                break;\r\n        }\r\n\r\n    }\r\n    return [min, max];\r\n};\r\n\r\nconst vizBG = (ctx: CanvasRenderingContext2D, d, scale, day, margin) => {\r\n    const hourRes = 12;\r\n\r\n    ctx.setLineDash([2, 2]);\r\n    ctx.lineWidth = 1;\r\n\r\n    for (let i = 0; i < d.length; i++) {\r\n        ctx.strokeStyle = `rgba(200, 200, 200, 0.8)`;\r\n\r\n        if (scale > 0.1) {\r\n            if (i % (hourRes * day) === 0) {\r\n                const x = margin + i * scale;\r\n                ctx.beginPath();\r\n                ctx.moveTo(x, margin);\r\n                ctx.lineTo(x, ctx.canvas.height - margin);\r\n                ctx.stroke();\r\n            }\r\n        }\r\n\r\n        ctx.strokeStyle = `rgba(0, 0, 255, 0.8)`;\r\n        if (scale > 0.02) {\r\n            if (i % (hourRes * day * 7) === 0) {\r\n                const x = margin + i * scale;\r\n                ctx.beginPath();\r\n                ctx.moveTo(x, margin);\r\n                ctx.lineTo(x, ctx.canvas.height - margin);\r\n                ctx.stroke();\r\n                // console.log(i)\r\n            }\r\n        }\r\n\r\n        ctx.strokeStyle = `rgba(0, 255, 0, 0.8)`;\r\n        if (i % (hourRes * day * 30) === 0) {\r\n            const x = margin + i * scale;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, margin);\r\n            ctx.lineTo(x, ctx.canvas.height - margin);\r\n            ctx.stroke();\r\n            // console.log(i)\r\n        }\r\n\r\n    }\r\n    ctx.setLineDash([]);\r\n};","import { WaterQualityInspector } from './WaterQualityInspector';\nexport class ChartVizWater {\n    public divHost: HTMLDivElement;\n    public canvas: HTMLCanvasElement;\n    public ctx: CanvasRenderingContext2D;\n    public isDown: boolean = false;\n    public debugMode: boolean = false;\n    public isStatic: boolean = false\n\n    public waterQualityInspector: WaterQualityInspector;\n\n    private prevent: boolean = false;\n    private delay: number = 250;\n    private timer: NodeJS.Timer | number;\n    private isDrag: boolean = false;\n\n    constructor(div: HTMLDivElement, i: number = 3) {\n        this.divHost = div;\n\n        const bounding = this.divHost.getBoundingClientRect();\n        this.canvas = document.createElement('canvas') as HTMLCanvasElement;\n\n        this.canvas.style.position = 'relative';\n        this.canvas.style.width = '100%';\n        this.canvas.style.height = '100%';\n        this.canvas.style.background = 'rgba(255, 255, 255, 1.0)';\n        this.canvas.style.borderRadius = '15px';\n        // this.canvas.style.filter = 'blur(10px)'\n\n        // this.canvas.style.position = 'absolute';\n        this.canvas.width = bounding.width;\n        this.canvas.height = bounding.height;\n        this.divHost.appendChild(this.canvas);\n\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\n        this.ctx.scale(-1,1)\n        this.ctx.translate(-this.ctx.canvas.width, 0);\n\n        this.canvas.onclick = (e: MouseEvent) => {\n            this.timer = setTimeout(() => {\n                if (!this.prevent) {\n                    this.mouseClick(e.offsetX, e.offsetY);\n                }\n                this.isDrag = false;\n                this.prevent = false;\n            },this.delay);\n            this.loop(this.ctx);\n        };\n        // this.canvas.onwheel = (e: WheelEvent) => {\n        //     this.mouseWheel(e);\n        //     this.loop(this.ctx);\n        // };\n        this.canvas.ondblclick = (e: MouseEvent) => {\n            clearTimeout(this.timer as number);\n            this.prevent = true;\n            this.mouseDoubleClick(e.offsetX, e.offsetY);\n            this.loop(this.ctx);\n        };\n        this.canvas.onmousedown = (e: MouseEvent) => {\n            this.isDown = true;\n            this.mouseDown(e.offsetX, e.offsetY);\n            this.loop(this.ctx);\n        };\n        this.canvas.onmouseup = (e: MouseEvent) => {\n            this.isDown = false;\n            this.isDrag = false;\n            this.mouseUp(e.offsetX, e.offsetY);\n            this.loop(this.ctx);\n        };\n        this.canvas.onmousemove = (e: MouseEvent) => {\n            if (this.isDown) {\n                this.isDrag = true;\n                this.prevent = true;\n                this.mouseDrag(e.offsetX, e.offsetY);\n            } else {\n                this.mouseMove(e.offsetX, e.offsetY);\n            }\n            // this.loop(this.ctx);\n        };\n\n        this.canvas.onwheel = (e) => {\n            this.waterQualityInspector.wheel(e);\n            this.loop(this.ctx);\n        };\n\n        this.waterQualityInspector = new WaterQualityInspector(this.ctx, i);\n        window.addEventListener('resize', this.resize);\n        // this.loop(this.ctx);\n        this.start();\n    }\n    public start() {\n        this.loop(this.ctx);\n    }\n    private resize = () => {\n        const bounding = this.divHost.getBoundingClientRect();\n        this.canvas.width = bounding.width;\n        this.canvas.height = bounding.height;\n        this.loop(this.ctx);\n    }\n    public destroy() {\n        window.removeEventListener('resize', this.resize);\n        this.isStatic = true;\n        try {\n            while (this.divHost !== undefined && this.divHost.lastElementChild !== undefined) {\n                this.divHost.removeChild(this.divHost.lastElementChild);\n            }\n        } catch (error) { }\n    }\n    public renderUpdate(ctx: CanvasRenderingContext2D) {\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        this.render(ctx);\n    }\n    public loop(ctx: CanvasRenderingContext2D) {\n        if (this.isStatic) { return; }\n        requestAnimationFrame(() => { this.renderUpdate(ctx); });\n    }\n    public render(ctx: CanvasRenderingContext2D) {\n\n        // this.ctx.save();\n        // this.ctx.translate(-400, 0)\n        // this.ctx.scale(-1, 0);\n        this.waterQualityInspector.render(this.ctx);\n        // this.ctx.restore();\n    }\n    public mouseClick(x: number, y: number) {\n        // Binding needed\n        if (this.debugMode) { console.log('click'); }\n    }\n    public mouseDoubleClick(x: number, y: number) {\n        // Binding needed\n        if (this.debugMode) { console.log('d-click'); }\n    }\n    public mouseDown(x: number, y: number) {\n        // Binding needed\n        if (this.debugMode) { console.log('down'); }\n    }\n    public mouseUp(x: number, y: number) {\n        // Binding needed\n        if (this.debugMode) { console.log('up'); }\n    }\n    public mouseMove(x: number, y: number) {\n        // Binding needed\n        if (this.debugMode) { console.log('move'); }\n\n        this.waterQualityInspector.mouseMove(x, y);\n        this.loop(this.ctx);\n    }\n    public mouseDrag(x: number, y: number) {\n        // Binding needed\n        if (this.debugMode) { console.log('drag'); }\n    }\n    public mouseWheel(v: WheelEvent) {\n        // Binding needed\n        if (this.debugMode) { console.log('wheel', v); }\n    }\n}\n\n","import { remap } from '../../../lib'\r\n\r\nimport { ChartVizWater } from './ChartVizWater';\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public chartVizWater: ChartVizWater;\r\n    constructor(id: string) {\r\n        this.divHost = document.getElementById(id)\r\n\r\n        // Center align\r\n        this.divHost.style.display = 'flex';\r\n        this.divHost.style.alignItems = 'center';\r\n\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        // div.style.backgroundColor = '#555';\r\n        div.style.width = '900px';\r\n        div.style.height = '500px';\r\n        this.divHost.appendChild(div);\r\n\r\n        this.chartVizWater = new ChartVizWater(div);\r\n    }\r\n    public destroy() {\r\n        this.chartVizWater.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n}\r\n"],"names":["WaterQualityInspector","constructor","ctx","i","data","day","scale","dataSampling","margin","m","selVal","selID","dataRaw","index","id","vizData","d","domain","mX","scaleLocalY","canvas","height","beginPath","x","y","remap","Math","floor","moveTo","length","xP","yP","val","j","lineTo","hover","this","stroke","save","fillText","split","restore","document","onkeydown","k","getCSVFromURL","process","then","lines","dataDic","needComputeData","Float32Array","row","theIndex","indexOf","div","createElement","style","zIndex","color","fontSize","position","left","top","textContent","parentElement","appendChild","render","Offset","v","wheel","e","deltaY","mouseMove","width","undefined","vizBG","getMinMax","lineWidth","strokeStyle","arc","PI","fill","fillStyle","min","Number","MAX_VALUE","max","MIN_VALUE","setLineDash","ChartVizWater","divHost","isDown","debugMode","isStatic","waterQualityInspector","prevent","delay","timer","isDrag","resize","bounding","getBoundingClientRect","loop","background","borderRadius","getContext","translate","onclick","setTimeout","mouseClick","offsetX","offsetY","ondblclick","clearTimeout","mouseDoubleClick","onmousedown","mouseDown","onmouseup","mouseUp","onmousemove","mouseDrag","onwheel","window","addEventListener","start","destroy","removeEventListener","lastElementChild","removeChild","error","renderUpdate","clearRect","requestAnimationFrame","console","log","mouseWheel","Solution","chartVizWater","getElementById","display","alignItems","marginLeft","marginRight"],"sourceRoot":""}