{"version":3,"file":"static/js/85307.669a6332.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-graph-dynamics/Demo16AppCanvasGraph/Implementation/GraphSystemA/Core/Graph.ts","njslab/Workshop/workshop-graph-dynamics/Demo16AppCanvasGraph/Implementation/GraphSystemA/CanvasCore/index.ts","njslab/Workshop/workshop-graph-dynamics/Demo16AppCanvasGraph/Implementation/GraphSystemA/index.ts","njslab/Workshop/workshop-graph-dynamics/Demo16AppCanvasGraph/Implementation/GraphSystemB/Core/Graph.ts","njslab/Workshop/workshop-graph-dynamics/Demo16AppCanvasGraph/Implementation/GraphSystemB/CanvasCore/index.ts","njslab/Workshop/workshop-graph-dynamics/Demo16AppCanvasGraph/Implementation/GraphSystemB/index.ts","njslab/Workshop/workshop-graph-dynamics/Demo16AppCanvasGraph/Implementation/GraphSystemC/Core/Graph.ts","njslab/Workshop/workshop-graph-dynamics/Demo16AppCanvasGraph/Implementation/GraphSystemC/CanvasCore/index.ts","njslab/Workshop/workshop-graph-dynamics/Demo16AppCanvasGraph/Implementation/GraphSystemC/index.ts","njslab/Workshop/workshop-graph-dynamics/Demo16AppCanvasGraph/Implementation/index.ts","njslab/Workshop/workshop-graph-dynamics/Demo16AppCanvasGraph/AppCanvasGraph.ts","njslab/Workshop/workshop-graph-dynamics/Demo16AppCanvasGraph/index.ts"],"sourcesContent":["import { NVector3 } from '../../../../../../../lib/NJSCore';\r\n// import { Blank } from './Blank';\r\nexport class Graph {\r\n    nodes: Node[] = [];\r\n    edges: Edge[] = [];\r\n    m: NVector3;\r\n    capture: Node | undefined = undefined;\r\n    constructor() {\r\n        this.m = new NVector3(500, 500);\r\n        this.AddNode(50, 50);\r\n        this.AddNode(100, 100);\r\n        this.AddNode(100, 50);\r\n        this.AddEdge(this.nodes[0], this.nodes[1]);\r\n        this.AddEdge(this.nodes[1], this.nodes[2]);\r\n        this.AddEdge(this.nodes[2], this.nodes[0]);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n        this.capture = this.FindNode(x, y);\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        const n = this.AddNode(x, y);\r\n        const cn = this.FindCloseNode(n);\r\n        if (cn) {\r\n            this.AddEdge(n, cn);\r\n        }\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.capture) {\r\n            this.capture.v.x = x;\r\n            this.capture.v.y = y;\r\n        }\r\n    }\r\n    AddNode(x: number, y: number) {\r\n        const n = new Node(new NVector3(x, y), NVector3.Zero(), 2);\r\n        this.nodes.push(n);\r\n        return n;\r\n    }\r\n    AddEdge(n0: Node, n1: Node) {\r\n        const e = new Edge(n0, n1);\r\n        this.edges.push(e);\r\n        return e;\r\n    }\r\n    FindCloseNode(n: Node, dis: number = 150000) {\r\n        let index = -1;\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            if (this.nodes[i] !== n) {\r\n                let theDis = this.nodes[i].v.Distance(n.v);\r\n                if (theDis < dis) {\r\n                    dis = theDis;\r\n                    index = i;\r\n                }\r\n            }\r\n        }\r\n        if (index !== -1) {\r\n            return this.nodes[index];\r\n        }\r\n        return undefined;\r\n    }\r\n    FindNode(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            let theDis = this.nodes[i].v.Distance(this.m);\r\n            if (theDis < 10) {\r\n                this.capture = this.nodes[i];\r\n                return this.nodes[i];\r\n            }\r\n        }\r\n        this.capture = undefined;\r\n        return undefined;\r\n    }\r\n    public Move(atr: NVector3, damping: number, g: number = -0.3, dt: number) {\r\n        // Vector3d dv = atr - n.p;\r\n        // double dist = dv.Length;\r\n        // dv.Unitize();\r\n        // //  n.f = dv * (1.0 / (dist));\r\n        // n.f = dv * Math.Exp(-0.001 * dist * dist) * 0.1;\r\n        // n.Move(dt, damping);\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            const n = this.nodes[i];\r\n            // n.f = Vector3d.ZAxis * g;\r\n            n.f.x *= g;\r\n            n.f.y *= g;\r\n            n.f.z *= g;\r\n            const dv = new NVector3(atr.x - n.v.x, atr.y - n.v.y, atr.z - n.v.z);\r\n            const L = dv.Length();\r\n            // console.log(L);\r\n            dv.Unitize();\r\n            const x = dv.x * Math.exp(-0.001 * L * L) * 10.1; // + Vector3d.ZAxis.x * g;\r\n            const y = dv.y * Math.exp(-0.001 * L * L) * 10.1; // + Vector3d.ZAxis.y * g;\r\n            const z = dv.z * Math.exp(-0.001 * L * L) * 10.1; // + Vector3d.ZAxis.z * g;\r\n            if (!isNaN(x)) {\r\n                n.f.x = x; // + Vector3d.ZAxis.x * g;\r\n                n.f.y = y; // + Vector3d.ZAxis.y * g;\r\n                n.f.z = z; // + Vector3d.ZAxis.z * g;\r\n            }\r\n            // console.log(dv.x, L );\r\n            // console.log(dv.x * Math.exp(-0.1 * L * L) );\r\n            n.Move(dt, damping);\r\n        }\r\n        // foreach(Node n in nodes) {\r\n        //     Vector3d dv = atr - n.p;\r\n        //     double L = dv.Length;\r\n        //     dv.Unitize();\r\n        //     n.f = dv * Math.Exp(-0.001 * L * L) * 0.1 + Vector3d.ZAxis * g;\r\n        //   }\r\n        //   foreach(Edge e in edges) {\r\n        //     e.ApplySpringForce();\r\n        //   }\r\n        //   foreach(Node n in nodes) {\r\n        //     n.Move(dt, damping);\r\n        //   }\r\n        for (let i = 0; i < this.edges.length; ++i) {\r\n            this.edges[i].ApplySpringForce();\r\n        }\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            this.nodes[i].CheckLine(this.edges);\r\n        }\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            this.nodes[i].Move(dt, damping);\r\n        }\r\n    }\r\n    // .... vis\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.Move(this.m, 0.9, 0, 0.1);\r\n        ctx.strokeStyle = '#000ff0';\r\n        ctx.lineWidth = 1;\r\n        for (let i = 0; i < this.edges.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(this.edges[i].n0.v.x, this.edges[i].n0.v.y);\r\n            ctx.lineTo(this.edges[i].n1.v.x, this.edges[i].n1.v.y);\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n        }\r\n        ctx.fillStyle = '#0000ff';\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(this.nodes[i].v.x, this.nodes[i].v.y, this.nodes[i].m * 5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n    }\r\n}\r\nclass Edge {\r\n    n0: Node;\r\n    n1: Node;\r\n    public targetLength: number = 1.05;\r\n    public SpringConstant: number = 10.5;\r\n    constructor(_n0: Node, _n1: Node) {\r\n        this.n0 = _n0;\r\n        this.n1 = _n1;\r\n        const dis = this.n0.v.Distance(this.n1.v) - 10;\r\n        this.targetLength = dis < 50 ? 60 : dis;\r\n    }\r\n    public ApplySpringForce() {\r\n        const dp: NVector3 = new NVector3(this.n1.v.x - this.n0.v.x, this.n1.v.y - this.n0.v.y, this.n1.v.z - this.n0.v.z);\r\n        const dist: number = dp.Length();\r\n        dp.Unitize();\r\n        this.n0.f.x += dp.x * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n0.f.y += dp.y * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n0.f.z += dp.z * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n1.f.x -= dp.x * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n1.f.y -= dp.y * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n1.f.z -= dp.z * (dist - this.targetLength) * this.SpringConstant;\r\n    }\r\n}\r\nexport class Node {\r\n    fixed: boolean = false;\r\n    needCompute: boolean = true;\r\n    v: NVector3;\r\n    u: NVector3;\r\n    f: NVector3;\r\n    m: number = 1;\r\n    constructor(v: NVector3, u: NVector3, mass: number = 1) {\r\n        this.v = v;\r\n        this.u = u;\r\n        this.f = NVector3.Origin();\r\n        this.m = mass;\r\n    }\r\n    public Move(dt: number = 0.5, damping: number = 0.99) {\r\n        if (this.fixed) { return; }\r\n        // if (!this.needCompute) { this.needCompute = true; return; }\r\n        this.u.x *= damping;\r\n        this.u.y *= damping;\r\n        this.u.z *= damping;\r\n\r\n        this.u.x += this.f.x * (dt / this.m);\r\n        this.u.y += this.f.y * (dt / this.m);\r\n        this.u.z += this.f.z * (dt / this.m);\r\n\r\n        this.v.x += this.u.x * dt;\r\n        this.v.y += this.u.y * dt;\r\n        this.v.z += this.u.z * dt;\r\n\r\n        // console.log(this.u);\r\n        // console.log(this.f);\r\n        // console.log(this.v.x, this.v.y);\r\n        // if (this.v.y < 0.0) {\r\n        //     this.v.y = 0.0;\r\n        //     if (this.u.y < 0.0) { this.u.y = -this.u.y; }\r\n        // }\r\n        this.needCompute = true;\r\n    }\r\n    public CheckLine(edges: Edge[]) {\r\n        for (let i = 0; i < edges.length; ++i) {\r\n            let e = edges[i];\r\n            if (e.n0 !== this && e.n1 !== this) {\r\n                const dis = this.PointCloseToLine(e.n0.v, e.n1.v, this.v);\r\n                if (dis[0]) {\r\n                    const p = new NVector3(dis[0], dis[1]);\r\n                    const dis2 = p.Distance(this.v);\r\n                    if (dis2 < 5) {\r\n                        this.needCompute = false;\r\n                        // console.log(dis2);\r\n                        //    this.f.x *= -1;\r\n                        //    this.f.y *= -1;\r\n                        //    this.f.z *= -1;\r\n                        p.Unitize();\r\n                        const nv = NVector3.Normalize(this.v);\r\n\r\n                        const vv = new NVector3(p.x - nv.x, p.y - nv.y, p.z - nv.z);\r\n                        this.f = vv;\r\n                        // this.v.x += vv.x ;\r\n                        // this.v.y += vv.y ;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public PointCloseToLine(p: NVector3, n0: NVector3, n1: NVector3) {\r\n        let dx = n1.x - n0.x,\r\n            dy = n1.y - n0.y,\r\n            t = ((p.x - n0.x) * dx + (p.y - n0.y) * dy) / (dx * dx + dy * dy),\r\n            x = this.Lerp(n0.x, n1.x, t),\r\n            y = this.Lerp(n0.y, n1.y, t);\r\n        return [x, y];\r\n    }\r\n    public Lerp(a: number, b: number, t: number) { return a + t * (b - a); }\r\n}\r\n","import { GraphSystem } from '..';\r\nexport class CanvasCore {\r\n    graphSystem: GraphSystem;\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n\r\n    divLocalMain: HTMLElement;\r\n    divCanvas: HTMLElement;\r\n    divUI: HTMLElement;\r\n\r\n    ctx: CanvasRenderingContext2D;\r\n    timer: NodeJS.Timer | number;\r\n    click: boolean = false;\r\n    pressed: boolean = false;\r\n    prevent: boolean = false;\r\n    delay: number = 500;\r\n    down: boolean = false;\r\n    t: number = 0.0;\r\n    width: number;\r\n    height: number;\r\n    constructor(graphSystem: GraphSystem, width: number = 400, height: number = 300) {\r\n        this.graphSystem = graphSystem;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const host = document.getElementById(graphSystem.id);\r\n        if (!host) { return; } this.host = host;\r\n\r\n        this.InitCanvas();\r\n    }\r\n    InitCanvas() {\r\n        const divLocalMain = document.createElement('div');\r\n        if (!divLocalMain) { return; } this.divLocalMain = divLocalMain;\r\n        this.divLocalMain.style.display = 'flex';\r\n        // this.divLocalMain.style.width = '100%';\r\n        this.divLocalMain.style.width = this.width + 'px'; // this.host.clientWidth;\r\n        this.divLocalMain.style.height = this.height + 'px'; // this.host.clientHeight;\r\n        this.divLocalMain.style.margin = '10px';\r\n        this.divLocalMain.style.padding = '10px';\r\n        this.host.append(divLocalMain);\r\n\r\n        const divCanvas = document.createElement('div');\r\n        if (!divCanvas) { return; } this.divCanvas = divCanvas;\r\n        // this.divCanvas.style.width = '50%';\r\n        this.divLocalMain.append(divCanvas);\r\n\r\n        const canvas = document.createElement('canvas');\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            this.divCanvas.append(this.canvas);\r\n\r\n            this.canvas.width = this.width; // this.host.clientWidth;\r\n            this.canvas.height = this.height; // this.host.clientHeight;\r\n            this.canvas.style.backgroundColor = '#aaaaaa';\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.InitUI();\r\n                this.Init();\r\n            }\r\n        }\r\n    }\r\n    InitUI() {\r\n        const divUI = document.createElement('div');\r\n        if (!divUI) { return; } this.divUI = divUI;\r\n        this.divLocalMain.append(divUI);\r\n        this.divUI.style.marginLeft = '10px';\r\n        this.divUI.style.width = '100%';\r\n        // this.divUI.style.display = 'grid';\r\n\r\n        const btn = document.createElement('button');\r\n        btn.textContent = 'reset';\r\n        btn.onclick = () => { this.graphSystem.InitGraph(); };\r\n        this.divUI.append(btn);\r\n\r\n        const p = document.createElement('p');\r\n        if (!p) { return; } this.divUI.append(p);\r\n        p.style.width = 'max-content';\r\n        p.innerHTML = '1. clikc on canvas to populate a node! <br> ';\r\n        p.innerHTML += '2. drag a node to move! <br> ';\r\n    }\r\n    Init() {\r\n        this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        // this.ctx.scale(2, 2);\r\n        this.ctx.scale(1, 1);\r\n        this.EventBind();\r\n        this.Loop();\r\n    }\r\n    EventBind() {\r\n        this.canvas.onclick = (e: MouseEvent) => {\r\n            this.prevent = false;\r\n            this.timer = setTimeout(\r\n                () => {\r\n                    if (!this.prevent) {\r\n                        if (!this.click) { return; }\r\n                        this.MouseClick(e);\r\n                    }\r\n                    this.prevent = false;\r\n                },\r\n                this.delay);\r\n        };\r\n        this.canvas.ondblclick = (e: MouseEvent) => {\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.MouseDoubleClick(e);\r\n        };\r\n        this.canvas.addEventListener('wheel', (e: WheelEvent) => this.MouseWheel(e, e.deltaY));\r\n\r\n        // this.canvas.onclick = (e: MouseEvent) => {\r\n        //     this.timer = setTimeout(() => {\r\n        //         if (!this.prevent) { this.MouseClick(e); }\r\n        //         this.prevent = false;\r\n        //     }, this.delay);\r\n        // };\r\n        // this.canvas.ondblclick = (e: MouseEvent) => {\r\n        //     clearTimeout(this.timer as number);\r\n        //     this.prevent = true;\r\n        //     this.MouseDoubleClick(e);\r\n        // };\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.click = true;\r\n            this.pressed = true;\r\n            this.MouseDown(e);\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.pressed = false;\r\n            this.MouseUp(e);\r\n        };\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            if (this.pressed) { this.click = false; this.MouseDrag(e); }\r\n            this.MouseMove(e);\r\n        };\r\n        window.onresize = (e: UIEvent) => this.Resize(e);\r\n\r\n    }\r\n    Resize(e: UIEvent) {\r\n        // console.log(e);\r\n        // this.canvas.width = this.divCanvas.clientWidth;\r\n        // this.canvas.height = this.divCanvas.clientHeight;\r\n    }\r\n    Loop() {\r\n        requestAnimationFrame(() => { this.Loop(); });\r\n        this.ctx.clearRect(-10, -10, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.fillStyle = '#dddddd';\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(-500, -500, 1000, 1000);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n        this.Render(this.ctx);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(ctx);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        //\r\n    }\r\n    MouseWheel(e: WheelEvent, deltaY: number) {\r\n        // console.log(e);\r\n    }\r\n}","import { Graph } from './Core/Graph';\r\nimport { NVector3 } from '../../../../../../lib/NJSCore';\r\nimport { CanvasCore } from './CanvasCore';\r\nexport class GraphSystem {\r\n    CanvasCore: CanvasCore;\r\n    graph: Graph;\r\n    t = 0.9;\r\n    id: string;\r\n    m: NVector3 = new NVector3(0, 0, 0);\r\n    constructor(id: string) {\r\n        this.id = id;\r\n        this.CanvasCore = new CanvasCore(this);\r\n\r\n        this.Init();\r\n        this.InitGraph();\r\n    }\r\n    Init() {\r\n        this.CanvasCore.Render = (ctx: CanvasRenderingContext2D) => this.Render(ctx);\r\n        this.CanvasCore.MouseDown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.CanvasCore.MouseClick = (e: MouseEvent) => this.MouseClick(e);\r\n        this.CanvasCore.MouseDoubleClick = (e: MouseEvent) => this.MouseDoubleClick(e);\r\n        this.CanvasCore.MouseUp = (e: MouseEvent) => this.MouseUp(e);\r\n        this.CanvasCore.MouseMove = (e: MouseEvent) => this.MouseMove(e);\r\n        this.CanvasCore.MouseDrag = (e: MouseEvent) => this.MouseDrag(e);\r\n        // console.log('Graph system');\r\n    }\r\n    InitGraph() {\r\n        this.graph = new Graph();\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.graph.Render(ctx);\r\n\r\n        ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        ctx.beginPath();\r\n        ctx.arc(this.m.x, this.m.y, 2.5, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        for (let i = -10; i < 10; ++i) {\r\n            for (let j = -10; j < 10; ++j) {\r\n                ctx.beginPath();\r\n                ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n                ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n        }\r\n    }\r\n    // .......................................................................................\r\n    mouseRemap(e: MouseEvent) {\r\n        // this.m.x = ((e.x - this.CanvasCore.canvas.offsetLeft) - this.CanvasCore.canvas.width * 0.5) * 0.1;\r\n        // this.m.y = ((e.y - this.CanvasCore.canvas.offsetTop) - this.CanvasCore.canvas.height * 0.5) * 0.1;\r\n        this.m.x = e.offsetX - this.CanvasCore.canvas.width * 0.5// - this.CanvasCore.canvas.offsetLeft // ((e.x - this.CanvasCore.canvas.offsetLeft) - this.CanvasCore.canvas.width * 0.5) * 1;\r\n        this.m.y = e.offsetY - this.CanvasCore.canvas.height * 0.5// - this.CanvasCore.canvas.offsetTop // ((e.y - this.CanvasCore.canvas.offsetTop) - this.CanvasCore.canvas.height * 0.5) * 1;\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n\r\n        this.graph.MouseDown(this.m.x, this.m.y);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        this.graph.MouseMove(this.m.x, this.m.y);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        this.graph.MouseDrag(this.m.x, this.m.y);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        // console.log('click');\r\n        this.mouseRemap(e);\r\n\r\n        this.graph.MouseLeftClick(this.m.x, this.m.y);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        // console.log('d click');\r\n    }\r\n}","import { NVector3 } from '../../../../../../../lib/NJSCore';\r\n// import { Blank } from './Blank';\r\nexport class Graph {\r\n    nodes: Node[] = [];\r\n    edges: Edge[] = [];\r\n    m: NVector3;\r\n    capture: Node | undefined = undefined;\r\n    constructor() {\r\n        this.m = new NVector3(500, 500);\r\n        this.AddNode(50, 50);\r\n        this.AddNode(100, 100);\r\n        this.AddNode(100, 50);\r\n        this.AddEdge(this.nodes[0], this.nodes[1]);\r\n        this.AddEdge(this.nodes[1], this.nodes[2]);\r\n        this.AddEdge(this.nodes[2], this.nodes[0]);\r\n    }\r\n    UpdateLength(v: number) {\r\n        for (let i = 0; i < this.edges.length; ++i) {\r\n            this.edges[i].targetLength = v;\r\n        }\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n        this.capture = this.FindNode(x, y);\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        const n = this.AddNode(x, y);\r\n        const cn = this.FindCloseNode(n);\r\n        if (cn) {\r\n            this.AddEdge(n, cn);\r\n        }\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.capture) {\r\n            this.capture.v.x = x;\r\n            this.capture.v.y = y;\r\n        }\r\n    }\r\n    AddNode(x: number, y: number) {\r\n        const n = new Node(new NVector3(x, y), NVector3.Zero(), 2);\r\n        this.nodes.push(n);\r\n        return n;\r\n    }\r\n    AddEdge(n0: Node, n1: Node) {\r\n        const e = new Edge(n0, n1);\r\n        this.edges.push(e);\r\n        return e;\r\n    }\r\n    FindCloseNode(n: Node, dis: number = 150000) {\r\n        let index = -1;\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            if (this.nodes[i] !== n) {\r\n                let theDis = this.nodes[i].v.Distance(n.v);\r\n                if (theDis < dis) {\r\n                    dis = theDis;\r\n                    index = i;\r\n                }\r\n            }\r\n        }\r\n        if (index !== -1) {\r\n            return this.nodes[index];\r\n        }\r\n        return undefined;\r\n    }\r\n    FindNode(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            let theDis = this.nodes[i].v.Distance(this.m);\r\n            if (theDis < 10) {\r\n                this.capture = this.nodes[i];\r\n                return this.nodes[i];\r\n            }\r\n        }\r\n        this.capture = undefined;\r\n        return undefined;\r\n    }\r\n    public Move(atr: NVector3, damping: number, g: number = -0.3, dt: number) {\r\n        // Vector3d dv = atr - n.p;\r\n        // double dist = dv.Length;\r\n        // dv.Unitize();\r\n        // //  n.f = dv * (1.0 / (dist));\r\n        // n.f = dv * Math.Exp(-0.001 * dist * dist) * 0.1;\r\n        // n.Move(dt, damping);\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            const n = this.nodes[i];\r\n            // n.f = Vector3d.ZAxis * g;\r\n            n.f.x *= g;\r\n            n.f.y *= g;\r\n            n.f.z *= g;\r\n            const dv = new NVector3(atr.x - n.v.x, atr.y - n.v.y, atr.z - n.v.z);\r\n            const L = dv.Length();\r\n            // console.log(L);\r\n            dv.Unitize();\r\n            const x = dv.x * Math.exp(-0.001 * L * L) * 10.1; // + Vector3d.ZAxis.x * g;\r\n            const y = dv.y * Math.exp(-0.001 * L * L) * 10.1; // + Vector3d.ZAxis.y * g;\r\n            const z = dv.z * Math.exp(-0.001 * L * L) * 10.1; // + Vector3d.ZAxis.z * g;\r\n            if (!isNaN(x)) {\r\n                n.f.x = x; // + Vector3d.ZAxis.x * g;\r\n                n.f.y = y; // + Vector3d.ZAxis.y * g;\r\n                n.f.z = z; // + Vector3d.ZAxis.z * g;\r\n            }\r\n            // console.log(dv.x, L );\r\n            // console.log(dv.x * Math.exp(-0.1 * L * L) );\r\n            n.Move(dt, damping);\r\n        }\r\n        // foreach(Node n in nodes) {\r\n        //     Vector3d dv = atr - n.p;\r\n        //     double L = dv.Length;\r\n        //     dv.Unitize();\r\n        //     n.f = dv * Math.Exp(-0.001 * L * L) * 0.1 + Vector3d.ZAxis * g;\r\n        //   }\r\n        //   foreach(Edge e in edges) {\r\n        //     e.ApplySpringForce();\r\n        //   }\r\n        //   foreach(Node n in nodes) {\r\n        //     n.Move(dt, damping);\r\n        //   }\r\n        for (let i = 0; i < this.edges.length; ++i) {\r\n            this.edges[i].ApplySpringForce();\r\n        }\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            this.nodes[i].CheckLine(this.edges);\r\n        }\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            this.nodes[i].Move(dt, damping);\r\n        }\r\n    }\r\n    // .... vis\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.Move(this.m, 0.9, 0, 0.1);\r\n        ctx.strokeStyle = '#000ff0';\r\n        ctx.lineWidth = 1;\r\n        for (let i = 0; i < this.edges.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.moveTo(this.edges[i].n0.v.x, this.edges[i].n0.v.y);\r\n            ctx.lineTo(this.edges[i].n1.v.x, this.edges[i].n1.v.y);\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n        }\r\n        ctx.fillStyle = '#0000ff';\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(this.nodes[i].v.x, this.nodes[i].v.y, this.nodes[i].m * 5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n    }\r\n}\r\nclass Edge {\r\n    n0: Node;\r\n    n1: Node;\r\n    public targetLength: number = 1.05;\r\n    public SpringConstant: number = 10.5;\r\n    constructor(_n0: Node, _n1: Node) {\r\n        this.n0 = _n0;\r\n        this.n1 = _n1;\r\n        const dis = this.n0.v.Distance(this.n1.v) - 10;\r\n        this.targetLength = dis < 50 ? 60 : dis;\r\n    }\r\n    public ApplySpringForce() {\r\n        const dp: NVector3 = new NVector3(this.n1.v.x - this.n0.v.x, this.n1.v.y - this.n0.v.y, this.n1.v.z - this.n0.v.z);\r\n        const dist: number = dp.Length();\r\n        dp.Unitize();\r\n        this.n0.f.x += dp.x * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n0.f.y += dp.y * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n0.f.z += dp.z * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n1.f.x -= dp.x * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n1.f.y -= dp.y * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n1.f.z -= dp.z * (dist - this.targetLength) * this.SpringConstant;\r\n    }\r\n}\r\nexport class Node {\r\n    fixed: boolean = false;\r\n    needCompute: boolean = true;\r\n    v: NVector3;\r\n    u: NVector3;\r\n    f: NVector3;\r\n    m: number = 1;\r\n    constructor(v: NVector3, u: NVector3, mass: number = 1) {\r\n        this.v = v;\r\n        this.u = u;\r\n        this.f = NVector3.Origin();\r\n        this.m = mass;\r\n    }\r\n    public Move(dt: number = 0.5, damping: number = 0.99) {\r\n        if (this.fixed) { return; }\r\n        // if (!this.needCompute) { this.needCompute = true; return; }\r\n        this.u.x *= damping;\r\n        this.u.y *= damping;\r\n        this.u.z *= damping;\r\n\r\n        this.u.x += this.f.x * (dt / this.m);\r\n        this.u.y += this.f.y * (dt / this.m);\r\n        this.u.z += this.f.z * (dt / this.m);\r\n\r\n        this.v.x += this.u.x * dt;\r\n        this.v.y += this.u.y * dt;\r\n        this.v.z += this.u.z * dt;\r\n\r\n        // console.log(this.u);\r\n        // console.log(this.f);\r\n        // console.log(this.v.x, this.v.y);\r\n        // if (this.v.y < 0.0) {\r\n        //     this.v.y = 0.0;\r\n        //     if (this.u.y < 0.0) { this.u.y = -this.u.y; }\r\n        // }\r\n        this.needCompute = true;\r\n    }\r\n    public CheckLine(edges: Edge[]) {\r\n        for (let i = 0; i < edges.length; ++i) {\r\n            let e = edges[i];\r\n            if (e.n0 !== this && e.n1 !== this) {\r\n                const dis = this.PointCloseToLine(e.n0.v, e.n1.v, this.v);\r\n                if (dis[0]) {\r\n                    const p = new NVector3(dis[0], dis[1]);\r\n                    const dis2 = p.Distance(this.v);\r\n                    if (dis2 < 5) {\r\n                        this.needCompute = false;\r\n                        // console.log(dis2);\r\n                        //    this.f.x *= -1;\r\n                        //    this.f.y *= -1;\r\n                        //    this.f.z *= -1;\r\n                        p.Unitize();\r\n                        const nv = NVector3.Normalize(this.v);\r\n\r\n                        const vv = new NVector3(p.x - nv.x, p.y - nv.y, p.z - nv.z);\r\n                        this.f = vv;\r\n                        // this.v.x += vv.x ;\r\n                        // this.v.y += vv.y ;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public PointCloseToLine(p: NVector3, n0: NVector3, n1: NVector3) {\r\n        let dx = n1.x - n0.x,\r\n            dy = n1.y - n0.y,\r\n            t = ((p.x - n0.x) * dx + (p.y - n0.y) * dy) / (dx * dx + dy * dy),\r\n            x = this.Lerp(n0.x, n1.x, t),\r\n            y = this.Lerp(n0.y, n1.y, t);\r\n        return [x, y];\r\n    }\r\n    public Lerp(a: number, b: number, t: number) { return a + t * (b - a); }\r\n}\r\n","import { GraphSystem } from '..';\r\nexport class CanvasCore {\r\n    graphSystem: GraphSystem;\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n\r\n    divLocalMain: HTMLElement;\r\n    divCanvas: HTMLElement;\r\n    divUI: HTMLElement;\r\n\r\n    ctx: CanvasRenderingContext2D;\r\n    timer: NodeJS.Timer | number;\r\n    click: boolean = false;\r\n    pressed: boolean = false;\r\n    prevent: boolean = false;\r\n    delay: number = 500;\r\n    down: boolean = false;\r\n    t: number = 0.0;\r\n    width: number;\r\n    height: number;\r\n    constructor(graphSystem: GraphSystem, width: number = 400, height: number = 300) {\r\n        this.graphSystem = graphSystem;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const host = document.getElementById(graphSystem.id);\r\n        if (!host) { return; } this.host = host;\r\n\r\n        this.InitCanvas();\r\n    }\r\n    InitCanvas() {\r\n        const divLocalMain = document.createElement('div');\r\n        if (!divLocalMain) { return; } this.divLocalMain = divLocalMain;\r\n        this.divLocalMain.style.display = 'flex';\r\n        // this.divLocalMain.style.width = '100%';\r\n        this.divLocalMain.style.width = this.width + 'px'; // this.host.clientWidth;\r\n        this.divLocalMain.style.height = this.height + 'px'; // this.host.clientHeight;\r\n        this.divLocalMain.style.margin = '10px';\r\n        this.divLocalMain.style.padding = '10px';\r\n        this.host.append(divLocalMain);\r\n\r\n        const divCanvas = document.createElement('div');\r\n        if (!divCanvas) { return; } this.divCanvas = divCanvas;\r\n        // this.divCanvas.style.width = '50%';\r\n        this.divLocalMain.append(divCanvas);\r\n\r\n        const canvas = document.createElement('canvas');\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            this.divCanvas.append(this.canvas);\r\n\r\n            this.canvas.width = this.width; // this.host.clientWidth;\r\n            this.canvas.height = this.height; // this.host.clientHeight;\r\n            this.canvas.style.backgroundColor = '#aaaaaa';\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.InitUI();\r\n                this.Init();\r\n            }\r\n        }\r\n    }\r\n    InitUI() {\r\n        const divUI = document.createElement('div');\r\n        if (!divUI) { return; } this.divUI = divUI;\r\n        this.divLocalMain.append(divUI);\r\n        this.divUI.style.marginLeft = '10px';\r\n        this.divUI.style.width = '100%';\r\n        // this.divUI.style.display = 'grid';\r\n\r\n        const btn = document.createElement('button');\r\n        btn.textContent = 'reset';\r\n        btn.onclick = () => { this.graphSystem.InitGraph(); };\r\n        this.divUI.append(btn);\r\n\r\n        let p = document.createElement('p');\r\n        if (!p) { return; } this.divUI.append(p);\r\n        p.textContent = 'length';\r\n\r\n        let input = document.createElement('input');\r\n        input.oninput = () => {\r\n            const val = +input.value as number;\r\n            this.graphSystem.graph.UpdateLength(val);\r\n        };\r\n        input.type = 'range';\r\n        input.min = '10';\r\n        input.max = '100.0';\r\n        input.value = '10';\r\n        this.divUI.append(input);\r\n\r\n        p = document.createElement('p');\r\n        if (!p) { return; } this.divUI.append(p);\r\n        p.innerHTML = '1. clikc on canvas to populate a node! <br> ';\r\n        p.innerHTML += '2. drag a node to move! <br> ';\r\n    }\r\n    Init() {\r\n        this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        // this.ctx.scale(2, 2);\r\n        this.ctx.scale(1, 1);\r\n        this.EventBind();\r\n        this.Loop();\r\n    }\r\n    EventBind() {\r\n        this.canvas.onclick = (e: MouseEvent) => {\r\n            this.prevent = false;\r\n            this.timer = setTimeout(\r\n                () => {\r\n                    if (!this.prevent) {\r\n                        if (!this.click) { return; }\r\n                        this.MouseClick(e);\r\n                    }\r\n                    this.prevent = false;\r\n                },\r\n                this.delay);\r\n        };\r\n        this.canvas.ondblclick = (e: MouseEvent) => {\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.MouseDoubleClick(e);\r\n        };\r\n        this.canvas.addEventListener('wheel', (e: WheelEvent) => this.MouseWheel(e, e.deltaY));\r\n\r\n        // this.canvas.onclick = (e: MouseEvent) => {\r\n        //     this.timer = setTimeout(() => {\r\n        //         if (!this.prevent) { this.MouseClick(e); }\r\n        //         this.prevent = false;\r\n        //     }, this.delay);\r\n        // };\r\n        // this.canvas.ondblclick = (e: MouseEvent) => {\r\n        //     clearTimeout(this.timer as number);\r\n        //     this.prevent = true;\r\n        //     this.MouseDoubleClick(e);\r\n        // };\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.click = true;\r\n            this.pressed = true;\r\n            this.MouseDown(e);\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.pressed = false;\r\n            this.MouseUp(e);\r\n        };\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            if (this.pressed) { this.click = false; this.MouseDrag(e); }\r\n            this.MouseMove(e);\r\n        };\r\n        window.onresize = (e: UIEvent) => this.Resize(e);\r\n\r\n    }\r\n    Resize(e: UIEvent) {\r\n        // console.log(e);\r\n        // this.canvas.width = this.divCanvas.clientWidth;\r\n        // this.canvas.height = this.divCanvas.clientHeight;\r\n    }\r\n    Loop() {\r\n        requestAnimationFrame(() => { this.Loop(); });\r\n        this.ctx.clearRect(-10, -10, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.fillStyle = '#dddddd';\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(-500, -500, 1000, 1000);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n        this.Render(this.ctx);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(ctx);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        //\r\n    }\r\n    MouseWheel(e: WheelEvent, deltaY: number) {\r\n        // console.log(e);\r\n    }\r\n}","import { Graph } from './Core/Graph';\r\nimport { NVector3 } from '../../../../../../lib/NJSCore';\r\nimport { CanvasCore } from './CanvasCore';\r\nexport class GraphSystem {\r\n    CanvasCore: CanvasCore;\r\n    graph: Graph;\r\n    t = 0.9;\r\n    id: string;\r\n    m: NVector3 = new NVector3(0, 0, 0);\r\n    constructor(id: string) {\r\n        this.id = id;\r\n        this.CanvasCore = new CanvasCore(this);\r\n\r\n        this.Init();\r\n        this.InitGraph();\r\n    }\r\n    Init() {\r\n        this.CanvasCore.Render = (ctx: CanvasRenderingContext2D) => this.Render(ctx);\r\n        this.CanvasCore.MouseDown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.CanvasCore.MouseClick = (e: MouseEvent) => this.MouseClick(e);\r\n        this.CanvasCore.MouseDoubleClick = (e: MouseEvent) => this.MouseDoubleClick(e);\r\n        this.CanvasCore.MouseUp = (e: MouseEvent) => this.MouseUp(e);\r\n        this.CanvasCore.MouseMove = (e: MouseEvent) => this.MouseMove(e);\r\n        this.CanvasCore.MouseDrag = (e: MouseEvent) => this.MouseDrag(e);\r\n        // console.log('Graph system B');\r\n    }\r\n    InitGraph() {\r\n        this.graph = new Graph();\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.graph.Render(ctx);\r\n\r\n        ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        ctx.beginPath();\r\n        ctx.arc(this.m.x, this.m.y, 2.5, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        for (let i = -10; i < 10; ++i) {\r\n            for (let j = -10; j < 10; ++j) {\r\n                ctx.beginPath();\r\n                ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n                ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n        }\r\n    }\r\n    // .......................................................................................\r\n    mouseRemap(e: MouseEvent) {\r\n        // this.m.x = ((e.x - this.CanvasCore.canvas.offsetLeft) - this.CanvasCore.canvas.width * 0.5) * 0.1;\r\n        // this.m.y = ((e.y - this.CanvasCore.canvas.offsetTop) - this.CanvasCore.canvas.height * 0.5) * 0.1;\r\n        this.m.x = e.offsetX - this.CanvasCore.canvas.width * 0.5// - this.CanvasCore.canvas.offsetLeft // ((e.x - this.CanvasCore.canvas.offsetLeft) - this.CanvasCore.canvas.width * 0.5) * 1;\r\n        this.m.y = e.offsetY - this.CanvasCore.canvas.height * 0.5// - this.CanvasCore.canvas.offsetTop // ((e.y - this.CanvasCore.canvas.offsetTop) - this.CanvasCore.canvas.height * 0.5) * 1;\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        this.graph.MouseDown(this.m.x, this.m.y);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        this.graph.MouseMove(this.m.x, this.m.y);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        this.graph.MouseDrag(this.m.x, this.m.y);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        this.graph.MouseLeftClick(this.m.x, this.m.y);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        console.log('d click');\r\n    }\r\n}","import { NVector3 } from '../../../../../../../lib/NJSCore';\r\n// import { Blank } from './Blank';\r\nexport class Graph {\r\n    nodes: Node[] = [];\r\n    edges: Edge[] = [];\r\n    m: NVector3;\r\n    capture: Node | undefined = undefined;\r\n    historyTimer = 0.0;\r\n    collisionTrajectory: NVector3[] = [];\r\n    constructor() {\r\n        this.m = new NVector3(500, 500);\r\n        this.AddNode(50, 50);\r\n        this.AddNode(100, 100);\r\n        this.AddNode(100, 50);\r\n        this.AddEdge(this.nodes[0], this.nodes[1]);\r\n        this.AddEdge(this.nodes[1], this.nodes[2]);\r\n        this.AddEdge(this.nodes[2], this.nodes[0]);\r\n    }\r\n    UpdateLength(v: number) {\r\n        for (let i = 0; i < this.edges.length; ++i) {\r\n            this.edges[i].targetLength = v;\r\n        }\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n        this.capture = this.FindNode(x, y);\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        const n = this.AddNode(x, y);\r\n        const cn = this.FindCloseNode(n);\r\n        if (cn) {\r\n            this.AddEdge(n, cn);\r\n        }\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.capture) {\r\n            this.capture.v.x = x;\r\n            this.capture.v.y = y;\r\n        }\r\n    }\r\n    AddNode(x: number, y: number) {\r\n        const n = new Node(new NVector3(x, y), NVector3.Zero(), 2);\r\n        this.nodes.push(n);\r\n        return n;\r\n    }\r\n    AddEdge(n0: Node, n1: Node) {\r\n        const e = new Edge(n0, n1);\r\n        this.edges.push(e);\r\n        return e;\r\n    }\r\n    FindCloseNode(n: Node, dis: number = 150000) {\r\n        let index = -1;\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            if (this.nodes[i] !== n) {\r\n                let theDis = this.nodes[i].v.Distance(n.v);\r\n                if (theDis < dis) {\r\n                    dis = theDis;\r\n                    index = i;\r\n                }\r\n            }\r\n        }\r\n        if (index !== -1) {\r\n            return this.nodes[index];\r\n        }\r\n        return undefined;\r\n    }\r\n    FindNode(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            let theDis = this.nodes[i].v.Distance(this.m);\r\n            if (theDis < 10) {\r\n                this.capture = this.nodes[i];\r\n                console.log(this.capture.colNodes);\r\n                return this.nodes[i];\r\n            }\r\n        }\r\n        this.capture = undefined;\r\n        return undefined;\r\n    }\r\n    public Move(atr: NVector3, damping: number, g: number = -0.3, dt: number) {\r\n        // Vector3d dv = atr - n.p;\r\n        // double dist = dv.Length;\r\n        // dv.Unitize();\r\n        // //  n.f = dv * (1.0 / (dist));\r\n        // n.f = dv * Math.Exp(-0.001 * dist * dist) * 0.1;\r\n        // n.Move(dt, damping);\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            const n = this.nodes[i];\r\n            // n.f = Vector3d.ZAxis * g;\r\n            n.f.x *= g;\r\n            n.f.y *= g;\r\n            n.f.z *= g;\r\n            const dv = new NVector3(atr.x - n.v.x, atr.y - n.v.y, atr.z - n.v.z);\r\n            const L = dv.Length();\r\n            // console.log(L);\r\n            dv.Unitize();\r\n            const x = dv.x * Math.exp(-0.001 * L * L) * 10.1; // + Vector3d.ZAxis.x * g;\r\n            const y = dv.y * Math.exp(-0.001 * L * L) * 10.1; // + Vector3d.ZAxis.y * g;\r\n            const z = dv.z * Math.exp(-0.001 * L * L) * 10.1; // + Vector3d.ZAxis.z * g;\r\n            if (!isNaN(x)) {\r\n                n.f.x = x; // + Vector3d.ZAxis.x * g;\r\n                n.f.y = y; // + Vector3d.ZAxis.y * g;\r\n                n.f.z = z; // + Vector3d.ZAxis.z * g;\r\n            }\r\n            // console.log(dv.x, L );\r\n            // console.log(dv.x * Math.exp(-0.1 * L * L) );\r\n            // n.Move(dt, damping);\r\n        }\r\n        // foreach(Node n in nodes) {\r\n        //     Vector3d dv = atr - n.p;\r\n        //     double L = dv.Length;\r\n        //     dv.Unitize();\r\n        //     n.f = dv * Math.Exp(-0.001 * L * L) * 0.1 + Vector3d.ZAxis * g;\r\n        //   }\r\n        //   foreach(Edge e in edges) {\r\n        //     e.ApplySpringForce();\r\n        //   }\r\n        //   foreach(Node n in nodes) {\r\n        //     n.Move(dt, damping);\r\n        //   }\r\n        for (let i = 0; i < this.edges.length; ++i) {\r\n            this.edges[i].ApplySpringForce();\r\n        }\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            this.nodes[i].CheckLine(this.edges);\r\n        }\r\n\r\n        for (let j = 0; j < this.nodes.length ; ++j) {\r\n            this.nodes[j].isCol = false;\r\n        }\r\n\r\n        for (let j = 0; j < this.nodes.length; ++j) {\r\n            let n0 = this.nodes[j];\r\n            for (let i = 0 ; i < this.nodes.length; ++i) {\r\n                let n1 = this.nodes[i];\r\n                if (n0 === n1) { continue; }\r\n                if (n0.v.Distance(n1.v) < 40) {\r\n                    const vec = NVector3.Sub(n0.u, n1.u);\r\n                    // // const dis = NVector3.Distance(this.pos, n1.v);\r\n                    const nor = NVector3.Normalize(vec);\r\n                    // const falloff = 0.1; // NVector3.CalculateFalloff(n0.v, n1.v, 1, 0.1);\r\n                    const velocity = NVector3.Scale(nor, 1);\r\n                    n0.u = NVector3.Add(n0.u, velocity);\r\n\r\n                    // const vec = NVector3.Sub(this.vec, this.listCollision[i].vec);\r\n                    // // const dis = NVector3.Distance(this.vec, this.listCollision[i].vec);\r\n                    // const nor = NVector3.Normalize(vec);\r\n                    // // const falloff = NVector3.CalculateFalloff(this.vec, this.listCollision[i].vec, dis, 0.1);\r\n                    // this.velocity = NVector3.Scale(nor, Math.random() * this.graph.optiLevel);\r\n                    // // console.log(this.velocity.x);\r\n                    // this.vec = NVector3.Add(this.vec, this.velocity);\r\n                    n0.isCol = true;\r\n                    this.historyTimer += 0.1;\r\n                    if (this.historyTimer  > 5 ) {\r\n                        // console.log('the node', i , 'is within the node ', j  );\r\n                        n0.colNodes.push(n1);\r\n\r\n                        this.historyTimer = 0.0;\r\n\r\n                        this.collisionTrajectory.push(new NVector3(n0.v.x, n0.v.y,  (Math.random() + 3) * 3)); // pos\r\n\r\n                        const prob = Math.random();\r\n                        if (prob < 0.3) {\r\n                            this.collisionTrajectory.push(new NVector3(100, 0, 0)); // col\r\n                        } else if (0.3 < prob && prob < 0.6) {\r\n                            this.collisionTrajectory.push(new NVector3(0, 100, 0)); // col\r\n                        } else {\r\n                            this.collisionTrajectory.push(new NVector3(0, 0, 100)); // col\r\n                        }\r\n                    }\r\n                    // console.log(velocity);\r\n                } else {\r\n                    // n0.isCol = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            this.nodes[i].Move(dt, damping);\r\n        }\r\n    }\r\n    // .... vis\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n\r\n        // ctx.  = 'lighter';\r\n        for (let i = 0 ; i < this.collisionTrajectory.length; i += 2) {\r\n            const v = this.collisionTrajectory[i];\r\n            const c = this.collisionTrajectory[i + 1];\r\n            ctx.beginPath();\r\n            ctx.fillStyle = `rgba(${c.x}, ${c.y}, ${c.z}, 0.1)`;\r\n            ctx.arc(v.x, v.y, v.z, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        // ctx.globalCompositeOperation = 'source-over';\r\n\r\n        this.Move(this.m, 0.9, 0, 0.1);\r\n        ctx.strokeStyle = '#000ff0';\r\n        ctx.lineWidth = 1;\r\n        for (let i = 0; i < this.edges.length; ++i) {\r\n            ctx.beginPath();\r\n            if (NVector3.Distance(this.edges[i].n0.v, this.edges[i].n1.v) < this.edges[i].targetLength - 5) {\r\n                ctx.strokeStyle = '#ff0000';\r\n                this.edges[i].n0.isShort = true;\r\n                this.edges[i].n1.isShort = true;\r\n            }\r\n            ctx.moveTo(this.edges[i].n0.v.x, this.edges[i].n0.v.y);\r\n            ctx.lineTo(this.edges[i].n1.v.x, this.edges[i].n1.v.y);\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n        }\r\n        ctx.fillStyle = '#0000ff';\r\n        for (let i = 0; i < this.nodes.length; ++i) {\r\n            ctx.beginPath();\r\n            if (this.nodes[i].isShort) {\r\n                ctx.fillStyle = '#fff000';\r\n                this.nodes[i].isShort = false;\r\n            }\r\n            ctx.arc(this.nodes[i].v.x, this.nodes[i].v.y, this.nodes[i].m * 5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(this.nodes[i].v.x, this.nodes[i].v.y, 20, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            if (this.nodes[i].isCol) {\r\n                ctx.lineWidth = 4.5;\r\n                ctx.strokeStyle = '#ff0000';\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n                ctx.strokeStyle = '#000000';\r\n            }\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}\r\nclass Edge {\r\n    n0: Node;\r\n    n1: Node;\r\n    public targetLength: number = 1.05;\r\n    public SpringConstant: number = 10.5;\r\n    constructor(_n0: Node, _n1: Node) {\r\n        this.n0 = _n0;\r\n        this.n1 = _n1;\r\n        const dis = this.n0.v.Distance(this.n1.v) - 10;\r\n        this.targetLength = dis < 50 ? 60 : dis;\r\n    }\r\n    public ApplySpringForce() {\r\n        const dp: NVector3 = new NVector3(this.n1.v.x - this.n0.v.x, this.n1.v.y - this.n0.v.y, this.n1.v.z - this.n0.v.z);\r\n        const dist: number = dp.Length();\r\n        dp.Unitize();\r\n        this.n0.f.x += dp.x * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n0.f.y += dp.y * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n0.f.z += dp.z * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n1.f.x -= dp.x * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n1.f.y -= dp.y * (dist - this.targetLength) * this.SpringConstant;\r\n        this.n1.f.z -= dp.z * (dist - this.targetLength) * this.SpringConstant;\r\n    }\r\n}\r\nexport class Node {\r\n    fixed: boolean = false;\r\n    needCompute: boolean = true;\r\n    v: NVector3;\r\n    u: NVector3;\r\n    f: NVector3;\r\n    m: number = 1;\r\n    isShort: boolean = false;\r\n    isCol: boolean = false;\r\n    colNodes: Node[] = [];\r\n    constructor(v: NVector3, u: NVector3, mass: number = 1) {\r\n        this.v = v;\r\n        this.u = u;\r\n        this.f = NVector3.Origin();\r\n        this.m = mass;\r\n    }\r\n    public Move(dt: number = 0.5, damping: number = 0.99) {\r\n        if (this.fixed) { return; }\r\n        // if (!this.needCompute) { this.needCompute = true; return; }\r\n        this.u.x *= damping;\r\n        this.u.y *= damping;\r\n        this.u.z *= damping;\r\n\r\n        this.u.x += this.f.x * (dt / this.m);\r\n        this.u.y += this.f.y * (dt / this.m);\r\n        this.u.z += this.f.z * (dt / this.m);\r\n\r\n        this.v.x += this.u.x * dt;\r\n        this.v.y += this.u.y * dt;\r\n        this.v.z += this.u.z * dt;\r\n\r\n        // console.log(this.u);\r\n        // console.log(this.f);\r\n        // console.log(this.v.x, this.v.y);\r\n        // if (this.v.y < 0.0) {\r\n        //     this.v.y = 0.0;\r\n        //     if (this.u.y < 0.0) { this.u.y = -this.u.y; }\r\n        // }\r\n        this.needCompute = true;\r\n    }\r\n    public CheckLine(edges: Edge[]) {\r\n        for (let i = 0; i < edges.length; ++i) {\r\n            let e = edges[i];\r\n            if (e.n0 !== this && e.n1 !== this) {\r\n                const dis = this.PointCloseToLine(e.n0.v, e.n1.v, this.v);\r\n                if (dis[0]) {\r\n                    const p = new NVector3(dis[0], dis[1]);\r\n                    const dis2 = p.Distance(this.v);\r\n                    if (dis2 < 5) {\r\n                        this.needCompute = false;\r\n                        // console.log(dis2);\r\n                        //    this.f.x *= -1;\r\n                        //    this.f.y *= -1;\r\n                        //    this.f.z *= -1;\r\n                        p.Unitize();\r\n                        const nv = NVector3.Normalize(this.v);\r\n\r\n                        const vv = new NVector3(p.x - nv.x, p.y - nv.y, p.z - nv.z);\r\n                        this.f = vv;\r\n                        // this.v.x += vv.x ;\r\n                        // this.v.y += vv.y ;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public PointCloseToLine(p: NVector3, n0: NVector3, n1: NVector3) {\r\n        let dx = n1.x - n0.x,\r\n            dy = n1.y - n0.y,\r\n            t = ((p.x - n0.x) * dx + (p.y - n0.y) * dy) / (dx * dx + dy * dy),\r\n            x = this.Lerp(n0.x, n1.x, t),\r\n            y = this.Lerp(n0.y, n1.y, t);\r\n        return [x, y];\r\n    }\r\n    public Lerp(a: number, b: number, t: number) { return a + t * (b - a); }\r\n}","import { GraphSystem } from '..';\r\nexport class CanvasCore {\r\n    graphSystem: GraphSystem;\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n\r\n    divLocalMain: HTMLElement;\r\n    divCanvas: HTMLElement;\r\n    divUI: HTMLElement;\r\n\r\n    ctx: CanvasRenderingContext2D;\r\n    timer: NodeJS.Timer | number;\r\n    click: boolean = false;\r\n    pressed: boolean = false;\r\n    prevent: boolean = false;\r\n    delay: number = 500;\r\n    down: boolean = false;\r\n    t: number = 0.0;\r\n    width: number;\r\n    height: number;\r\n    constructor(graphSystem: GraphSystem, width: number = 400, height: number = 300) {\r\n        this.graphSystem = graphSystem;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const host = document.getElementById(graphSystem.id);\r\n        if (!host) { return; } this.host = host;\r\n\r\n        this.InitCanvas();\r\n    }\r\n    InitCanvas() {\r\n        const divLocalMain = document.createElement('div');\r\n        if (!divLocalMain) { return; } this.divLocalMain = divLocalMain;\r\n        this.divLocalMain.style.display = 'flex';\r\n        // this.divLocalMain.style.width = '100%';\r\n        this.divLocalMain.style.width = this.width + 'px'; // this.host.clientWidth;\r\n        this.divLocalMain.style.height = this.height + 'px'; // this.host.clientHeight;\r\n        this.divLocalMain.style.margin = '10px';\r\n        this.divLocalMain.style.padding = '10px';\r\n        this.host.append(divLocalMain);\r\n\r\n        const divCanvas = document.createElement('div');\r\n        if (!divCanvas) { return; } this.divCanvas = divCanvas;\r\n        // this.divCanvas.style.width = '50%';\r\n        this.divLocalMain.append(divCanvas);\r\n\r\n        const canvas = document.createElement('canvas');\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            this.divCanvas.append(this.canvas);\r\n\r\n            this.canvas.width = this.width; // this.host.clientWidth;\r\n            this.canvas.height = this.height; // this.host.clientHeight;\r\n            this.canvas.style.backgroundColor = '#aaaaaa';\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.InitUI();\r\n                this.Init();\r\n            }\r\n        }\r\n    }\r\n    InitUI() {\r\n        const divUI = document.createElement('div');\r\n        if (!divUI) { return; } this.divUI = divUI;\r\n        this.divLocalMain.append(divUI);\r\n        this.divUI.style.marginLeft = '10px';\r\n        this.divUI.style.width = '100%';\r\n        // this.divUI.style.display = 'grid';\r\n\r\n        const btn = document.createElement('button');\r\n        btn.textContent = 'reset';\r\n        btn.onclick = () => { this.graphSystem.InitGraph(); };\r\n        this.divUI.append(btn);\r\n\r\n        let p = document.createElement('p');\r\n        if (!p) { return; } this.divUI.append(p);\r\n        p.textContent = 'length';\r\n\r\n        let input = document.createElement('input');\r\n        input.oninput = () => {\r\n            const val = +input.value as number;\r\n            this.graphSystem.graph.UpdateLength(val);\r\n        };\r\n        input.type = 'range';\r\n        input.min = '10';\r\n        input.max = '100.0';\r\n        input.value = '10';\r\n        this.divUI.append(input);\r\n\r\n        p = document.createElement('p');\r\n        if (!p) { return; } this.divUI.append(p);\r\n        p.innerHTML = '1. clikc on canvas to populate a node! <br> ';\r\n        p.innerHTML += '2. drag a node to move! <br> ';\r\n    }\r\n    Init() {\r\n        this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        // this.ctx.scale(2, 2);\r\n        this.ctx.scale(1, 1);\r\n        this.EventBind();\r\n        this.Loop();\r\n    }\r\n    EventBind() {\r\n        this.canvas.onclick = (e: MouseEvent) => {\r\n            this.prevent = false;\r\n            this.timer = setTimeout(\r\n                () => {\r\n                    if (!this.prevent) {\r\n                        if (!this.click) { return; }\r\n                        this.MouseClick(e);\r\n                    }\r\n                    this.prevent = false;\r\n                },\r\n                this.delay);\r\n        };\r\n        this.canvas.ondblclick = (e: MouseEvent) => {\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.MouseDoubleClick(e);\r\n        };\r\n        this.canvas.addEventListener('wheel', (e: WheelEvent) => this.MouseWheel(e, e.deltaY));\r\n\r\n        // this.canvas.onclick = (e: MouseEvent) => {\r\n        //     this.timer = setTimeout(() => {\r\n        //         if (!this.prevent) { this.MouseClick(e); }\r\n        //         this.prevent = false;\r\n        //     }, this.delay);\r\n        // };\r\n        // this.canvas.ondblclick = (e: MouseEvent) => {\r\n        //     clearTimeout(this.timer as number);\r\n        //     this.prevent = true;\r\n        //     this.MouseDoubleClick(e);\r\n        // };\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.click = true;\r\n            this.pressed = true;\r\n            this.MouseDown(e);\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.pressed = false;\r\n            this.MouseUp(e);\r\n        };\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            if (this.pressed) { this.click = false; this.MouseDrag(e); }\r\n            this.MouseMove(e);\r\n        };\r\n        window.onresize = (e: UIEvent) => this.Resize(e);\r\n\r\n    }\r\n    Resize(e: UIEvent) {\r\n        // console.log(e);\r\n        // this.canvas.width = this.divCanvas.clientWidth;\r\n        // this.canvas.height = this.divCanvas.clientHeight;\r\n    }\r\n    Loop() {\r\n        requestAnimationFrame(() => { this.Loop(); });\r\n        this.ctx.clearRect(-10, -10, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.fillStyle = '#dddddd';\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(-500, -500, 1000, 1000);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n        this.Render(this.ctx);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(ctx);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        //\r\n    }\r\n    MouseWheel(e: WheelEvent, deltaY: number) {\r\n        // console.log(e);\r\n    }\r\n}","import { Graph } from './Core/Graph';\r\nimport { NVector3 } from '../../../../../../lib/NJSCore';\r\nimport { CanvasCore } from './CanvasCore';\r\nexport class GraphSystem {\r\n    CanvasCore: CanvasCore;\r\n    graph: Graph;\r\n    t = 0.9;\r\n    id: string;\r\n    m: NVector3 = new NVector3(0, 0, 0);\r\n    constructor(id: string) {\r\n        this.id = id;\r\n        this.CanvasCore = new CanvasCore(this);\r\n\r\n        this.Init();\r\n        this.InitGraph();\r\n    }\r\n    Init() {\r\n        this.CanvasCore.Render = (ctx: CanvasRenderingContext2D) => this.Render(ctx);\r\n        this.CanvasCore.MouseDown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.CanvasCore.MouseClick = (e: MouseEvent) => this.MouseClick(e);\r\n        this.CanvasCore.MouseDoubleClick = (e: MouseEvent) => this.MouseDoubleClick(e);\r\n        this.CanvasCore.MouseUp = (e: MouseEvent) => this.MouseUp(e);\r\n        this.CanvasCore.MouseMove = (e: MouseEvent) => this.MouseMove(e);\r\n        this.CanvasCore.MouseDrag = (e: MouseEvent) => this.MouseDrag(e);\r\n        // console.log('Graph system');\r\n    }\r\n    InitGraph() {\r\n        this.graph = new Graph();\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.graph.Render(ctx);\r\n\r\n        ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        ctx.beginPath();\r\n        ctx.arc(this.m.x, this.m.y, 2.5, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        for (let i = -10; i < 10; ++i) {\r\n            for (let j = -10; j < 10; ++j) {\r\n                ctx.beginPath();\r\n                ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n                ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n        }\r\n    }\r\n    // .......................................................................................\r\n    mouseRemap(e: MouseEvent) {\r\n        // this.m.x = ((e.x - this.CanvasCore.canvas.offsetLeft) - this.CanvasCore.canvas.width * 0.5) * 0.1;\r\n        // this.m.y = ((e.y - this.CanvasCore.canvas.offsetTop) - this.CanvasCore.canvas.height * 0.5) * 0.1;\r\n        this.m.x = e.offsetX - this.CanvasCore.canvas.width * 0.5// - this.CanvasCore.canvas.offsetLeft // ((e.x - this.CanvasCore.canvas.offsetLeft) - this.CanvasCore.canvas.width * 0.5) * 1;\r\n        this.m.y = e.offsetY - this.CanvasCore.canvas.height * 0.5// - this.CanvasCore.canvas.offsetTop // ((e.y - this.CanvasCore.canvas.offsetTop) - this.CanvasCore.canvas.height * 0.5) * 1;\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        this.graph.MouseDown(this.m.x, this.m.y);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        this.graph.MouseMove(this.m.x, this.m.y);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        this.graph.MouseDrag(this.m.x, this.m.y);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        this.graph.MouseLeftClick(this.m.x, this.m.y);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        console.log('d click');\r\n    }\r\n}","import { GraphSystem as GS1 } from './GraphSystemA';\r\nimport { GraphSystem as GS2 } from './GraphSystemB';\r\nimport { GraphSystem as GS3 } from './GraphSystemC';\r\nexport class Implementation {\r\n    constructor(id: string) {\r\n        new GS1(id);\r\n        new GS2(id);\r\n        new GS3(id);\r\n    }\r\n}","import { CanvasCore } from './Implementation/GraphSystemA/CanvasCore';\r\nimport { Implementation } from './Implementation';\r\nexport class AppCanvasGraph {\r\n    canvasCore: CanvasCore;\r\n    implementation: Implementation;\r\n    host: HTMLElement;\r\n    static Init(id: string) {\r\n        const n = new AppCanvasGraph(id);\r\n        n.Dummy();\r\n    }\r\n    constructor(id: string = 'SandBox') {\r\n        const host = document.getElementById(id);\r\n        if (host) {\r\n            this.host = host;\r\n            this.host.style.overflow = 'auto';\r\n        }\r\n        this.implementation = new Implementation(id);\r\n    }\r\n    Dummy() {\r\n        //\r\n    }\r\n}\r\n","import { AppCanvasGraph } from './AppCanvasGraph';\nexport class Solution {\n    public divHost: HTMLElement;\n\n    constructor(id: string, index = 0) {\n        this.divHost = document.getElementById(id);\n\n        const div = document.createElement('div');\n        div.id ='ngl3d';\n        div.style.width = '100%';\n        div.style.height = '100%';\n        this.divHost.appendChild(div);\n\n        AppCanvasGraph.Init(div.id);\n    }\n    public destroy() {\n        try {\n            while (this.divHost !== undefined && this.divHost.lastElementChild !== undefined) {\n                this.divHost.removeChild(this.divHost.lastElementChild);\n            }\n        } catch (error) { console.debug(error) }\n    }\n}"],"names":["Graph","constructor","nodes","edges","m","capture","undefined","this","NVector3","AddNode","AddEdge","MouseDown","x","y","FindNode","MouseLeftClick","n","cn","FindCloseNode","MouseMove","MouseDrag","v","Node","push","n0","n1","e","Edge","dis","index","i","length","theDis","Distance","Move","atr","damping","g","dt","f","z","dv","L","Length","Unitize","Math","exp","isNaN","ApplySpringForce","CheckLine","Render","ctx","strokeStyle","lineWidth","beginPath","moveTo","lineTo","closePath","stroke","fillStyle","arc","PI","fill","_n0","_n1","targetLength","SpringConstant","dp","dist","u","mass","fixed","needCompute","PointCloseToLine","p","nv","vv","dx","dy","t","Lerp","a","b","CanvasCore","graphSystem","width","height","canvas","host","divLocalMain","divCanvas","divUI","timer","click","pressed","prevent","delay","down","document","getElementById","id","InitCanvas","createElement","style","display","margin","padding","append","backgroundColor","getContext","InitUI","Init","marginLeft","btn","textContent","onclick","InitGraph","innerHTML","translate","scale","EventBind","Loop","setTimeout","MouseClick","ondblclick","clearTimeout","MouseDoubleClick","addEventListener","MouseWheel","deltaY","onmousedown","onmouseup","MouseUp","onmousemove","window","onresize","Resize","requestAnimationFrame","clearRect","rect","GraphSystem","graph","Grid","j","mouseRemap","offsetX","offsetY","UpdateLength","input","oninput","val","value","type","min","max","console","log","historyTimer","collisionTrajectory","colNodes","isCol","vec","nor","velocity","random","prob","c","isShort","Implementation","GS1","GS2","GS3","AppCanvasGraph","static","Dummy","canvasCore","implementation","overflow","Solution","divHost","div","appendChild","destroy","lastElementChild","removeChild","error","debug"],"sourceRoot":""}