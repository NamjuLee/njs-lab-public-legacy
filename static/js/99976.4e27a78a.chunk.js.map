{"version":3,"file":"static/js/99976.4e27a78a.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Core/DefinitionIndeCanvasCore.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/Blank.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Core/ActiveCommandController.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Core/GeometryCommon.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/BallBounce.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/BallBounceClass.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/CircleGrid.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/CircleGridAttractors1.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/CircleGridAttractors2.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/DefinitionLine.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/DefinitionLine2.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/BoidSystem/BoidCore/BPath.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/BoidSystem/BoidCore/BoidContoller1.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/BoidSystem/BoidSystem01.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/BoidSystem/BoidCore/BoidContollerWander0.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/BoidSystem/BoidSystemWander0.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/BoidSystem/BoidCore/BoidContollerWander1.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/BoidSystem/BoidSystemWander1.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/BoidSystem/BoidSystem04.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/Dynamics/DynamicSystem/Core/DNode.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/Dynamics/DynamicSystem/DynamicSystem01.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/Dynamics/Dynamic01.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/Dynamics/Dynamic02.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/Dynamics/Dynamic03.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/Definition/OOP/index.ts","njslab/Workshop/workshop-canvas/NCanvas/Implementation/SceneCreativeCoding/index.ts"],"sourcesContent":["import { IndependentPanelCanvas } from '../../../lib/NJSCore';\r\nimport { SceneCreativeCoding } from '..';\r\nexport class DefinitionIndeCanvasCore {\r\n    scene: SceneCreativeCoding;\r\n    indeCanvas: IndependentPanelCanvas;\r\n    mOffX = -12;\r\n    mOffY = -12;\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        this.scene = SceneCreativeCoding;\r\n        this.scene.definitions.push(this);\r\n        this.InitIndeCanvas();\r\n    }\r\n    InitIndeCanvas() {\r\n        this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.NUIWrapper.NUI.independentPanelWrapper, 100, 100, 600, 350, true);\r\n        this.indeCanvas.title = 'Circle Grid with Attractors 2';\r\n        this.indeCanvas.btnHam.isHidden = true;\r\n        this.indeCanvas.btnMini.isHidden = true;\r\n        this.indeCanvas.RenderIndependentCanvas = (ctx: CanvasRenderingContext2D) => (this.RenderIndependentCanvas(ctx));\r\n    }\r\n    get width() {\r\n        return this.indeCanvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.indeCanvas.canvas.height;\r\n    }\r\n    Init(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    MouseMove(x: number, y: number) { /* */ }\r\n    MouseMovePre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMove(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDown(x: number, y: number) { /* */ }\r\n    MouseDownPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDown(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseUp(x: number, y: number) { /* */ }\r\n    MouseUpPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseUp(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDrag(x: number, y: number) { /* */ }\r\n    MouseDragPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDrag(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseLeftClick(x: number, y: number) { /* */ }\r\n    MouseLeftClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseLeftClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseMiddleClick(x: number, y: number) { /* */ }\r\n    MouseMiddleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMiddleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseRightClick(x: number, y: number) { /* */ }\r\n    MouseRightClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseRightClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDoubleClick(x: number, y: number) { /* */ }\r\n    MouseDoubleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDoubleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) { /* */ }\r\n    MouseWheelPre(x: number, y: number, v: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseWheel(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY, v);\r\n    }\r\n\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class Blank extends DefinitionIndeCanvasCore {\r\n    p: number [] = [0, 0];\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n    }\r\n    Init() {\r\n        //\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n      this.p = [x, y];\r\n    }\r\n}","import { CLICK_TYPE } from '../../../lib';\r\n\r\nimport { MouseEventData } from '../../../Model/AppCoreWrapper/IOWrapper/EventInteraction/MouseInteraction';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class ActiveCommandController {\r\n    scene: SceneCreativeCoding;\r\n\r\n    constructor(scene: SceneCreativeCoding) {\r\n        this.scene = scene;\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n\r\n        if (e.CLICK_TYPE === CLICK_TYPE.LEFT) {\r\n            this.MouseLeftClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MIDDLE) {\r\n            this.MouseMiddleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN_RIGHT) {\r\n            this.MouseRightClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOUBLE) {\r\n            this.MouseDoubleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MOVE) {\r\n            this.MouseMovePre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DRAG) {\r\n            this.MouseDragPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN) {\r\n            this.MouseDownPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.WHEEL) {\r\n            this.MouseWheelPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.UP) { this.MouseUpPre(e); return; }\r\n    }\r\n\r\n    // .......................................................\r\n    MouseDown(e: MouseEventData) {/* */ }\r\n    MouseDownPre(e: MouseEventData) {\r\n        this.scene.MouseDown(e.x, e.y);\r\n        this.MouseDown(e);\r\n    }\r\n    MouseLeftClick(e: MouseEventData) {/* */ }\r\n    MouseLeftClickPre(e: MouseEventData) {\r\n        this.scene.MouseLeftClick(e.x, e.y);\r\n        this.MouseLeftClick(e);\r\n    }\r\n    MouseMiddleClick(e: MouseEventData) {/* */ }\r\n    MouseMiddleClickPre(e: MouseEventData) {\r\n        this.scene.MouseMiddleClick(e.x, e.y);\r\n        this.MouseMiddleClick(e);\r\n    }\r\n    MouseRightClick(e: MouseEventData) { /* */ }\r\n    MouseRightClickPre(e: MouseEventData) {\r\n        this.scene.MouseRightClick(e.x, e.y);\r\n        this.MouseRightClick(e);\r\n    }\r\n    MouseUp(e: MouseEventData) { /* */ }\r\n    MouseUpPre(e: MouseEventData) {\r\n        this.scene.MouseUp(e.x, e.y);\r\n        this.MouseUp(e);\r\n\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {/* */ }\r\n    MouseDoubleClickPre(e: MouseEventData) {\r\n        this.scene.MouseDoubleClick(e.x, e.y);\r\n        this.MouseDoubleClick(e);\r\n    }\r\n    MouseMove(e: MouseEventData) {/* */ }\r\n    MouseMovePre(e: MouseEventData) {\r\n        this.scene.MouseMove(e.x, e.y);\r\n        this.MouseMove(e);\r\n    }\r\n    MouseDrag(e: MouseEventData) {/* */ }\r\n    MouseDragPre(e: MouseEventData) {\r\n        this.scene.MouseDrag(e.x, e.y);\r\n        this.MouseDrag(e);\r\n    }\r\n    MouseWheel(e: MouseEventData) {/* */ }\r\n    MouseWheelPre(e: MouseEventData) {\r\n        this.scene.MouseWheel(e.x, e.y, e.wheel);\r\n        // console.log(\"drag\");\r\n        this.MouseWheel(e);\r\n    }\r\n}","import { SceneCreativeCoding } from '..';\r\n\r\nexport class GeomeetryCommon {\r\n\r\n    scene: SceneCreativeCoding;\r\n\r\n    constructor(scene: SceneCreativeCoding) {\r\n        this.scene = scene;\r\n    }\r\n\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class BallBounce extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n    }\r\n    Init() {\r\n        //\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // Update the position of the shape\r\n        this.xpos = this.xpos + (this.xspeed * this.xdirection);\r\n        this.ypos = this.ypos + (this.yspeed * this.ydirection);\r\n\r\n        // Test to see if the shape exceeds the boundaries of the screen\r\n        // If it does, reverse its direction by multiplying by -1\r\n        if (this.xpos > this.width - this.rad || this.xpos < this.rad) {\r\n            this.xdirection *= -1;\r\n        }\r\n        if (this.ypos > this.height - this.rad || this.ypos < this.rad) {\r\n            this.ydirection *= -1;\r\n        }\r\n\r\n        // Draw the shape\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.xpos, this.ypos, this.rad, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class BallBounceClass extends DefinitionIndeCanvasCore {\r\n\r\n    Balls: Ball[] = [];\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        for (let b of this.Balls) { b.Render(ctx); }\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.Balls.push(new Ball(this, x, y));\r\n    }\r\n}\r\n\r\nclass Ball {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n\r\n    BallBounceClass: BallBounceClass;\r\n\r\n    color: string;\r\n\r\n    static GetRandomHex() {\r\n        return this.RGBToHex(Math.round(Math.random() * 255), Math.round(Math.random() * 255), Math.round(Math.random() * 255));\r\n    }\r\n    static RGBToHex(r: number, g: number, b: number) {\r\n        return '#' + [Math.round(r), Math.round(g), Math.round(b)].map(x => {\r\n            const hex = x.toString(16);\r\n            return hex.length === 1 ? '0' + hex : hex;\r\n        }).join('');\r\n    }\r\n    constructor(BallBounceClass: BallBounceClass, x: number, y: number) {\r\n        this.BallBounceClass = BallBounceClass;\r\n        this.xpos = x;\r\n        this.ypos = y;\r\n        this.xdirection = (Math.random() * 2) - 1;\r\n        this.ydirection = (Math.random() * 2) - 1;\r\n        this.rad = (Math.random() * 50) + 10;\r\n        this.color = Ball.GetRandomHex();\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.xpos = this.xpos + (this.xspeed * this.xdirection);\r\n        this.ypos = this.ypos + (this.yspeed * this.ydirection);\r\n        if (this.xpos > this.BallBounceClass.width - this.rad || this.xpos < this.rad) {\r\n            this.xdirection *= -1;\r\n        }\r\n        if (this.ypos > this.BallBounceClass.height - this.rad || this.ypos < this.rad) {\r\n            this.ydirection *= -1;\r\n        }\r\n\r\n        // Draw the shape\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n        ctx.arc(this.xpos, this.ypos, this.rad, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class CircleGrid extends DefinitionIndeCanvasCore {\r\n\r\n    mouse: number[] = [0, 0];\r\n    pts: number[][];\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.mouse = [0, 0];\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.pts = [];\r\n        let xInterval = 40;\r\n        let yInterval = 40;\r\n\r\n        let xDis = this.width / xInterval;\r\n        let yDis = this.height / yInterval;\r\n\r\n        for (let j = 0; j < yInterval; j += 1) {\r\n            for (let i = 0; i < xInterval; i += 1) {\r\n                this.pts.push([i * xDis, j * yDis]);\r\n            }\r\n        }\r\n\r\n        let i = 0;\r\n        for (let p of this.pts) {\r\n            if (i % 2 === 0) {\r\n                let col = [50, 50, 50, 1];\r\n                let dis = this.Distance(p[0], p[1], this.mouse[0], this.mouse[1]);\r\n                col[0] = dis;\r\n                ctx.strokeStyle = `rgba(${col[0]},${col[1]},${col[2]},${col[3]})`;\r\n\r\n                ctx.beginPath();\r\n                ctx.arc(p[0], p[1], dis / 10, 0, 3.14 * 2);\r\n                ctx.stroke();\r\n            }\r\n            i++;\r\n        }\r\n\r\n    }\r\n    Distance(x0: number, y0: number, x1: number, y1: number): number {\r\n        return Math.sqrt((x0 - x1) * (x0 - x1) + (y0 - y1) * (y0 - y1));\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class CircleGridAttractors1 extends DefinitionIndeCanvasCore {\r\n\r\n    mouse: number[] = [0, 0];\r\n    pts: number[][];\r\n\r\n    attrs: number[][] = [[0, 0]];\r\n    strength: number = 50;\r\n    falloff: number = 0.00005;\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.mouse = [0, 0];\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.pts = [];\r\n        let xInterval = 40;\r\n        let yInterval = 40;\r\n\r\n        let xDis = this.width / xInterval;\r\n        let yDis = this.height / yInterval;\r\n\r\n        for (let j = 0; j < yInterval; j += 1) {\r\n            for (let i = 0; i < xInterval; i += 1) {\r\n                this.pts.push([i * xDis, j * yDis]);\r\n            }\r\n        }\r\n\r\n        let i = 0;\r\n        for (let p of this.pts) {\r\n            if (i % 2 === 0) {\r\n                let col = [50, 255, 0, 1];\r\n\r\n                let dis = 0;\r\n                for (let j of this.attrs) {\r\n                    let distance = this.Attractor(p, j, this.strength, this.falloff);\r\n                    if (dis < distance) { dis = distance; }\r\n                }\r\n\r\n                col[2] += dis * 3;\r\n                ctx.strokeStyle = `rgba(${col[0]},${col[1]},${col[2]},${col[3]})`;\r\n\r\n                ctx.beginPath();\r\n                ctx.arc(p[0], p[1], 10 + dis, 0, 3.14 * 2);\r\n                ctx.stroke();\r\n            }\r\n            i++;\r\n        }\r\n\r\n    }\r\n    Attractor(pt: number[], attractor: number[], strength: number, falloff: number): number {\r\n        let v = this.Sub(pt, attractor);\r\n        let dist = this.Length(v);\r\n        let result = strength * Math.exp(-falloff * dist * dist);\r\n        return result;\r\n    }\r\n    Sub(v0: number[], v1: number[]): number[] {\r\n        return [v0[0] - v1[0], v0[1] - v1[1]];\r\n    }\r\n    Unitize(v: number[]): number[] {\r\n        let len = this.Length(v);\r\n        return [v[0] / len, v[1] / len];\r\n    }\r\n    Length(v: number[]) {\r\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.attrs[this.attrs.length - 1] = [x, y];\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.attrs.push([x, y]);\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) {\r\n        this.falloff += v * 0.0000001;\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class CircleGridAttractors2 extends DefinitionIndeCanvasCore {\r\n\r\n    mouse: number[] = [0, 0];\r\n    pts: number[][];\r\n\r\n    attrs: number[][] = [[0, 0]];\r\n    strength: number = 50;\r\n    falloff: number = 0.00005;\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.mouse = [0, 0];\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.pts = [];\r\n\r\n        let xInterval = 20;\r\n        let yInterval = 20;\r\n\r\n        let xDis = this.width / xInterval;\r\n        let yDis = this.height / yInterval;\r\n        // let xDis = this.scene.width / xInterval;\r\n        // let yDis = this.scene.height / yInterval;\r\n\r\n        for (let j = 0; j < yInterval; j += 1) {\r\n            for (let i = 0; i < xInterval; i += 1) {\r\n                this.pts.push([i * xDis, j * yDis]);\r\n            }\r\n        }\r\n\r\n        let i = 0;\r\n        for (let p of this.pts) {\r\n            if (i % 2 === 0) {\r\n                let col = [0, 20, 0, 1];\r\n\r\n                let dis = 0;\r\n                for (let j of this.attrs) {\r\n                    let distance = this.Attractor(p, j, this.strength, this.falloff);\r\n                    if (dis < distance) { dis = distance; }\r\n                }\r\n\r\n                col[2] += dis * 3;\r\n                ctx.strokeStyle = `rgba(${col[0]},${col[1]},${col[2]},${col[3]})`;\r\n\r\n                ctx.beginPath();\r\n                ctx.arc(p[0], p[1], 10 + dis, 0, 3.14 * 2);\r\n                ctx.stroke();\r\n            }\r\n            i++;\r\n        }\r\n\r\n    }\r\n    Attractor(pt: number[], attractor: number[], strength: number, falloff: number): number {\r\n        let v = this.Sub(pt, attractor);\r\n        let dist = this.Length(v);\r\n        let result = strength * Math.exp(-falloff * dist * dist);\r\n        return result;\r\n    }\r\n    Sub(v0: number[], v1: number[]): number[] {\r\n        return [v0[0] - v1[0], v0[1] - v1[1]];\r\n    }\r\n    Unitize(v: number[]): number[] {\r\n        let len = this.Length(v);\r\n        return [v[0] / len, v[1] / len];\r\n    }\r\n    Length(v: number[]) {\r\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.attrs[this.attrs.length - 1] = [x, y];\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.attrs.push([x, y]);\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) {\r\n        this.falloff += v * 0.0000001;\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class DefinitionLine extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    lines: Line[] = [];\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'Line';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.lines.push(new Line(10, 10, 50, 50));\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        for (let l of this.lines) {\r\n            l.Render(ctx);\r\n        }\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    MouseDown() {\r\n        const p1 = this.lines[this.lines.length - 1].p1;\r\n        this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1]));\r\n    }\r\n\r\n}\r\n\r\nclass Line {\r\n    p0: number[];\r\n    p1: number[];\r\n    constructor(x0: number, y0: number, x1: number, y1: number) {\r\n        this.p0 = [x0, y0];\r\n        this.p1 = [x1, y1];\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = 'red';\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0[0], this.p0[1]);\r\n        ctx.lineTo(this.p1[0], this.p1[1]);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '..';\r\n\r\nexport class DefinitionLine2 extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    lines: Line[] = [];\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'Line';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.lines.push(new Line(10, 10, 50, 50));\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        for (let l of this.lines) {\r\n            l.Render(ctx);\r\n        }\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    MouseDown() {\r\n        if (this.lines.length > 5) { this.lines.shift(); }\r\n        const p1 = this.lines[this.lines.length - 1].p1;\r\n        this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1]));\r\n    }\r\n}\r\n\r\nclass Line {\r\n    p0: number[];\r\n    p1: number[];\r\n    constructor(x0: number, y0: number, x1: number, y1: number) {\r\n        this.p0 = [x0, y0];\r\n        this.p1 = [x1, y1];\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = 'red';\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0[0], this.p0[1]);\r\n        ctx.lineTo(this.p1[0], this.p1[1]);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n}","import { NVector3, MathUtility } from '../../../../../lib';\r\n\r\nexport class BPath {\r\n\r\n    static GetRandomPath(xMin: number, yMin: number, xMax: number, yMax: number, num: number = 10) {\r\n        let vs = [];\r\n        for (let i = 0; i < num; ++i) {\r\n            let x = MathUtility.GetRandomIntInclusive(xMin, xMax);\r\n            let y = MathUtility.GetRandomIntInclusive(yMin, yMax);\r\n            vs.push(new NVector3(x, y, 0));\r\n        }\r\n        return vs;\r\n    }\r\n\r\n    constructor() {\r\n        //\r\n    }\r\n}","import { NVector3 } from '../../../../../lib';\r\n/*\r\nif (reset) {\r\n    num = 0;\r\n\r\n    bs = new BoidSystem(p0, p1);\r\n    // bs.InitTarget(p1);\r\n  }\r\n\r\n  num++;\r\n  A = num;\r\n\r\n  if(bs != null) {\r\n    exitBool = exit;\r\n    bs.Update();\r\n    p = bs.GetPoint();\r\n    // Print(bs.targetID.ToString());\r\n  }\r\n\r\n}\r\n\r\npublic BoidSystem bs;\r\n\r\npublic int num = 0;\r\n\r\npublic static bool exitBool = false;\r\n*/\r\n\r\nexport class BoidContoller1 {\r\n\r\n  boids: Boid[] = [];\r\n  targets: NVector3[];\r\n\r\n  constructor(targets: NVector3[]) {\r\n    this.boids = [];\r\n    this.targets = targets;\r\n\r\n    // for (let j = 0; j < p0.length; ++j ) {\r\n    //   for (let i = 0; i < 10; ++i ) {\r\n    //     let boid = new Boid(p0[j]);\r\n    //     boid.InitTarget(targets);\r\n    //     this.boids.push(boid);\r\n    //   }\r\n    // }\r\n\r\n  }\r\n  public AddAgent(x: number, y: number) {\r\n    let boid = new Boid(new NVector3(x, y));\r\n    boid.InitTarget(this.targets);\r\n    this.boids.push(boid);\r\n  }\r\n  public Update() {\r\n    this.Col();\r\n    for (let b of this.boids) {\r\n      b.Update();\r\n    }\r\n\r\n  }\r\n  public Col() {\r\n    for (let b of this.boids) {\r\n      b.col = false;\r\n    }\r\n\r\n    for (let j = 0; j < this.boids.length; ++j) {\r\n      let b0 = this.boids[j];\r\n      if (!b0.isRenderable) {\r\n        break;\r\n      }\r\n      for (let i = j + 1; i < this.boids.length; ++i) {\r\n        let b1 = this.boids[i];\r\n        let dis = b0.p.Distance(b1.p);\r\n        if (dis < 30) {\r\n          b1.col = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  public GetPoint() {\r\n    let pts: NVector3[] = [];\r\n    for (let b of this.boids) {\r\n      if (b.isRenderable) {\r\n        pts.push(b.p);\r\n      }\r\n    }\r\n    return pts;\r\n  }\r\n\r\n  // .......................................................................................................................\r\n\r\n  Render(ctx: CanvasRenderingContext2D) {\r\n    this.boids.forEach((b) => {\r\n      b.Render(ctx);\r\n    });\r\n  }\r\n}\r\n\r\nexport class Boid {\r\n\r\n  static list: Boid[] = [];\r\n\r\n  maxForce = 5; // 1; // 5;\r\n  maxVelocity = 5; // 1; // 8;\r\n  maxSpeed = 5; // 1; // 13.0;\r\n  mass = 10.2;\r\n\r\n  isRenderable = true;\r\n\r\n  p: NVector3;\r\n  targets: NVector3[];\r\n  target: NVector3;\r\n  targetID = 0;\r\n\r\n  col: boolean = false;\r\n  desiredVelocity: NVector3;\r\n  steering: NVector3;\r\n  velocity: NVector3 = new NVector3(0, 0, 0);\r\n\r\n  constructor(p: NVector3) {\r\n    this.p = p;\r\n    this.target = new NVector3(p.x, p.y, p.z);\r\n  }\r\n  public InitTarget(targets: NVector3[]) {\r\n    // Boid.list.Add(this);\r\n    this.targets = targets;\r\n    this.target = this.targets[this.targetID];\r\n  }\r\n  public Update() {\r\n    this.UpdateTarget();\r\n    // this.UpdateVec0();\r\n    // this.UpdateVec1();\r\n    // this.UpdateVecSlowDown1();\r\n    this.UpdateVecSlowDown2();\r\n\r\n  }\r\n  UpdateTarget() {\r\n    if (this.p.Distance(this.target) < 9) {\r\n      this.targetID++;\r\n      if (this.targetID < this.targets.length) {\r\n        this.target = this.targets[this.targetID];\r\n        if (this.targetID === this.targets.length - 1) {\r\n\r\n          // if (exitBool) {\r\n          //     this.isRenderable = false;\r\n          // }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  UpdateVec0() {\r\n    this.desiredVelocity = new NVector3(this.target.x - this.p.x, this.target.y - this.p.y, this.target.z - this.p.z);\r\n    this.desiredVelocity.Unitize();\r\n    this.desiredVelocity.x *= this.maxVelocity;\r\n    this.desiredVelocity.y *= this.maxVelocity;\r\n    this.desiredVelocity.z *= this.maxVelocity;\r\n\r\n    let x = (this.desiredVelocity.x - this.velocity.x) < this.maxForce ? this.desiredVelocity.x - this.velocity.x : this.maxForce;\r\n    let y = (this.desiredVelocity.y - this.velocity.y) < this.maxForce ? this.desiredVelocity.y - this.velocity.y : this.maxForce;\r\n    let z = (this.desiredVelocity.z - this.velocity.z) < this.maxForce ? this.desiredVelocity.z - this.velocity.z : this.maxForce;\r\n\r\n    this.steering = new NVector3(x / this.mass, y / this.mass, z / this.mass);\r\n\r\n    this.velocity.x = (this.velocity.x + this.steering.x) < this.maxSpeed ? this.velocity.x + this.steering.x : this.maxSpeed;\r\n    this.velocity.y = (this.velocity.y + this.steering.y) < this.maxSpeed ? this.velocity.y + this.steering.y : this.maxSpeed;\r\n    this.velocity.z = (this.velocity.z + this.steering.z) < this.maxSpeed ? this.velocity.z + this.steering.z : this.maxSpeed;\r\n\r\n    if (!this.col) {\r\n      // this.velocity = truncate(velocity + steering, maxSpeed);\r\n      this.p.x += this.velocity.x;\r\n      this.p.y += this.velocity.y;\r\n      this.p.z += this.velocity.z;\r\n    } else {\r\n      this.p.x += -this.steering.x * 0.8;\r\n      this.p.y += -this.steering.y * 0.8;\r\n      this.p.z += -this.steering.z * 0.8;\r\n\r\n    }\r\n  }\r\n  UpdateVec1() {\r\n    this.desiredVelocity = new NVector3(this.target.x - this.p.x, this.target.y - this.p.y, this.target.z - this.p.z);\r\n    // this.desiredVelocity = new NVector3(this.p.x - this.target.x , this.p.y - this.target.y ,  this.p.x - this.target.z );\r\n    this.desiredVelocity.Unitize();\r\n    this.desiredVelocity.x *= this.maxVelocity;\r\n    this.desiredVelocity.y *= this.maxVelocity;\r\n    this.desiredVelocity.z *= this.maxVelocity;\r\n\r\n    let x = (this.desiredVelocity.x - this.velocity.x); // < this.maxForce ? this.desiredVelocity.x - this.velocity.x : this.maxForce;\r\n    let y = (this.desiredVelocity.y - this.velocity.y); //  < this.maxForce ? this.desiredVelocity.y - this.velocity.y : this.maxForce;\r\n    let z = (this.desiredVelocity.z - this.velocity.z); // < this.maxForce ? this.desiredVelocity.z - this.velocity.z : this.maxForce;\r\n\r\n    this.steering = new NVector3(x / this.mass, y / this.mass, z / this.mass);\r\n\r\n    this.velocity.x = (this.velocity.x + this.steering.x) < this.maxSpeed ? this.velocity.x + this.steering.x : this.maxSpeed;\r\n    this.velocity.y = (this.velocity.y + this.steering.y) < this.maxSpeed ? this.velocity.y + this.steering.y : this.maxSpeed;\r\n    this.velocity.z = (this.velocity.z + this.steering.z) < this.maxSpeed ? this.velocity.z + this.steering.z : this.maxSpeed;\r\n\r\n    if (!this.col) {\r\n      // this.velocity = truncate(velocity + steering, maxSpeed);\r\n      this.p.x += this.velocity.x;\r\n      this.p.y += this.velocity.y;\r\n      this.p.z += this.velocity.z;\r\n    } else {\r\n      this.p.x += -this.steering.x * 0.8;\r\n      this.p.y += -this.steering.y * 0.8;\r\n      this.p.z += -this.steering.z * 0.8;\r\n\r\n    }\r\n  }\r\n  UpdateVecSlowDown1() {\r\n    this.desiredVelocity = new NVector3(this.target.x - this.p.x, this.target.y - this.p.y, this.target.z - this.p.z);\r\n    // this.desiredVelocity = new NVector3(this.p.x - this.target.x , this.p.y - this.target.y ,  this.p.x - this.target.z );\r\n    this.desiredVelocity.Unitize();\r\n    this.desiredVelocity.x *= this.maxVelocity;\r\n    this.desiredVelocity.y *= this.maxVelocity;\r\n    this.desiredVelocity.z *= this.maxVelocity;\r\n\r\n    let x = (this.desiredVelocity.x - this.velocity.x); // < this.maxForce ? this.desiredVelocity.x - this.velocity.x : this.maxForce;\r\n    let y = (this.desiredVelocity.y - this.velocity.y); //  < this.maxForce ? this.desiredVelocity.y - this.velocity.y : this.maxForce;\r\n    let z = (this.desiredVelocity.z - this.velocity.z); // < this.maxForce ? this.desiredVelocity.z - this.velocity.z : this.maxForce;\r\n\r\n    this.steering = new NVector3(x / this.mass, y / this.mass, z / this.mass);\r\n\r\n    this.velocity.x = (this.velocity.x + this.steering.x) < this.maxSpeed ? this.velocity.x + this.steering.x : this.maxSpeed;\r\n    this.velocity.y = (this.velocity.y + this.steering.y) < this.maxSpeed ? this.velocity.y + this.steering.y : this.maxSpeed;\r\n    this.velocity.z = (this.velocity.z + this.steering.z) < this.maxSpeed ? this.velocity.z + this.steering.z : this.maxSpeed;\r\n\r\n    if (!this.col) {\r\n\r\n      let i = this.maxSpeed / this.velocity.Length();\r\n      i = (i < 1.0) ? i : 1.0;\r\n      // this.velocity = truncate(velocity + steering, maxSpeed);\r\n      this.p.x += this.velocity.x * i;\r\n      this.p.y += this.velocity.y * i;\r\n      this.p.z += this.velocity.z * i;\r\n    } else {\r\n      this.p.x += -this.steering.x * 0.8;\r\n      this.p.y += -this.steering.y * 0.8;\r\n      this.p.z += -this.steering.z * 0.8;\r\n    }\r\n  }\r\n  UpdateVecSlowDown2() {\r\n    this.desiredVelocity = new NVector3(this.target.x - this.p.x, this.target.y - this.p.y, this.target.z - this.p.z);\r\n    // this.desiredVelocity = new NVector3(this.p.x - this.target.x , this.p.y - this.target.y ,  this.p.x - this.target.z );\r\n\r\n    let slowingRadius = 150;\r\n    let distance = this.desiredVelocity.Length();\r\n    // Check the distance to detect whether the character\r\n    // is inside the slowing area\r\n    if (distance < slowingRadius) {\r\n      // Inside the slowing area\r\n      // desired_velocity = normalize(desired_velocity) * max_velocity * (distance / slowingRadius)\r\n      this.desiredVelocity.Unitize();\r\n      this.desiredVelocity.x *= this.maxVelocity * (distance / slowingRadius);\r\n      this.desiredVelocity.y *= this.maxVelocity * (distance / slowingRadius);\r\n      this.desiredVelocity.z *= this.maxVelocity * (distance / slowingRadius);\r\n    } else {\r\n      // Outside the slowing area.\r\n      // desired_velocity = normalize(desired_velocity) * max_velocity\r\n      this.desiredVelocity.Unitize();\r\n      this.desiredVelocity.x *= this.maxVelocity;\r\n      this.desiredVelocity.y *= this.maxVelocity;\r\n      this.desiredVelocity.z *= this.maxVelocity;\r\n    }\r\n    // Set the steering based on this\r\n    // steering = desired_velocity - velocity\r\n\r\n    let x = (this.desiredVelocity.x - this.velocity.x); // < this.maxForce ? this.desiredVelocity.x - this.velocity.x : this.maxForce;\r\n    let y = (this.desiredVelocity.y - this.velocity.y); //  < this.maxForce ? this.desiredVelocity.y - this.velocity.y : this.maxForce;\r\n    let z = (this.desiredVelocity.z - this.velocity.z); // < this.maxForce ? this.desiredVelocity.z - this.velocity.z : this.maxForce;\r\n\r\n    // this.steering = new NVector3(x / this.mass, y / this.mass, z / this.mass);\r\n    this.steering = new NVector3(x, y, z);\r\n\r\n    this.velocity.x = (this.velocity.x + this.steering.x) < this.maxSpeed ? this.velocity.x + this.steering.x : this.maxSpeed;\r\n    this.velocity.y = (this.velocity.y + this.steering.y) < this.maxSpeed ? this.velocity.y + this.steering.y : this.maxSpeed;\r\n    this.velocity.z = (this.velocity.z + this.steering.z) < this.maxSpeed ? this.velocity.z + this.steering.z : this.maxSpeed;\r\n\r\n    if (!this.col) {\r\n\r\n      let i = this.maxSpeed / this.velocity.Length();\r\n      i = (i < 1.0) ? i : 1.0;\r\n      // this.velocity = truncate(velocity + steering, maxSpeed);\r\n      this.p.x += this.velocity.x * i;\r\n      this.p.y += this.velocity.y * i;\r\n      this.p.z += this.velocity.z * i;\r\n    } else {\r\n      this.p.x += -this.steering.x * 0.8;\r\n      this.p.y += -this.steering.y * 0.8;\r\n      this.p.z += -this.steering.z * 0.8;\r\n\r\n    }\r\n  }\r\n  // .......................................................................................................................\r\n  Render(ctx: CanvasRenderingContext2D) {\r\n    this.RenderDesiredVelocity(ctx);\r\n    this.RenderCurrentVelocity(ctx);\r\n    this.RenderCircle(ctx);\r\n  }\r\n  RenderDesiredVelocity(ctx: CanvasRenderingContext2D) {\r\n    let scale = 20;\r\n    ctx.lineWidth = 0.5;\r\n    ctx.strokeStyle = '#00ff00';\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.p.x, this.p.y);\r\n    ctx.lineTo(this.p.x + this.desiredVelocity.x * scale, this.p.y + this.desiredVelocity.y * scale);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n  }\r\n  RenderCurrentVelocity(ctx: CanvasRenderingContext2D) {\r\n    let scale = 20;\r\n    ctx.lineWidth = 0.5;\r\n    ctx.strokeStyle = '#ff0000';\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.p.x, this.p.y);\r\n    ctx.lineTo(this.p.x + this.velocity.x * scale, this.p.y + this.velocity.y * scale);\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n  }\r\n  RenderCircle(ctx: CanvasRenderingContext2D) {\r\n    ctx.strokeStyle = '#000000';\r\n    ctx.lineWidth = 0.5;\r\n    ctx.beginPath();\r\n    ctx.moveTo(this.targets[0].x, this.targets[0].y);\r\n    for (let i = 1; i < this.targets.length; ++i) {\r\n      ctx.lineTo(this.targets[i].x, this.targets[i].y);\r\n    }\r\n    ctx.closePath();\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(this.p.x, this.p.y, 10, 0, 3.14 * 2);\r\n    ctx.closePath();\r\n    // ctx.fill();\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\n/*\r\nprivate function queue() :NVector3 {\r\n  var v :NVector3 = velocity.clone();\r\n  var brake :NVector3 = new NVector3();\r\n\r\n  var neighbor :Boid = getNeighborAhead();\r\n\r\n  if (neighbor != null) {\r\n    brake.x = -steering.x * 0.8;\r\n    brake.y = -steering.y * 0.8;\r\n\r\n    v.scaleBy(-1);\r\n    brake = brake.add(v);\r\n\r\n    if (distance(position, neighbor.position) <= MAX_QUEUE_RADIUS) {\r\n      velocity.scaleBy(0.3);\r\n    }\r\n  }\r\n\r\n  return brake;\r\n}\r\n*/","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\nimport { SceneCreativeCoding } from '../..';\r\nimport { BPath } from './BoidCore/BPath';\r\nimport { BoidContoller1 } from './BoidCore/BoidContoller1';\r\n\r\n// import { MathUtility } from '../../../../lib';\r\n// https://cs.stanford.edu/people/eroberts/courses/soco/projects/2008-09/modeling-natural-systems/boids.html\r\n// http://www.red3d.com/cwr/steer/\r\n\r\n// https://Flockdevelopment.tutsplus.com/tutorials/understanding-steering-behaviors-path-following--Flockdev-8769\r\n// https://Flockdevelopment.tutsplus.com/tutorials/understanding-steering-behaviors-leader-following--Flockdev-10810\r\n// https://Flockdevelopment.tutsplus.com/tutorials/understanding-steering-behaviors-queue--Flockdev-14365\r\n\r\n// https://gamedevelopment.tutsplus.com/series/understanding-steering-behaviors--gamedev-12732\r\n\r\nexport class BoidSystem01 extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    BoidContoller1: BoidContoller1;\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'BoidSystem01';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        let path = BPath.GetRandomPath(0, 0, this.width, this.height);\r\n        // let v = new NVector3(this.width * 0.5, this.height * 0.5, 0);\r\n        this.BoidContoller1 = new BoidContoller1(path);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n\r\n        this.BoidContoller1.Update();\r\n        this.BoidContoller1.Render(ctx);\r\n        this.Circle(ctx);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    MouseDown() {\r\n        this.BoidContoller1.AddAgent(this.mouse[0], this.mouse[1]);\r\n        // if (this.lines.length > 5) { this.lines.shift(); }\r\n        // const p1 = this.lines[this.lines.length - 1].p1;\r\n        // this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1] ));\r\n    }\r\n    Circle(ctx: CanvasRenderingContext2D) {\r\n        let radius = 50;\r\n\r\n        // for (let i = 0; i < 360; i += 10) {\r\n        //     let x = Math.cos( MathUtility.Radians(i) ) + r  ;\r\n        //     let y = Math.sin( MathUtility.Radians(i) ) + r  ;\r\n        //     // let z =\r\n        //     console.log(x, y);\r\n        //     ctx.beginPath();\r\n        //     ctx.arc(x , y, 2, 0, 3.14 * 2.0  );\r\n        //     ctx.closePath();\r\n        //     ctx.fill();\r\n        // }\r\n\r\n        for (let x = 0; x < 3.14 * 2; x += 0.5) {\r\n            for (let y = 0; y < 3.14; y += 0.5) {\r\n                let xx = radius * Math.cos(x) * Math.sin(y);\r\n                let yy = radius * Math.sin(x) * Math.sin(y);\r\n                // let zz = radius * Math.cos(y);\r\n                // pts.push(xx, yy, zz);\r\n                ctx.beginPath();\r\n                ctx.arc(xx, yy, 2, 0, 3.14 * 2.0);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n        }\r\n    }\r\n}","import { NVector3, MathUtility } from '../../../../../lib';\r\n\r\nexport class BoidContollerWander0 {\r\n\r\n  boids: Boid[] = [];\r\n\r\n  constructor() {\r\n    this.boids = [];\r\n  }\r\n  public AddAgent(x: number, y: number, w: number, h: number) {\r\n    let boid = new Boid(new NVector3(x, y), new NVector3(0, 0), new NVector3(w, h));\r\n    this.boids.push(boid);\r\n  }\r\n  public Update() {\r\n    for (let b of this.boids) {\r\n      b.Update();\r\n    }\r\n\r\n  }\r\n  public GetPoint() {\r\n    let pts: NVector3[] = [];\r\n    for (let b of this.boids) {\r\n      if (b.isRenderable) {\r\n        pts.push(b.p);\r\n      }\r\n    }\r\n    return pts;\r\n  }\r\n\r\n  // .......................................................................................................................\r\n\r\n  Render(ctx: CanvasRenderingContext2D) {\r\n    this.boids.forEach((b) => {\r\n      b.Render(ctx);\r\n    });\r\n  }\r\n}\r\n\r\nexport class Boid {\r\n\r\n  static list: Boid[] = [];\r\n\r\n  maxForce = 2; // 1; // 5;\r\n  maxVelocity = 2; // 1; // 8;\r\n  maxSpeed = 0.9; // 1; // 13.0;\r\n  mass = 100.2;\r\n\r\n  isRenderable = true;\r\n\r\n  p: NVector3;\r\n  p0: NVector3;\r\n  p1: NVector3;\r\n  targets: NVector3[];\r\n  target: NVector3;\r\n  targetID = 0;\r\n\r\n  col: boolean = false;\r\n  desiredVelocity: NVector3;\r\n  steering: NVector3;\r\n  velocity: NVector3 = new NVector3(0, 0, 0);\r\n\r\n  // .......................\r\n  wanderAngle: number = 0;\r\n  CIRCLE_DISTANCE = 50;\r\n  CIRCLE_RADIUS = 50;\r\n  ANGLE_CHANGE = 15;\r\n\r\n  t: number = 0.0;\r\n\r\n  MAX_QUEUE_AHEAD = 15;\r\n  MAX_QUEUE_RADIUS = 10;\r\n\r\n  constructor(p: NVector3, p0: NVector3, p1: NVector3) {\r\n    Boid.list.push(this);\r\n    this.p = p;\r\n    this.p0 = p0;\r\n    this.p1 = p1;\r\n    this.UpdateTarget();\r\n  }\r\n  public Update() {\r\n    // this.UpdateVec0();\r\n    this.UpdateVec1();\r\n    // this.UpdateVecSlowDown1();\r\n    // this.UpdateVecSlowDown2();\r\n\r\n  }\r\n  UpdateTarget() {\r\n    let x = MathUtility.GetRandomInt(this.p0.x, this.p1.x);\r\n    let y = MathUtility.GetRandomInt(this.p0.y, this.p1.y);\r\n    this.target = new NVector3(x, y);\r\n  }\r\n  UpdateVec1() {\r\n    this.desiredVelocity = new NVector3(this.target.x - this.p.x, this.target.y - this.p.y, this.target.z - this.p.z);\r\n    this.desiredVelocity.Unitize();\r\n    this.desiredVelocity.x *= this.maxVelocity;\r\n    this.desiredVelocity.y *= this.maxVelocity;\r\n    this.desiredVelocity.z *= this.maxVelocity;\r\n\r\n    let x = (this.desiredVelocity.x - this.velocity.x) < this.maxForce ? this.desiredVelocity.x - this.velocity.x : this.maxForce;\r\n    let y = (this.desiredVelocity.y - this.velocity.y) < this.maxForce ? this.desiredVelocity.y - this.velocity.y : this.maxForce;\r\n    let z = (this.desiredVelocity.z - this.velocity.z) < this.maxForce ? this.desiredVelocity.z - this.velocity.z : this.maxForce;\r\n\r\n    this.steering = new NVector3(x / this.mass, y / this.mass, z / this.mass);\r\n\r\n    this.velocity.x = (this.velocity.x + this.steering.x) < this.maxSpeed ? this.velocity.x + this.steering.x : this.maxSpeed;\r\n    this.velocity.y = (this.velocity.y + this.steering.y) < this.maxSpeed ? this.velocity.y + this.steering.y : this.maxSpeed;\r\n    this.velocity.z = (this.velocity.z + this.steering.z) < this.maxSpeed ? this.velocity.z + this.steering.z : this.maxSpeed;\r\n\r\n    this.Queue();\r\n\r\n    this.p.x += this.velocity.x;\r\n    this.p.y += this.velocity.y;\r\n    this.p.z += this.velocity.z;\r\n    this.t += 0.01;\r\n    if (this.t > 3) {\r\n      this.t = 0.0;\r\n      this.UpdateTarget();\r\n    }\r\n  }\r\n  UpdateVec0() {\r\n    // this.desiredVelocity = new NVector3(this.target.x - this.p.x, this.target.y - this.p.y, this.target.z - this.p.z);\r\n    // this.desiredVelocity.Unitize();\r\n    // this.desiredVelocity.x *= this.maxVelocity;\r\n    // this.desiredVelocity.y *= this.maxVelocity;\r\n    // this.desiredVelocity.z *= this.maxVelocity;\r\n\r\n    // let x = (this.desiredVelocity.x - this.velocity.x) < this.maxForce ? this.desiredVelocity.x - this.velocity.x : this.maxForce;\r\n    // let y = (this.desiredVelocity.y - this.velocity.y) < this.maxForce ? this.desiredVelocity.y - this.velocity.y : this.maxForce;\r\n    // let z = (this.desiredVelocity.z - this.velocity.z) < this.maxForce ? this.desiredVelocity.z - this.velocity.z : this.maxForce;\r\n\r\n    // this.steering = ;\r\n\r\n    this.steering = this.Wander(new NVector3(this.velocity.x, this.velocity.y, this.velocity.z));\r\n\r\n    this.steering.x = this.steering.x < this.maxForce ? this.steering.x : this.maxForce;\r\n    this.steering.y = this.steering.y < this.maxForce ? this.steering.y : this.maxForce;\r\n    this.steering.z = this.steering.z < this.maxForce ? this.steering.z : this.maxForce;\r\n\r\n    this.steering.x /= this.mass;\r\n    this.steering.y /= this.mass;\r\n    this.steering.z /= this.mass;\r\n\r\n    if (this.velocity.x + this.steering.x < this.maxSpeed) {\r\n      this.velocity.x = this.velocity.x + this.steering.x;\r\n    } else {\r\n      this.velocity.x = this.maxSpeed;\r\n    }\r\n    if (this.velocity.y + this.steering.y < this.maxSpeed) {\r\n      this.velocity.y = this.velocity.y + this.steering.y;\r\n    } else {\r\n      this.velocity.y = this.maxSpeed;\r\n    }\r\n    if (this.velocity.z + this.steering.z < this.maxSpeed) {\r\n      this.velocity.z = this.velocity.z + this.steering.z;\r\n    } else {\r\n      this.velocity.z = this.maxSpeed;\r\n    }\r\n    // this.velocity.x = this.velocity.x + this.steering.x < this.maxSpeed ? this.velocity.x + this.steering.x : this.maxSpeed;\r\n    // this.velocity.y = this.velocity.y + this.steering.y < this.maxSpeed ? this.velocity.y + this.steering.y : this.maxSpeed;\r\n    // this.velocity.z = this.velocity.z + this.steering.z < this.maxSpeed ? this.velocity.z + this.steering.z : this.maxSpeed;\r\n\r\n    // steering = wander()\r\n    // steering = truncate (steering, max_force)\r\n    // steering = steering / mass\r\n    // velocity = truncate (velocity + steering , max_speed)\r\n    // position = position + velocity\r\n    this.Queue();\r\n\r\n    console.log(this.maxSpeed);\r\n\r\n    this.p.x += this.velocity.x;\r\n    this.p.y += this.velocity.y;\r\n    this.p.z += this.velocity.z;\r\n\r\n  }\r\n  Wander(velocity: NVector3) {\r\n    // Calculate the circle center\r\n    let circleCenter = new NVector3(velocity.x, velocity.y, velocity.z);\r\n    circleCenter.Normalize();\r\n    circleCenter.Scale(this.CIRCLE_DISTANCE);\r\n    //\r\n    // Calculate the displacement force\r\n    let displacement = new NVector3(0, -1);\r\n    displacement.Scale(this.CIRCLE_RADIUS);\r\n    //\r\n    // Randomly change the vector direction\r\n    // by making it change its current angle\r\n    displacement = this.SetAngle(displacement, this.wanderAngle);\r\n    //\r\n    // Change wanderAngle just a bit, so it\r\n    // won't have the same value in the\r\n    // next game frame.\r\n    this.wanderAngle += Math.random() * this.ANGLE_CHANGE - this.ANGLE_CHANGE * .5;\r\n    //\r\n    // Finally calculate and return the wander force\r\n    var wanderForce: NVector3;\r\n    wanderForce = circleCenter.Add(displacement);\r\n    return wanderForce;\r\n  }\r\n  SetAngle(v: NVector3, value: number) {\r\n    let len: number = v.Length();\r\n    v.x = Math.cos(value) * len;\r\n    v.y = Math.sin(value) * len;\r\n    return v;\r\n  }\r\n  GetNeighborAhead() {\r\n    // var i:int;\r\n    var ret: Boid | undefined = undefined;\r\n    var qa: NVector3 = this.velocity.Clone();\r\n\r\n    qa.Normalize();\r\n    qa.Scale(this.MAX_QUEUE_AHEAD);\r\n\r\n    let ahead = this.p.Clone().Add(qa);\r\n\r\n    for (let i = 0; i < Boid.list.length; i++) {\r\n      let neighbor: Boid = Boid.list[i];\r\n      let d = NVector3.Distance(ahead, neighbor.p);\r\n      if (neighbor !== this && d <= this.MAX_QUEUE_RADIUS) {\r\n        ret = neighbor;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return ret;\r\n  }\r\n  Queue() {\r\n    var neighbor = this.GetNeighborAhead();\r\n\r\n    if (neighbor !== undefined) {\r\n      this.velocity.Scale(0.3);\r\n    }\r\n\r\n    return new NVector3(0, 0);\r\n  }\r\n\r\n  // .......................................................................................................................\r\n  Render(ctx: CanvasRenderingContext2D) {\r\n    // this.RenderDesiredVelocity(ctx);\r\n    // this.RenderCurrentVelocity(ctx);\r\n    this.RenderCircle(ctx);\r\n  }\r\n  RenderDesiredVelocity(ctx: CanvasRenderingContext2D) {\r\n    // let scale = 20;\r\n    // ctx.lineWidth = 0.5;\r\n    // ctx.strokeStyle = '#00ff00';\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(this.p.x, this.p.y);\r\n    // ctx.lineTo(this.p.x + this.desiredVelocity.x * scale, this.p.y + this.desiredVelocity.y * scale);\r\n    // ctx.closePath();\r\n    // ctx.stroke();\r\n  }\r\n  RenderCurrentVelocity(ctx: CanvasRenderingContext2D) {\r\n    // let scale = 20;\r\n    // ctx.lineWidth = 0.5;\r\n    // ctx.strokeStyle = '#ff0000';\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(this.p.x, this.p.y);\r\n    // ctx.lineTo(this.p.x + this.velocity.x * scale, this.p.y + this.velocity.y * scale);\r\n    // ctx.closePath();\r\n    // ctx.stroke();\r\n  }\r\n  RenderCircle(ctx: CanvasRenderingContext2D) {\r\n    ctx.strokeStyle = '#000000';\r\n    ctx.lineWidth = 0.5;\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(this.targets[0].x , this.targets[0].y);\r\n    // for (let i = 1 ; i < this.targets.length; ++i) {\r\n    //   ctx.lineTo(this.targets[i].x , this.targets[i].y);\r\n    // }\r\n    // ctx.closePath();\r\n    // ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(this.p.x, this.p.y, 10, 0, 3.14 * 2);\r\n    ctx.closePath();\r\n    // ctx.fill();\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\n/*\r\nprivate function queue() :NVector3 {\r\n  var v :NVector3 = velocity.clone();\r\n  var brake :NVector3 = new NVector3();\r\n\r\n  var neighbor :Boid = getNeighborAhead();\r\n\r\n  if (neighbor != null) {\r\n    brake.x = -steering.x * 0.8;\r\n    brake.y = -steering.y * 0.8;\r\n\r\n    v.scaleBy(-1);\r\n    brake = brake.add(v);\r\n\r\n    if (distance(position, neighbor.position) <= MAX_QUEUE_RADIUS) {\r\n      velocity.scaleBy(0.3);\r\n    }\r\n  }\r\n\r\n  return brake;\r\n}\r\n*/","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '../..';\r\nimport { BoidContollerWander0 } from './BoidCore/BoidContollerWander0';\r\n\r\nexport class BoidSystemWander0 extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    BoidContoller: BoidContollerWander0;\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'BoidSystem01';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.BoidContoller = new BoidContollerWander0();\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n\r\n        this.BoidContoller.Update();\r\n        this.BoidContoller.Render(ctx);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    MouseDown() {\r\n        this.BoidContoller.AddAgent(this.mouse[0], this.mouse[1], this.width, this.height);\r\n        // if (this.lines.length > 5) { this.lines.shift(); }\r\n        // const p1 = this.lines[this.lines.length - 1].p1;\r\n        // this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1] ));\r\n    }\r\n\r\n}","import { NVector3, MathUtility } from '../../../../../lib';\r\n\r\nexport class BoidContollerWander1 {\r\n\r\n  boids: Boid[] = [];\r\n\r\n  constructor() {\r\n    this.boids = [];\r\n  }\r\n  public AddAgent(x: number, y: number, w: number, h: number) {\r\n    let boid = new Boid(new NVector3(x, y), new NVector3(0, 0), new NVector3(w, h));\r\n    this.boids.push(boid);\r\n  }\r\n  public Update() {\r\n    for (let b of this.boids) {\r\n      b.Update();\r\n    }\r\n\r\n  }\r\n  public UpdateTarget(x: number, y: number) {\r\n    for (let b of this.boids) {\r\n      b.target.x = x;\r\n      b.target.y = y;\r\n    }\r\n  }\r\n  public GetPoint() {\r\n    let pts: NVector3[] = [];\r\n    for (let b of this.boids) {\r\n      if (b.isRenderable) {\r\n        pts.push(b.p);\r\n      }\r\n    }\r\n    return pts;\r\n  }\r\n\r\n  // .......................................................................................................................\r\n\r\n  Render(ctx: CanvasRenderingContext2D) {\r\n    this.boids.forEach((b) => {\r\n      b.Render(ctx);\r\n    });\r\n  }\r\n}\r\n\r\nexport class Boid {\r\n\r\n  static list: Boid[] = [];\r\n\r\n  maxForce = 2; // 1; // 5;\r\n  maxVelocity = 2; // 1; // 8;\r\n  maxSpeed = 0.9; // 1; // 13.0;\r\n  mass = 100.2;\r\n\r\n  isRenderable = true;\r\n\r\n  p: NVector3;\r\n  p0: NVector3;\r\n  p1: NVector3;\r\n  targets: NVector3[];\r\n  target: NVector3;\r\n  targetID = 0;\r\n\r\n  col: boolean = false;\r\n  desiredVelocity: NVector3;\r\n  steering: NVector3;\r\n  velocity: NVector3 = new NVector3(0, 0, 0);\r\n\r\n  // .......................\r\n  wanderAngle: number = 0;\r\n  CIRCLE_DISTANCE = 50;\r\n  CIRCLE_RADIUS = 50;\r\n  ANGLE_CHANGE = 15;\r\n\r\n  t: number = 0.0;\r\n\r\n  MAX_QUEUE_AHEAD = 15;\r\n  MAX_QUEUE_RADIUS = 15;\r\n\r\n  SEPARATION_RADIUS = 10;\r\n  MAX_SEPARATION = 0.5;\r\n  // MAX_QUEUE_RADIUS = 10;\r\n\r\n  constructor(p: NVector3, p0: NVector3, p1: NVector3) {\r\n    Boid.list.push(this);\r\n    this.p = p;\r\n    this.p0 = p0;\r\n    this.p1 = p1;\r\n    this.UpdateTarget();\r\n  }\r\n  public Update() {\r\n    // this.UpdateVec0();\r\n    this.UpdateVec1();\r\n    // this.UpdateVecSlowDown1();\r\n    // this.UpdateVecSlowDown2();\r\n\r\n  }\r\n  UpdateTarget() {\r\n    let x = MathUtility.GetRandomInt(this.p0.x, this.p1.x);\r\n    let y = MathUtility.GetRandomInt(this.p0.y, this.p1.y);\r\n    this.target = new NVector3(x, y);\r\n  }\r\n  UpdateVec1() {\r\n    this.desiredVelocity = new NVector3(this.target.x - this.p.x, this.target.y - this.p.y, this.target.z - this.p.z);\r\n    this.desiredVelocity.Unitize();\r\n    this.desiredVelocity.x *= this.maxVelocity;\r\n    this.desiredVelocity.y *= this.maxVelocity;\r\n    this.desiredVelocity.z *= this.maxVelocity;\r\n\r\n    let x = (this.desiredVelocity.x - this.velocity.x) < this.maxForce ? this.desiredVelocity.x - this.velocity.x : this.maxForce;\r\n    let y = (this.desiredVelocity.y - this.velocity.y) < this.maxForce ? this.desiredVelocity.y - this.velocity.y : this.maxForce;\r\n    let z = (this.desiredVelocity.z - this.velocity.z) < this.maxForce ? this.desiredVelocity.z - this.velocity.z : this.maxForce;\r\n\r\n    this.steering = new NVector3(x / this.mass, y / this.mass, z / this.mass);\r\n\r\n    this.velocity.x = (this.velocity.x + this.steering.x) < this.maxSpeed ? this.velocity.x + this.steering.x : this.maxSpeed;\r\n    this.velocity.y = (this.velocity.y + this.steering.y) < this.maxSpeed ? this.velocity.y + this.steering.y : this.maxSpeed;\r\n    this.velocity.z = (this.velocity.z + this.steering.z) < this.maxSpeed ? this.velocity.z + this.steering.z : this.maxSpeed;\r\n\r\n    this.Queue();\r\n\r\n    this.p.x += this.velocity.x;\r\n    this.p.y += this.velocity.y;\r\n    this.p.z += this.velocity.z;\r\n    this.t += 0.01;\r\n    if (this.t > 3) {\r\n      this.t = 0.0;\r\n      // this.UpdateTarget();\r\n    }\r\n  }\r\n  Queue() {\r\n    var neighbor = this.GetNeighborAhead();\r\n\r\n    if (neighbor !== undefined) {\r\n      // this.HardStop();\r\n      // this.BrakingForce();\r\n      this.BrakingForceOverlap(neighbor);\r\n    }\r\n    return new NVector3(0, 0);\r\n  }\r\n  BrakingForceOverlap(neighbor: Boid) {\r\n    let brake = new NVector3(0, 0);\r\n    brake.x = -this.steering.x * 0.8;\r\n    brake.y = -this.steering.y * 0.8;\r\n\r\n    this.velocity.Scale(-1);\r\n    brake = brake.Add(this.velocity);\r\n\r\n    // ................................... seperation!!!!\r\n    // brake = brake.Add(this.Separation());\r\n    // ...................................  end seperation!!!!\r\n\r\n    if (NVector3.Distance(this.p, neighbor.p) <= this.MAX_QUEUE_RADIUS) {\r\n      this.velocity.Scale(0.3);\r\n      return;\r\n    }\r\n    this.velocity = brake;\r\n  }\r\n  HardStop() {\r\n    this.velocity.Scale(0.3);\r\n  }\r\n  BrakingForce() {\r\n    let brake = new NVector3(0, 0);\r\n    brake.x = -this.steering.x * 0.8;\r\n    brake.y = -this.steering.y * 0.8;\r\n\r\n    this.velocity.Scale(-1);\r\n    brake = brake.Add(this.velocity);\r\n\r\n    this.velocity = brake;\r\n  }\r\n\r\n  GetNeighborAhead() {\r\n    // var i:int;\r\n    var ret: Boid | undefined = undefined;\r\n    var qa: NVector3 = this.velocity.Clone();\r\n\r\n    qa.Normalize();\r\n    qa.Scale(this.MAX_QUEUE_AHEAD);\r\n\r\n    let ahead = this.p.Clone().Add(qa);\r\n\r\n    for (let i = 0; i < Boid.list.length; i++) {\r\n      let neighbor: Boid = Boid.list[i];\r\n      let d = NVector3.Distance(ahead, neighbor.p);\r\n      if (neighbor !== this && d <= this.MAX_QUEUE_RADIUS) {\r\n        ret = neighbor;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return ret;\r\n  }\r\n  Separation(): NVector3 {\r\n    let force: NVector3 = new NVector3(0, 0);\r\n    let neighborCount: number = 0;\r\n\r\n    for (let i = 0; i < Boid.list.length; i++) {\r\n      let b: Boid = Boid.list[i];\r\n\r\n      if (b !== this && NVector3.Distance(b.p, this.p) <= this.SEPARATION_RADIUS) {\r\n        force.x += b.p.x - this.p.x;\r\n        force.y += b.p.y - this.p.y;\r\n        force.z += b.p.z - this.p.z;\r\n        neighborCount++;\r\n      }\r\n    }\r\n\r\n    if (neighborCount !== 0) {\r\n      force.x /= neighborCount;\r\n      force.y /= neighborCount;\r\n      force.z /= neighborCount;\r\n\r\n      force.Scale(-1);\r\n    }\r\n\r\n    force.Normalize();\r\n    force.Scale(this.MAX_SEPARATION);\r\n\r\n    return force;\r\n  }\r\n  // .......................................................................................................................\r\n  Render(ctx: CanvasRenderingContext2D) {\r\n    // this.RenderDesiredVelocity(ctx);\r\n    // this.RenderCurrentVelocity(ctx);\r\n    this.RenderCircle(ctx);\r\n  }\r\n  RenderDesiredVelocity(ctx: CanvasRenderingContext2D) {\r\n    // let scale = 20;\r\n    // ctx.lineWidth = 0.5;\r\n    // ctx.strokeStyle = '#00ff00';\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(this.p.x, this.p.y);\r\n    // ctx.lineTo(this.p.x + this.desiredVelocity.x * scale, this.p.y + this.desiredVelocity.y * scale);\r\n    // ctx.closePath();\r\n    // ctx.stroke();\r\n  }\r\n  RenderCurrentVelocity(ctx: CanvasRenderingContext2D) {\r\n    // let scale = 20;\r\n    // ctx.lineWidth = 0.5;\r\n    // ctx.strokeStyle = '#ff0000';\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(this.p.x, this.p.y);\r\n    // ctx.lineTo(this.p.x + this.velocity.x * scale, this.p.y + this.velocity.y * scale);\r\n    // ctx.closePath();\r\n    // ctx.stroke();\r\n  }\r\n  RenderCircle(ctx: CanvasRenderingContext2D) {\r\n    ctx.strokeStyle = '#000000';\r\n    ctx.lineWidth = 0.5;\r\n    // ctx.beginPath();\r\n    // ctx.moveTo(this.targets[0].x , this.targets[0].y);\r\n    // for (let i = 1 ; i < this.targets.length; ++i) {\r\n    //   ctx.lineTo(this.targets[i].x , this.targets[i].y);\r\n    // }\r\n    // ctx.closePath();\r\n    // ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(this.p.x, this.p.y, 10, 0, 3.14 * 2);\r\n    ctx.closePath();\r\n    // ctx.fill();\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\n/*\r\nprivate function queue() :NVector3 {\r\n  var v :NVector3 = velocity.clone();\r\n  var brake :NVector3 = new NVector3();\r\n\r\n  var neighbor :Boid = getNeighborAhead();\r\n\r\n  if (neighbor != null) {\r\n    brake.x = -steering.x * 0.8;\r\n    brake.y = -steering.y * 0.8;\r\n\r\n    v.scaleBy(-1);\r\n    brake = brake.add(v);\r\n\r\n    if (distance(position, neighbor.position) <= MAX_QUEUE_RADIUS) {\r\n      velocity.scaleBy(0.3);\r\n    }\r\n  }\r\n\r\n  return brake;\r\n}\r\n*/","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '../..';\r\nimport { BoidContollerWander1 } from './BoidCore/BoidContollerWander1';\r\n\r\nexport class BoidSystemWander1 extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    BoidContoller: BoidContollerWander1;\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'BoidSystem01';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.BoidContoller = new BoidContollerWander1();\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n\r\n        this.BoidContoller.Update();\r\n        this.BoidContoller.Render(ctx);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n        this.BoidContoller.UpdateTarget(x, y);\r\n    }\r\n    MouseDown() {\r\n        this.BoidContoller.AddAgent(this.mouse[0], this.mouse[1], this.width, this.height);\r\n        // if (this.lines.length > 5) { this.lines.shift(); }\r\n        // const p1 = this.lines[this.lines.length - 1].p1;\r\n        // this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1] ));\r\n    }\r\n\r\n}","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '../..';\r\n\r\nexport class BoidSystem04 extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    lines: Line[] = [];\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'BoidSystem04';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.lines.push(new Line(10, 10, 50, 50));\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n\r\n        for (let l of this.lines) {\r\n            l.Render(ctx);\r\n        }\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    MouseDown() {\r\n        if (this.lines.length > 5) { this.lines.shift(); }\r\n        const p1 = this.lines[this.lines.length - 1].p1;\r\n        this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1]));\r\n    }\r\n\r\n}\r\n\r\nclass Line {\r\n    p0: number[];\r\n    p1: number[];\r\n    constructor(x0: number, y0: number, x1: number, y1: number) {\r\n        this.p0 = [x0, y0];\r\n        this.p1 = [x1, y1];\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = 'red';\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.p0[0], this.p0[1]);\r\n        ctx.lineTo(this.p1[0], this.p1[1]);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n}","\r\nimport { NVector3 } from '../../../../../../lib';\r\n\r\nexport class DNode {\r\n\r\n    velocity: NVector3 = new NVector3(0.0, 0.0, 0.0);\r\n    force: NVector3 = new NVector3(0.0, 0.01, 0.0);\r\n    gravity: NVector3 = new NVector3(0, 0.95, 0);\r\n\r\n    v: NVector3 = new NVector3(0, 0, 0);\r\n    r: number = 10.;\r\n    m: number = 0.1;\r\n\r\n    constructor(x: number, y: number, z: number, mass: number = 1.0) {\r\n        this.v = new NVector3(x, y, 0);\r\n        this.m = mass;\r\n    }\r\n    Update(width: number, height: number, dt: number, damping: number) {\r\n        // this.velocity = new NVector3(0.0, 0.0, 0.0);\r\n        this.velocity.Add(this.gravity);\r\n        this.velocity.Mult(damping);\r\n        this.force.Mult(dt / this.m);\r\n        this.velocity.Add(this.force);\r\n\r\n        this.v.x += this.velocity.x * dt;\r\n        this.v.y += this.velocity.y * dt;\r\n        this.v.z += this.velocity.z * dt;\r\n\r\n        console.log(this.velocity.x, this.velocity.y);\r\n        // this.v.Add(this.velocity); // Add velocity to the location.\r\n        // this.velocity.Add(this.gravity); // Add gravity to velocity\r\n\r\n        // this.velocity.y += 0.95;\r\n\r\n        this.UpdateEdge(width, height);\r\n    }\r\n    UpdateEdge(width: number, height: number) {\r\n        if ((this.v.x > width) || (this.v.x < 0)) { // Bounce off edges\r\n            this.velocity.x = this.velocity.x * -1;\r\n        }\r\n        if (this.v.y > height) {\r\n            // We're reducing this.velocity ever so slightly\r\n            // when it hits the bottom of the window\r\n            this.velocity.y = this.velocity.y * -0.95;\r\n            this.v.y = height;\r\n        }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.beginPath();\r\n        ctx.arc(this.v.x, this.v.y, this.r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}","import { DNode } from './Core/DNode';\r\n\r\nimport { Dynamic01 } from '../Dynamic01';\r\n\r\nexport class DynamicSystem01 {\r\n    Dynamic01: Dynamic01;\r\n\r\n    dNode: DNode;\r\n\r\n    t: number = 0.0;\r\n    constructor(Dynamic01: Dynamic01) {\r\n        this.Dynamic01 = Dynamic01;\r\n        this.dNode = new DNode(100, 100, 0);\r\n\r\n    }\r\n    Update() {\r\n        this.dNode.Update(this.Dynamic01.width, this.Dynamic01.height, this.t, 0.9);\r\n\r\n        this.t += 0.1;\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.dNode.Render(ctx);\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '../..';\r\n\r\n// import { NVector3 } from '../../../../lib';\r\n\r\nimport { DynamicSystem01 } from './DynamicSystem/DynamicSystem01';\r\n\r\nexport class Dynamic01 extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    DynamicSystem: DynamicSystem01;\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'Dynamic01';\r\n        console.log('init Dynamic01');\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // let v = new NVector3(this.width * 0.5, this.height * 0.5, 0);\r\n        this.DynamicSystem = new DynamicSystem01(this);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.DynamicSystem.Update();\r\n        this.DynamicSystem.Render(ctx);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    MouseDown() {\r\n        console.log(this.mouse);\r\n        // this.DynamicSystem.AddAgent(this.mouse[0], this.mouse[1]);\r\n        // if (this.lines.length > 5) { this.lines.shift(); }\r\n        // const p1 = this.lines[this.lines.length - 1].p1;\r\n        // this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1] ));\r\n    }\r\n\r\n}\r\n","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '../..';\r\n\r\n// import { NVector3 } from '../../../../lib';\r\n\r\nimport { DynamicSystem01 } from './DynamicSystem/DynamicSystem01';\r\n\r\nexport class Dynamic02 extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    DynamicSystem: DynamicSystem01;\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'Dynamic02';\r\n        console.log('init Dynamic02');\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // let v = new NVector3(this.width * 0.5, this.height * 0.5, 0);\r\n        this.DynamicSystem = new DynamicSystem01(this);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.DynamicSystem.Update();\r\n        this.DynamicSystem.Render(ctx);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    MouseDown() {\r\n        // this.DynamicSystem.AddAgent(this.mouse[0], this.mouse[1]);\r\n        // if (this.lines.length > 5) { this.lines.shift(); }\r\n        // const p1 = this.lines[this.lines.length - 1].p1;\r\n        // this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1] ));\r\n    }\r\n\r\n}\r\n","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '../..';\r\n\r\n// import { NVector3 } from '../../../../lib';\r\n\r\nimport { DynamicSystem01 } from './DynamicSystem/DynamicSystem01';\r\n\r\nexport class Dynamic03 extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    DynamicSystem: DynamicSystem01;\r\n\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'Dynamic03';\r\n        // console.log('init Dynamic03');\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // let v = new NVector3(this.width * 0.5, this.height * 0.5, 0);\r\n        this.DynamicSystem = new DynamicSystem01(this);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.DynamicSystem.Update();\r\n        this.DynamicSystem.Render(ctx);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    MouseDown() {\r\n        // this.DynamicSystem.AddAgent(this.mouse[0], this.mouse[1]);\r\n        // if (this.lines.length > 5) { this.lines.shift(); }\r\n        // const p1 = this.lines[this.lines.length - 1].p1;\r\n        // this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1] ));\r\n    }\r\n\r\n}\r\n","import { DefinitionIndeCanvasCore } from '../../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { SceneCreativeCoding } from '../..';\r\n\r\nexport class OOP extends DefinitionIndeCanvasCore {\r\n    mouse: number[] = [0, 0];\r\n\r\n    p: Point;\r\n    constructor(SceneCreativeCoding: SceneCreativeCoding) {\r\n        super(SceneCreativeCoding);\r\n        this.indeCanvas.title = 'OOP';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n\r\n        this.p = new Point(100, 100, 10);\r\n        console.log('oop init');\r\n        // this.lines.push(new Line(10, 10, 50, 50));\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        console.log('oop loop');\r\n        // for (let l of this.lines) {\r\n        //     l.Render(ctx);\r\n        // }\r\n\r\n        this.p.Render(ctx);\r\n        console.log(this.p.age);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse = [x, y];\r\n    }\r\n    MouseDown() {\r\n        // if (this.lines.length > 5) { this.lines.shift(); }\r\n        // const p1 = this.lines[this.lines.length - 1].p1;\r\n        // this.lines.push(new Line(p1[0], p1[1], this.mouse[0], this.mouse[1] ));\r\n    }\r\n}\r\n\r\nclass Point {\r\n\r\n    age: number;\r\n    height: number;\r\n    weight: number;\r\n\r\n    // money: ComputeData;\r\n\r\n    constructor(age: number, height: number, weight: number) {\r\n        this.age = age;\r\n        this.height = height;\r\n        this.weight = weight;\r\n        // this.money = new ComputeData();\r\n\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.beginPath();\r\n        ctx.arc(this.age, this.height, this.weight, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        this.age += 0.01;\r\n\r\n        if (this.age > 102) { this.Compute(); }\r\n    }\r\n    Compute() {\r\n        this.height += 0.1;\r\n    }\r\n\r\n}\r\n\r\n// class ComputeData {\r\n//     total: number;\r\n//     constructor() {\r\n//         //\r\n//     }\r\n//     AddMoney() {\r\n\r\n//     }\r\n//     RemoveMoney() {\r\n\r\n//     }\r\n\r\n// }\r\n\r\n// class Bank() {\r\n\r\n// }","import { Blank } from './Definition/Blank';\r\n\r\nimport { Canvas } from '../../Model/GraphicsCoreWrapper/CanvasWrapper/Canvas/Canvas';\r\n\r\nimport { ActiveCommandController } from './Core/ActiveCommandController';\r\nimport { GeomeetryCommon } from './Core/GeometryCommon';\r\n\r\nimport { DefinitionIndeCanvasCore } from './Core/DefinitionIndeCanvasCore';\r\n\r\nimport { Implementation } from '..';\r\n\r\nimport { BallBounce } from './Definition/BallBounce';\r\nimport { BallBounceClass } from './Definition/BallBounceClass';\r\n// import { GaussianDistribution } from '../SceneVis/Definition/GaussianDistribution';\r\nimport { CircleGrid } from './Definition/CircleGrid';\r\nimport { CircleGridAttractors1 } from './Definition/CircleGridAttractors1';\r\nimport { CircleGridAttractors2 } from './Definition/CircleGridAttractors2';\r\n\r\nimport { DefinitionLine } from './Definition/DefinitionLine';\r\nimport { DefinitionLine2 } from './Definition/DefinitionLine2';\r\n\r\nimport { BoidSystem01 } from './Definition/BoidSystem/BoidSystem01';\r\nimport { BoidSystemWander0 } from './Definition/BoidSystem/BoidSystemWander0';\r\nimport { BoidSystemWander1 } from './Definition/BoidSystem/BoidSystemWander1';\r\nimport { BoidSystem04 } from './Definition/BoidSystem/BoidSystem04';\r\n\r\nimport { Dynamic01 } from './Definition/Dynamics/Dynamic01';\r\nimport { Dynamic02 } from './Definition/Dynamics/Dynamic02';\r\nimport { Dynamic03 } from './Definition/Dynamics/Dynamic03';\r\n\r\nimport { OOP } from './Definition/OOP';\r\n\r\nexport class SceneCreativeCoding {\r\n    implementation: Implementation;\r\n    canvas: Canvas;\r\n    activeCommandController: ActiveCommandController;\r\n    geomeetryCommon: GeomeetryCommon;\r\n\r\n    definitions: DefinitionIndeCanvasCore[] = [];\r\n\r\n    constructor(implementation: Implementation) {\r\n        this.implementation = implementation;\r\n        this.canvas = implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas;\r\n        this.activeCommandController = new ActiveCommandController(this);\r\n        this.geomeetryCommon = new GeomeetryCommon(this);\r\n        this.Init();\r\n        this.InitDefinition();\r\n    }\r\n    public Init() {\r\n        this.definitions = [];\r\n    }\r\n    get width() {\r\n        return this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.canvas.height;\r\n    }\r\n    InitDefinition() {\r\n        for (let d of this.definitions) { d.Init(this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.ctx); }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // for (let d of this.definitions) {d.Render(ctx); }\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseMovePre(x, y); }\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseLeftClickPre(x, y); }\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDownPre(x, y); }\r\n    }\r\n    MouseUp(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseUpPre(x, y); }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDragPre(x, y); }\r\n    }\r\n    MouseMiddleClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseMiddleClickPre(x, y); }\r\n    }\r\n    MouseRightClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseRightClickPre(x, y); }\r\n    }\r\n    MouseDoubleClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDoubleClickPre(x, y); }\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) {\r\n        for (let d of this.definitions) { d.MouseWheelPre(x, y, v); }\r\n    }\r\n    Dispose() {\r\n        this.definitions = [];\r\n    }\r\n    LoadDefinition(v: string) {\r\n        // this.definitions = [];\r\n        if (v === 'Blank') { const d0 = new Blank(this); console.log(d0); }\r\n        // if (v === 'GaussianDistribution') { const d0 = new GaussianDistribution(this); console.log(d0); }\r\n        if (v === 'BallBounce') { const d0 = new BallBounce(this); console.log(d0); }\r\n        if (v === 'BallBounceClass') { const d0 = new BallBounceClass(this); console.log(d0); }\r\n        if (v === 'CircleGrid') { const d0 = new CircleGrid(this); console.log(d0); }\r\n        if (v === 'CircleGridAttractors1') { const d0 = new CircleGridAttractors1(this); console.log(d0); }\r\n        if (v === 'CircleGridAttractors2') { const d0 = new CircleGridAttractors2(this); console.log(d0); }\r\n        if (v === 'Line') { const d0 = new DefinitionLine(this); console.log(d0); }\r\n        if (v === 'Line2') { const d0 = new DefinitionLine2(this); console.log(d0); }\r\n\r\n        if (v === 'BoidSystem01') { const d0 = new BoidSystem01(this); console.log(d0); }\r\n        if (v === 'BoidSystem02') { const d0 = new BoidSystemWander0(this); console.log(d0); }\r\n        if (v === 'BoidSystem03') { const d0 = new BoidSystemWander1(this); console.log(d0); }\r\n        if (v === 'BoidSystem04') { const d0 = new BoidSystem04(this); console.log(d0); }\r\n\r\n        if (v === 'DynamicSystem01') { const d0 = new Dynamic01(this); console.log(d0); }\r\n        if (v === 'DynamicSystem02') { const d0 = new Dynamic02(this); console.log(d0); }\r\n        if (v === 'DynamicSystem03') { const d0 = new Dynamic03(this); console.log(d0); }\r\n\r\n        if (v === 'OOP01') { const d0 = new OOP(this); console.log(d0); }\r\n    }\r\n}"],"names":["DefinitionIndeCanvasCore","constructor","SceneCreativeCoding","scene","indeCanvas","mOffX","mOffY","this","definitions","push","InitIndeCanvas","IndependentPanelCanvas","implementation","app","viewController","NUIWrapper","NUI","independentPanelWrapper","title","btnHam","isHidden","btnMini","RenderIndependentCanvas","ctx","width","canvas","height","Init","MouseMove","x","y","MouseMovePre","IsMouseInsidePanel","vec","HeadHeight","MouseDown","MouseDownPre","MouseUp","MouseUpPre","MouseDrag","MouseDragPre","MouseLeftClick","MouseLeftClickPre","MouseMiddleClick","MouseMiddleClickPre","MouseRightClick","MouseRightClickPre","MouseDoubleClick","MouseDoubleClickPre","MouseWheel","v","MouseWheelPre","Blank","super","p","fillStyle","beginPath","arc","closePath","fill","ActiveCommandController","MouseEventController","e","CLICK_TYPE","wheel","GeomeetryCommon","BallBounce","xpos","ypos","xspeed","yspeed","xdirection","ydirection","rad","BallBounceClass","Balls","b","Render","Ball","static","RGBToHex","Math","round","random","r","g","map","hex","toString","length","join","color","GetRandomHex","CircleGrid","mouse","pts","xDis","yDis","j","i","col","dis","Distance","strokeStyle","stroke","x0","y0","x1","y1","sqrt","CircleGridAttractors1","attrs","strength","falloff","distance","Attractor","pt","attractor","Sub","dist","Length","exp","v0","v1","Unitize","len","CircleGridAttractors2","DefinitionLine","lines","Line","l","p1","p0","moveTo","lineTo","DefinitionLine2","shift","BPath","xMin","yMin","xMax","yMax","num","vs","MathUtility","NVector3","BoidContoller1","targets","boids","AddAgent","boid","Boid","InitTarget","Update","Col","b0","isRenderable","b1","GetPoint","forEach","maxForce","maxVelocity","maxSpeed","mass","target","targetID","desiredVelocity","steering","velocity","z","UpdateTarget","UpdateVecSlowDown2","UpdateVec0","UpdateVec1","UpdateVecSlowDown1","slowingRadius","RenderDesiredVelocity","RenderCurrentVelocity","RenderCircle","lineWidth","list","BoidSystem01","path","GetRandomPath","Circle","xx","cos","sin","yy","BoidContollerWander0","w","h","wanderAngle","CIRCLE_DISTANCE","CIRCLE_RADIUS","ANGLE_CHANGE","t","MAX_QUEUE_AHEAD","MAX_QUEUE_RADIUS","Queue","Wander","console","log","circleCenter","Normalize","Scale","displacement","SetAngle","Add","value","GetNeighborAhead","ret","undefined","qa","Clone","ahead","neighbor","d","BoidSystemWander0","BoidContoller","BoidContollerWander1","SEPARATION_RADIUS","MAX_SEPARATION","BrakingForceOverlap","brake","HardStop","BrakingForce","Separation","force","neighborCount","BoidSystemWander1","BoidSystem04","DNode","gravity","m","dt","damping","Mult","UpdateEdge","PI","DynamicSystem01","Dynamic01","dNode","DynamicSystem","Dynamic02","Dynamic03","OOP","Point","age","weight","Compute","activeCommandController","geomeetryCommon","model","graphicsCoreWrapper","canvasWrapper","InitDefinition","Dispose","LoadDefinition","d0"],"sourceRoot":""}