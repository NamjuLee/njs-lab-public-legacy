{"version":3,"file":"static/js/72702.510c5f84.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-pixel/20_pixelMapTerrainColorScale/ControllerPixelMap/index.ts","njslab/Workshop/workshop-pixel/20_pixelMapTerrainColorScale/PMapTerrain/index.ts","njslab/Workshop/workshop-pixel/20_pixelMapTerrainColorScale/RendererPixelMap/Base.ts","njslab/Workshop/workshop-pixel/20_pixelMapTerrainColorScale/RendererPixelMap/index.ts","njslab/Workshop/workshop-pixel/20_pixelMapTerrainColorScale/ColorScale.ts","njslab/Workshop/workshop-pixel/20_pixelMapTerrainColorScale/index.ts"],"sourcesContent":["import { getImgFromURL } from '../../../../../lib';\nimport { Solution } from '..';\nexport class ControllerPixelMap {\n    public img: HTMLImageElement | undefined = undefined;\n\n    public rx: number = 20;\n    public ry: number = 20;\n    public rz: number = 2;\n    public scaleArrow: number = 0.5;\n    public colorScale = 'gray';\n    public minScale = 0.0;\n    public maxScale = 1.0;\n\n    public app: Solution;\n    public hostDiv: HTMLElement;\n    public divMenu: HTMLElement;\n    public divText: HTMLElement;\n\n    constructor(app: Solution) {\n        this.app = app;\n        this.hostDiv = this.app.divMenu;\n        this.initUI();\n    }\n    public initUI() {\n        const path0 = 'https://upload.wikimedia.org/wikipedia/commons/5/57/Heightmap.png';\n        const path1 = 'https://upload.wikimedia.org/wikipedia/commons/1/15/Srtm_ramp2.world.21600x10800.jpg';\n        const path2 = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/heightMap/Heightmap_01.png';\n        const path3 = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/heightMap/Heightmap_02.jpg';\n        const path4 = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/heightMap/Heightmap_03.jpg';\n\n\n        const divMenu = document.createElement('div');\n        this.divMenu = divMenu;\n        this.hostDiv.appendChild(divMenu);\n        divMenu.style.display = 'block';\n        divMenu.style.position = 'absolute';\n        divMenu.style.top = '0px';\n\n        const divInput = document.createElement('input');\n        // divInput.value = 'https://upload.wikimedia.org/wikipedia/commons/f/ff/Mozilla_Firefox_logo_2013.png';\n        divInput.value = path2\n        divInput.addEventListener('keydown', (e: KeyboardEvent) => {\n            if (e.code === 'Enter') {\n                // this.buildMeshByImg(divInput.value)\n                this.loadImg(divInput.value)\n            }\n        });\n        divMenu.appendChild(divInput);\n\n        const callBack = (img) => {\n            img.onload = (ev) => {\n                this.divMenu.removeChild(this.img)\n                this.divMenu.appendChild(img)\n                this.img = img;\n                this.update();\n                // this.img.style.width = '250px'\n            };\n        };\n        const divFileInput = getImageUploader(callBack);\n        divMenu.appendChild(divFileInput);\n\n        const slType = getSlider('rx', 10, 30)\n        slType.slider.defaultValue = '20';\n        divMenu.appendChild(slType.div);\n        slType.slider.oninput = () => {\n            const value = parseInt(slType.slider.value);\n            this.rx = value;\n            this.update();\n            // this.buildMeshByImg(this.img) \n        };\n        const slType2 = getSlider('ry', 10, 30)\n        slType2.slider.defaultValue = '20';\n        divMenu.appendChild(slType2.div);\n        slType2.slider.oninput = () => {\n            const value = parseInt(slType2.slider.value);\n            this.ry = value;\n            this.update();\n            // this.buildMeshByImg(this.img) \n        };\n\n        const slType3 = getSlider('rz', 0, 50)\n        slType3.slider.defaultValue = '20';\n        divMenu.appendChild(slType3.div);\n        slType3.slider.oninput = () => {\n            const value = parseInt(slType3.slider.value);\n            this.rz = value * 0.1;\n            this.update();\n            // this.buildMeshByImg(this.img) \n        };\n\n\n        const slType4 = getSlider('arrow', 5, 10)\n        slType4.slider.defaultValue = '5';\n        divMenu.appendChild(slType4.div);\n        slType4.slider.oninput = () => {\n            const value = parseInt(slType4.slider.value);\n            this.scaleArrow = value * 0.1;\n            this.update();\n        };\n\n        const check = getCheckBox();\n        check.defaultChecked = true;\n        check.onchange = (e: Event) => {\n            // @ts-ignore\n            const value = e.target.checked;\n            this.app.renderer.surfaceMesh.visible = value;\n        };\n        divMenu.appendChild(check);\n\n        const downloadDiv = document.createElement('button');\n        downloadDiv.textContent = 'Click here to download CSV';\n        downloadDiv.style.background = '#999';\n        downloadDiv.onclick = () => {\n            // console.log('click')\n            this.app.tMap.pMap.toCSV()\n        }\n        divMenu.appendChild(downloadDiv);\n\n        this.divText = document.createElement('div')\n        this.divText.textContent = ''\n        divMenu.appendChild(this.divText);\n\n\n        const downloadJSON = document.createElement('button');\n        downloadJSON.textContent = 'Click here to download JSON';\n        downloadJSON.style.background = '#999';\n        downloadJSON.onclick = () => {\n            this.app.toJSON()\n        }\n        divMenu.appendChild(downloadJSON);\n\n        const downloadOBJ = document.createElement('button');\n        downloadOBJ.textContent = 'Click here to download 3D terrain(OBJ)';\n        downloadOBJ.style.background = '#999';\n        downloadOBJ.onclick = () => {\n            this.app.toOBJ()\n        }\n        divMenu.appendChild(downloadOBJ);\n\n        const populatePoint = document.createElement('button');\n        populatePoint.textContent = 'Populating points';\n        populatePoint.style.background = '#999';\n        populatePoint.onclick = () => {\n            this.app.populatePoint()\n        }\n        divMenu.appendChild(populatePoint);\n\n        const colorScaleDiv = getDrawingModeRadio((v) => {\n            this.colorScale = v.toLowerCase();\n            this.update();\n        }, ['Gray', 'False'])\n        divMenu.appendChild(colorScaleDiv);\n\n\n        const slType0 = getSlider('min', 0.0, 100)\n        slType0.slider.defaultValue = '0';\n        divMenu.appendChild(slType0.div);\n        slType0.slider.oninput = () => {\n            const value = parseInt(slType0.slider.value) * 0.01;\n            // console.log(value);\n            this.minScale = value;\n            this.update();\n            // this.buildMeshByImg(this.img) \n        };\n\n        const slType1 = getSlider('max', 0.0, 100)\n        slType1.slider.defaultValue = '100';\n        divMenu.appendChild(slType1.div);\n        slType1.slider.oninput = () => {\n            const value = parseInt(slType1.slider.value) * 0.01;\n            // console.log(value);\n            this.maxScale = value;\n            this.update();\n            // this.buildMeshByImg(this.img) \n        };\n\n    }\n    public loadImg(url: string) {\n        getImgFromURL(url).then((img: HTMLImageElement) => {\n            if (this.img) {\n                this.divMenu.removeChild(this.img)\n            }\n\n            img.onload = (ev) => {\n                this.divMenu.appendChild(img)\n                this.img = img;\n                this.update();\n            };\n\n        });\n    }\n    public update() {\n        // console.log(this.rx, this.ry, this.size)\n        this.app.init(this.img, this.colorScale)\n    }\n    public destroy() {\n        this.hostDiv.removeChild(this.divMenu);\n    }\n}\n\nconst getSlider = (title: string, min: number, max: number) => {\n    // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\n    const div = document.createElement('div');\n    div.style.display = 'flex';\n\n    const slider = document.createElement('input');\n    slider.type = 'range';\n    slider.min = `${min}`;\n    slider.max = `${max}`;\n\n    const text = document.createElement('div');\n    text.textContent = title;\n    text.style.color = '#aaa';\n    div.appendChild(slider);\n    div.appendChild(text);\n    return {\n        div, slider, text\n    }\n};\n\nconst getCheckBox = () => {\n    const inputFile = document.createElement('input');\n    inputFile.type = 'checkbox';\n    return inputFile;\n};\n\n\n\nconst getDrawingModeRadio = (fn: (v: string) => void, radioValues = ['A', 'B', 'C']) => {\n\n    const container = document.createElement('div');\n    // container.style.background = '#444';\n    container.style.margin = '5px';\n    // container.style.height =  '100px';\n    \n    const titleText = 'Scale'\n    const title = document.createElement('div');\n    title.textContent = titleText;\n    container.appendChild(title);\n    // container\n\n    radioValues.forEach(value => {\n        const label = document.createElement('label');\n        label.className = 'radio-item';\n\n        const radio = document.createElement('input');\n        radio.type = 'radio';\n        radio.name = 'ratio';\n        radio.value = value;\n\n        const text = document.createTextNode(value);\n        label.appendChild(radio);\n        label.appendChild(text);\n        container.appendChild(label);\n\n        // Add event listener to handle radio button change\n        radio.addEventListener('change', function() {\n            if (this.value.toLowerCase() === 'gray') {\n                radio.checked = true;\n                // title.textContent = titleText + ': Section'\n            } else if (this.value.toLowerCase() === 'false') {\n                // title.textContent = titleText + ': Line'\n            // } else if (this.value.toLowerCase() === 'true') {\n                // title.textContent = titleText + ': Polyline from the closest node'\n            }\n            fn(this.value)\n        });\n    });\n\n    // Set default value\n    const defaultValue = 'Gray'; // Set your default value here\n    const defaultRadio = container.querySelector(`input[value=\"${defaultValue}\"]`);\n    // console.log(defaultRadio)\n    if (defaultRadio) {\n        // @ts-ignore\n        defaultRadio.checked = true;\n        // Trigger change event to update title and perform associated actions\n        defaultRadio.dispatchEvent(new Event('change'));\n    }\n\n    return container;\n}\n\nconst getImageUploader = (callBack: (img: HTMLImageElement) => void) => {\n    const divInputFile = document.createElement('input');\n    divInputFile.type = 'file';\n    divInputFile.addEventListener('change', (event) => { \n       // @ts-ignore\n        const file = event.target.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onload = (e) => {\n                const img = new Image();\n                img.src = e.target.result as string;\n                callBack(img)      \n            }\n            reader.readAsDataURL(file);\n        }\n    });\n    return divInputFile\n};","import { AnyLayer } from 'mapbox-gl';\nimport * as THREE from 'three';\n\nimport { Solution } from '../';\n\nexport class PixelMap {\n    public pixelList: Pixel[] = []\n    public minV: Vector3;\n    public maxV: Vector3;\n    public rx = 10;\n    public ry = 10;\n    public rz = 2;\n    public intervalX;\n    public intervalY;\n    public scaleMin = 0.0;\n    public scaleMax = 1.0;\n    public selPixel: Pixel | undefined = undefined;\n    constructor() {\n\n\n    }\n    public init(minV: Vector3, maxV: Vector3, rx: number, ry: number) {\n        this.minV = minV;\n        this.maxV = maxV;\n        this.rx = rx;\n        this.ry = ry;\n\n        this.pixelList = []\n        const x = this.minV.x\n        const y = this.minV.y\n\n        this.intervalX = (this.maxV.x - this.minV.x) / (this.rx - 1)\n        this.intervalY = (this.maxV.y - this.minV.y) / (this.ry - 1)\n\n        for (let j = 0; j < this.ry; j++) {\n            for (let i = 0; i < this.rx; i++) {\n                const xV = x + i * this.intervalX;\n                const yV = y + j * this.intervalY;\n\n                let pix = new Pixel(this, xV * -1, yV, 0); // flip x\n                // let pix = new Pixel(this, xV * -1 , yV , 0);\n                pix.id = this.pixelList.length;\n                pix.xi = i;\n                pix.yi = j;\n                this.pixelList.push(pix);\n            }\n        }\n        this.initGridNeighbor();\n    }\n    public getPixel(x: number, y: number) {\n        return this.pixelList[x + y * this.rx]\n    }\n    private initGridNeighbor() {\n        for (let j = 0; j < this.ry; ++j) {\n            for (let i = 0; i < this.rx; ++i) {\n                let k = i + j * this.rx;\n                let px = this.pixelList[k];\n                if (i > 0) { px.nPix.push(this.pixelList[k - 1]); }\n                if (i < this.rx - 1) { px.nPix.push(this.pixelList[k + 1]); }\n                if (j > 0) { px.nPix.push(this.pixelList[k - this.rx]); }\n                if (j < this.ry - 1) { px.nPix.push(this.pixelList[k + this.rx]); }\n                if ((i > 0) && (j < this.ry - 1)) { px.nPix.push(this.pixelList[k + this.rx - 1]); }\n                if ((i > 0) && (j > 0)) { px.nPix.push(this.pixelList[k - this.rx - 1]); }\n                if ((i < this.rx - 1) && (j < this.ry - 1)) { px.nPix.push(this.pixelList[k + this.rx + 1]); }\n                if ((i < this.rx - 1) && (j > 0)) { px.nPix.push(this.pixelList[k - this.rx + 1]); }\n            }\n        }\n    }\n    public updateImage(img: HTMLImageElement) {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d', { willReadFrequently: true })\n        ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, this.rx, this.ry)\n\n        const imgData = ctx.getImageData(0, 0, this.rx, this.ry);\n\n        const px = (x: number, y: number) => {\n            return x * 4 + y * imgData.width * 4;\n        };\n\n        let maxZ = 0;\n\n        for (let j = 0; j < this.ry; ++j) {\n            for (let i = 0; i < this.rx; ++i) {\n                let k = px(i, j)\n                let indexList = i + j * this.rx;\n\n\n                // this.pixelList[indexList].color = [ \n                //     imgData.data[k], imgData.data[k + 1], imgData.data[k + 2], imgData.data[k + 3]\n                // ]\n                // this.pixelList[indexList].vec.z = RGBtoGray(\n                //     imgData.data[k] / 255, imgData.data[k + 1] / 255, imgData.data[k + 2] / 255\n                // ) * this.rz\n\n\n                const zVal = RGBtoGray(imgData.data[k] / 255, imgData.data[k + 1] / 255, imgData.data[k + 2] / 255);\n                this.pixelList[indexList].vec.z = zVal * this.rz;\n\n                if (maxZ < zVal) {\n                    maxZ = zVal\n                    // console.log(maxZ)\n                }\n\n                const col = Solution.colorTable.getByIndex(zVal, this.scaleMin, this.scaleMax);\n                // console.log(col, this.scaleMin, this.scaleMax);\n\n                this.pixelList[indexList].color = [...col.color, imgData.data[k + 3]]\n\n\n                // this.pixelList[indexList].vec.z = RGBtoGray(\n                //     imgData.data[k] / 255, imgData.data[k + 1] / 255, imgData.data[k + 2] / 255\n                // ) * this.rz\n            }\n        }\n    }\n    public picking(x: number, y: number, z: number) {\n        const mv = new Vector3(x, y, z)\n        let dis = Number.MAX_VALUE;\n        let id = -1\n        for (let i = 0; i < this.pixelList.length; ++i) {\n            const theDis = distance(this.pixelList[i].vec, mv);\n            if (dis > theDis) {\n                dis = theDis;\n                id = i;\n            }\n            this.pixelList[i].hover = false;\n        }\n\n        this.selPixel = undefined;\n        if (id > -1) {\n            this.pixelList[id].hover = true;\n            this.selPixel = this.pixelList[id];\n            // console.log(this.selPixel)\n        }\n        return this.selPixel;\n    }\n    public render(ctx) {\n        this.pixelList.forEach((p: Pixel) => {\n            p.render(ctx);\n        })\n\n        if (this.selPixel) {\n            this.selPixel.render(ctx);\n        }\n    }\n    public onClick(x: number, y: number, z: number) {\n        return this.picking(x, y, z)\n    }\n    public toCSV() {\n        const csv: any[] = [\n            ['id', 'location(lat, lon)', 'elevation', 'slope'],\n        ]\n\n        for (let i = 0; i < this.pixelList.length; ++i) {\n            const pix = this.pixelList[i];\n            csv.push([\n                pix.id, `${pix.vec.y},${pix.vec.x}`, `${pix.vec.z}`, `${pix.slope}`\n            ]);\n        }\n\n        downloadBlob(arrayToCsv(csv), 'terrainSlopeAnalysis.csv', 'text/csv;charset=utf-8;')\n    }\n    // public toOBJ() {\n    //     const theArray = []\n\n    //     for(let i = 0 ; i < this.pixelList.length; ++i) {\n    //         const v = this.pixelList[i].vec;\n    //         theArray.push(`v ${v.x} ${v.y} ${v.z}\\n`)\n    //     }\n\n    //     for(let i = 0 ; i < this.pixelList.length; ++i) {\n    //         // const v = this.pixelList[i].;\n    //         // theArray.push(`v ${v.x} ${v.y} ${v.z}\\n`)\n    //     }\n\n    //     return theArray\n    // }\n}\n\nclass Pixel {\n    public id = 0;\n    public slope = [];\n    public nPixString = [];\n\n    public xi: number;\n    public yi: number;\n    public pMap: PixelMap;\n    public vec: Vector3;\n    public hover: boolean = false;\n    public nPix: Pixel[] = [];\n    public color: number[] = [];\n\n    public mesh: any;\n    public arrow: any = [];\n    constructor(pMap: PixelMap, x: number, y: number, z: number) {\n        this.pMap = pMap;\n        this.vec = new Vector3(x, y, z);\n    }\n    public onClick() {\n        // console.log(this)\n    }\n    public render(ctx: CanvasRenderingContext2D) {\n        const width = this.pMap.intervalX;\n        const height = this.pMap.intervalY;\n\n        ctx.beginPath();\n        ctx.rect(this.vec.x - width * 0.5, this.vec.y - height * 0.5, width, height);\n        ctx.closePath();\n        ctx.stroke();\n        if (this.hover) {\n            ctx.fillStyle = '#555';\n            ctx.fill();\n        } else {\n            ctx.fillStyle = `rgba(${this.color[0]}, ${this.color[1]}, ${this.color[2]}, ${this.color[3]})`;\n            ctx.fill();\n        }\n\n        ctx.beginPath();\n        ctx.arc(this.vec.x, this.vec.y, this.vec.r, 0, Math.PI * 2.0);\n        ctx.closePath();\n        if (this.hover) {\n            ctx.fillStyle = '#999';\n        } else {\n            ctx.fillStyle = '#333';\n        }\n        ctx.fill();\n\n        if (this.hover) {\n            for (let i = 0; i < this.nPix.length; ++i) {\n                ctx.beginPath();\n                ctx.moveTo(this.vec.x, this.vec.y);\n                ctx.lineTo(this.nPix[i].vec.x, this.nPix[i].vec.y);\n                ctx.closePath();\n                ctx.stroke();\n            }\n\n            ctx.strokeText(`x: ${this.xi}, y: ${this.yi}`, this.vec.x, this.vec.y);\n        }\n\n\n    }\n}\n\nexport class Vector3 {\n    public x: number = 0.0;\n    public y: number = 0.0;\n    public z: number = 0.0;\n    public r: number = 3\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n}\n\n\nconst distance = (v0: Vector3, v1: Vector3) => {\n    return Math.sqrt(distance2(v0, v1));\n}\nconst distance2 = (v0: Vector3, v1: Vector3) => {\n    return (v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z);\n}\n\nexport const RGBtoGray = (r: number, g: number, b: number) => {\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n}\n\nconst arrayToCsv = (data) => {\n    return data.map(row =>\n        row\n            .map(String)  // convert every value to String\n            .map(v => v.replaceAll('\"', '\"\"'))  // escape double quotes\n            .map(v => `\"${v}\"`)  // quote it\n            .join(',')  // comma-separated\n    ).join('\\r\\n');  // rows starting on new lines\n}\n\nconst downloadBlob = (content, filename, contentType) => {\n    // Create a blob\n    var blob = new Blob([content], { type: contentType });\n    var url = URL.createObjectURL(blob);\n\n    // Create a link to download it\n    var pom = document.createElement('a');\n    pom.href = url;\n    pom.setAttribute('download', filename);\n    pom.click();\n}","import * as THREE from 'three';\nimport { OrbitControls } from 'three-orbitcontrols-ts';\n\nexport class RendererThree {\n    public canvas: HTMLCanvasElement;\n    public hostDiv: HTMLElement;\n    public ctx: CanvasRenderingContext2D;\n    public t: number = 0.0;\n    public camera: THREE.PerspectiveCamera;\n    public scene: THREE.Scene;\n    public renderer: THREE.WebGLRenderer;\n    public controls: OrbitControls;\n    private requestFrame: number;\n    constructor(id: string) {\n        this.hostDiv = document.getElementById(id);\n        this.initCanvas();\n    }\n    private initCanvas() {\n        THREE.Object3D.DEFAULT_UP.set(0, 0, 1);\n\n        this.scene = new THREE.Scene();\n        \n        this.scene.castShadow = true;\n\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n        this.renderer.setPixelRatio(this.hostDiv.clientWidth / this.hostDiv.clientHeight);\n        this.renderer.domElement.id = 'Three';\n        this.renderer.domElement.style.position = 'absolute';\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.setSize(this.hostDiv.clientWidth, this.hostDiv.clientHeight);\n        this.hostDiv.appendChild(this.renderer.domElement);\n\n        this.camera = new THREE.PerspectiveCamera(30, this.hostDiv.clientWidth / this.hostDiv.clientHeight, 1, 5000);\n        this.controls = new OrbitControls( this.camera, this.renderer.domElement );\n        this.camera.position.set( 0, 0, 0 );\n        this.controls.update();\n\n        this.canvas = this.renderer.domElement;\n\n        this.init();\n    }\n    private init() {\n        this.eventBind();\n\n    }\n    private eventBind() {\n        this.renderer.domElement.onmousedown = (e: MouseEvent) => this.mouseDown(e);\n        this.renderer.domElement.onmouseup = (e: MouseEvent) => this.mouseUp(e);\n        this.renderer.domElement.onmousemove = (e: MouseEvent) => this.mouseMove(e);\n        this.renderer.domElement.addEventListener('click', (e: MouseEvent) =>this.mouseClick(e))\n\n        window.addEventListener('resize', () => this.onWindowResize());\n\n    }\n    private onWindowResize() {\n        this.camera.aspect = this.hostDiv.clientWidth / this.hostDiv.clientHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize( this.hostDiv.clientWidth, this.hostDiv.clientHeight );\n    }\n    private loop = () => {\n        this.requestFrame = requestAnimationFrame(this.loop);\n        this.controls.update();\n        this.update(this.scene);\n        this.renderer.render(this.scene, this.camera);\n        this.t += 0.01;\n\n        // console.log('rendering...');\n    }\n    // .............................................................................\n    public start() {\n        this.loop();\n    }\n    public mouseDown(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseUp(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseClick(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseDClick(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseMove(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseDrag(e: MouseEvent) {\n        // console.log(e);\n    }\n    public update(scene: THREE.Scene) {\n\n    }\n    public destroy() {\n        window.removeEventListener('resize', () => this.onWindowResize());\n        cancelAnimationFrame(this.requestFrame);\n        this.requestFrame = undefined;\n        while (this.hostDiv.lastChild) {\n            this.hostDiv.removeChild(this.hostDiv.lastChild);\n        }\n    }\n}","import * as THREE from 'three';\nimport { RendererThree } from './Base';\nimport { PixelMap } from '../PMapTerrain';\n\nexport class Renderer extends RendererThree {\n    public canvas: HTMLCanvasElement;\n    public pointLight: THREE.PointLight;\n\n    rayCaster = new THREE.Raycaster();\n\n    mouse2 = new THREE.Vector2();\n    mouse3: THREE.Vector3 | undefined = undefined;\n    sphere: THREE.Mesh;\n    surfaceMesh: THREE.Mesh;\n\n    preSelection: THREE.Mesh | undefined = undefined\n\n    public meshList: THREE.Mesh[] = [];\n    public arrowList: THREE.ArrowHelper[] = [];\n\n    public vertexArray = [];\n    public faceArray = [];\n    public colorArray = [];\n\n    constructor(id: string = 'main') {\n        super(id)\n\n        this.pointLight = new THREE.PointLight(0xffffff, 0.75);\n        this.pointLight.position.x = 80;\n        this.pointLight.position.z = 80;\n        this.scene.add(this.pointLight);\n\n        this.canvas = document.createElement('canvas');\n        this.hostDiv.append(this.canvas);\n\n        this.renderer.setClearColor(0x000000, 0);\n        this.scene.background = null;\n        this.camera.position.set(0, -80, 80);\n\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n        const geometrySphere = new THREE.SphereGeometry(0.05, 50, 50);\n        const objectSphere = new THREE.Mesh(geometrySphere, material);\n        objectSphere.translateX(1);\n        this.sphere = objectSphere;\n        this.scene.add(objectSphere);\n\n\n        this.start();\n    }\n    public populatePoint() {\n        // console.log('populate');\n    }\n    public reset() {\n        this.scene.remove(...this.meshList)\n        this.meshList = []\n\n        this.scene.remove(...this.arrowList)\n        this.arrowList = []\n\n        this.preSelection = undefined;\n    }\n    public buildPoint(pMap: PixelMap) {\n\n        for (let i = 0; i < pMap.pixelList.length; ++i) {\n            const vec = pMap.pixelList[i].vec;\n            const col = pMap.pixelList[i].color;\n\n            const geometry = new THREE.SphereGeometry(0.15, 8, 8);\n            const material = new THREE.MeshBasicMaterial({ color: new THREE.Color(col[0] / 255, col[1] / 255, col[2] / 255) });\n\n            const mesh = new THREE.Mesh(geometry, material);\n            mesh.userData['pixel'] = pMap.pixelList[i]\n            pMap.pixelList[i].mesh = mesh;\n\n            this.meshList.push(mesh);\n            mesh.position.set(vec.x, vec.y, vec.z);\n            this.scene.add(mesh);\n\n        }\n    }\n    public mouseClick(e: MouseEvent): void {\n        const obj = picking(e, this.meshList, this.renderer, this.camera, this.rayCaster, this.mouse2)\n        if (obj) {\n            if (obj.mesh[0].object === this.surfaceMesh) { return; }\n\n\n            if (this.preSelection) {\n                const mat = this.preSelection.material as THREE.MeshBasicMaterial\n                if (mat.color) mat.color.setRGB(this.preSelection.userData.pixel.color[0] / 255, this.preSelection.userData.pixel.color[1] / 255, this.preSelection.userData.pixel.color[2] / 255)\n            }\n\n            this.mouse3 = new THREE.Vector3(obj.mouse3.x, obj.mouse3.y, obj.mouse3.z);\n\n            this.sphere.position.set(this.mouse3.x, this.mouse3.y, this.mouse3.z);\n\n            this.onClickBind(this.mouse3.x, this.mouse3.y, this.mouse3.z);\n            const mesh = obj.mesh[0].object as THREE.Mesh;\n            // console.log(mesh)\n            const mat = mesh.material as THREE.MeshBasicMaterial\n            if (mat.color) mat.color.setHex(0xff0000)\n            this.preSelection = mesh\n            return\n        }\n\n        this.mouse3 = undefined;\n    }\n    public onClickBind(x: number, y: number, z: number) { /* bind needed */ }\n\n    public buildMeshByImg = (pMap: PixelMap) => {\n        // ................................................................................\n        // your code goes here\n        const xNum = pMap.rx;\n        const yNum = pMap.ry;\n\n        const vertices = [];\n        const colors = [];\n        for (let y = 0; y < yNum; ++y) {\n            for (let x = 0; x < xNum; ++x) {\n                const pix = pMap.getPixel(x, y);\n                vertices.push(pix.vec.x, pix.vec.y, pix.vec.z);\n                colors.push(pix.color[0] / 255, pix.color[1] / 255, pix.color[2] / 255)\n\n                this.vertexArray.push([pix.vec.x, pix.vec.y, pix.vec.z, pix.color[0], pix.color[1], pix.color[2]]);\n            }\n        }\n\n        const faces = [];\n        for (let y = 0; y < yNum - 1; ++y) {\n            for (let x = 0; x < xNum - 1; ++x) {\n                let index = x + (y * xNum);\n                faces.push(index, index + xNum, index + 1,);\n                faces.push(index + 1, index + xNum, index + xNum + 1,);\n\n                this.faceArray.push([index, index + xNum, index + 1]);\n                this.faceArray.push([index + 1, index + xNum, index + xNum + 1]);\n            }\n        }\n\n        const material = new THREE.MeshBasicMaterial ({\n            // vertexColors: THREE.VertexColors ,\n            side: THREE.DoubleSide,\n            vertexColors: true,\n            // flatShading: false,\n        });\n\n        const geometry = new THREE.BufferGeometry();\n        geometry.setIndex(faces);\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n        geometry.setAttribute('color', new THREE.Float32BufferAttribute(colors, 3));\n        geometry.computeVertexNormals();\n        geometry.computeBoundingBox();\n\n        const mesh = new THREE.Mesh(geometry, material);\n        this.surfaceMesh = mesh\n\n        this.meshList.push(mesh);\n        this.scene.add(mesh);\n\n    }\n    public buildArrow(pMap: PixelMap, size = 0.25 ) {\n        const zOff = 0.0075;\n        for (let j = 0; j < pMap.pixelList.length; ++j) {\n            const px = pMap.pixelList[j];\n            const origin = new THREE.Vector3(px.vec.x, px.vec.y, px.vec.z + zOff);\n            px.arrow = [];\n\n            for (let i = 0; i < px.nPix.length; ++i) {\n                const np = px.nPix[i];\n                const dir = new THREE.Vector3(np.vec.x - px.vec.x, np.vec.y - px.vec.y, np.vec.z + zOff - px.vec.z + zOff);\n                dir.normalize();\n\n                const slope = dir.z;\n                const r = slope <= 0 ? Math.abs(slope): 0;\n                const g = 0;\n                const b = slope > 0 ? Math.abs(slope): 0;\n\n                px.slope.push(`id:${np.id}; value:${slope}`);\n\n                const arrowHelper = new THREE.ArrowHelper(dir, origin, size, new THREE.Color(r,g,b));\n                px.arrow.push(arrowHelper);\n\n                this.arrowList.push(arrowHelper);\n                this.scene.add(arrowHelper);\n            }\n\n        }\n\n\n\n    }\n}\n\n\nconst picking = (e: MouseEvent, arrayMesh, renderer, camera, rayCaster, mouse2) => {\n    mouse2.x = (e.offsetX / renderer.domElement.clientWidth) * 2 - 1;\n    mouse2.y = -(e.offsetY / renderer.domElement.clientHeight) * 2 + 1;\n    rayCaster.setFromCamera(mouse2, camera);\n    const intersects = rayCaster.intersectObjects([...arrayMesh]);\n    if (intersects.length > 0) {\n        return {\n            mesh: intersects,\n            mouse3: new THREE.Vector3(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z)\n        };\n    }\n    return undefined;\n}","// Function to map a value to a pseudocolor\nexport const mapValueToPseudoColor = (value, minValue = 0, maxValue = 100) => {\n    // Define your pseudocolor scale here\n    // This is just an example, you can adjust it as needed\n    const colors = [\n        [0, 0, 255],    // Blue for low values\n        [0, 255, 255],  // Cyan for mid-low values\n        [0, 255, 0],    // Green for mid values\n        [255, 255, 0],  // Yellow for mid-high values\n        [255, 0, 0]     // Red for high values\n    ];\n\n    // Normalize value to range [0, 1]\n    const normalizedValue = (value - minValue) / (maxValue - minValue);\n\n    // Scale normalized value to range [0, colors.length - 1]\n    const scaledValue = normalizedValue * (colors.length - 1);\n\n    // Find the indices of the two nearest colors\n    const index1 = Math.floor(scaledValue);\n    const index2 = Math.min(index1 + 1, colors.length - 1);\n\n    // Calculate the interpolation factor\n    const fraction = scaledValue - index1;\n\n    // Interpolate between the two nearest colors\n    const color1 = colors[index1];\n    const color2 = colors[index2];\n    const interpolatedColor = [\n        Math.round(color1[0] * (1 - fraction) + color2[0] * fraction),\n        Math.round(color1[1] * (1 - fraction) + color2[1] * fraction),\n        Math.round(color1[2] * (1 - fraction) + color2[2] * fraction)\n    ];\n\n    return interpolatedColor;\n}\n\nexport const getLookupTable = () => {\n    const remap = (CValue: number, OldMin: number, OldMax: number, NewMin: number = 0, NewMax: number = 1020) => {\n        return (((CValue - OldMin) * (NewMax - NewMin)) / (OldMax - OldMin)) + NewMin;\n    }\n    const min = 0\n    const max = 1020\n    const pseudoColorFromColor = { }\n    const pseudoColorFromIndex = { }\n\n    const pseudoColorTable = {\n        min, max,\n        colorTable: pseudoColorFromColor,\n        indexTable: pseudoColorFromIndex,\n        getByIndex: (i, minValue, maxValue) => {\n            const reIndex = remap(i, minValue, maxValue, min, max);\n            // console.log('----',reIndex)\n            let index = Math.floor(reIndex)\n            index = index > max ? max - 1: index;\n            index = index < 0 ? 0 : index;\n            // console.log({index})\n            return pseudoColorFromIndex[index];\n        }\n    }\n\n    for (let i = min ; i < max; i++) {\n        const col = mapValueToPseudoColor(i, min, max);\n        // console.log(col.join(','))\n        const key = col.join(',');\n\n        pseudoColorFromColor[key] = { index: i, color: col, };\n        pseudoColorFromIndex[i] = { color: col, key: key, }\n\n    }\n    return pseudoColorTable;\n}\n\n\nexport const getLookupTableGrayscale = () => {\n    const remap = (CValue: number, OldMin: number, OldMax: number, NewMin: number = 0, NewMax: number = 255) => {\n        return (((CValue - OldMin) * (NewMax - NewMin)) / (OldMax - OldMin)) + NewMin;\n    }\n    const min = 0\n    const max = 255\n    const pseudoColorFromColor = { }\n    const pseudoColorFromIndex = { }\n\n    const pseudoColorTable = {\n        min, max,\n        colorTable: pseudoColorFromColor,\n        indexTable: pseudoColorFromIndex,\n        getByIndex: (i, minValue, maxValue) => {\n            const reIndex = remap(i, minValue, maxValue, min, max);\n            // console.log(reIndex);\n            let index = Math.floor(reIndex);\n            index = index > max ? max - 1: index;\n            index = index < 0 ? 0: index;\n            return pseudoColorFromIndex[index];\n        }\n    }\n\n    for (let i = min ; i < max; i++) {\n        const col = [i, i, i];\n        // console.log(col.join(','))\n        const key = col.join(',');\n\n        pseudoColorFromColor[key] = { index: i, color: col, };\n        pseudoColorFromIndex[i] = { color: col, key: key, }\n\n    }\n    return pseudoColorTable;\n}","import * as THREE from 'three';\r\nimport { RGBtoGray } from '../../../../lib';\r\nimport { RendererThree } from './RendererPixelMap/Base';\r\nimport { ControllerPixelMap } from './ControllerPixelMap';\r\nimport { PixelMap, Vector3 } from './PMapTerrain';\r\nimport { Renderer } from './RendererPixelMap';\r\n\r\nimport { getLookupTable, getLookupTableGrayscale } from './ColorScale';\r\n\r\nexport class Solution {\r\n    public controller: ControllerPixelMap;\r\n    public renderer: Renderer;\r\n\r\n    public static colorTable: any;\r\n\r\n    public canvas: HTMLCanvasElement;\r\n\r\n    public divMain: HTMLElement;\r\n    public divMenu: HTMLElement;\r\n\r\n    tMap: TerrainMap\r\n\r\n    public ctxLegend: CanvasRenderingContext2D;\r\n\r\n    constructor(id: string = 'main') {\r\n\r\n\r\n\r\n\r\n        const divMain = document.getElementById(id);\r\n        this.divMain = divMain;\r\n\r\n        const divMenu = document.createElement('div');\r\n        this.divMenu = divMenu;\r\n        divMenu.style.height = '50px';\r\n        divMenu.style.position = 'absolute';\r\n        divMenu.style.backgroundColor = '#f00';\r\n        divMenu.style.zIndex = '1';\r\n        divMain.append(divMenu);\r\n        this.controller = new ControllerPixelMap(this);\r\n\r\n        const divCanvas = document.createElement('div');\r\n        divCanvas.id = 'pMap';\r\n        divCanvas.style.width = '100%';\r\n        divCanvas.style.height = '100%';\r\n        divMain.append(divCanvas);\r\n\r\n        this.renderer = new Renderer(divCanvas.id);\r\n\r\n        this.tMap = new TerrainMap(this)\r\n\r\n        this.controller.loadImg('https://raw.githubusercontent.com/NamjuLee/data/master/img/heightMap/Heightmap_03.jpg')\r\n\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = 255;\r\n        canvas.height = 10;\r\n        canvas.style.background = '#f0f';\r\n        canvas.style.border = '1px #f00';\r\n\r\n        this.controller.divMenu.appendChild(canvas);\r\n        this.ctxLegend = canvas.getContext('2d');\r\n\r\n    }\r\n    public init(img, colorScale = 'gray') {\r\n        // console.log('=============', colorScale, this.controller, this.tMap)\r\n        Solution.colorTable = colorScale === 'gray' ? getLookupTableGrayscale() : getLookupTable()\r\n\r\n        if (this.tMap) {\r\n\r\n            this.tMap.colorScale = colorScale\r\n\r\n            drawLegend(this.ctxLegend, colorScale);\r\n\r\n            this.tMap.init(img, this.controller.minScale, this.controller.maxScale)\r\n\r\n        }\r\n    }\r\n    public toJSON() {\r\n        const jsonObj = this.renderer.surfaceMesh.toJSON();\r\n        downloadBlob(JSON.stringify(jsonObj), 'terrain.json')\r\n    }\r\n    public populatePoint() {\r\n        this.renderer.populatePoint();\r\n    }   \r\n    public toOBJ() {\r\n        const theArray = []\r\n\r\n        this.renderer.vertexArray.forEach((vec) => {\r\n            const vertex = vec.map(index => index).join(' ');\r\n            // console.log(vertex)\r\n            theArray.push(`v ${vertex}\\n`);\r\n        });\r\n\r\n        this.renderer.faceArray.forEach((face) => {\r\n            const indices = face.map(index => index + 1).join(' ');\r\n            // console.log(indices)\r\n            theArray.push(`f ${indices}\\n`);\r\n        });\r\n\r\n        const out = theArray.flat().join(' ')\r\n        // console.log({ out })\r\n        downloadOBJ(out, 'terrain.obj')\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n\r\n        try {\r\n            while (this.divMain !== undefined && this.divMain.lastElementChild !== undefined) {\r\n                this.divMain.removeChild(this.divMain.lastElementChild);\r\n            }\r\n        } catch (error) { }\r\n    }\r\n}\r\n\r\nclass TerrainMap {\r\n    public colorScale = 'gray';\r\n\r\n    public solution: Solution;\r\n    public pMap: PixelMap;\r\n    constructor(solution: Solution) {\r\n        this.solution = solution;\r\n    }\r\n    public init(img, minScale, maxScale ) {\r\n        this.pMap = new PixelMap();\r\n        this.pMap.scaleMin = minScale;\r\n        this.pMap.scaleMax = maxScale;\r\n        this.pMap.rx = this.solution.controller.rx;\r\n        this.pMap.ry = this.solution.controller.ry;\r\n        this.pMap.rz = this.solution.controller.rz;\r\n\r\n        this.pMap.init(\r\n            new Vector3(10, 10, 0), new Vector3(-10, -10, 0),\r\n            this.pMap.rx, this.pMap.ry\r\n        );\r\n\r\n        this.solution.renderer.reset();\r\n        this.pMap.updateImage(img);\r\n        this.solution.renderer.buildPoint(this.pMap);\r\n        this.solution.renderer.buildMeshByImg(this.pMap);\r\n        this.solution.renderer.buildArrow(this.pMap, this.solution.controller.scaleArrow);\r\n        this.solution.renderer.onClickBind = (x: number, y: number, z: number) => {\r\n            const pixel = this.pMap.onClick(x, y, z);\r\n            pixel.onClick();\r\n\r\n            this.solution.controller.divText.textContent = `Elevation: ${pixel.vec.z}, Col: ${pixel.color}`;\r\n        };\r\n    }\r\n}\r\n\r\n\r\nconst downloadBlob = (content, filename, contentType = 'text/json;charset=utf-8;') => {\r\n    // Create a blob\r\n    var blob = new Blob([content], { type: contentType });\r\n    var url = URL.createObjectURL(blob);\r\n\r\n    // Create a link to download it\r\n    var pom = document.createElement('a');\r\n    pom.href = url;\r\n    pom.setAttribute('download', filename);\r\n    pom.click();\r\n}\r\n\r\n\r\nconst downloadOBJ = (objContent, filename) => {\r\n    // Create Blob\r\n    const blob = new Blob([objContent], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    // Create anchor element for downloading\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = filename;\r\n\r\n    // Trigger download\r\n    link.click();\r\n\r\n    // Cleanup\r\n    URL.revokeObjectURL(url);\r\n}\r\n\r\nconst drawLegend = (ctx: CanvasRenderingContext2D, scale = '') => {\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n    const max = 255;\r\n\r\n    if (scale === 'gray') {\r\n        for (let i = 0; i < max; i++) {\r\n            ctx.beginPath();\r\n            ctx.rect(i, 0, 1, 10);\r\n            ctx.closePath();\r\n            ctx.fillStyle = `rgb(${i}, ${i}, ${i})`;\r\n            ctx.fill();\r\n        }\r\n    } else {\r\n        for (let i = 0; i < max; i++) {\r\n            const col = Solution.colorTable.getByIndex(i, 0, max).color;\r\n\r\n            ctx.beginPath();\r\n            ctx.rect(i, 0, 1, 10);\r\n            ctx.closePath();\r\n            ctx.fillStyle = `rgb(${col[0]}, ${col[1]}, ${col[2]})`;\r\n            ctx.fill();\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n"],"names":["ControllerPixelMap","constructor","app","img","undefined","rx","ry","rz","scaleArrow","colorScale","minScale","maxScale","hostDiv","divMenu","divText","this","initUI","document","createElement","appendChild","style","display","position","top","divInput","value","addEventListener","e","code","loadImg","divFileInput","getImageUploader","onload","ev","removeChild","update","slType","getSlider","slider","defaultValue","div","oninput","parseInt","slType2","slType3","slType4","check","getCheckBox","defaultChecked","onchange","target","checked","renderer","surfaceMesh","visible","downloadDiv","textContent","background","onclick","tMap","pMap","toCSV","downloadJSON","toJSON","downloadOBJ","toOBJ","populatePoint","colorScaleDiv","getDrawingModeRadio","v","toLowerCase","slType0","slType1","url","getImgFromURL","then","init","destroy","title","min","max","type","text","color","inputFile","fn","radioValues","container","margin","forEach","label","className","radio","name","createTextNode","defaultRadio","querySelector","dispatchEvent","Event","callBack","divInputFile","event","file","files","reader","FileReader","Image","src","result","readAsDataURL","PixelMap","pixelList","minV","maxV","intervalX","intervalY","scaleMin","scaleMax","selPixel","x","y","j","i","xV","yV","pix","Pixel","id","length","xi","yi","push","initGridNeighbor","getPixel","k","px","nPix","updateImage","ctx","getContext","willReadFrequently","drawImage","width","height","imgData","getImageData","maxZ","indexList","zVal","RGBtoGray","data","vec","z","col","Solution","colorTable","getByIndex","picking","mv","Vector3","dis","Number","MAX_VALUE","theDis","distance","hover","render","p","onClick","csv","slope","downloadBlob","arrayToCsv","nPixString","mesh","arrow","beginPath","rect","closePath","stroke","fillStyle","fill","arc","r","Math","PI","moveTo","lineTo","strokeText","v0","v1","sqrt","distance2","g","b","map","row","String","replaceAll","join","content","filename","contentType","blob","Blob","URL","createObjectURL","pom","href","setAttribute","click","RendererThree","canvas","t","camera","scene","controls","requestFrame","loop","requestAnimationFrame","getElementById","initCanvas","THREE","castShadow","antialias","alpha","setPixelRatio","clientWidth","clientHeight","domElement","shadowMap","enabled","setSize","OrbitControls","set","eventBind","onmousedown","mouseDown","onmouseup","mouseUp","onmousemove","mouseMove","mouseClick","window","onWindowResize","aspect","updateProjectionMatrix","start","mouseDClick","mouseDrag","removeEventListener","cancelAnimationFrame","lastChild","Renderer","super","pointLight","rayCaster","mouse2","mouse3","sphere","preSelection","meshList","arrowList","vertexArray","faceArray","colorArray","buildMeshByImg","xNum","yNum","vertices","colors","faces","index","material","side","vertexColors","geometry","setIndex","computeVertexNormals","computeBoundingBox","add","append","setClearColor","geometrySphere","objectSphere","translateX","reset","remove","buildPoint","userData","obj","object","mat","setRGB","pixel","onClickBind","setHex","buildArrow","size","zOff","origin","np","dir","normalize","abs","arrowHelper","arrayMesh","offsetX","offsetY","setFromCamera","intersects","intersectObjects","point","mapValueToPseudoColor","minValue","scaledValue","index1","floor","index2","fraction","color1","color2","round","controller","divMain","ctxLegend","backgroundColor","zIndex","divCanvas","TerrainMap","border","pseudoColorFromColor","pseudoColorFromIndex","pseudoColorTable","indexTable","maxValue","reIndex","CValue","OldMin","OldMax","NewMin","remap","key","getLookupTableGrayscale","getLookupTable","drawLegend","jsonObj","JSON","stringify","theArray","vertex","face","indices","out","flat","lastElementChild","error","solution","objContent","link","download","revokeObjectURL","scale","clearRect"],"sourceRoot":""}