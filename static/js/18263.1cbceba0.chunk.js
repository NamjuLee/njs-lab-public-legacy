"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[18263],{18263:(t,e,i)=>{i.r(e),i.d(e,{Solution:()=>s,vertex:()=>r,vertexCount:()=>a});const o=function(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST;const o=t.createBuffer({size:e.byteLength,usage:i,mappedAtCreation:!0});return new Float32Array(o.getMappedRange()).set(e),o.unmap(),o},r=new Float32Array([0,.5,0,-.5,-.5,0,.5,-.5,0]),a=3,n="\n// vertext shader\n\nstruct Output {\n    @builtin(position) Position : vec4<f32>,\n    @location(0) vColor : vec4<f32>,\n};\n\n@vertex\nfn vs_main(@location(0) pos: vec4<f32>, @location(1) color: vec4<f32>) -> Output {\n    var output: Output;\n    output.Position = pos;\n    output.vColor = color;\n    return output;\n}\n\n// fragment shader\n\n@fragment\nfn fs_main(@location(0) vColor: vec4<f32>) -> @location(0) vec4<f32> {\n    return vColor;\n}\n";class s{constructor(t){this.divHost=void 0,this.canvas=void 0,this.ctx=void 0,this.device=void 0,this.format=void 0,this.size=void 0,this.pipelineObj=void 0,this.divHost=document.getElementById(t),this.canvas=document.createElement("canvas"),this.divHost.appendChild(this.canvas),this.initWebGPU()}async initWebGPU(){if(!navigator.gpu)throw new Error("Not Support WebGPU");const t=await navigator.gpu.requestAdapter({powerPreference:"high-performance"});if(!t)throw new Error("No Adapter Found");const e=await t.requestDevice();this.ctx=this.canvas.getContext("webgpu");const i=navigator.gpu.getPreferredCanvasFormat?navigator.gpu.getPreferredCanvasFormat():this.ctx.getPreferredFormat(t);window.devicePixelRatio;this.canvas.width=this.divHost.clientWidth,this.canvas.height=this.divHost.clientHeight,this.ctx.configure({device:e,format:i,alphaMode:"opaque"}),this.size={width:this.canvas.width,height:this.canvas.height},this.device=e,this.format=i,this.initPipeline(this.device,this.format)}async initPipeline(t,e){const i=new Float32Array([-.5,-.5,.5,-.5,-.5,.5,-.5,.5,.5,-.5,.5,.5]),r=new Float32Array([1,0,0,0,1,0,1,1,0,1,1,0,0,1,0,0,0,1]),a=o(t,i),s=o(t,r),c=t.createRenderPipeline({layout:"auto",vertex:{module:t.createShaderModule({code:n}),entryPoint:"vs_main",buffers:[{arrayStride:8,attributes:[{shaderLocation:0,format:"float32x2",offset:0}]},{arrayStride:12,attributes:[{shaderLocation:1,format:"float32x3",offset:0}]}]},fragment:{module:t.createShaderModule({code:n}),entryPoint:"fs_main",targets:[{format:this.format}]},primitive:{topology:"triangle-list"}}),d=t.createCommandEncoder(),h=this.ctx.getCurrentTexture().createView(),u=d.beginRenderPass({colorAttachments:[{view:h,clearValue:{r:0,g:0,b:0,a:1},loadOp:"clear",storeOp:"store"}]});u.setPipeline(c),u.setVertexBuffer(0,a),u.setVertexBuffer(1,s),u.draw(6),u.end(),t.queue.submit([d.finish()])}destroy(){for(this.device.destroy();this.divHost.lastElementChild;)this.divHost.removeChild(this.divHost.lastElementChild)}}}}]);
//# sourceMappingURL=18263.1cbceba0.chunk.js.map