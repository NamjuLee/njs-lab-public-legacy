{"version":3,"file":"static/js/1400.3e2f98f8.chunk.js","mappings":"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","sources":["../node_modules/d3-geo/node_modules/d3-array/src/ascending.js","../node_modules/d3-geo/node_modules/d3-array/src/bisect.js","../node_modules/d3-geo/node_modules/d3-array/src/bisector.js","../node_modules/d3-geo/node_modules/d3-array/src/array.js","../node_modules/d3-geo/node_modules/d3-array/src/ticks.js","../node_modules/d3-geo/node_modules/d3-array/src/merge.js","../node_modules/d3-geo/node_modules/d3-array/src/range.js","../node_modules/d3-geo/src/adder.js","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/src/graticule.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo/src/path/centroid.js","../node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/path/string.js","../node_modules/d3-geo/src/path/index.js","../node_modules/d3-geo/src/projection/conic.js","../node_modules/d3-geo/src/projection/conicEqualArea.js","../node_modules/d3-geo/src/projection/cylindricalEqualArea.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/rejoin.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/circle.js","../node_modules/d3-geo/src/clip/rectangle.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/stream.js"],"sourcesContent":["export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","export default function(x) {\n  return x;\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import adder from \"../adder.js\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder.js\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nvar sum = adder();\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n"],"names":["a","b","NaN","ascendingBisect","compare","f","length","d","x","ascending","left","lo","hi","mid","right","bisector","array","Array","prototype","slice","map","Math","sqrt","arrays","m","merged","n","i","j","start","stop","step","arguments","max","ceil","range","Adder","this","reset","constructor","s","t","add","y","temp","valueOf","adder","bv","av","compose","invert","graticuleX","y0","y1","dy","epsilon","concat","graticuleY","x0","x1","dx","graticule","X1","X0","Y1","Y0","X","Y","DX","DY","precision","type","coordinates","lines","filter","abs","outline","reverse","extent","_","extentMajor","extentMinor","stepMajor","stepMinor","epsilon2","pi","PI","halfPi","quarterPi","tau","degrees","radians","atan","atan2","cos","exp","log","floor","pow","sin","sign","tan","acos","asin","noop","Infinity","point","lineStart","lineEnd","polygonStart","polygonEnd","result","bounds","x00","y00","areaSum","areaRingSum","areaStream","areaRingStart","areaRingEnd","area","areaPointFirst","areaPoint","Z0","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","z","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","arc","lengthRing","lengthSum","lengthStream","lengthPointFirst","lengthPoint","PathString","_string","circle","radius","projection","projectionStream","contextStream","path","object","apply","stream","pathArea","measure","pathMeasure","pathBounds","pathCentroid","identity","_circle","push","join","conicProjection","projectAt","phi0","phi1","projectionMutator","p","parallels","conicEqualAreaRaw","sy0","cosPhi0","forward","lambda","phi","cylindricalEqualAreaRaw","c","r0","project","r","r0y","scale","center","fit","fitBounds","clip","clipExtent","translate","geoStream","boundsStream","fitExtent","w","h","k","min","fitSize","size","fitWidth","width","fitHeight","height","line","rejoin","pop","shift","Intersection","points","other","entry","o","e","v","segments","compareIntersection","startInside","interpolate","subject","forEach","segment","p0","p1","pointEqual","sort","link","current","isSubject","spherical","cartesian","cosPhi","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","l","sum","longitude","pointVisible","clipLine","sink","polygon","ring","ringBuffer","clipBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","merge","sinPhi","normal","angle","winding","point0","lambda0","sinPhi0","lambda1","sinPhi1","cosPhi1","point1","delta","absDelta","antimeridian","intersection","phiArc","polygonContains","clipRejoin","sphere","pointLine","clean","ringSegments","validSegment","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","direction","circleStream","t0","t1","cosRadius","sinRadius","circleRadius","clipMax","clipMin","clipRectangle","visible","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","ax","ay","transformer","methods","TransformStream","key","maxDepth","cosMinDistance","delta2","resampleLineTo","c0","c1","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","a00","b00","c00","resampleStream","ringPoint","resample","resampleNone","transformRadians","scaleTranslate","transform","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","deltaLambda","deltaPhi","deltaGamma","theta","preclip","clipAntimeridian","postclip","recenter","rotateRadians","transformRotate","undefined","clipAngle","cr","smallRadius","notHemisphere","intersect","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","A","u","uu","t2","q","polar","q1","code","v0","v00","point2","clipCircle","rotationIdentity","round","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","streamGeometry","geometry","streamGeometryType","hasOwnProperty","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate"],"sourceRoot":""}