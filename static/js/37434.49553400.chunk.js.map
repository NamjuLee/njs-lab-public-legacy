{"version":3,"file":"static/js/37434.49553400.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-pixel/07_pixelMapTerrainMeshSlope/ControllerPixelMap/index.ts","njslab/Workshop/workshop-pixel/07_pixelMapTerrainMeshSlope/PMapTerrain/index.ts","njslab/Workshop/workshop-pixel/07_pixelMapTerrainMeshSlope/RendererPixelMap/Base.ts","njslab/Workshop/workshop-pixel/07_pixelMapTerrainMeshSlope/RendererPixelMap/index.ts","njslab/Workshop/workshop-pixel/07_pixelMapTerrainMeshSlope/index.ts"],"sourcesContent":["import { getImgFromURL } from '../../../../../lib';\nimport { Solution } from '..';\nexport class ControllerPixelMap {\n    public img: HTMLImageElement | undefined = undefined;\n\n    public rx: number = 20;\n    public ry: number = 20;\n    public rz: number = 2;\n    public scaleArrow: number = 0.5;\n\n    public app: Solution;\n    public hostDiv: HTMLElement;\n    public divMenu: HTMLElement;\n    public divText: HTMLElement;\n\n    constructor(app: Solution) {\n        this.app = app;\n        this.hostDiv = this.app.divMenu;\n        this.initUI();\n    }\n    public initUI() {\n        const path0 = 'https://upload.wikimedia.org/wikipedia/commons/5/57/Heightmap.png';\n        const path1 = 'https://upload.wikimedia.org/wikipedia/commons/1/15/Srtm_ramp2.world.21600x10800.jpg';\n        const path2 = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/heightMap/Heightmap_01.png';\n        const path3 = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/heightMap/Heightmap_02.jpg';\n        const path4 = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/heightMap/Heightmap_03.jpg';\n\n\n        const divMenu = document.createElement('div');\n        this.divMenu = divMenu;\n        this.hostDiv.appendChild(divMenu);\n        divMenu.style.display = 'block';\n        divMenu.style.position = 'absolute';\n        divMenu.style.top = '0px';\n\n        const divInput = document.createElement('input');\n        // divInput.value = 'https://upload.wikimedia.org/wikipedia/commons/f/ff/Mozilla_Firefox_logo_2013.png';\n        divInput.value = path2\n        divInput.addEventListener('keydown', (e: KeyboardEvent) => {\n            if (e.code === 'Enter') {\n                // this.buildMeshByImg(divInput.value)\n                this.loadImg(divInput.value)\n            }\n        });\n        divMenu.appendChild(divInput);\n\n        const slType = getSlider('rx', 10, 30)\n        slType.slider.defaultValue = '20';\n        divMenu.appendChild(slType.div);\n        slType.slider.oninput = () => {\n            const value = parseInt(slType.slider.value);\n            this.rx = value;\n            this.update();\n            // this.buildMeshByImg(this.img) \n        };\n        const slType2 = getSlider('ry', 10, 30)\n        slType2.slider.defaultValue = '20';\n        divMenu.appendChild(slType2.div);\n        slType2.slider.oninput = () => {\n            const value = parseInt(slType2.slider.value);\n            this.ry = value;\n            this.update();\n            // this.buildMeshByImg(this.img) \n        };\n\n        const slType3 = getSlider('rz', 0, 50)\n        slType3.slider.defaultValue = '20';\n        divMenu.appendChild(slType3.div);\n        slType3.slider.oninput = () => {\n            const value = parseInt(slType3.slider.value);\n            this.rz = value * 0.1;\n            this.update();\n            // this.buildMeshByImg(this.img) \n        };\n\n\n        const slType4 = getSlider('arrow', 5, 10)\n        slType4.slider.defaultValue = '5';\n        divMenu.appendChild(slType4.div);\n        slType4.slider.oninput = () => {\n            const value = parseInt(slType4.slider.value);\n            this.scaleArrow = value * 0.1;\n            this.update();\n        };\n\n        const check = getCheckBox();\n        check.defaultChecked = true;\n        check.onchange = (e: Event) => {\n            // @ts-ignore\n            const value = e.target.checked;\n            this.app.renderer.surfaceMesh.visible = value;\n        };\n        divMenu.appendChild(check);\n\n        const downloadDiv = document.createElement('button');\n        downloadDiv.textContent = 'Click here to download CSV';\n        downloadDiv.style.background = '#333';\n        downloadDiv.onclick = () => {\n            // console.log('click')\n            this.app.tMap.pMap.toCSV()\n        }\n        divMenu.appendChild(downloadDiv);\n\n        this.divText = document.createElement('div')\n        this.divText.textContent = ''\n        divMenu.appendChild(this.divText);\n    }\n    public loadImg(url: string) {\n        getImgFromURL(url).then((img: HTMLImageElement) => {\n            if (this.img) {\n                this.divMenu.removeChild(this.img)\n            }\n\n            img.onload = (ev) => {\n                this.divMenu.appendChild(img)\n                this.img = img;\n                this.update();\n            };\n\n        });\n    }\n    public update() {\n        // console.log(this.rx, this.ry, this.size)\n        this.app.init(this.img)\n    }\n    public destroy() {\n        this.hostDiv.removeChild(this.divMenu);\n    }\n}\n\nconst getSlider = (title: string, min: number, max: number) => {\n    // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\n    const div = document.createElement('div');\n    div.style.display = 'flex';\n\n    const slider = document.createElement('input');\n    slider.type = 'range';\n    slider.min = `${min}`;\n    slider.max = `${max}`;\n\n    const text = document.createElement('div');\n    text.textContent = title;\n    text.style.color = '#aaa';\n    div.appendChild(slider);\n    div.appendChild(text);\n    return {\n        div, slider, text\n    }\n};\n\nconst getCheckBox = () => {\n    const inputFile = document.createElement('input');\n    inputFile.type = 'checkbox';\n    return inputFile;\n};","import { AnyLayer } from 'mapbox-gl';\nimport * as THREE from 'three';\n\nexport class PixelMap {\n    public pixelList: Pixel[] = []\n    public minV: Vector3;\n    public maxV: Vector3;\n    public rx = 10;\n    public ry = 10;\n    public rz = 2;\n    public intervalX;\n    public intervalY;\n    public selPixel: Pixel | undefined = undefined;\n    constructor() {\n\n\n    }\n    public init(minV: Vector3, maxV: Vector3, rx: number, ry: number){\n        this.minV = minV;\n        this.maxV = maxV;\n        this.rx = rx;\n        this.ry = ry;\n\n        this.pixelList = []\n        const x = this.minV.x\n        const y = this.minV.y\n\n        this.intervalX = (this.maxV.x - this.minV.x) / (this.rx - 1)\n        this.intervalY = (this.maxV.y - this.minV.y) / (this.ry - 1)\n        \n        for(let j = 0 ; j < this.ry; j++) {\n            for(let i = 0 ; i < this.rx; i++) {\n                const xV = x + i * this.intervalX;\n                const yV = y + j * this.intervalY;\n\n                let pix = new Pixel(this, xV * -1 , yV , 0); // flip x\n                // let pix = new Pixel(this, xV * -1 , yV , 0);\n                pix.id = this.pixelList.length;\n                pix.xi = i;\n                pix.yi = j;\n                this.pixelList.push(pix);\n            }\n        }\n        this.initGridNeighbor();\n    }\n    public getPixel(x: number, y: number){\n        return this.pixelList[x + y * this.rx]\n    }\n    private initGridNeighbor() {\n        for (let j = 0; j < this.ry; ++j) {\n            for (let i = 0; i < this.rx; ++i) {\n                let k = i + j * this.rx;\n                let px = this.pixelList[k];\n                if (i > 0) { px.nPix.push(this.pixelList[k - 1]); }\n                if (i < this.rx - 1) { px.nPix.push(this.pixelList[k + 1]); }\n                if (j > 0) { px.nPix.push(this.pixelList[k - this.rx]); }\n                if (j < this.ry - 1) { px.nPix.push(this.pixelList[k + this.rx]); }\n                if ((i > 0) && (j < this.ry - 1)) { px.nPix.push(this.pixelList[k + this.rx - 1]); }\n                if ((i > 0) && (j > 0)) { px.nPix.push(this.pixelList[k - this.rx - 1]); }\n                if ((i < this.rx - 1) && (j < this.ry - 1)) { px.nPix.push(this.pixelList[k + this.rx + 1]); }\n                if ((i < this.rx - 1) && (j > 0)) { px.nPix.push(this.pixelList[k - this.rx + 1]); }\n            }\n        }\n    }\n    public updateImage(img: HTMLImageElement) {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d', {willReadFrequently: true})\n        ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, this.rx, this.ry)\n\n        const imgData = ctx.getImageData(0, 0, this.rx, this.ry);\n\n        const px = (x: number, y: number) => {\n            return x * 4 + y * imgData.width * 4;\n        };\n\n        for (let j = 0; j < this.ry; ++j) {\n            for (let i = 0; i < this.rx; ++i) {\n                let k = px(i, j)\n                let indexList = i + j * this.rx;\n\n                this.pixelList[indexList].color = [\n                    imgData.data[k], imgData.data[k+1], imgData.data[k+2], imgData.data[k+3]\n                ]\n                this.pixelList[indexList].vec.z = RGBtoGray(\n                    imgData.data[k] / 255, imgData.data[k+1] / 255, imgData.data[k+2] / 255\n                ) * this.rz\n            }\n        }\n    }\n    public picking(x: number, y: number, z: number) {\n        const mv = new Vector3(x,y,z)\n        let dis = Number.MAX_VALUE;\n        let id = -1\n        for(let i = 0 ; i < this.pixelList.length; ++i) {\n           const theDis = distance(this.pixelList[i].vec, mv);\n           if (dis > theDis) {\n            dis = theDis;\n            id = i;\n           }\n           this.pixelList[i].hover = false;\n        }\n\n        this.selPixel = undefined;\n        if (id > -1) {\n            this.pixelList[id].hover = true;\n            this.selPixel = this.pixelList[id];\n            // console.log(this.selPixel)\n        }\n        return this.selPixel;\n    }\n    public render(ctx) {\n        this.pixelList.forEach((p: Pixel) => {\n            p.render(ctx);\n        })\n\n        if (this.selPixel) {\n            this.selPixel.render(ctx);\n        }\n    }\n    public onClick (x: number, y: number, z: number) {\n        return this.picking(x, y, z)\n    }\n    public toCSV() {\n\n        const csv: any[] = [\n            ['id', 'location(lat, lon)', 'elevation', 'slope' ],\n        ]\n\n        for(let i = 0; i < this.pixelList.length; ++i) {\n            const pix = this.pixelList[i];\n            csv.push([\n                pix.id, `${pix.vec.y},${pix.vec.x}`, `${pix.vec.z}`, `${pix.slope}`\n            ]);\n        }\n\n\n        downloadBlob(arrayToCsv(csv), 'terrainSlopeAnalysis.csv', 'text/csv;charset=utf-8;')\n\n    }\n}\n\nclass Pixel {\n    public id = 0;\n    public slope = [];\n    public nPixString = [];\n    \n    public xi: number;\n    public yi: number;\n    public pMap: PixelMap;\n    public vec: Vector3;\n    public hover: boolean = false;\n    public nPix: Pixel[] = [];\n    public color: number[] = [];\n\n    public mesh: any;\n    public arrow: any = [];\n    constructor(pMap: PixelMap, x: number, y: number, z: number) {\n        this.pMap = pMap;\n        this.vec = new Vector3(x,y,z);\n    }\n    public onClick() {\n        // console.log(this)\n    }\n    public render(ctx: CanvasRenderingContext2D) {\n        const width = this.pMap.intervalX ;\n        const height = this.pMap.intervalY;\n\n        ctx.beginPath();\n        ctx.rect(this.vec.x - width * 0.5, this.vec.y - height * 0.5, width, height);\n        ctx.closePath();\n        ctx.stroke();\n        if (this.hover) {\n            ctx.fillStyle = '#555';\n            ctx.fill();\n        } else {\n            ctx.fillStyle = `rgba(${this.color[0]}, ${this.color[1]}, ${this.color[2]}, ${this.color[3]})`;\n            ctx.fill();\n        }\n\n        ctx.beginPath();\n        ctx.arc(this.vec.x, this.vec.y, this.vec.r, 0, Math.PI * 2.0);\n        ctx.closePath();\n        if (this.hover) {\n            ctx.fillStyle = '#999';\n        } else {\n            ctx.fillStyle = '#333';\n        }\n        ctx.fill();\n\n        if (this.hover) {\n            for(let i = 0 ; i < this.nPix.length; ++i) {\n                ctx.beginPath();\n                ctx.moveTo(this.vec.x, this.vec.y);\n                ctx.lineTo(this.nPix[i].vec.x, this.nPix[i].vec.y);\n                ctx.closePath();\n                ctx.stroke();\n            }\n\n            ctx.strokeText(`x: ${this.xi}, y: ${this.yi}` ,this.vec.x, this.vec.y);\n        }\n\n        \n    }\n}\n\nexport class Vector3 {\n    public x: number = 0.0;\n    public y: number = 0.0;\n    public z: number = 0.0;\n    public r: number = 3\n    constructor(x,y,z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n}\n\n\nconst distance = (v0: Vector3, v1: Vector3) => {\n    return Math.sqrt(distance2(v0, v1));\n}\nconst distance2 = (v0: Vector3, v1: Vector3) => {\n    return (v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z);\n}\n\nexport const RGBtoGray = (r: number, g: number, b: number) => {\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n}\n\nfunction arrayToCsv(data){\n    return data.map(row =>\n      row\n      .map(String)  // convert every value to String\n      .map(v => v.replaceAll('\"', '\"\"'))  // escape double quotes\n      .map(v => `\"${v}\"`)  // quote it\n      .join(',')  // comma-separated\n    ).join('\\r\\n');  // rows starting on new lines\n  }\n\nfunction downloadBlob(content, filename, contentType) {\n    // Create a blob\n    var blob = new Blob([content], { type: contentType });\n    var url = URL.createObjectURL(blob);\n  \n    // Create a link to download it\n    var pom = document.createElement('a');\n    pom.href = url;\n    pom.setAttribute('download', filename);\n    pom.click();\n  }","import * as THREE from 'three';\nimport { OrbitControls } from 'three-orbitcontrols-ts';\n\nexport class RendererThree {\n    public canvas: HTMLCanvasElement;\n    public hostDiv: HTMLElement;\n    public ctx: CanvasRenderingContext2D;\n    public t: number = 0.0;\n    public camera: THREE.PerspectiveCamera;\n    public scene: THREE.Scene;\n    public renderer: THREE.WebGLRenderer;\n    public controls: OrbitControls;\n    private requestFrame: number;\n    constructor(id: string) {\n        this.hostDiv = document.getElementById(id);\n        this.initCanvas();\n    }\n    private initCanvas() {\n        THREE.Object3D.DEFAULT_UP.set(0, 0, 1);\n\n        this.scene = new THREE.Scene();\n        \n        this.scene.castShadow = true;\n\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n        this.renderer.setPixelRatio(this.hostDiv.clientWidth / this.hostDiv.clientHeight);\n        this.renderer.domElement.id = 'Three';\n        this.renderer.domElement.style.position = 'absolute';\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.setSize(this.hostDiv.clientWidth, this.hostDiv.clientHeight);\n        this.hostDiv.appendChild(this.renderer.domElement);\n\n        this.camera = new THREE.PerspectiveCamera(30, this.hostDiv.clientWidth / this.hostDiv.clientHeight, 1, 5000);\n        this.controls = new OrbitControls( this.camera, this.renderer.domElement );\n        this.camera.position.set( 0, 0, 0 );\n        this.controls.update();\n\n        this.canvas = this.renderer.domElement;\n\n        this.init();\n    }\n    private init() {\n        this.eventBind();\n\n    }\n    private eventBind() {\n        this.renderer.domElement.onmousedown = (e: MouseEvent) => this.mouseDown(e);\n        this.renderer.domElement.onmouseup = (e: MouseEvent) => this.mouseUp(e);\n        this.renderer.domElement.onmousemove = (e: MouseEvent) => this.mouseMove(e);\n        this.renderer.domElement.addEventListener('click', (e: MouseEvent) =>this.mouseClick(e))\n\n        window.addEventListener('resize', () => this.onWindowResize());\n\n    }\n    private onWindowResize() {\n        this.camera.aspect = this.hostDiv.clientWidth / this.hostDiv.clientHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize( this.hostDiv.clientWidth, this.hostDiv.clientHeight );\n    }\n    private loop = () => {\n        this.requestFrame = requestAnimationFrame(this.loop);\n        this.controls.update();\n        this.update(this.scene);\n        this.renderer.render(this.scene, this.camera);\n        this.t += 0.01;\n\n        // console.log('rendering...');\n    }\n    // .............................................................................\n    public start() {\n        this.loop();\n    }\n    public mouseDown(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseUp(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseClick(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseDClick(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseMove(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseDrag(e: MouseEvent) {\n        // console.log(e);\n    }\n    public update(scene: THREE.Scene) {\n\n    }\n    public destroy() {\n        window.removeEventListener('resize', () => this.onWindowResize());\n        cancelAnimationFrame(this.requestFrame);\n        this.requestFrame = undefined;\n        while (this.hostDiv.lastChild) {\n            this.hostDiv.removeChild(this.hostDiv.lastChild);\n        }\n    }\n}","import * as THREE from 'three';\nimport { RendererThree } from './Base';\nimport { PixelMap } from '../PMapTerrain';\n\nexport class Renderer extends RendererThree {\n    public canvas: HTMLCanvasElement;\n    public pointLight: THREE.PointLight;\n\n    rayCaster = new THREE.Raycaster();\n\n    mouse2 = new THREE.Vector2();\n    mouse3: THREE.Vector3 | undefined = undefined;\n    sphere: THREE.Mesh;\n    surfaceMesh: THREE.Mesh;\n\n    preSelection: THREE.Mesh | undefined = undefined\n\n    public meshList: THREE.Mesh[] = [];\n    public arrowList: THREE.ArrowHelper[] = [];\n\n    constructor(id: string = 'main') {\n        super(id)\n\n        this.pointLight = new THREE.PointLight(0xffffff, 0.75);\n        this.pointLight.position.x = 80;\n        this.pointLight.position.z = 80;\n        this.scene.add(this.pointLight);\n\n        this.canvas = document.createElement('canvas');\n        this.hostDiv.append(this.canvas);\n\n        this.renderer.setClearColor(0x000000, 0);\n        this.scene.background = null;\n        this.camera.position.set(0, -80, 80);\n\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n        const geometrySphere = new THREE.SphereGeometry(0.05, 50, 50);\n        const objectSphere = new THREE.Mesh(geometrySphere, material);\n        objectSphere.translateX(1);\n        this.sphere = objectSphere;\n        this.scene.add(objectSphere);\n\n\n        this.start();\n    }\n    public reset() {\n        this.scene.remove(...this.meshList)\n        this.meshList = []\n\n        this.scene.remove(...this.arrowList)\n        this.arrowList = []\n\n        this.preSelection = undefined;\n    }\n    public buildPoint(pMap: PixelMap) {\n\n        for (let i = 0; i < pMap.pixelList.length; ++i) {\n            const vec = pMap.pixelList[i].vec;\n            const col = pMap.pixelList[i].color;\n\n            const geometry = new THREE.SphereGeometry(0.15, 8, 8);\n            const material = new THREE.MeshBasicMaterial({ color: new THREE.Color(col[0] / 255, col[1] / 255, col[2] / 255) });\n\n            const mesh = new THREE.Mesh(geometry, material);\n            mesh.userData['pixel'] = pMap.pixelList[i]\n            pMap.pixelList[i].mesh = mesh;\n\n            this.meshList.push(mesh);\n            mesh.position.set(vec.x, vec.y, vec.z);\n            this.scene.add(mesh);\n\n        }\n    }\n    public mouseClick(e: MouseEvent): void {\n        const obj = picking(e, this.meshList, this.renderer, this.camera, this.rayCaster, this.mouse2)\n        // console.log(obj)\n        if (obj) {\n            if (this.preSelection) {\n                const mat = this.preSelection.material as THREE.MeshBasicMaterial\n                if (mat.color) mat.color.setRGB(this.preSelection.userData.pixel.color[0] / 255, this.preSelection.userData.pixel.color[1] / 255, this.preSelection.userData.pixel.color[2] / 255)\n            }\n\n            this.mouse3 = new THREE.Vector3(obj.mouse3.x, obj.mouse3.y, obj.mouse3.z);\n\n            this.sphere.position.set(this.mouse3.x, this.mouse3.y, this.mouse3.z);\n\n            this.onClickBind(this.mouse3.x, this.mouse3.y, this.mouse3.z);\n            const mesh = obj.mesh[0].object as THREE.Mesh;\n            // console.log(mesh)\n            const mat = mesh.material as THREE.MeshBasicMaterial\n            if (mat.color) mat.color.setHex(0xff0000)\n            this.preSelection = mesh\n            return\n        }\n\n        this.mouse3 = undefined;\n    }\n    public onClickBind(x: number, y: number, z: number) { /* bind needed */ }\n\n    public buildMeshByImg = (pMap: PixelMap) => {\n        // ................................................................................\n        // your code goes here\n        const xNum = pMap.rx;\n        const yNum = pMap.ry;\n\n        const vertices = [];\n        for (let y = 0; y < yNum; ++y) {\n            for (let x = 0; x < xNum; ++x) {\n                const pix = pMap.getPixel(x, y)\n                vertices.push(pix.vec.x, pix.vec.y, pix.vec.z);\n            }\n        }\n\n        const faces = [];\n        for (let y = 0; y < yNum - 1; ++y) {\n            for (let x = 0; x < xNum - 1; ++x) {\n                let index = x + (y * xNum);\n                faces.push(index, index + xNum, index + 1,);\n                faces.push(index + 1, index + xNum, index + xNum + 1,);\n            }\n        }\n\n        const material = new THREE.MeshNormalMaterial({\n            // side: THREE.DoubleSide,\n            vertexColors: true,\n            flatShading: false,\n        });\n        const geometry = new THREE.BufferGeometry();\n        geometry.setIndex(faces);\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n\n        geometry.computeVertexNormals();\n        geometry.computeBoundingBox();\n\n        const mesh = new THREE.Mesh(geometry, material);\n        this.surfaceMesh = mesh\n        this.meshList.push(mesh);\n        this.scene.add(mesh);\n\n    }\n    public buildArrow(pMap: PixelMap, size = 0.25 ) {\n        const zOff = 0.0075;\n        for (let j = 0; j < pMap.pixelList.length; ++j) {\n            const px = pMap.pixelList[j];\n            const origin = new THREE.Vector3(px.vec.x, px.vec.y, px.vec.z + zOff);\n            px.arrow = [];\n\n            for (let i = 0; i < px.nPix.length; ++i) {\n                const np = px.nPix[i];\n                const dir = new THREE.Vector3(np.vec.x - px.vec.x, np.vec.y - px.vec.y, np.vec.z + zOff - px.vec.z + zOff);\n                dir.normalize();\n\n                const slope = dir.z;\n                const r = slope <= 0 ? Math.abs(slope): 0;\n                const g = 0;\n                const b = slope > 0 ? Math.abs(slope): 0;\n\n                px.slope.push(`id:${np.id}; value:${slope}`);\n\n                const arrowHelper = new THREE.ArrowHelper(dir, origin, size, new THREE.Color(r,g,b));\n                px.arrow.push(arrowHelper);\n\n                this.arrowList.push(arrowHelper);\n                this.scene.add(arrowHelper);\n            }\n\n        }\n\n\n\n    }\n}\n\n\nconst picking = (e: MouseEvent, arrayMesh, renderer, camera, rayCaster, mouse2) => {\n    mouse2.x = (e.offsetX / renderer.domElement.clientWidth) * 2 - 1;\n    mouse2.y = -(e.offsetY / renderer.domElement.clientHeight) * 2 + 1;\n    rayCaster.setFromCamera(mouse2, camera);\n    const intersects = rayCaster.intersectObjects([...arrayMesh]);\n    if (intersects.length > 0) {\n        return {\n            mesh: intersects,\n            mouse3: new THREE.Vector3(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z)\n        };\n    }\n    return undefined;\n}","import * as THREE from 'three';\r\nimport { RGBtoGray } from '../../../../lib';\r\nimport { RendererThree } from './RendererPixelMap/Base';\r\nimport { ControllerPixelMap } from './ControllerPixelMap';\r\nimport { PixelMap, Vector3 } from './PMapTerrain';\r\nimport { Renderer } from './RendererPixelMap';\r\n\r\nexport class Solution {\r\n    public controller: ControllerPixelMap;\r\n    public renderer: Renderer;\r\n\r\n\r\n    public canvas: HTMLCanvasElement;\r\n\r\n    public divMain: HTMLElement;\r\n    public divMenu: HTMLElement;\r\n\r\n    tMap: TerrainMap\r\n\r\n    constructor(id: string = 'main') {\r\n        const divMain = document.getElementById(id);\r\n        this.divMain = divMain;\r\n\r\n        const divMenu = document.createElement('div');\r\n        this.divMenu = divMenu;\r\n        divMenu.style.height = '50px';\r\n        divMenu.style.position = 'absolute';\r\n        divMenu.style.backgroundColor = '#f00';\r\n        divMenu.style.zIndex = '1';\r\n        divMain.append(divMenu);\r\n        this.controller = new ControllerPixelMap(this);\r\n\r\n        const divCanvas = document.createElement('div');\r\n        divCanvas.id = 'pMap';\r\n        divCanvas.style.width = '100%';\r\n        divCanvas.style.height = '100%';\r\n        divMain.append(divCanvas);\r\n\r\n        this.renderer = new Renderer(divCanvas.id);\r\n\r\n        this.tMap = new TerrainMap(this)\r\n\r\n        this.controller.loadImg('https://raw.githubusercontent.com/NamjuLee/data/master/img/heightMap/Heightmap_03.jpg')\r\n    }\r\n    public init(img) {\r\n        this.tMap.init(img)\r\n    }\r\n\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n\r\n        try {\r\n            while (this.divMain !== undefined && this.divMain.lastElementChild !== undefined) {\r\n                this.divMain.removeChild(this.divMain.lastElementChild);\r\n            }\r\n        } catch (error) { }\r\n    }\r\n}\r\n\r\nclass TerrainMap {\r\n    public solution: Solution;\r\n    public pMap: PixelMap;\r\n    constructor(solution: Solution) {\r\n        this.solution = solution;\r\n    }\r\n    public init(img) {\r\n        this.pMap = new PixelMap();\r\n        this.pMap.rx = this.solution.controller.rx;\r\n        this.pMap.ry = this.solution.controller.ry;\r\n        this.pMap.rz = this.solution.controller.rz;\r\n\r\n        this.pMap.init(\r\n            new Vector3(10, 10, 0), new Vector3(-10, -10, 0),\r\n            this.pMap.rx, this.pMap.ry\r\n        );\r\n\r\n        this.solution.renderer.reset();\r\n        this.pMap.updateImage(img);\r\n        this.solution.renderer.buildPoint(this.pMap);\r\n        this.solution.renderer.buildMeshByImg(this.pMap);\r\n        this.solution.renderer.buildArrow(this.pMap, this.solution.controller.scaleArrow);\r\n        this.solution.renderer.onClickBind = (x: number, y: number, z: number) => {\r\n            const pixel = this.pMap.onClick(x, y, z);\r\n            pixel.onClick();\r\n\r\n            this.solution.controller.divText.textContent = `Elevation: ${pixel.vec.z}, Col: ${pixel.color}`;\r\n        };\r\n    }\r\n}"],"names":["ControllerPixelMap","constructor","app","img","undefined","rx","ry","rz","scaleArrow","hostDiv","divMenu","divText","this","initUI","document","createElement","appendChild","style","display","position","top","divInput","value","addEventListener","e","code","loadImg","slType","getSlider","slider","defaultValue","div","oninput","parseInt","update","slType2","slType3","slType4","check","getCheckBox","defaultChecked","onchange","target","checked","renderer","surfaceMesh","visible","downloadDiv","textContent","background","onclick","tMap","pMap","toCSV","url","getImgFromURL","then","removeChild","onload","ev","init","destroy","title","min","max","type","text","color","inputFile","PixelMap","pixelList","minV","maxV","intervalX","intervalY","selPixel","x","y","j","i","xV","yV","pix","Pixel","id","length","xi","yi","push","initGridNeighbor","getPixel","k","px","nPix","updateImage","ctx","getContext","willReadFrequently","drawImage","width","height","imgData","getImageData","indexList","data","vec","z","RGBtoGray","picking","mv","Vector3","dis","Number","MAX_VALUE","theDis","distance","hover","render","forEach","p","onClick","csv","slope","content","filename","contentType","blob","Blob","URL","createObjectURL","pom","href","setAttribute","click","downloadBlob","map","row","String","v","replaceAll","join","nPixString","mesh","arrow","beginPath","rect","closePath","stroke","fillStyle","fill","arc","r","Math","PI","moveTo","lineTo","strokeText","v0","v1","sqrt","distance2","g","b","RendererThree","canvas","t","camera","scene","controls","requestFrame","loop","requestAnimationFrame","getElementById","initCanvas","THREE","castShadow","antialias","alpha","setPixelRatio","clientWidth","clientHeight","domElement","shadowMap","enabled","setSize","OrbitControls","set","eventBind","onmousedown","mouseDown","onmouseup","mouseUp","onmousemove","mouseMove","mouseClick","window","onWindowResize","aspect","updateProjectionMatrix","start","mouseDClick","mouseDrag","removeEventListener","cancelAnimationFrame","lastChild","Renderer","super","pointLight","rayCaster","mouse2","mouse3","sphere","preSelection","meshList","arrowList","buildMeshByImg","xNum","yNum","vertices","faces","index","material","vertexColors","flatShading","geometry","setIndex","computeVertexNormals","computeBoundingBox","add","append","setClearColor","geometrySphere","objectSphere","translateX","reset","remove","buildPoint","col","userData","obj","mat","setRGB","pixel","onClickBind","object","setHex","buildArrow","size","zOff","origin","np","dir","normalize","abs","arrowHelper","arrayMesh","offsetX","offsetY","setFromCamera","intersects","intersectObjects","point","Solution","controller","divMain","backgroundColor","zIndex","divCanvas","TerrainMap","lastElementChild","error","solution"],"sourceRoot":""}