"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[96623],{96623:(t,e,s)=>{s.r(e),s.d(e,{Solution:()=>$});var i=s(87968);const o=function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];t=t.replace("#","");let s=parseInt(t.substring(0,2),16),i=parseInt(t.substring(2,4),16),o=parseInt(t.substring(4,6),16);if(e){let t=.58*s+.17*i+.8*o;return[t,t,t]}return[s,i,o]},h=(t,e)=>Math.sqrt((t.x-e.x)*(t.x-e.x)+(t.y-e.y)*(t.y-e.y)+(t.z-e.z)*(t.z-e.z)),r=(t,e)=>{let s=t.x,i=t.y,o=!1;for(let h=0,r=e.length-1;h<e.length;r=h++){let t=e[h].x,n=e[h].y,a=e[r].x,c=e[r].y;n>i!==c>i&&s<(a-t)*(i-n)/(c-n)+t&&(o=!o)}return o},n=(t,e,s)=>{const i=s.y-e.y,o=e.x-s.x,h=s.x*e.y-e.x*s.y,r=Math.abs(i*t.x+o*t.y+h)/Math.sqrt(i*i+o*o);return{x:(o*(o*t.x-i*t.y)-i*h)/(i*i+o*o),y:(i*(-o*t.x+i*t.y)-o*h)/(i*i+o*o),dis:r}},a=(t,e)=>Math.acos(((t,e)=>l(c(t),c(e)))(t,e)),c=t=>{let e=Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z);return e<1e-6?new p(t.x,t.y,t.z):new p(t.x/e,t.y/e,t.z/e)},l=(t,e)=>t.x*e.x+t.y*e.y+t.z*e.z,d=t=>{const e=new p(0,0,0);for(let s=0;s<t.length;++s)e.x+=t[s].x,e.y+=t[s].y,e.lng+=t[s].lng,e.lat+=t[s].lat;return e.x/=t.length,e.y/=t.length,e.lng/=t.length,e.lat/=t.length,e};class p{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.x=0,this.y=0,this.z=0,this.lng=0,this.lat=0,this.ele=0,this.x=t,this.y=e,this.z=s}}var m=s(69175);const v=(t,e,s)=>{for(let i=0;i<e.length;++i)s[i]&&(t=m.e50(t,e[i]));return t},u=(t,e)=>{const s=new Path2D;for(let i=0;i<t.geometry.coordinates.length;++i){const o=new Path2D;for(let s=t.geometry.coordinates[i].length-1;s>-1;--s){const h=t.geometry.coordinates[i][s];if(s===t.geometry.coordinates[i].length-1){const t=e(h[0],h[1]);o.moveTo(t[0],t[1])}else{const t=e(h[0],h[1]);o.lineTo(t[0],t[1])}}o.closePath(),s.addPath(o)}return s},g=(t,e,s)=>{t.beginPath(),t.arc(e,s,10,0,2*Math.PI),t.closePath(),t.fill()},y=function(t,e){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"rgba(200, 200, 200, 1.0)",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"rgba(50, 50, 50, 1.0)",o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:3;t.fillStyle=s,t.strokeStyle=i,t.lineWidth=o,e.forEach((e=>{t.beginPath(),t.arc(e.x,e.y,8,0,2*Math.PI),t.closePath(),t.fill(),t.stroke()}))},x={text:"Residential",color:"#ffff6e"},f={text:"Business",color:"#f59700"},P={text:"Default",color:"#5287E6"},C={text:"Assigned",color:"#A355D4"},R={RECT:"RECT",CIRCLE:"CIRCLE",POLYGON:"POLYGON"};class w{constructor(){this.histories=[],this.currentIndex=-1}reset(){this.histories=[],this.currentIndex=-1}push(t){this.currentIndex<this.histories.length-1&&this.histories.splice(this.currentIndex+1,this.histories.length),this.histories.push(t),this.currentIndex=this.histories.length-1}getCurrentIndex(){return this.currentIndex}getHistoryLength(){return this.histories.length}getCurrentState(){return{currentIndex:this.getCurrentIndex(),historyNum:this.getHistoryLength()}}undo(){if(0!==this.currentIndex)return this.currentIndex--,this.histories[this.currentIndex]}redo(){return this.currentIndex++,this.currentIndex=this.currentIndex<this.histories.length?this.currentIndex:this.histories.length-1,this.histories[this.currentIndex]}}class b{constructor(t){this.scene=void 0,this.TYPE=R.RECT,this.t=.1,this.id=void 0,this.capturedVecId=-1,this.isHovered=!1,this.hasAnimation=!1,this.updateNeeded=!1,this.captureNeeded=!1,this.referPoint=[],this._isSelected=!1,this.polygonTurfOriginal=void 0,this.polygonTurfSubtracted=void 0,this.scene=t,this.id=(()=>{let t=(new Date).getTime();return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(e=>{let s=(t+16*Math.random())%16|0;return t=Math.floor(t/16),("x"===e?s:3&s|8).toString(16)}))})(),this.scene.push(this)}get isSelected(){return this._isSelected}set isSelected(t){this._isSelected=t}isInside(t,e){return!1}translate(t,e){}removeVertexLastVertex(){}update(){}onMouseUp(){}onMouseClick(t){}onMouseDoubleClick(t){}shiftType(){}updateGeoProjection(){}updateGhostPos(t,e){}render(t){this.update(),this.renderPost(t)}renderPost(t){}toJson(){}updateWidthHight(t,e){}remove(){this.scene.remove(this)}toggleHexmap(){}}class S{constructor(t,e,s){this.vec=void 0,this.vsRect=[],this.segR=36,this.vsCircle=[],this.width=200,this.height=200,this.vec=t,this.width=e,this.height=s,this.reset(),this.initRect(),this.initCircleVec()}initRect(){const t=.5*this.width,e=.5*this.height;this.vsRect.push(new p(this.vec.x-t,this.vec.y+e)),this.vsRect.push(new p(this.vec.x+t,this.vec.y+e)),this.vsRect.push(new p(this.vec.x+t,this.vec.y-e)),this.vsRect.push(new p(this.vec.x-t,this.vec.y-e))}initCircleVec(){this.vsCircle=[];const t=2*Math.PI/this.segR;for(let e=0;e<this.segR;++e){const s=Math.cos(t*e)*this.width*.5,i=Math.sin(t*e)*this.height*.5,o=new p(this.vec.x+s,this.vec.y+i,0);this.vsCircle.push(o)}}updateScreen(t){let e=t(this.vec.lng,this.vec.lat);this.vec.x=e[0],this.vec.y=e[1];for(let s=0;s<this.vsRect.length;++s)e=t(this.vsRect[s].lng,this.vsRect[s].lat),this.vsRect[s].x=e[0],this.vsRect[s].y=e[1];for(let s=0;s<this.vsCircle.length;++s)e=t(this.vsCircle[s].lng,this.vsCircle[s].lat),this.vsCircle[s].x=e[0],this.vsCircle[s].y=e[1];this.width=Math.abs(this.vsRect[0].x-this.vsRect[2].x),this.height=Math.abs(this.vsRect[0].y-this.vsRect[2].y)}updateProjection(t){const e=t(this.vec.x,this.vec.y);this.vec.lng=e[0],this.vec.lat=e[1];for(let s=0;s<this.vsRect.length;++s){let e=t(this.vsRect[s].x,this.vsRect[s].y);this.vsRect[s].lng=e[0],this.vsRect[s].lat=e[1]}for(let s=0;s<this.vsCircle.length;++s){let e=t(this.vsCircle[s].x,this.vsCircle[s].y);this.vsCircle[s].lng=e[0],this.vsCircle[s].lat=e[1]}this.updateCenterVec()}updateCenterVec(){let t=0,e=0;for(let s=0;s<this.vsRect.length;++s)t+=this.vsRect[s].x,e+=this.vsRect[s].y;this.vec.x=t/this.vsRect.length,this.vec.y=e/this.vsRect.length}updateScreenPosCircle(){const t=2*Math.PI/this.segR;for(let e=0;e<this.segR;++e){const s=Math.cos(t*e)*this.width*.5,i=Math.sin(t*e)*this.height*.5;this.vsCircle[e].x=this.vec.x+s,this.vsCircle[e].y=this.vec.y+i}}reset(){this.vsRect=[],this.vsCircle=[]}updateWidthHight(t,e){this.width=t,this.height=e,this.reset(),this.initRect(),this.initCircleVec()}}class V{constructor(t){this.host=void 0,this.pathCroppedArea=void 0,this.host=t}renderPost(t){this.renderAreaBounding(t),this.renderCroppedArea(t),(this.host.isHovered||this.host.isSelected)&&(this.renderControlPoint(t),this.renderDim(t),this.host.isSelected&&this.renderSelected(t)),this.renderCenterPoint(t),this.renderProperties(t)}renderCenterPoint(t){t.beginPath(),t.moveTo(this.host.vec.x-5,this.host.vec.y),t.lineTo(this.host.vec.x+5,this.host.vec.y),t.moveTo(this.host.vec.x,this.host.vec.y-5),t.lineTo(this.host.vec.x,this.host.vec.y+5),t.stroke()}renderCroppedArea(t){if(this.host.updateNeeded||this.host.scene.solution.rendererWrapper.mapBoxWrapper.map.isMoving()){const t=v(this.host.polygonTurfOriginal,this.host.scene.polygonsDifference,this.host.scene.ids);this.host.polygonTurfSubtracted=t,this.pathCroppedArea=u(t,this.host.scene.common.toScreen),this.host.updateNeeded=!1}t.setLineDash([5,7]),t.lineDashOffset=this.host.t,t.lineWidth=2,t.strokeStyle="#fff";const e=.2+.09*Math.sin(.1*this.host.t);t.fillStyle="rgba(0, 255, 255, ".concat(e," )"),t.fill(this.pathCroppedArea,"evenodd"),t.stroke(this.pathCroppedArea),t.setLineDash([])}renderControlPoint(t){t.fillStyle="rgba(200, 200, 200, 1.0)",t.strokeStyle="rgba(50, 50, 50, 1.0)",t.lineWidth=3,y(t,this.host.geometry.vsRect),y(t,this.host.transform.cVecGhost)}renderDim(t){if(t.textAlign="center",t.font="14px arial",t.fillStyle="#fff",this.host.TYPE===R.CIRCLE){let e=m.TuJ([[this.host.geometry.vsRect[0].lng,this.host.geometry.vsRect[0].lat],[this.host.geometry.vsRect[1].lng,this.host.geometry.vsRect[1].lat]]),s=.5*m.kE(e,{units:"miles"}),i=this.host.geometry.vsRect[0].x+.75*(this.host.geometry.vsRect[1].x-this.host.geometry.vsRect[0].x),o=this.host.geometry.vec.y-10;t.fillText("R1 : ".concat(s.toFixed(5)," miles"),i,o),e=m.TuJ([[this.host.geometry.vsRect[0].lng,this.host.geometry.vsRect[0].lat],[this.host.geometry.vsRect[3].lng,this.host.geometry.vsRect[3].lat]]),s=.5*m.kE(e,{units:"miles"}),i=this.host.geometry.vec.x-10,o=this.host.geometry.vsRect[0].y+.75*(this.host.geometry.vsRect[3].y-this.host.geometry.vsRect[0].y),t.save(),t.translate(i,o),t.rotate(-90*Math.PI/180),t.fillText("R2 : ".concat(s.toFixed(5)," miles"),0,0),t.restore(),t.strokeStyle="rgba(255, 255, 255, 0.5)",t.lineWidth=.5,t.beginPath(),t.moveTo(this.host.geometry.vec.x,this.host.geometry.vsRect[2].y),t.lineTo(this.host.geometry.vec.x,this.host.geometry.vec.y),t.stroke(),t.beginPath(),t.moveTo(this.host.geometry.vec.x,this.host.geometry.vec.y),t.lineTo(this.host.geometry.vsRect[1].x,this.host.geometry.vec.y),t.stroke()}else{let e=m.TuJ([[this.host.geometry.vsRect[0].lng,this.host.geometry.vsRect[0].lat],[this.host.geometry.vsRect[1].lng,this.host.geometry.vsRect[1].lat]]),s=m.kE(e,{units:"miles"}),i=this.host.geometry.vsRect[0].x+.5*(this.host.geometry.vsRect[1].x-this.host.geometry.vsRect[0].x),o=this.host.geometry.vsRect[0].y+25;t.fillText("W : ".concat(s.toFixed(5)," miles"),i,o),e=m.TuJ([[this.host.geometry.vsRect[0].lng,this.host.geometry.vsRect[0].lat],[this.host.geometry.vsRect[3].lng,this.host.geometry.vsRect[3].lat]]),s=m.kE(e,{units:"miles"}),i=this.host.geometry.vsRect[0].x-25,o=this.host.geometry.vsRect[0].y+.5*(this.host.geometry.vsRect[3].y-this.host.geometry.vsRect[0].y),t.save(),t.translate(i,o),t.rotate(-90*Math.PI/180),t.fillText("H : ".concat(s.toFixed(5)," miles"),0,0),t.restore()}}renderAreaBounding(t){t.beginPath(),this.host.TYPE===R.CIRCLE?t.ellipse(this.host.vec.x,this.host.vec.y,.5*this.host.geometry.width,.5*this.host.geometry.height,0,0,2*Math.PI):t.rect(this.host.geometry.vsRect[3].x,this.host.geometry.vsRect[3].y,this.host.geometry.width,this.host.geometry.height),t.lineWidth=1,t.strokeStyle="rgba(255, 255, 255, 0.4)",t.stroke()}renderProperties(t){const e=m.hXg(m.SOn(this.host.polygonTurfSubtracted),"meters","miles");t.textAlign="center",t.font="18px arial",t.fillStyle="#fff",t.fillText("ID: ".concat(this.host.id.split("-")[0]),this.host.vec.x,this.host.vec.y-90-.5*this.host.geometry.height),t.fillText("Area in square miles: ".concat(e.toFixed(5)),this.host.vec.x,this.host.vec.y-60-.5*this.host.geometry.height);const s=m.jfw(this.host.scene.points,this.host.polygonTurfSubtracted);this.host.referPoint=s;let i=0,o=0,h=0;for(let r=0;r<s.features.length;++r)"R"===s.features[r].properties.landuse?i+=1:"B"===s.features[r].properties.landuse?o+=1:h+=1;t.fillStyle=x.color,t.fillText("".concat(x.text,": ").concat(i,","),this.host.vec.x-120,this.host.vec.y-25-.5*this.host.geometry.height),t.fillStyle=f.color,t.fillText("".concat(f.text,": ").concat(o,","),this.host.vec.x+28,this.host.vec.y-25-.5*this.host.geometry.height),t.fillStyle="rgb(0, 128, 0)",t.fillText("Other: ".concat(h),this.host.vec.x+140,this.host.vec.y-25-.5*this.host.geometry.height)}renderSelected(t){t.strokeStyle="rgba(255, 255, 255, 1)",t.lineWidth=1;const e=13+Math.sin(.2*this.host.t);t.beginPath(),t.moveTo(this.host.geometry.vsRect[0].x-e,this.host.geometry.vsRect[0].y-e),t.lineTo(this.host.geometry.vsRect[0].x-e,this.host.geometry.vsRect[0].y+e),t.lineTo(this.host.geometry.vsRect[0].x+e,this.host.geometry.vsRect[0].y+e),t.moveTo(this.host.geometry.vsRect[1].x+e,this.host.geometry.vsRect[1].y-e),t.lineTo(this.host.geometry.vsRect[1].x+e,this.host.geometry.vsRect[1].y+e),t.lineTo(this.host.geometry.vsRect[1].x-e,this.host.geometry.vsRect[1].y+e),t.moveTo(this.host.geometry.vsRect[2].x+e,this.host.geometry.vsRect[2].y+e),t.lineTo(this.host.geometry.vsRect[2].x+e,this.host.geometry.vsRect[2].y-e),t.lineTo(this.host.geometry.vsRect[2].x-e,this.host.geometry.vsRect[2].y-e),t.moveTo(this.host.geometry.vsRect[3].x-e,this.host.geometry.vsRect[3].y+e),t.lineTo(this.host.geometry.vsRect[3].x-e,this.host.geometry.vsRect[3].y-e),t.lineTo(this.host.geometry.vsRect[3].x+e,this.host.geometry.vsRect[3].y-e),t.stroke()}}class T{constructor(t){this.host=void 0,this.cVecGhost=[],this.host=t;const e=.5*this.host.geometry.width,s=.5*this.host.geometry.height;this.cVecGhost=[new p(this.host.vec.x-e,this.host.vec.y),new p(this.host.vec.x,this.host.vec.y+s),new p(this.host.vec.x+e,this.host.vec.y),new p(this.host.vec.x,this.host.vec.y-s)]}translate(t,e){this.host.captureNeeded=!0;const s=this.host.scene.solution.activeCommander.mp[0]-this.host.scene.solution.activeCommander.mpPre[0],i=this.host.scene.solution.activeCommander.mp[1]-this.host.scene.solution.activeCommander.mpPre[1];if(this.host.capturedVecId>-1)return this.host.capturedVecId<this.host.geometry.vsRect.length&&(this.host.geometry.vsRect[this.host.capturedVecId].x+=s,this.host.geometry.vsRect[this.host.capturedVecId].y+=i),0===this.host.capturedVecId?(this.host.geometry.vsRect[3].x=this.host.geometry.vsRect[0].x,this.host.geometry.vsRect[1].y=this.host.geometry.vsRect[0].y):1===this.host.capturedVecId?(this.host.geometry.vsRect[2].x=this.host.geometry.vsRect[1].x,this.host.geometry.vsRect[0].y=this.host.geometry.vsRect[1].y):2===this.host.capturedVecId?(this.host.geometry.vsRect[1].x=this.host.geometry.vsRect[2].x,this.host.geometry.vsRect[3].y=this.host.geometry.vsRect[2].y):3===this.host.capturedVecId?(this.host.geometry.vsRect[0].x=this.host.geometry.vsRect[3].x,this.host.geometry.vsRect[2].y=this.host.geometry.vsRect[3].y):4===this.host.capturedVecId?(this.host.geometry.vsRect[3].x+=s,this.host.geometry.vsRect[0].x+=s):5===this.host.capturedVecId?(this.host.geometry.vsRect[1].y+=i,this.host.geometry.vsRect[0].y+=i):6===this.host.capturedVecId?(this.host.geometry.vsRect[1].x+=s,this.host.geometry.vsRect[2].x+=s):7===this.host.capturedVecId&&(this.host.geometry.vsRect[2].y+=i,this.host.geometry.vsRect[3].y+=i),this.host.geometry.width=Math.abs(this.host.geometry.vsRect[0].x-this.host.geometry.vsRect[2].x),this.host.geometry.height=Math.abs(this.host.geometry.vsRect[0].y-this.host.geometry.vsRect[2].y),this.host.updateGeoProjection(),this.host.updateScreenPosCircle(),this.hexRebuild(),void this.updateGhostVecs();this.host.vec.x+=s,this.host.vec.y+=i;for(let o=0;o<this.host.geometry.vsRect.length;++o)this.host.geometry.vsRect[o].x+=s,this.host.geometry.vsRect[o].y+=i;this.host.updateGeoProjection(),this.host.updateScreenPosCircle(),this.hexReposition(s,i),this.updateGhostVecs()}hexReposition(t,e){this.host.hexmap&&(this.host.hexmap.reposition(t,e),this.host.hexmap.updateActiveHexByBoudnary(this.host.polygonTurfSubtracted))}hexRebuild(){this.host.hexmap&&(this.host.initHex(),this.host.hexmap.updateActiveHexByBoudnary(this.host.polygonTurfSubtracted))}updateGhostVecs(){const t=.5*this.host.geometry.width,e=.5*this.host.geometry.height;this.cVecGhost[0].x=this.host.vec.x-t,this.cVecGhost[0].y=this.host.vec.y,this.cVecGhost[1].x=this.host.vec.x,this.cVecGhost[1].y=this.host.vec.y+e,this.cVecGhost[2].x=this.host.vec.x+t,this.cVecGhost[2].y=this.host.vec.y,this.cVecGhost[3].x=this.host.vec.x,this.cVecGhost[3].y=this.host.vec.y-e}}class M{constructor(t,e){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:100,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100,o=arguments.length>4?arguments[4]:void 0,h=arguments.length>5?arguments[5]:void 0;this.listPixel=void 0,this.rx=void 0,this.ry=void 0,this.ddx=void 0,this.ddy=void 0,this.v0=void 0,this.v1=void 0,this.ptsCenter=void 0,this.pts=void 0,this.offScale=void 0,this.toMap=void 0,this.toScreen=void 0,this.referPoint=[],this.toMap=o,this.toScreen=h,this.listPixel=[],this.rx=s,this.ry=i,this.offScale=.9,this.v0=t,this.v1=e,this.ptsCenter=new p(0,0,0),this.ddx=(this.v1.x-this.v0.x)/(this.rx-1),this.ddy=(this.v1.y-this.v0.y)/(this.ry-1),this.init()}init(){this.initGrid(),this.computeHex(),this.computeHexOff()}initWithR(t){this.initGrid(),this.computeHex(),this.filterWithinR(t),this.computeHexOff(),this.computeGeoVec()}initWithVecs(t){this.initGrid(),this.computeHex(),this.filterWithinVecs(t),this.computeHexOff(),this.computeGeoVec()}initGrid(){this.pts=[];for(let t=0;t<this.ry;++t){let e=this.v0.y+t*this.ddy,s=[];for(let t=0;t<this.rx;++t){let i=this.v0.x+t*this.ddx,o=new p(i,e,0);const h=this.toMap(o.x,o.y);o.lng=h[0],o.lat=h[1],s.push(o)}this.pts.push(s)}}computeHex(){this.listPixel=[];let t=!0;for(let e=0;e<this.ry;e+=2){for(let s=0;s<this.rx;s+=2)if(t){if(s%2===0&&s<this.rx-2&&e%2===0&&e<this.ry-2){let t=new k(this);t.bVec.push(this.pts[e][s+1]),t.bVec.push(this.pts[e+1][s+2]),t.bVec.push(this.pts[e+2][s+2]),t.bVec.push(this.pts[e+3][s+1]),t.bVec.push(this.pts[e+2][s]),t.bVec.push(this.pts[e+1][s]),t.updateCenVec(),t.updatePolygon(),this.listPixel.push(t)}}else if(s%2===0&&s<this.rx-2&&e%2===0&&e<this.ry-2){let t=new k(this);t.bVec.push(this.pts[e][s+2]),t.bVec.push(this.pts[e+1][s+3]),t.bVec.push(this.pts[e+2][s+3]),t.bVec.push(this.pts[e+3][s+2]),t.bVec.push(this.pts[e+2][s+1]),t.bVec.push(this.pts[e+1][s+1]),t.updateCenVec(),t.updatePolygon(),this.listPixel.push(t)}t=!t}}filterWithinR(t){let e=new p(.5*(this.v1.x+this.v0.x),.5*(this.v1.y+this.v0.y),0),s=[],i=this.listPixel.length;for(;i--;){let o=d(this.listPixel[i].bVec);h(e,o)<t&&s.push(this.listPixel[i])}this.listPixel=s}filterWithinVecs(t){let e=[],s=this.listPixel.length;for(;s--;){let i=d(this.listPixel[s].bVec);r(i,t)&&e.push(this.listPixel[s])}this.listPixel=e}computeHexOff(){let t=this.listPixel.length;for(;t--;){let e=0;this.listPixel[t].temp=e}t=this.listPixel.length;let e=Number.MAX_SAFE_INTEGER,s=Number.MIN_SAFE_INTEGER;for(;t--;)e>this.listPixel[t].temp&&(e=this.listPixel[t].temp),s<this.listPixel[t].temp&&(s=this.listPixel[t].temp);t=this.listPixel.length}computeGeoVec(){let t=this.listPixel.length;for(;t--;)for(let e=0;e<this.listPixel[t].bVec.length;++e){let s=this.toMap(this.listPixel[t].bVec[e].x,this.listPixel[t].bVec[e].y);this.listPixel[t].bVec[e].lng=s[0],this.listPixel[t].bVec[e].lat=s[1],this.listPixel[t].updateCenVec()}}render(t){this.renderBins(t),this.updatePre(100,100),this.updatePost()}updateGeoProjection(){for(let t=0;t<this.pts.length;++t)for(let e=0;e<this.pts[t].length;++e){const s=this.pts[t][e],i=this.toMap(s.x,s.y);s.lng=i[0],s.lat=i[1]}}updateScreenPos(){for(let t=0;t<this.pts.length;++t)for(let e=0;e<this.pts[t].length;++e){const s=this.pts[t][e],i=this.toScreen(s.lng,s.lat);s.x=i[0],s.y=i[1]}}reposition(t,e){for(let s=0;s<this.pts.length;++s)for(let i=0;i<this.pts[s].length;++i){const o=this.pts[s][i];o.x+=t,o.y+=e;const h=this.toMap(o.x,o.y);o.lng=h[0],o.lat=h[1]}this.computeGeoVec(),this.updatePolygonTurf()}updateActiveHexByBoudnary(t){for(let e=0;e<this.listPixel.length;++e){const s=this.listPixel[e],i=m.YmM([[s.vec.lng,s.vec.lat]]);0===m.jfw(i,t).features.length?s.isActive=!1:s.isActive=!0}}renderBins(t){for(let e=0;e<this.listPixel.length;++e)this.listPixel[e].renderPost(t)}updatePre(t,e){let s=this.listPixel.length;for(;s--;)this.listPixel[s].isHover=!1,this.listPixel[s].isVisit=!1;for(s=this.listPixel.length;s--;)this.listPixel[s].updateWithMouseInteraction(t,e)}updatePost(){}updatePolygonTurf(){for(let t=0;t<this.listPixel.length;++t)this.listPixel[t].updatePolygon()}}class k{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new p(0,0,0),s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"#1267B0";this.map=void 0,this.vec=void 0,this.nPix=[],this.bVec=[],this.i=-1,this.j=-1,this.k=-1,this.id=void 0,this.color=void 0,this.strokeStyle=void 0,this.isVisit=void 0,this.isOver=void 0,this.data=void 0,this.temp=void 0,this.polygonTurfOriginal=void 0,this.isActive=!0,this.map=t,this.vec=e,this.updateGoeVec(),this.nPix=[],this.bVec=[],this.i=-1,this.j=-1,this.k=-1,this.color=s,this.isOver=!1,this.isVisit=!1,this.data={}}get isHover(){return this.isOver}set isHover(t){if(this.isActive&&!this.isVisit&&(this.isOver=t,this.isOver))for(let e=0;e<this.nPix.length;++e)this.nPix[e].isOver=t,this.nPix[e].isVisit=t}updateWithMouseInteraction(t,e){if(this.isActive){this.updateScreenVec();for(let t=0;t<this.bVec.length;++t);this.isMouseInside(t,e)}}isMouseInside(t,e){if(this.isActive)return!this.isVisit&&(r(new p(t,e,0),this.bVec)?(this.isHover=!0,!0):(this.isHover=!1,!1))}renderPost(t){if(this.isActive&&this.map.referPoint){let e=.1*m.jfw(this.map.referPoint,this.polygonTurfOriginal).features.length;t.beginPath(),t.arc(this.vec.x,this.vec.y,1,0,2*Math.PI,!1),t.closePath(),t.fillStyle="rgba(".concat(e,", 0, 0, 1)"),t.fill(),t.lineWidth=2,t.strokeStyle="black",t.lineWidth=.5,t.beginPath(),t.moveTo(this.bVec[0].x,this.bVec[0].y);for(let s=1;s<this.bVec.length;++s)t.lineTo(this.bVec[s].x,this.bVec[s].y);t.closePath(),this.isOver,t.fillStyle="rgba(255, 0, 0, ".concat(e,")"),t.strokeStyle="rgba(0, 0, 0, 0.5)",t.stroke(),t.fill()}}updateGoeVec(){let t=this.map.toMap(this.vec.x,this.vec.y);this.vec.lng=t[0],this.vec.lat=t[1]}updateScreenVec(){let t=this.map.toScreen(this.vec.lng,this.vec.lat);this.vec.x=t[0],this.vec.y=t[1]}updateCenVec(){this.isActive&&(this.vec=d(this.bVec),this.updateScreenVec())}updatePolygon(){const t=[];for(let e=0;e<this.bVec.length;e++)t.push([this.bVec[e].lng,this.bVec[e].lat]);t.push([this.bVec[0].lng,this.bVec[0].lat]),this.polygonTurfOriginal=m.yue([t])}}class W extends b{constructor(t,e,s){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:400,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:400,h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:R.RECT;super(t),this.renderer=void 0,this.transform=void 0,this.geometry=void 0,this.TYPE=R.RECT,this.vec=void 0,this.cp=[],this.hexmap=void 0,this.TYPE=h;const r=this.scene.common.toScreen(e,s);this.vec=new p(r[0],r[1]),this.geometry=new S(this.vec,i,o),this.renderer=new V(this),this.transform=new T(this),this.updateGeoProjection()}initHex(){this.hexmap=new M(this.geometry.vsRect[0],this.geometry.vsRect[2],16,20,this.scene.common.toMap,this.scene.common.toScreen)}isInside(t,e){const s=new p(t,e);this.capturedVecId=-1;for(let i=0;i<this.transform.cVecGhost.length;++i)if(h(this.transform.cVecGhost[i],s)<12)return this.capturedVecId=i+4,this.isHovered=!0,!0;for(let i=0;i<this.geometry.vsRect.length;++i)if(h(this.geometry.vsRect[i],s)<12)return this.capturedVecId=i,this.isHovered=!0,!0;if(this.TYPE===R.CIRCLE){if(function(t,e,s,i){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:5;return Math.pow(e.x-t.x,2)/Math.pow(o+s,2)+Math.pow(e.y-t.y,2)/Math.pow(o+i,2)<=1}(this.vec,s,.5*this.geometry.width,.5*this.geometry.height))return this.isHovered=!0,!0}else if(r(s,this.geometry.vsRect))return this.isHovered=!0,!0;return this.isHovered=!1,!1}translate(t,e){this.transform.translate(t,e)}update(){this.scene.solution.rendererWrapper.mapBoxWrapper.map.isMoving()&&(this.updateScreenPos(),this.transform.updateGhostVecs())}shiftType(){this.TYPE===R.CIRCLE?this.TYPE=R.RECT:this.TYPE===R.RECT&&(this.TYPE=R.CIRCLE),this.updateGeoProjection()}onMouseUp(){this.isHovered&&(this.capturedVecId=-1,this.updateGeoProjection(),this.captureNeeded&&(this.scene.common.captureScene(),this.captureNeeded=!1))}onMouseClick(){this.isSelected=!this.isSelected}renderPost(t){this.renderer.renderPost(t),this.hasAnimation&&(this.t+=.2),this.hexmap&&(this.hexmap.referPoint=this.referPoint,this.hexmap.render(t))}updateScreenPos(){this.geometry.updateScreen(this.scene.common.toScreen),this.hexmap&&this.hexmap.updateScreenPos()}updateScreenPosCircle(){this.geometry.updateScreenPosCircle()}updateGeoProjection(){this.geometry.updateProjection(this.scene.common.toMap),this.updatePolygonTurf(),this.hexmap&&this.hexmap.updateGeoProjection(),this.updateNeeded=!0}toJson(){return{TYPE:this.TYPE,vs:[{lng:this.geometry.vsRect[0].lng,lat:this.geometry.vsRect[0].lat},{lng:this.geometry.vsRect[2].lng,lat:this.geometry.vsRect[2].lat}]}}updatePolygonTurf(){const t=[];if(this.TYPE===R.RECT){for(let e=0;e<this.geometry.vsRect.length;e++)t.push([this.geometry.vsRect[e].lng,this.geometry.vsRect[e].lat]);t.push([this.geometry.vsRect[0].lng,this.geometry.vsRect[0].lat])}else{for(let e=0;e<this.geometry.vsCircle.length;e++)t.push([this.geometry.vsCircle[e].lng,this.geometry.vsCircle[e].lat]);t.push([this.geometry.vsCircle[0].lng,this.geometry.vsCircle[0].lat])}this.polygonTurfOriginal=m.yue([t])}updateWidthHight(t,e){this.geometry.updateWidthHight(t,e)}toggleHexmap(){this.hexmap?this.hexmap=void 0:this.initHex()}}class L{constructor(){this.vs=[],this.cv=new p(0,0,0),this.v0=new p(Number.MAX_VALUE,Number.MAX_VALUE),this.v1=new p(Number.MIN_VALUE,Number.MIN_VALUE)}push(t,e,s,i){const o=new p(t,e,0);o.lat=i,o.lng=s,this.vs.push(o)}removeLast(){this.vs.pop()}updateScreen(t){let e;for(let s=0;s<this.vs.length;++s)e=t(this.vs[s].lng,this.vs[s].lat),this.vs[s].x=e[0],this.vs[s].y=e[1];this.updateCenterVec()}resetBoundary(){this.v0.x=Number.MAX_VALUE,this.v0.y=Number.MAX_VALUE,this.v1.x=Number.MIN_VALUE,this.v1.y=Number.MIN_VALUE}updateProjection(t){let e;for(let s=0;s<this.vs.length;++s)e=t(this.vs[s].x,this.vs[s].y),this.vs[s].lng=e[0],this.vs[s].lat=e[1];this.updateCenterVec()}updateCenterVec(){this.resetBoundary();let t=0,e=0;for(let s=0;s<this.vs.length;++s)t+=this.vs[s].x,e+=this.vs[s].y,this.v0.x>this.vs[s].x&&(this.v0.x=this.vs[s].x),this.v0.y>this.vs[s].y&&(this.v0.y=this.vs[s].y),this.v1.x<this.vs[s].x&&(this.v1.x=this.vs[s].x),this.v1.y<this.vs[s].y&&(this.v1.y=this.vs[s].y);this.cv.x=t/this.vs.length,this.cv.y=e/this.vs.length}removeVecByIndex(t){this.vs.splice(t,1)}insertVec(t,e){const s=new p(t,e),i={x:0,y:0,dis:Number.MAX_VALUE,id:-1};for(let h=0;h<this.vs.length-1;++h){const t=n(s,this.vs[h],this.vs[1+h]);i.dis>t.dis&&(i.x=t.x,i.y=t.y,i.dis=t.dis,i.id=h)}const o=n(s,this.vs[this.vs.length-1],this.vs[0]);return i.dis>o.dis&&(i.x=o.x,i.y=o.y,i.dis=o.dis,i.id=this.vs.length-1),i.dis<10&&(this.vs.splice(i.id+1,0,new p(i.x,i.y)),!0)}toJson(){const t=[];for(let e=0;e<this.vs.length;++e)t.push({lng:this.vs[e].lng,lat:this.vs[e].lat});return t}}class I{constructor(t){this.host=void 0,this.pathCroppedArea=void 0,this.host=t}renderPost(t){this.host.geometry.vs.length>0&&(this.renderAreaBounding(t),this.renderCroppedArea(t),this.renderProperties(t)),(this.host.underConstruction||this.host.isHovered||this.host.isSelected)&&(y(t,this.host.geometry.vs),this.renderDim(t),this.host.isSelected&&this.renderSelected(t)),this.host.capturedVecId>-1&&(t.beginPath(),t.arc(this.host.geometry.vs[this.host.capturedVecId].x,this.host.geometry.vs[this.host.capturedVecId].y,10,0,2*Math.PI),t.closePath(),t.fill())}renderCroppedArea(t){if(this.host.geometry.vs.length<3){this.pathCroppedArea=new Path2D,this.pathCroppedArea.moveTo(this.host.geometry.vs[0].x,this.host.geometry.vs[0].y);for(let t=1;t<this.host.geometry.vs.length;++t)this.pathCroppedArea.lineTo(this.host.geometry.vs[t].x,this.host.geometry.vs[t].y);this.pathCroppedArea.closePath(),this.host.updateNeeded=!0}else if(this.host.updateNeeded||this.host.scene.solution.rendererWrapper.mapBoxWrapper.map.isMoving()){const t=v(this.host.polygonTurfOriginal,this.host.scene.polygonsDifference,this.host.scene.ids);this.host.polygonTurfSubtracted=t,this.pathCroppedArea=u(t,this.host.scene.common.toScreen),this.host.updateNeeded=!1}t.setLineDash([5,7]),t.lineDashOffset=this.host.t,t.lineWidth=2,t.strokeStyle="#fff";const e=.2+.09*Math.sin(.1*this.host.t);t.fillStyle="rgba(0, 255, 255, ".concat(e," )"),t.fill(this.pathCroppedArea,"evenodd"),t.stroke(this.pathCroppedArea),t.setLineDash([])}renderSelected(t){t.strokeStyle="rgba(255, 255, 255, 1)",t.lineWidth=1;const e=13+Math.sin(.2*this.host.t);t.beginPath(),t.moveTo(this.host.geometry.v0.x-e,this.host.geometry.v0.y+e),t.lineTo(this.host.geometry.v0.x-e,this.host.geometry.v0.y-e),t.lineTo(this.host.geometry.v0.x+e,this.host.geometry.v0.y-e),t.moveTo(this.host.geometry.v1.x+e,this.host.geometry.v0.y+e),t.lineTo(this.host.geometry.v1.x+e,this.host.geometry.v0.y-e),t.lineTo(this.host.geometry.v1.x-e,this.host.geometry.v0.y-e),t.moveTo(this.host.geometry.v1.x+e,this.host.geometry.v1.y-e),t.lineTo(this.host.geometry.v1.x+e,this.host.geometry.v1.y+e),t.lineTo(this.host.geometry.v1.x-e,this.host.geometry.v1.y+e),t.moveTo(this.host.geometry.v0.x-e,this.host.geometry.v1.y-e),t.lineTo(this.host.geometry.v0.x-e,this.host.geometry.v1.y+e),t.lineTo(this.host.geometry.v0.x+e,this.host.geometry.v1.y+e),t.stroke()}renderAreaBounding(t){t.beginPath(),t.moveTo(this.host.geometry.vs[0].x,this.host.geometry.vs[0].y);for(let e=1;e<this.host.geometry.vs.length;++e)t.lineTo(this.host.geometry.vs[e].x,this.host.geometry.vs[e].y);t.lineWidth=1,t.strokeStyle="rgba(255, 255, 255, 0.4)",t.stroke()}renderProperties(t){if(this.host.geometry.vs.length<3)return;const e=m.hXg(m.SOn(this.host.polygonTurfSubtracted),"meters","miles"),s=this.host.geometry.v0.x+.5*(this.host.geometry.v1.x-this.host.geometry.v0.x),i=this.host.geometry.v0.y;t.textAlign="center",t.font="18px arial",t.fillStyle="#fff",t.fillText("ID: ".concat(this.host.id.split("-")[0]),s,i-90),t.fillText("Area in square miles: ".concat(e.toFixed(5)),s,i-60);const o=m.jfw(this.host.scene.points,this.host.polygonTurfSubtracted);let h=0,r=0,n=0;for(let a=0;a<o.features.length;++a)"R"===o.features[a].properties.landuse?h+=1:"B"===o.features[a].properties.landuse?r+=1:n+=1;t.fillStyle=x.color,t.fillText("".concat(x.text,": ").concat(h,","),s-120,i-25),t.fillStyle=f.color,t.fillText("".concat(f.text,": ").concat(r,","),s+28,i-25),t.fillStyle="rgb(0, 128, 0)",t.fillText("Other: ".concat(n),s+140,i-25)}renderDim(t){t.textAlign="center",t.font="14px arial",t.fillStyle="#fff";const e=this.host.geometry.vs;let s=new p(1,0,0);for(let i=0;i<e.length-1;++i){let o=m.TuJ([[e[i].lng,e[i].lat],[e[1+i].lng,e[1+i].lat]]),h=m.kE(o,{units:"miles"}),r=e[i].x+.5*(e[i+1].x-e[i].x),n=e[i].y+.5*(e[i+1].y-e[i].y),l=c(new p(e[i].x-e[i+1].x,e[i].y-e[i+1].y,0)),d=a(s,l);e[i].y<e[i+1].y&&(d*=-1),t.save(),t.translate(r,n),t.rotate(d),t.fillText("".concat(h.toFixed(5)," mi"),0,0),t.restore()}if(e.length>2){let i=m.TuJ([[e[e.length-1].lng,e[e.length-1].lat],[e[0].lng,e[0].lat]]),o=m.kE(i,{units:"miles"}),h=e[e.length-1].x+.5*(e[0].x-e[e.length-1].x),r=e[e.length-1].y+.5*(e[0].y-e[e.length-1].y),n=c(new p(e[e.length-1].x-e[0].x,e[e.length-1].y-e[0].y,0)),l=a(s,n);e[e.length-1].y<e[0].y&&(l*=-1),t.save(),t.translate(h,r),t.rotate(l),t.fillText("".concat(o.toFixed(5)," mi"),0,0),t.restore()}}}class E{constructor(t){this.host=void 0,this.pathCroppedArea=void 0,this.host=t}translate(t,e){this.host.captureNeeded=!0;const s=this.host.scene.solution.activeCommander.mp[0]-this.host.scene.solution.activeCommander.mpPre[0],i=this.host.scene.solution.activeCommander.mp[1]-this.host.scene.solution.activeCommander.mpPre[1];if(this.host.capturedVecId>-1)return this.host.geometry.vs[this.host.capturedVecId].x+=s,this.host.geometry.vs[this.host.capturedVecId].y+=i,void this.host.updateGeoProjection();for(let o=0;o<this.host.geometry.vs.length;++o)this.host.geometry.vs[o].x+=s,this.host.geometry.vs[o].y+=i;this.host.updateGeoProjection()}}class A extends b{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0;super(t),this.renderer=void 0,this.transform=void 0,this.geometry=void 0,this.underConstruction=!0,this.TYPE=R.POLYGON,this.geometry=new L,this.renderer=new I(this),this.transform=new E(this),void 0!==e&&this.fromJson(e)}renderPost(t){this.renderer.renderPost(t),this.hasAnimation&&(this.t+=.2)}isInside(t,e){const s=new p(t,e);this.capturedVecId=-1;for(let i=0;i<this.geometry.vs.length;++i)if(h(this.geometry.vs[i],s)<12)return this.capturedVecId=i,this.isHovered=!0,!0;return r(s,this.geometry.vs)?(this.isHovered=!0,!0):(this.isHovered=!1,!1)}translate(t,e){this.transform.translate(t,e)}update(){this.scene.solution.rendererWrapper.mapBoxWrapper.map.isMoving()&&this.geometry.updateScreen(this.scene.common.toScreen)}onMouseClick(t){if(this.underConstruction)0===this.geometry.vs.length?(this.geometry.push(t.point.x,t.point.y,t.lngLat.lng,t.lngLat.lat),this.geometry.push(t.point.x,t.point.y,t.lngLat.lng,t.lngLat.lat)):this.geometry.push(t.point.x,t.point.y,t.lngLat.lng,t.lngLat.lat),this.geometry.vs.length>2&&(this.geometry.updateCenterVec(),this.updatePolygonTurf());else{if(this.capturedVecId>-1)return void(this.isSelected=!0);if(this.insertPt(t.point.x,t.point.y))return void(this.isSelected=!0);this.isSelected=!this.isSelected}}insertPt(t,e){return this.geometry.insertVec(t,e)}updateGhostPos(t,e){if(0===this.geometry.vs.length)return;this.geometry.vs[this.geometry.vs.length-1].x=t,this.geometry.vs[this.geometry.vs.length-1].y=e;const s=this.scene.common.toMap(t,e);this.geometry.vs[this.geometry.vs.length-1].lng=s[0],this.geometry.vs[this.geometry.vs.length-1].lat=s[1],this.geometry.vs.length>2&&(this.geometry.updateCenterVec(),this.updatePolygonTurf())}onMouseDoubleClick(t){this.removeVertexLastVertex(),this.removeVertexLastVertex(),this.updateGeoProjection(),this.underConstruction=!1,this.scene.captured=void 0,this.scene.common.captureScene()}onMouseUp(){this.isHovered&&(this.capturedVecId=-1,this.updateGeoProjection(),this.captureNeeded&&(this.scene.common.captureScene(),this.captureNeeded=!1))}removeVertexLastVertex(){this.geometry.removeLast(),this.geometry.vs.length<2&&this.remove(),this.updatePolygonTurf()}updateGeoProjection(){this.geometry.updateProjection(this.scene.common.toMap),this.updatePolygonTurf()}updatePolygonTurf(){if(this.geometry.vs.length<3)return;const t=[];for(let e=0;e<this.geometry.vs.length;e++)t.push([this.geometry.vs[e].lng,this.geometry.vs[e].lat]);t.push([this.geometry.vs[0].lng,this.geometry.vs[0].lat]),this.polygonTurfOriginal=m.yue([t]),this.updateNeeded=!0}toJson(){return{TYPE:this.TYPE,vs:this.geometry.toJson()}}fromJson(t){for(let e=0;e<t.length;++e){const s=this.scene.common.toScreen(t[e].lng,t[e].lat),i=new p(s[0],s[1],0);i.lng=t[e].lng,i.lat=t[e].lat,this.geometry.vs.push(i)}this.updatePolygonTurf()}remove(){if(this.capturedVecId>-1)return this.geometry.removeVecByIndex(this.capturedVecId),this.updateGeoProjection(),void(this.capturedVecId=-1);this.scene.remove(this)}}class D{constructor(t){var e=this;this.solution=void 0,this.zoom=t=>this.solution.rendererWrapper.mapBoxWrapper.zoom(t),this.flyTo=(t,e)=>this.solution.rendererWrapper.mapBoxWrapper.flyTo(t,e),this.center=function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:-99.292649,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:39.043903;return e.solution.rendererWrapper.mapBoxWrapper.center(t,s)},this.toMap=(t,e)=>this.solution.rendererWrapper.mapBoxWrapper.toMap(t,e),this.toScreen=(t,e)=>this.solution.rendererWrapper.mapBoxWrapper.toScreen(t,e),this.solution=t}renderForceWithUpdate(){this.solution.rendererWrapper.renderer.renderForce();for(let t=0;t<this.solution.scene.areas.length;++t)this.solution.scene.areas[t].updateNeeded=!0}downloadScreen(){this.solution.rendererWrapper.downloadScreen()}enablePan(){this.solution.rendererWrapper.mapBoxWrapper.map.dragPan.enable()}disablePan(){this.solution.rendererWrapper.mapBoxWrapper.map.dragPan.disable()}async loadDataLocal(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"funded_census_blocks.geojson";return(0,i.getJSONFromURL)("/njs-lab-public/static/dataDummyReady/"+t)}addScatterLayer(t){return this.solution.rendererWrapper.deckGL.addScatterLayer(t)}addArcLayer(t){return this.solution.rendererWrapper.deckGL.addArcLayer(t)}addPolygonLayer(t,e){return this.solution.rendererWrapper.deckGL.addPolygonLayer(t,e)}addShape(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:R.RECT;if(this.renderForce(),t===R.POLYGON)this.solution.scene.captured=new A(this.solution.scene),this.solution.activeCommander.drawMode=!0;else{const t=this.toMap(.5*this.solution.rendererWrapper.renderer.canvas.width,.5*this.solution.rendererWrapper.renderer.canvas.height);new W(this.solution.scene,t[0],t[1],200,200)}this.captureScene()}shiftShapeType(){if(this.solution.scene.areas.length>0){for(let t=0;t<this.solution.scene.areas.length;++t)this.solution.scene.areas[t].TYPE!==R.POLYGON&&this.solution.scene.areas[t].isSelected&&this.solution.scene.areas[t].shiftType();this.captureScene()}}toggleAnimation(){for(let t=0;t<this.solution.scene.areas.length;++t)this.solution.scene.areas[t].isSelected&&(this.solution.scene.areas[t].hasAnimation=!this.solution.scene.areas[t].hasAnimation)}deSelectedAll(){for(let t=0;t<this.solution.scene.areas.length;++t)this.solution.scene.areas[t].isSelected=!1}removeSelected(){for(let t=0;t<this.solution.scene.areas.length;++t)this.solution.scene.areas[t].isSelected&&this.solution.scene.areas[t].remove()}checkHoverArea(t,e){for(let s=0;s<this.solution.scene.areas.length;++s)if(this.solution.scene.areas[s].isInside(t,e))return this.solution.scene.areas[s]}pickObject(t){}getViewState(){return this.solution.rendererWrapper.mapBoxWrapper.getViewState()}getData(){let t=[];for(let e=0;e<this.solution.scene.areas.length;++e)t.push(this.solution.scene.areas[e].toJson());return{areas:t,extent:this.getViewState()}}captureScene(){return this.solution.scene.stateManager.captureState()}onExtentDone(){}renderForce(){this.solution.rendererWrapper.renderer.renderForce()}undo(){return this.renderForce(),this.solution.scene.stateManager.undo()}redo(){return this.renderForce(),this.solution.scene.stateManager.redo()}populateArea(t){this.solution.scene.areas=[];for(let e=0;e<t.areas.length;++e){const s=t.areas[e];if(s.TYPE!==R.POLYGON){const t=this.toScreen(s.vs[0].lng,s.vs[0].lat),e=this.toScreen(s.vs[1].lng,s.vs[1].lat),i=Math.abs(e[0]-t[0]),o=Math.abs(e[1]-t[1]),h=.5*(s.vs[0].lng+s.vs[1].lng),r=.5*(s.vs[0].lat+s.vs[1].lat);new W(this.solution.scene,h,r,i,o,R[s.TYPE])}else{new A(this.solution.scene,s.vs).underConstruction=!1}}this.solution.activeCommander.drawMode=!1,this.solution.scene.captured=void 0,t.extent&&(this.center(t.extent.center.lng,t.extent.center.lat),this.zoom(t.extent.zoom))}toggleHexmap(){for(let t=0;t<this.solution.scene.areas.length;++t)this.solution.scene.areas[t].toggleHexmap()}}class H{constructor(t){this.solution=void 0,this.mp=[0,0,0,0],this.mpPre=[0,0,0,0],this.drawMode=!1,this.mouseDown=t=>{this.solution.common.renderForce(),this.updateMousePos(t),this.drawMode||(this.solution.scene.captured=this.solution.common.checkHoverArea(this.mp[0],this.mp[1]),this.solution.scene.captured&&this.solution.common.disablePan())},this.mouseUp=t=>{var e;this.updateMousePos(t),this.drawMode||(this.solution.common.enablePan(),null===(e=this.solution.scene.captured)||void 0===e||e.onMouseUp(),this.solution.scene.captured=void 0)},this.mouseDClick=t=>{var e;this.drawMode=!1,null===(e=this.solution.scene.captured)||void 0===e||e.onMouseDoubleClick(t),this.solution.rendererWrapper.mapBoxWrapper.map.doubleClickZoom.enable()},this.mouseDrag=t=>{this.solution.common.renderForce(),this.updateMousePos(t),this.solution.scene.captured&&this.solution.scene.captured.translate(t.point.x,t.point.y),this.updateMousePrePos()},this.mouseClick=t=>{if(this.updateMousePos(t),this.drawMode)return this.solution.scene.captured.onMouseClick(t),void this.solution.rendererWrapper.mapBoxWrapper.map.doubleClickZoom.disable();this.solution.scene.captured=this.solution.common.checkHoverArea(this.mp[0],this.mp[1]),this.solution.scene.captured?this.solution.scene.captured.onMouseClick(t):this.solution.common.deSelectedAll(),this.solution.rendererWrapper.renderer.pts.push([t.lngLat.lng,t.lngLat.lat])},this.mouseMove=t=>{this.solution.common.renderForce(),this.updateMousePos(t),this.drawMode&&this.solution.scene.captured?this.solution.scene.captured.updateGhostPos(this.mp[0],this.mp[1]):(this.solution.common.checkHoverArea(this.mp[0],this.mp[1]),this.updateMousePrePos())},this.solution=t}updateMousePos(t){this.mp[0]=t.point.x,this.mp[1]=t.point.y,this.mp[2]=t.lngLat.lng,this.mp[3]=t.lngLat.lat}updateMousePrePos(){this.mpPre[0]=this.mp[0],this.mpPre[1]=this.mp[1],this.mpPre[2]=this.mp[2],this.mpPre[3]=this.mp[3]}keyDown(t){if("Backspace"===t.key){if(this.drawMode&&this.solution.scene.captured)return void this.solution.scene.captured.removeVertexLastVertex();this.solution.common.removeSelected(),this.solution.common.captureScene()}this.solution.common.renderForce()}}var G=s(5483),B=s.n(G);class N{constructor(t){var e=this;this.rendererWrapper=void 0,this.map=void 0,this.canvasMapbox=void 0,this.isPressed=!1,this.zoom=t=>this.map.zoomTo(t),this.flyTo=(t,e)=>this.map.flyTo({center:[t,e]}),this.center=function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:-99.292649,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:39.043903;return e.map.setCenter({lat:s,lng:t})},this.toMap=(t,e)=>{const s=this.map.unproject({x:t,y:e});return[s.lng,s.lat]},this.toScreen=(t,e)=>{try{const s=this.map.project([t,e]);return[s.x,s.y]}catch(s){}return[-1,-1]},this.mouseDown=t=>{},this.mouseUp=t=>{},this.mouseMove=t=>{},this.mouseDrag=t=>{},this.mouseClick=t=>{},this.mouseDClick=t=>{},this.keyDown=t=>{},this.rendererWrapper=t,this.initMap(t.solution.divHost.id)}initMap(t){B().accessToken="pk.eyJ1IjoiZGVzaWduanUiLCJhIjoiY2xhNGU0YWo4MDlhYzNwdHBwenVvang4eiJ9.P3sX4l_3KjdPeRRbVS1VVg",this.map=new(B().Map)({preserveDrawingBuffer:!0,container:t,zoom:3,center:[-77.430815,37.801833],doubleClickZoom:!1,style:"mapbox://styles/mapbox/dark-v10"}),this.map.doubleClickZoom.disable(),this.map.dragRotate.disable(),this.map.on("moveend",(()=>{this.rendererWrapper.solution.common.onExtentDone()})),this.map.on("zoom",(()=>{this.rendererWrapper.solution.common.renderForce()})),this.map.on("click","polygon",(t=>{this.rendererWrapper.solution.common.pickObject(t)})),this.map.on("mousemove",(t=>{this.isPressed?this.mouseDrag(t):this.mouseMove(t)})),this.map.on("click",(t=>{this.mouseClick(t)})),this.map.on("mousedown",(t=>{this.isPressed=!0,this.mouseDown(t)})),this.map.on("dblclick",(t=>{this.mouseDClick(t)})),this.map.on("mouseup",(t=>{this.isPressed=!1,this.mouseUp(t)})),window.addEventListener("keydown",(t=>{this.keyDown(t)}));let e=document.getElementsByClassName("mapboxgl-canvas")[0];e.style.position="absolute",e=document.getElementsByClassName("mapboxgl-control-container")[0],e.style.display="none",this.map.on("load",(()=>{this.initPost()}))}initPost(){this.rendererWrapper.initPost(),this.canvasMapbox=this.map.getCanvas()}initCustomCanvas(){this.rendererWrapper.renderer.canvas.width=this.canvasMapbox.width,this.rendererWrapper.renderer.canvas.height=this.canvasMapbox.height,this.rendererWrapper.renderer.canvas.style.display="none";this.map.getBounds();this.map.addSource("canvas-source",{type:"canvas",canvas:this.rendererWrapper.renderer.canvas,coordinates:[[-125.618336,48.944262],[-125.618336,24.786775],[-65.591812,24.786775],[-65.591812,48.944262]],animate:!0}),this.map.addLayer({id:"canvas-layer",type:"raster",source:"canvas-source"})}downloadImage(){return function(t,e){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"map.png",i=document.createElement("canvas");i.width=t.width,i.height=t.height;let o=i.getContext("2d");o.globalAlpha=1,o.drawImage(t,0,0),o.drawImage(e,0,0,t.width,t.height);let h=new Image;h.width=t.width,h.height=t.height,h.src=i.toDataURL();let r=document.createElement("a");r.download=s,r.href=i.toDataURL(),r.click()}(this.map.getCanvas(),this.rendererWrapper.renderer.canvas)}getViewState(){const t=this.map.getCenter();return{zoom:this.map.getZoom(),center:t}}}var O=s(72070),j=s(88410),z=s(93926),Y=s(99764);class F{constructor(t){this.rendererWrapper=void 0,this.map=void 0,this.layers=[],this.rendererWrapper=t,this.map=this.rendererWrapper.mapBoxWrapper.map}initPost(){}addScatterLayer(t){const e=new O.Z({id:"scatter-".concat(this.layers.length),type:j.Z,data:t,getPosition:t=>t.position,getRadius:t=>t.size,getFillColor:t=>void 0!==t.color?t.color:[255,255,0],getLineColor:t=>[255,255,255],onClick:(t,e)=>console.log("Clicked:",t,e)});this.addLayer(e,"waterway-label")}addPolygonLayer(t,e){const s=new O.Z({id:"polygon-".concat(this.layers.length),type:z.Z,data:t,pickable:!0,stroked:!0,filled:!0,wireframe:!0,lineWidthMinPixels:1,getPolygon:t=>t.contour,getElevation:t=>1,getFillColor:t=>t.color,getLineColor:t=>[0,0,0],getLineWidth:1,onClick:(t,s)=>{e(t,s)}});this.addLayer(s,"waterway-label")}addArcLayer(t){const e=new O.Z({id:"arc-".concat(this.layers.length),type:Y.Z,data:t,getSourcePosition:t=>t.pickup,getTargetPosition:t=>t.dropoff,getSourceColor:t=>[255,128,0],getTargetColor:t=>[0,128,255],strokeWidth:5});this.addLayer(e,"waterway-label")}addLayer(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"waterway-label";this.map.addLayer(t,e),this.layers.push(t)}pick(){}}class U{constructor(){this.now=void 0,this.delta=void 0,this.frameRate=void 0,this.last=0,this.timeLastRender=void 0,this.msLoop=void 0}UpdateFPS(){this.now=window.performance.now(),this.msLoop=this.now-this.last,this.last=this.now,this.delta=this.delta+Math.min(1,this.msLoop/1e3),this.delta>this.frameRate&&(this.delta=this.delta-this.frameRate),this.delta=(Date.now()-this.timeLastRender)/1e3,this.timeLastRender=Date.now(),this.frameRate=1/this.delta}get dt(){return this.delta}}class _{constructor(t){this.divHost=void 0,this.canvas=void 0,this.ctx=void 0,this.isDown=!1,this.debugMode=!1,this.isStatic=!1,this.log="",this.prevent=!1,this.animation=!1,this.delay=90,this.frameNum=1,this.timer=void 0,this.isDrag=!1,this.deltaTime=void 0,this.start=()=>{this.loop(this.ctx)},this.resize=()=>{const t=this.divHost.getBoundingClientRect();this.canvas.width=t.width,this.canvas.height=t.height},this.loop=t=>{if(this.isStatic)return;let e=performance.now();requestAnimationFrame((()=>{this.loop(t)})),this.deltaTime.UpdateFPS(),(this.frameNum++<300||this.animation)&&this.renderPre(t);let s=performance.now();this.log="total frames: ".concat(this.frameNum++," (FPS: ").concat(this.deltaTime.frameRate.toFixed(0),"), a loop took: ").concat((s-e).toFixed(2)," ms to execute.")},this.renderForce=()=>{this.frameNum=0},this.divHost=t,this.deltaTime=new U;const e=this.divHost.getBoundingClientRect();this.canvas=document.createElement("canvas"),this.canvas.width=e.width,this.canvas.height=e.height,this.divHost.appendChild(this.canvas),this.ctx=this.canvas.getContext("2d"),this.canvas.onclick=t=>{this.timer=setTimeout((()=>{this.prevent||this.mouseClick(t.offsetX,t.offsetY),this.isDrag=!1,this.prevent=!1}),this.delay)},this.canvas.onwheel=t=>{this.mouseWheel(t)},this.canvas.ondblclick=t=>{clearTimeout(this.timer),this.prevent=!0,this.mouseDoubleClick(t.offsetX,t.offsetY)},this.canvas.onmousedown=t=>{this.isDown=!0,this.mouseDown(t.offsetX,t.offsetY)},this.canvas.onmouseup=t=>{this.isDown=!1,this.isDrag=!1,this.mouseUp(t.offsetX,t.offsetY)},this.canvas.onmousemove=t=>{this.isDown?(this.isDrag=!0,this.prevent=!0,this.mouseDrag(t.offsetX,t.offsetY)):this.mouseMove(t.offsetX,t.offsetY)},window.addEventListener("resize",this.resize)}destroy(){window.removeEventListener("resize",this.resize),this.isStatic=!0;try{for(;void 0!==this.divHost&&void 0!==this.divHost.lastElementChild;)this.divHost.removeChild(this.divHost.lastElementChild)}catch(t){}}renderPre(t){t.clearRect(0,0,t.canvas.width,t.canvas.height),this.render(t)}render(t){}mouseClick(t,e){this.debugMode&&console.log("click")}mouseDoubleClick(t,e){this.debugMode&&console.log("d-click")}mouseDown(t,e){this.debugMode&&console.log("down")}mouseUp(t,e){this.debugMode&&console.log("up")}mouseMove(t,e){this.debugMode&&console.log("move")}mouseDrag(t,e){this.debugMode&&console.log("drag")}mouseWheel(t){this.debugMode&&console.log("wheel",t)}}class J extends _{constructor(t,e){super(t),this.rendererWrapper=void 0,this.time=0,this.pts=[],this.isActive=!1,this.log=void 0,this.needRenderLoop=!0,this.loopNum=0,this.loopNumMax=90,this.rendererWrapper=e,this.canvas.id="mapboxCustom",this.canvas.style.position="absolute",this.canvas.style.pointerEvents="none",this.start()}initPost(){this.isActive=!0}render(t){if(!this.isActive)return;this.time+=.1,this.rendererWrapper.solution.scene.renderCanvas(t);this.renderLog(t)}renderLog(t){t.textAlign="center",t.font="14px arial",t.fillStyle="#fff",t.fillText("Lat: ".concat(this.rendererWrapper.solution.activeCommander.mp[1].toFixed(5),",  Lng: ").concat(this.rendererWrapper.solution.activeCommander.mp[0].toFixed(5)),.5*this.canvas.width,50)}renderPoint(t){const e=this.rendererWrapper.mapBoxWrapper.map.getZoom(),s=.1*Math.pow(2,e);for(let i=0;i<this.pts.length;++i){const e=this.pts[i],o=this.rendererWrapper.mapBoxWrapper.toScreen(e[0],e[1]),h=.001*s;t.beginPath(),t.arc(o[0],o[1],h+(Math.sin(this.time+i)+3)/s,0,2*Math.PI),t.closePath(),t.fillStyle="rgba(0, 255, 0, 0.7)",t.fill()}}}class X{constructor(t){this.solution=void 0,this.mapBoxWrapper=void 0,this.deckGL=void 0,this.renderer=void 0,this.solution=t,this.mapBoxWrapper=new N(this),this.mapBoxWrapper.mouseDown=t=>{this.solution.activeCommander.mouseDown(t)},this.mapBoxWrapper.mouseUp=t=>{this.solution.activeCommander.mouseUp(t)},this.mapBoxWrapper.mouseClick=t=>{this.solution.activeCommander.mouseClick(t)},this.mapBoxWrapper.mouseDClick=t=>{this.solution.activeCommander.mouseDClick(t)},this.mapBoxWrapper.mouseMove=t=>{this.solution.activeCommander.mouseMove(t)},this.mapBoxWrapper.mouseDrag=t=>{this.solution.activeCommander.mouseDrag(t)},this.mapBoxWrapper.keyDown=t=>{this.solution.activeCommander.keyDown(t)},this.deckGL=new F(this),this.renderer=new J(this.solution.divHost,this)}initPost(){this.renderer.initPost(),this.deckGL.initPost()}downloadScreen(){return this.mapBoxWrapper.downloadImage()}destroy(){this.renderer.destroy()}}class Z{constructor(t){this.solution=void 0,this.divHost=void 0,this.div=void 0,this.solution=t,this.divHost=t.divHost,this.divHost.style.position="absolute";const e=document.createElement("div");this.divHost.appendChild(e),this.div=document.createElement("div"),this.div.style.width="150px",this.div.style.height="300px",this.divHost.appendChild(this.div),this.initUI()}async initUI(){const t=new Image;t.src="/njs-lab-public/static/dataDummyReady/readyLabs.png",t.style.position="relative",t.style.width="150px",t.style.margin="15px",t.style.marginTop="30px",t.style.marginBottom="0px";let e=document.createElement("a");e.href="https://ready.net/",e.appendChild(t),this.div.appendChild(e);let s=document.createElement("div");s.textContent="Capture Map",s.style.color="#fff",s.style.position="relative",s.style.margin="20px",s.onclick=()=>{this.solution.common.downloadScreen()},this.div.appendChild(s),s=document.createElement("div"),s.textContent="Set Extent",s.style.color="#fff",s.style.position="relative",s.style.margin="20px",s.onclick=()=>{this.solution.common.flyTo(-112.188375,35.267735)},this.div.appendChild(s),s=document.createElement("div"),s.textContent="Draw Area",s.style.color="#fff",s.style.position="relative",s.style.margin="20px",s.onclick=()=>{this.solution.common.addShape(R.POLYGON)},this.div.appendChild(s),s=document.createElement("div"),s.textContent="Add Shape",s.style.color="#fff",s.style.position="relative",s.style.margin="20px",s.onclick=()=>{this.solution.common.addShape(R.RECT)},this.div.appendChild(s),s=document.createElement("div"),s.textContent="Shape Type",s.style.color="#fff",s.style.position="relative",s.style.margin="20px",s.onclick=()=>{this.solution.common.shiftShapeType()},this.div.appendChild(s),s=document.createElement("div"),s.textContent="Animation",s.style.color="#fff",s.style.position="relative",s.style.margin="20px",s.onclick=()=>{this.solution.common.toggleAnimation()},this.div.appendChild(s),s=document.createElement("div"),s.textContent="Undo",s.style.color="#fff",s.style.position="relative",s.style.margin="20px",s.onclick=()=>{this.solution.common.undo()},this.div.appendChild(s),s=document.createElement("div"),s.textContent="Redo",s.style.color="#fff",s.style.position="relative",s.style.margin="20px",s.onclick=()=>{this.solution.common.redo()},this.div.appendChild(s),s=document.createElement("div"),s.textContent="Hex map",s.style.color="#fff",s.style.position="relative",s.style.margin="20px",s.onclick=()=>{this.solution.common.toggleHexmap()},this.div.appendChild(s)}}class q{constructor(t){this.scene=void 0,this.manager=void 0,this.scene=t,this.manager=new w}resetState(){this.manager.reset(),this.captureState()}captureState(){this.manager.push(this.scene.common.getData());return this.manager.getCurrentState()}undo(){const t=this.manager.undo();this.scene.common.populateArea(t)}redo(){const t=this.manager.redo();this.scene.common.populateArea(t)}}class K{constructor(t){this.solution=void 0,this.ac=void 0,this.stateManager=void 0,this.common=void 0,this.pts=[],this.areas=[],this.captured=void 0,this.points=void 0,this.polygonsDifference=[],this.ids=[],this.solution=t,this.stateManager=new q(this),this.ac=t.activeCommander,this.common=t.common}initPre(){this.stateManager.captureState()}push(t){this.areas.push(t)}remove(t){this.areas.splice(this.areas.indexOf(t),1)}async init(){this.common.center(-112.190375,35.257177),this.common.zoom(13);const t=await this.common.loadDataLocal("funded_census_blocks.geojson"),e=[],s=[],i=o(P.color),h=o(C.color);for(let o of t.features){const t=o.geometry.coordinates;let r;r="default"===o.properties.grant_long_status?i:h,e.push({contour:t[0],size:15,color:r}),s.push(!1)}this.ids=s;this.common.addPolygonLayer(e,((t,e)=>{this.ids[t.index]=!this.ids[t.index],this.common.renderForce()}));const r=await this.common.loadDataLocal("funded_census_blocks.geojson");this.polygonsDifference=[];for(let o of r.features){const t=o.geometry.coordinates;this.polygonsDifference.push(m.yue(t[0]))}this.common.addScatterLayer([{position:[-74.5,40],size:1e4},{position:[-74.5,40.5],size:5e3},{position:[-74.6,40.5],size:5800},{position:[-74.7,40.5],size:100}]);this.common.addArcLayer([{pickup:[-122.42,37.8],dropoff:[-74.5,40.5]},{pickup:[-122.43,37.8],dropoff:[-122.42,37.75]}]);const n=await this.common.loadDataLocal("underserved_locations.geojson"),a=o(x.color),c=o(f.color),l=[];for(let o of n.features){const t=o.geometry.coordinates,e=o.properties.landuse;let s;s="R"===e?a:"B"===e?c:[0,128,0],l.push({position:[t[0],t[1]],size:15,color:s})}this.common.addScatterLayer(l),this.points=n}renderCanvas(t){for(let e=0;e<this.areas.length;++e)this.areas[e].render(t);t.fillStyle="#f00";for(let e=0;e<this.pts.length;++e){const s=this.pts[e];g(t,s[0],s[1])}}}class Q{constructor(t){this.solution=void 0,this.solution=t}}class ${constructor(t){this.divHost=void 0,this.common=void 0,this.activeCommander=void 0,this.uiWrapper=void 0,this.rendererWrapper=void 0,this.scene=void 0,this.api=void 0,this.divHost=document.createElement(t),this.divHost.style.position="relative",this.init(),this.initPost()}init(){this.common=new D(this),this.activeCommander=new H(this),this.scene=new K(this),this.rendererWrapper=new X(this),this.uiWrapper=new Z(this),this.api=new Q(this)}destroy(){for(this.rendererWrapper.destroy();this.divHost.lastElementChild;)this.divHost.removeChild(this.divHost.lastElementChild)}async initPost(){this.scene.initPre(),await this.scene.init()}}}}]);
//# sourceMappingURL=96623.2d01c850.chunk.js.map