{"version":3,"file":"static/js/55054.b4c343fb.chunk.js","mappings":"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","sources":["njslab/Tools/RectPosOptimizerGraph/Implementation/OptimizerRectPosSystemA/Core/OptimizerA.ts","njslab/Tools/RectPosOptimizerGraph/Implementation/OptimizerRectPosSystemA/CanvasCore/index.ts","njslab/Tools/RectPosOptimizerGraph/Implementation/OptimizerRectPosSystemA/index.ts","njslab/Tools/RectPosOptimizerGraph/Implementation/OptimizerRectPosSystemB/Core/OptimizerA.ts","njslab/Tools/RectPosOptimizerGraph/Implementation/OptimizerRectPosSystemB/CanvasCore/index.ts","njslab/Tools/RectPosOptimizerGraph/Implementation/OptimizerRectPosSystemB/index.ts","njslab/Tools/RectPosOptimizerGraph/Implementation/OptimizerRectPosSystemC/Core/OptimizerA.ts","njslab/Tools/RectPosOptimizerGraph/Implementation/OptimizerRectPosSystemC/CanvasCore/index.ts","njslab/Tools/RectPosOptimizerGraph/Implementation/OptimizerRectPosSystemC/index.ts","njslab/Tools/RectPosOptimizerGraph/Implementation/index.ts","njslab/Tools/RectPosOptimizerGraph/App.ts","njslab/Tools/RectPosOptimizerGraph/index.ts"],"sourcesContent":["import { NVector3 } from '../../../lib';\r\nexport class OptimizerA {\r\n    constructor() {\r\n        this.Init();\r\n    }\r\n    public Init() {\r\n        Rectangle.list = [];\r\n        Rectangle.listSorted = [];\r\n\r\n        for (let i = 0; i < 15; ++i) {\r\n            let t = new Rectangle(200 + Math.random() * 20, 200 + Math.random() * 20);\r\n            t.height += 20 * Math.random();\r\n            if (Math.random() < 0.3) {\r\n                t.fixed = true;\r\n            }\r\n        }\r\n        Rectangle.Init();\r\n    }\r\n    public Update() {\r\n        Rectangle.Update();\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        Rectangle.Render(ctx);\r\n    }\r\n}\r\nexport class Particle {\r\n    v: NVector3;\r\n    u: NVector3;\r\n    f: NVector3;\r\n    m: number = 1;\r\n    constructor(x: number = 0, y: number = 0, z: number = 0, mass: number = 1) {\r\n        this.v = new NVector3(x, y, z);\r\n        this.u = NVector3.Origin();\r\n        this.f = NVector3.Origin();\r\n        this.m = mass;\r\n    }\r\n    public Move(dt: number = 0.5, damping: number = 0.99) {\r\n        this.u.x *= damping;\r\n        this.u.y *= damping;\r\n        this.u.z *= damping;\r\n\r\n        this.u.x += this.f.x * (dt / this.m);\r\n        this.u.y += this.f.y * (dt / this.m);\r\n        this.u.z += this.f.z * (dt / this.m);\r\n\r\n        this.v.x += this.u.x * dt;\r\n        this.v.y += this.u.y * dt;\r\n        this.v.z += this.u.z * dt;\r\n\r\n        if (this.v.y < 0.0) {\r\n            this.v.y = 0.0;\r\n            if (this.u.y < 0.0) { this.u.y = -this.u.y; }\r\n        }\r\n    }\r\n}\r\nclass Rectangle {\r\n    static list: Rectangle[] = [];\r\n    static listSorted: Rectangle[] = [];\r\n    static SpringConstant: number = 0.9;\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    fixed: boolean = false;\r\n    colorFill: string = '#ff0000';\r\n    colorStrok: string = '#00ff00';\r\n    cVec: NVector3;\r\n    f: NVector3;\r\n    u: NVector3;\r\n    m: number = 10;\r\n    targetLength: number = 1000;\r\n    targetLengthPre: number = 1000;\r\n    boundaryVec: NVector3[] = [];\r\n    static Init() {\r\n        let offset = 10;\r\n        let yList: number[][] = [];\r\n        for (let i = 0; i < this.list.length; ++i) {\r\n            yList.push([this.list[i].cVec.y, i]);\r\n        }\r\n        let yListSorted = this.SortSelectionAscending(yList);\r\n        for (let i = 0; i < yListSorted.length; ++i) {\r\n            let index = yListSorted[i][1];\r\n            this.listSorted.push(this.list[index]);\r\n        }\r\n\r\n        for (let i = 0; i < this.listSorted.length - 1; ++i) {\r\n            const r0 = this.listSorted[i];\r\n            const r1 = this.listSorted[i + 1];\r\n            r0.targetLength = r0.height + r1.height + offset;\r\n        }\r\n        const r0 = this.listSorted[this.listSorted.length - 1];\r\n        const r1 = this.listSorted[this.listSorted.length - 2];\r\n        r0.targetLength = r0.height + r1.height + offset;\r\n    }\r\n    static Render(ctx: CanvasRenderingContext2D) {\r\n        for (let i = 0; i < this.list.length; ++i) { this.list[i].Render(ctx); }\r\n    }\r\n    static Update() {\r\n        for (let i = 0; i < this.list.length; ++i) { this.list[i].Update(); }\r\n    }\r\n    public static Distance(x0: number, y0: number, x1: number, y1: number): number {\r\n        return Math.sqrt((x0 - x1) * (x0 - x1) + (y0 - y1) * (y0 - y1));\r\n    }\r\n    public static SortSelectionAscending(d: number[][]) {\r\n        let index = 0, temp = [0, 0], len = d.length;\r\n        for (let i = 0; i < len; ++i) {\r\n            let min: number = Number.MAX_SAFE_INTEGER;\r\n            for (let j = i; j < len; ++j) {\r\n                if (d[j][0] < min) { min = d[j][0]; index = j; }\r\n            }\r\n            temp = d[i];\r\n            d[i] = d[index];\r\n            d[index] = temp;\r\n        }\r\n        return d;\r\n    }\r\n\r\n    // ...........\r\n    constructor(x: number, y: number, width: number = 50, height: number = 25) {\r\n        this.x = x; this.y = y;\r\n        this.width = width; this.height = height;\r\n        this.cVec = new NVector3(x + this.width * 0.5, y + this.height * 0.5);\r\n\r\n        this.f = NVector3.Origin();\r\n        this.u = new NVector3(0, 1);\r\n\r\n        Rectangle.list.push(this);\r\n    }\r\n    public UpdateBoundaryVec() {\r\n        this.boundaryVec = [\r\n            new NVector3(this.x, this.y),\r\n            new NVector3(this.x + this.width, this.y),\r\n            new NVector3(this.x + this.width, this.y + this.height),\r\n            new NVector3(this.x, this.y + this.height),\r\n        ];\r\n    }\r\n    public Update() {\r\n        const cRect = this.FindCloseRect();\r\n        // console.log(cRect);\r\n        if (cRect) {\r\n            // if (this.targetLength < this.targetLengthPre) {\r\n            //     this.targetLength = (cRect.width * 0.5 + this.width * 0.5) + 20;\r\n            //     this.targetLengthPre = this.targetLength;\r\n            // }\r\n            this.ApplySpringForce(cRect);\r\n            this.Move();\r\n            this.UpdatePos();\r\n        }\r\n    }\r\n    public ApplySpringForce(tRect: Rectangle) {\r\n        const dp: NVector3 = new NVector3(tRect.cVec.x - this.cVec.x, tRect.cVec.y - this.cVec.y, tRect.cVec.z - this.cVec.z);\r\n        const dist: number = dp.Length();\r\n        dp.Unitize();\r\n        this.f.x += dp.x * (dist - this.targetLength) * Rectangle.SpringConstant;\r\n        this.f.y += dp.y * (dist - this.targetLength) * Rectangle.SpringConstant;\r\n        this.f.z += dp.z * (dist - this.targetLength) * Rectangle.SpringConstant;\r\n        // console.log(this.f);\r\n        tRect.f.x -= dp.x * (dist - this.targetLength) * Rectangle.SpringConstant;\r\n        tRect.f.y -= dp.y * (dist - this.targetLength) * Rectangle.SpringConstant;\r\n        tRect.f.z -= dp.z * (dist - this.targetLength) * Rectangle.SpringConstant;\r\n    }\r\n    public Move(dt: number = 0.03, damping: number = 0.8) {\r\n        if (this.fixed) { return; }\r\n        // if (this.IsHover()) { return; }\r\n        // if (!this.needCompute) { this.needCompute = true; return; }\r\n        this.u.x *= damping;\r\n        this.u.y *= damping;\r\n        this.u.z *= damping;\r\n        this.u.x += this.f.x * (dt / this.m);\r\n        this.u.y += this.f.y * (dt / this.m);\r\n        this.u.z += this.f.z * (dt / this.m);\r\n        this.cVec.x += this.u.x * dt;\r\n        this.cVec.y += this.u.y * dt;\r\n        this.cVec.z += this.u.z * dt;\r\n    }\r\n    IsHover() {\r\n        this.UpdateBoundaryVec();\r\n        for (let i = 0; i < Rectangle.list.length; ++i) {\r\n            if (Rectangle.list[i] !== this) {\r\n                Rectangle.list[i].UpdateBoundaryVec();\r\n                if (this.IsInsideOfVecsWtihVecs(this.boundaryVec, Rectangle.list[i].boundaryVec)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    public UpdatePos() {\r\n        this.x = this.cVec.x - (this.width * 0.5);\r\n        this.y = this.cVec.y - (this.height * 0.5);\r\n    }\r\n    public FindCloseRect() {\r\n        let dis = this.targetLength; // Number.MAX_SAFE_INTEGER;\r\n        let index = -1;\r\n        for (let i = 0; i < Rectangle.list.length; ++i) {\r\n            if (Rectangle.list[i] !== this) {\r\n                let theDis = Rectangle.Distance(this.cVec.x, this.cVec.y, Rectangle.list[i].cVec.x, Rectangle.list[i].cVec.y);\r\n                if (theDis < dis) {\r\n                    dis = theDis;\r\n                    index = i;\r\n                }\r\n            }\r\n        }\r\n        // console.log(index);\r\n        if (index !== -1) {\r\n            return Rectangle.list[index];\r\n        }\r\n        return undefined;\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        if (this.fixed) {\r\n            ctx.strokeStyle = '#333333';\r\n            ctx.fillStyle = '#333333';\r\n        } else {\r\n            ctx.strokeStyle = this.colorStrok;\r\n            ctx.fillStyle = this.colorFill;\r\n        }\r\n        ctx.beginPath();\r\n        ctx.rect(this.x, this.y, this.width, this.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.lineWidth = 1;\r\n        ctx.stroke();\r\n    }\r\n    public IsInsideOfVecsWtihVecs(vs: NVector3[], vecs: NVector3[]): boolean {\r\n        let inside: boolean = true;\r\n        for (let i = 0; i < vs.length; i++) {\r\n            inside = NVector3.IsInsideOfVecs(vs[i], vecs);\r\n            if (!inside) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    public IsInsideOfVecs(v: NVector3, vecs: NVector3[]): boolean {\r\n        // ray-casting algorithm based on https://github.com/substack/point-in-polygon\r\n        // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\r\n        let x = v.x, y = v.y;\r\n        let inside = false;\r\n        for (let i = 0, j = vecs.length - 1; i < vecs.length; j = i++) {\r\n            let xi = vecs[i].x, yi = vecs[i].y;\r\n            let xj = vecs[j].x, yj = vecs[j].y;\r\n            let intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\r\n            if (intersect) {\r\n                inside = !inside;\r\n            }\r\n        }\r\n        return inside;\r\n    }\r\n}\r\n","import { OptimizerRectPosSystem } from '..';\r\nexport class CanvasCore {\r\n    optimizerRectPosSystem: OptimizerRectPosSystem;\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n    div: HTMLElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    t: number = 0.0;\r\n    width: number;\r\n    height: number;\r\n    constructor(optimizerRectPosSystem: OptimizerRectPosSystem, width: number = 600, height: number = 400) {\r\n        this.optimizerRectPosSystem = optimizerRectPosSystem;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.InitCanvas(optimizerRectPosSystem.id);\r\n    }\r\n    InitCanvas(id: string) {\r\n        const canvas = document.createElement('canvas');\r\n        const div = document.createElement('div');\r\n        const host = document.getElementById(id);\r\n        if (host && div) {\r\n            this.div = div;\r\n            this.div.style.width = this.width + 'px'; // this.host.clientWidth;\r\n            this.div.style.height = this.height + 'px'; // this.host.clientHeight;\r\n            this.div.style.margin = '10px';\r\n            this.div.style.marginBottom = '30px';\r\n            this.div.style.padding = '10px';\r\n            div.appendChild(canvas);\r\n            this.host = host;\r\n            this.host.append(this.div);\r\n        }\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            this.canvas.width = this.width; // this.host.clientWidth;\r\n            this.canvas.height = this.height; // this.host.clientHeight;\r\n            this.canvas.style.backgroundColor = '#aaaaaa';\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.InitUI();\r\n                this.Init();\r\n            }\r\n        }\r\n    }\r\n    InitUI() {\r\n        const btn = document.createElement('button');\r\n        btn.textContent = 'reset';\r\n        btn.onclick = () => {\r\n            this.optimizerRectPosSystem.optimizer.Init();\r\n        };\r\n        this.div.append(btn);\r\n\r\n        // const input = document.createElement('input');\r\n        // // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\r\n        // input.type = 'range';\r\n        // input.min = '0.1';\r\n        // input.max = '100.0';\r\n        // input.value = '1.5';\r\n\r\n        // this.div.append(input);\r\n    }\r\n    Init() {\r\n        // this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        // this.ctx.scale(10, 10);\r\n        this.EventBind();\r\n        this.Loop();\r\n    }\r\n    EventBind() {\r\n        this.canvas.onmousedown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.canvas.onmouseup = (e: MouseEvent) => this.MouseUp(e);\r\n        this.canvas.onmousemove = (e: MouseEvent) => this.MouseMove(e);\r\n        window.onresize = (e: UIEvent) => this.Resize(e);\r\n\r\n    }\r\n    Resize(e: UIEvent) {\r\n        // console.log(e);\r\n        // this.canvas.width = this.host.clientWidth;\r\n        // this.canvas.height = this.host.clientHeight;\r\n    }\r\n    Loop() {\r\n        requestAnimationFrame(() => { this.Loop(); });\r\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.fillStyle = '#dddddd';\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n        this.Render(this.ctx);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(ctx);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n}","import { OptimizerA } from './Core/OptimizerA';\r\nimport { NVector3 } from '../../lib';\r\nimport { CanvasCore } from './CanvasCore';\r\n\r\nexport class OptimizerRectPosSystem {\r\n    CanvasCore: CanvasCore;\r\n    optimizer: OptimizerA;\r\n    id: string;\r\n    t = 0.9;\r\n    m: NVector3 = new NVector3(0, 0, 0);\r\n    constructor(id: string) {\r\n        this.id = id;\r\n        this.CanvasCore = new CanvasCore(this, 500, 330);\r\n\r\n        this.optimizer = new OptimizerA();\r\n\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.CanvasCore.Render = (ctx: CanvasRenderingContext2D) => this.Render(ctx);\r\n        this.CanvasCore.MouseDown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.CanvasCore.MouseUp = (e: MouseEvent) => this.MouseUp(e);\r\n        this.CanvasCore.MouseMove = (e: MouseEvent) => this.MouseMove(e);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.optimizer.Update();\r\n        this.optimizer.Render(ctx);\r\n\r\n        // ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        // ctx.beginPath();\r\n        // ctx.arc(this.m.x, this.m.y, 2.5, 0, Math.PI * 2);\r\n        // ctx.closePath();\r\n        // ctx.fill();\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        for (let i = -10; i < 10; ++i) {\r\n            for (let j = -10; j < 10; ++j) {\r\n                ctx.beginPath();\r\n                ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n                ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n        }\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        this.m.x = e.x - this.CanvasCore.canvas.offsetLeft;\r\n        this.m.y = e.y - this.CanvasCore.canvas.offsetTop;\r\n        // this.m.x = ((e.x - this.CanvasCore.canvas.offsetLeft) - this.CanvasCore.canvas.width * 0.5) * 0.1;\r\n        // this.m.y = ((e.y - this.CanvasCore.canvas.offsetTop) - this.CanvasCore.canvas.height * 0.5) * 0.1;\r\n    }\r\n}","import { NVector3 } from '../../../lib';\r\nexport class OptimizerA {\r\n    constructor() {\r\n        this.Init();\r\n    }\r\n    public Init() {\r\n        Rectangle.list = [];\r\n        Rectangle.listSorted = [];\r\n\r\n        for (let i = 0; i < 15; ++i) {\r\n            let t = new Rectangle(200 + Math.random() * 20, 200 + Math.random() * 20);\r\n            t.height += 20 * Math.random();\r\n            if (Math.random() < 0.3) {\r\n                t.fixed = true;\r\n            }\r\n        }\r\n        let t = new Rectangle(60, 120);\r\n        t.fixed = true;\r\n        t.height += 20 * Math.random();\r\n\r\n        t = new Rectangle(120, 100);\r\n        t.fixed = true;\r\n        t.height += 20 * Math.random();\r\n\r\n        t = new Rectangle(300, 100);\r\n        t.fixed = true;\r\n        t.height += 20 * Math.random();\r\n\r\n        Rectangle.Init();\r\n    }\r\n    public Update() {\r\n        Rectangle.Update();\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        Rectangle.Render(ctx);\r\n    }\r\n}\r\nexport class Particle {\r\n    v: NVector3;\r\n    u: NVector3;\r\n    f: NVector3;\r\n    m: number = 1;\r\n    constructor(x: number = 0, y: number = 0, z: number = 0, mass: number = 1) {\r\n        this.v = new NVector3(x, y, z);\r\n        this.u = NVector3.Origin();\r\n        this.f = NVector3.Origin();\r\n        this.m = mass;\r\n    }\r\n    public Move(dt: number = 0.5, damping: number = 0.99) {\r\n        this.u.x *= damping;\r\n        this.u.y *= damping;\r\n        this.u.z *= damping;\r\n\r\n        this.u.x += this.f.x * (dt / this.m);\r\n        this.u.y += this.f.y * (dt / this.m);\r\n        this.u.z += this.f.z * (dt / this.m);\r\n\r\n        this.v.x += this.u.x * dt;\r\n        this.v.y += this.u.y * dt;\r\n        this.v.z += this.u.z * dt;\r\n\r\n        if (this.v.y < 0.0) {\r\n            this.v.y = 0.0;\r\n            if (this.u.y < 0.0) { this.u.y = -this.u.y; }\r\n        }\r\n    }\r\n}\r\nclass Rectangle {\r\n    static list: Rectangle[] = [];\r\n    static listSorted: Rectangle[] = [];\r\n    static SpringConstant: number = 0.9;\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    fixed: boolean = false;\r\n    colorFill: string = '#ff0000';\r\n    colorStrok: string = '#00ff00';\r\n    cVec: NVector3;\r\n    f: NVector3;\r\n    u: NVector3;\r\n    m: number = 10;\r\n    targetLength: number = 1000;\r\n    targetLengthPre: number = 1000;\r\n    boundaryVec: NVector3[] = [];\r\n    static Init() {\r\n        let offset = 10;\r\n        let yList: number[][] = [];\r\n        for (let i = 0; i < this.list.length; ++i) {\r\n            yList.push([this.list[i].cVec.y, i]);\r\n        }\r\n        let yListSorted = this.SortSelectionAscending(yList);\r\n        for (let i = 0; i < yListSorted.length; ++i) {\r\n            let index = yListSorted[i][1];\r\n            this.listSorted.push(this.list[index]);\r\n        }\r\n\r\n        for (let i = 0; i < this.listSorted.length - 1; ++i) {\r\n            const r0 = this.listSorted[i];\r\n            const r1 = this.listSorted[i + 1];\r\n            r0.targetLength = r0.height + r1.height + offset;\r\n        }\r\n        const r0 = this.listSorted[this.listSorted.length - 1];\r\n        const r1 = this.listSorted[this.listSorted.length - 2];\r\n        r0.targetLength = r0.height + r1.height + offset;\r\n    }\r\n    static Render(ctx: CanvasRenderingContext2D) {\r\n        for (let i = 0; i < this.list.length; ++i) { this.list[i].Render(ctx); }\r\n    }\r\n    static Update() {\r\n        for (let i = 0; i < this.list.length; ++i) { this.list[i].Update(); }\r\n    }\r\n    public static Distance(x0: number, y0: number, x1: number, y1: number): number {\r\n        return Math.sqrt((x0 - x1) * (x0 - x1) + (y0 - y1) * (y0 - y1));\r\n    }\r\n    public static SortSelectionAscending(d: number[][]) {\r\n        let index = 0, temp = [0, 0], len = d.length;\r\n        for (let i = 0; i < len; ++i) {\r\n            let min: number = Number.MAX_SAFE_INTEGER;\r\n            for (let j = i; j < len; ++j) {\r\n                if (d[j][0] < min) { min = d[j][0]; index = j; }\r\n            }\r\n            temp = d[i];\r\n            d[i] = d[index];\r\n            d[index] = temp;\r\n        }\r\n        return d;\r\n    }\r\n\r\n    // ...........\r\n    constructor(x: number, y: number, width: number = 50, height: number = 25) {\r\n        this.x = x; this.y = y;\r\n        this.width = width; this.height = height;\r\n        this.cVec = new NVector3(x + this.width * 0.5, y + this.height * 0.5);\r\n\r\n        this.f = NVector3.Origin();\r\n        this.u = new NVector3(0, 1);\r\n\r\n        Rectangle.list.push(this);\r\n    }\r\n    public UpdateBoundaryVec() {\r\n        this.boundaryVec = [\r\n            new NVector3(this.x, this.y),\r\n            new NVector3(this.x + this.width, this.y),\r\n            new NVector3(this.x + this.width, this.y + this.height),\r\n            new NVector3(this.x, this.y + this.height),\r\n        ];\r\n    }\r\n    public Update() {\r\n        const cRect = this.FindCloseRect();\r\n        // console.log(cRect);\r\n        if (cRect) {\r\n            // if (this.targetLength < this.targetLengthPre) {\r\n            //     this.targetLength = (cRect.width * 0.5 + this.width * 0.5) + 20;\r\n            //     this.targetLengthPre = this.targetLength;\r\n            // }\r\n            this.ApplySpringForce(cRect);\r\n            this.Move();\r\n            this.UpdatePos();\r\n        }\r\n    }\r\n    public ApplySpringForce(tRect: Rectangle) {\r\n        const dp: NVector3 = new NVector3(tRect.cVec.x - this.cVec.x, tRect.cVec.y - this.cVec.y, tRect.cVec.z - this.cVec.z);\r\n        const dist: number = dp.Length();\r\n        dp.Unitize();\r\n        this.f.x += dp.x * (dist - this.targetLength) * Rectangle.SpringConstant;\r\n        this.f.y += dp.y * (dist - this.targetLength) * Rectangle.SpringConstant;\r\n        this.f.z += dp.z * (dist - this.targetLength) * Rectangle.SpringConstant;\r\n        // console.log(this.f);\r\n        tRect.f.x -= dp.x * (dist - this.targetLength) * Rectangle.SpringConstant;\r\n        tRect.f.y -= dp.y * (dist - this.targetLength) * Rectangle.SpringConstant;\r\n        tRect.f.z -= dp.z * (dist - this.targetLength) * Rectangle.SpringConstant;\r\n    }\r\n    public Move(dt: number = 0.03, damping: number = 0.8) {\r\n        if (this.fixed) { return; }\r\n        // if (this.IsHover()) { return; }\r\n        // if (!this.needCompute) { this.needCompute = true; return; }\r\n        this.u.x *= damping;\r\n        this.u.y *= damping;\r\n        this.u.z *= damping;\r\n        this.u.x += this.f.x * (dt / this.m);\r\n        this.u.y += this.f.y * (dt / this.m);\r\n        this.u.z += this.f.z * (dt / this.m);\r\n        this.cVec.x += this.u.x * dt;\r\n        this.cVec.y += this.u.y * dt;\r\n        this.cVec.z += this.u.z * dt;\r\n    }\r\n    IsHover() {\r\n        this.UpdateBoundaryVec();\r\n        for (let i = 0; i < Rectangle.list.length; ++i) {\r\n            if (Rectangle.list[i] !== this) {\r\n                Rectangle.list[i].UpdateBoundaryVec();\r\n                if (this.IsInsideOfVecsWtihVecs(this.boundaryVec, Rectangle.list[i].boundaryVec)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    public UpdatePos() {\r\n        this.x = this.cVec.x - (this.width * 0.5);\r\n        this.y = this.cVec.y - (this.height * 0.5);\r\n    }\r\n    public FindCloseRect() {\r\n        let dis = this.targetLength; // Number.MAX_SAFE_INTEGER;\r\n        let index = -1;\r\n        for (let i = 0; i < Rectangle.list.length; ++i) {\r\n            if (Rectangle.list[i] !== this) {\r\n                let theDis = Rectangle.Distance(this.cVec.x, this.cVec.y, Rectangle.list[i].cVec.x, Rectangle.list[i].cVec.y);\r\n                if (theDis < dis) {\r\n                    dis = theDis;\r\n                    index = i;\r\n                }\r\n            }\r\n        }\r\n        // console.log(index);\r\n        if (index !== -1) {\r\n            return Rectangle.list[index];\r\n        }\r\n        return undefined;\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        if (this.fixed) {\r\n            ctx.strokeStyle = '#333333';\r\n            ctx.fillStyle = '#333333';\r\n        } else {\r\n            ctx.strokeStyle = this.colorStrok;\r\n            ctx.fillStyle = this.colorFill;\r\n        }\r\n        ctx.beginPath();\r\n        ctx.rect(this.x, this.y, this.width, this.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.lineWidth = 1;\r\n        ctx.stroke();\r\n    }\r\n    public IsInsideOfVecsWtihVecs(vs: NVector3[], vecs: NVector3[]): boolean {\r\n        let inside: boolean = true;\r\n        for (let i = 0; i < vs.length; i++) {\r\n            inside = NVector3.IsInsideOfVecs(vs[i], vecs);\r\n            if (!inside) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    public IsInsideOfVecs(v: NVector3, vecs: NVector3[]): boolean {\r\n        // ray-casting algorithm based on https://github.com/substack/point-in-polygon\r\n        // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\r\n        let x = v.x, y = v.y;\r\n        let inside = false;\r\n        for (let i = 0, j = vecs.length - 1; i < vecs.length; j = i++) {\r\n            let xi = vecs[i].x, yi = vecs[i].y;\r\n            let xj = vecs[j].x, yj = vecs[j].y;\r\n            let intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\r\n            if (intersect) {\r\n                inside = !inside;\r\n            }\r\n        }\r\n        return inside;\r\n    }\r\n}\r\n","import { OptimizerRectPosSystem } from '..';\r\nexport class CanvasCore {\r\n    optimizerRectPosSystem: OptimizerRectPosSystem;\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n    div: HTMLElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    t: number = 0.0;\r\n    width: number;\r\n    height: number;\r\n    constructor(optimizerRectPosSystem: OptimizerRectPosSystem, width: number = 600, height: number = 400) {\r\n        this.optimizerRectPosSystem = optimizerRectPosSystem;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.InitCanvas(optimizerRectPosSystem.id);\r\n    }\r\n    InitCanvas(id: string) {\r\n        const canvas = document.createElement('canvas');\r\n        const div = document.createElement('div');\r\n        const host = document.getElementById(id);\r\n        if (host && div) {\r\n            this.div = div;\r\n            this.div.style.width = this.width + 'px'; // this.host.clientWidth;\r\n            this.div.style.height = this.height + 'px'; // this.host.clientHeight;\r\n            this.div.style.margin = '10px';\r\n            this.div.style.marginBottom = '30px';\r\n            this.div.style.padding = '10px';\r\n            div.appendChild(canvas);\r\n            this.host = host;\r\n            this.host.append(div);\r\n        }\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            this.canvas.width = this.width; // this.host.clientWidth;\r\n            this.canvas.height = this.height; // this.host.clientHeight;\r\n            this.canvas.style.backgroundColor = '#aaaaaa';\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.InitUI();\r\n                this.Init();\r\n            }\r\n        }\r\n    }\r\n    InitUI() {\r\n        const btn = document.createElement('button');\r\n        btn.textContent = 'reset';\r\n        btn.onclick = () => {\r\n            this.optimizerRectPosSystem.optimizer.Init();\r\n        };\r\n        // btn.style.marginBottom = '100px'\r\n        this.div.append(btn);\r\n\r\n        // const input = document.createElement('input');\r\n        // // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\r\n        // input.type = 'range';\r\n        // input.min = '0.1';\r\n        // input.max = '100.0';\r\n        // input.value = '1.5';\r\n\r\n        // this.div.append(input);\r\n    }\r\n    Init() {\r\n        // this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        // this.ctx.scale(10, 10);\r\n        this.EventBind();\r\n        this.Loop();\r\n    }\r\n    EventBind() {\r\n        this.canvas.onmousedown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.canvas.onmouseup = (e: MouseEvent) => this.MouseUp(e);\r\n        this.canvas.onmousemove = (e: MouseEvent) => this.MouseMove(e);\r\n        window.onresize = (e: UIEvent) => this.Resize(e);\r\n\r\n    }\r\n    Resize(e: UIEvent) {\r\n        // console.log(e);\r\n        // this.canvas.width = this.host.clientWidth;\r\n        // this.canvas.height = this.host.clientHeight;\r\n    }\r\n    Loop() {\r\n        requestAnimationFrame(() => { this.Loop(); });\r\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.fillStyle = '#dddddd';\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n        this.Render(this.ctx);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(ctx);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n}","import { OptimizerA } from './Core/OptimizerA';\r\nimport { NVector3 } from '../../lib';\r\nimport { CanvasCore } from './CanvasCore';\r\n\r\nexport class OptimizerRectPosSystem {\r\n    CanvasCore: CanvasCore;\r\n    optimizer: OptimizerA;\r\n    id: string;\r\n    t = 0.9;\r\n    m: NVector3 = new NVector3(0, 0, 0);\r\n    constructor(id: string) {\r\n        this.id = id;\r\n        this.CanvasCore = new CanvasCore(this, 500, 330);\r\n\r\n        this.optimizer = new OptimizerA();\r\n\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.CanvasCore.Render = (ctx: CanvasRenderingContext2D) => this.Render(ctx);\r\n        this.CanvasCore.MouseDown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.CanvasCore.MouseUp = (e: MouseEvent) => this.MouseUp(e);\r\n        this.CanvasCore.MouseMove = (e: MouseEvent) => this.MouseMove(e);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.optimizer.Update();\r\n        this.optimizer.Render(ctx);\r\n\r\n        // ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        // ctx.beginPath();\r\n        // ctx.arc(this.m.x, this.m.y, 2.5, 0, Math.PI * 2);\r\n        // ctx.closePath();\r\n        // ctx.fill();\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        for (let i = -10; i < 10; ++i) {\r\n            for (let j = -10; j < 10; ++j) {\r\n                ctx.beginPath();\r\n                ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n                ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n        }\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        this.m.x = e.x - this.CanvasCore.canvas.offsetLeft;\r\n        this.m.y = e.y - this.CanvasCore.canvas.offsetTop;\r\n        // this.m.x = ((e.x - this.CanvasCore.canvas.offsetLeft) - this.CanvasCore.canvas.width * 0.5) * 0.1;\r\n        // this.m.y = ((e.y - this.CanvasCore.canvas.offsetTop) - this.CanvasCore.canvas.height * 0.5) * 0.1;\r\n    }\r\n}","import { NVector3 } from '../../../lib';\r\nexport class OptimizerA {\r\n    constructor() {\r\n        this.Init();\r\n    }\r\n    public Init() {\r\n        Rectangle.list = [];\r\n        Rectangle.listSorted = [];\r\n\r\n        for (let i = 0; i < 15; ++i) {\r\n            let t = new Rectangle(200 + Math.random() * 20, 200 + Math.random() * 20);\r\n            t.height += 20 * Math.random();\r\n            if (Math.random() < 0.3) {\r\n                t.fixed = true;\r\n            }\r\n        }\r\n        let t = new Rectangle(60, 120);\r\n        t.fixed = true;\r\n        t.height += 20 * Math.random();\r\n\r\n        t = new Rectangle(120, 100);\r\n        t.fixed = true;\r\n        t.height += 20 * Math.random();\r\n\r\n        t = new Rectangle(300, 100);\r\n        t.fixed = true;\r\n        t.height += 20 * Math.random();\r\n\r\n        Rectangle.Init();\r\n    }\r\n    public Update() {\r\n        Rectangle.Update();\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        Rectangle.Render(ctx);\r\n    }\r\n}\r\nexport class Particle {\r\n    v: NVector3;\r\n    u: NVector3;\r\n    f: NVector3;\r\n    m: number = 1;\r\n    constructor(x: number = 0, y: number = 0, z: number = 0, mass: number = 1) {\r\n        this.v = new NVector3(x, y, z);\r\n        this.u = NVector3.Origin();\r\n        this.f = NVector3.Origin();\r\n        this.m = mass;\r\n    }\r\n    public Move(dt: number = 0.5, damping: number = 0.99) {\r\n        this.u.x *= damping;\r\n        this.u.y *= damping;\r\n        this.u.z *= damping;\r\n\r\n        this.u.x += this.f.x * (dt / this.m);\r\n        this.u.y += this.f.y * (dt / this.m);\r\n        this.u.z += this.f.z * (dt / this.m);\r\n\r\n        this.v.x += this.u.x * dt;\r\n        this.v.y += this.u.y * dt;\r\n        this.v.z += this.u.z * dt;\r\n\r\n        if (this.v.y < 0.0) {\r\n            this.v.y = 0.0;\r\n            if (this.u.y < 0.0) { this.u.y = -this.u.y; }\r\n        }\r\n    }\r\n}\r\nclass Rectangle {\r\n    static list: Rectangle[] = [];\r\n    static listSorted: Rectangle[] = [];\r\n    static SpringConstant: number = 0.9;\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    fixed: boolean = false;\r\n    colorFill: string = '#ff0000';\r\n    colorStrok: string = '#00ff00';\r\n    cVec: NVector3;\r\n    f: NVector3;\r\n    u: NVector3;\r\n    m: number = 10;\r\n    targetLength: number = 1000;\r\n    targetLengthPre: number = 1000;\r\n    boundaryVec: NVector3[] = [];\r\n    static Init() {\r\n        let offset = -15;\r\n        let yList: number[][] = [];\r\n        for (let i = 0; i < this.list.length; ++i) {\r\n            yList.push([this.list[i].cVec.y, i]);\r\n        }\r\n        let yListSorted = this.SortSelectionAscending(yList);\r\n        for (let i = 0; i < yListSorted.length; ++i) {\r\n            let index = yListSorted[i][1];\r\n            this.listSorted.push(this.list[index]);\r\n        }\r\n\r\n        for (let i = 0; i < this.listSorted.length - 1; ++i) {\r\n            const r0 = this.listSorted[i];\r\n            const r1 = this.listSorted[i + 1];\r\n            r0.targetLength = r0.height + r1.height + offset;\r\n        }\r\n        const r0 = this.listSorted[this.listSorted.length - 1];\r\n        const r1 = this.listSorted[this.listSorted.length - 2];\r\n        r0.targetLength = r0.height + r1.height + offset;\r\n    }\r\n    static Render(ctx: CanvasRenderingContext2D) {\r\n        for (let i = 0; i < this.list.length; ++i) { this.list[i].Render(ctx); }\r\n\r\n        ctx.lineWidth = 1;\r\n        ctx.moveTo(this.list[0].cVec.x, this.list[0].cVec.y);\r\n        for (let i = 1; i < this.list.length; ++i) {\r\n            ctx.lineTo(this.list[i].cVec.x, this.list[i].cVec.y);\r\n        }\r\n        ctx.stroke();\r\n\r\n    }\r\n    static Update() {\r\n        for (let i = 0; i < this.list.length; ++i) { this.list[i].Update(); }\r\n    }\r\n    public static Distance(x0: number, y0: number, x1: number, y1: number): number {\r\n        return Math.sqrt((x0 - x1) * (x0 - x1) + (y0 - y1) * (y0 - y1));\r\n    }\r\n    public static SortSelectionAscending(d: number[][]) {\r\n        let index = 0, temp = [0, 0], len = d.length;\r\n        for (let i = 0; i < len; ++i) {\r\n            let min: number = Number.MAX_SAFE_INTEGER;\r\n            for (let j = i; j < len; ++j) {\r\n                if (d[j][0] < min) { min = d[j][0]; index = j; }\r\n            }\r\n            temp = d[i];\r\n            d[i] = d[index];\r\n            d[index] = temp;\r\n        }\r\n        return d;\r\n    }\r\n\r\n    // ...........\r\n    constructor(x: number, y: number, width: number = 50, height: number = 25) {\r\n        this.x = x; this.y = y;\r\n        this.width = width; this.height = height;\r\n        this.cVec = new NVector3(x + this.width * 0.5, y + this.height * 0.5);\r\n\r\n        this.f = NVector3.Origin();\r\n        this.u = new NVector3(0, 1);\r\n\r\n        Rectangle.list.push(this);\r\n    }\r\n    public UpdateBoundaryVec() {\r\n        this.boundaryVec = [\r\n            new NVector3(this.x, this.y),\r\n            new NVector3(this.x + this.width, this.y),\r\n            new NVector3(this.x + this.width, this.y + this.height),\r\n            new NVector3(this.x, this.y + this.height),\r\n        ];\r\n    }\r\n    public Update() {\r\n        const cRect = this.FindCloseRect();\r\n        // console.log(cRect);\r\n        if (cRect) {\r\n            // if (this.targetLength < this.targetLengthPre) {\r\n            //     this.targetLength = (cRect.width * 0.5 + this.width * 0.5) + 20;\r\n            //     this.targetLengthPre = this.targetLength;\r\n            // }\r\n            this.ApplySpringForce(cRect);\r\n            this.Move();\r\n            this.UpdatePos();\r\n        }\r\n    }\r\n    public ApplySpringForce(tRect: Rectangle) {\r\n        const dp: NVector3 = new NVector3(tRect.cVec.x - this.cVec.x, tRect.cVec.y - this.cVec.y, tRect.cVec.z - this.cVec.z);\r\n        const dist: number = dp.Length();\r\n        dp.Unitize();\r\n        this.f.x += dp.x * (dist - this.targetLength) * Rectangle.SpringConstant;\r\n        this.f.y += dp.y * (dist - this.targetLength) * Rectangle.SpringConstant;\r\n        this.f.z += dp.z * (dist - this.targetLength) * Rectangle.SpringConstant;\r\n        // console.log(this.f);\r\n        tRect.f.x -= dp.x * (dist - this.targetLength) * Rectangle.SpringConstant;\r\n        tRect.f.y -= dp.y * (dist - this.targetLength) * Rectangle.SpringConstant;\r\n        tRect.f.z -= dp.z * (dist - this.targetLength) * Rectangle.SpringConstant;\r\n    }\r\n    public Move(dt: number = 0.03, damping: number = 0.8) {\r\n        if (this.fixed) { return; }\r\n        // if (!this.IsHover()) { return; }\r\n        // if (!this.needCompute) { this.needCompute = true; return; }\r\n        this.u.x *= damping;\r\n        this.u.y *= damping;\r\n        this.u.z *= damping;\r\n        this.u.x += this.f.x * (dt / this.m);\r\n        this.u.y += this.f.y * (dt / this.m);\r\n        this.u.z += this.f.z * (dt / this.m);\r\n        this.cVec.x += this.u.x * dt;\r\n        this.cVec.y += this.u.y * dt;\r\n        this.cVec.z += this.u.z * dt;\r\n    }\r\n    IsHover() {\r\n        this.UpdateBoundaryVec();\r\n        let isHover = false;\r\n        for (let i = 0; i < Rectangle.list.length; ++i) {\r\n            if (Rectangle.list[i] !== this) {\r\n                Rectangle.list[i].UpdateBoundaryVec();\r\n                if (this.IsInsideOfVecsWtihVecs(this.boundaryVec, Rectangle.list[i].boundaryVec)) {\r\n                    isHover = true;\r\n                }\r\n            }\r\n        }\r\n        return isHover;\r\n    }\r\n    public UpdatePos() {\r\n        this.x = this.cVec.x - (this.width * 0.5);\r\n        this.y = this.cVec.y - (this.height * 0.5);\r\n    }\r\n    public FindCloseRect() {\r\n        let dis = this.targetLength; // Number.MAX_SAFE_INTEGER;\r\n        let index = -1;\r\n        for (let i = 0; i < Rectangle.list.length; ++i) {\r\n            if (Rectangle.list[i] !== this) {\r\n                let theDis = Rectangle.Distance(this.cVec.x, this.cVec.y, Rectangle.list[i].cVec.x, Rectangle.list[i].cVec.y);\r\n                if (theDis < dis) {\r\n                    dis = theDis;\r\n                    index = i;\r\n                }\r\n            }\r\n        }\r\n        // console.log(index);\r\n        if (index !== -1) {\r\n            return Rectangle.list[index];\r\n        }\r\n        return undefined;\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        if (this.fixed) {\r\n            ctx.strokeStyle = '#333333';\r\n            ctx.fillStyle = '#333333';\r\n        } else {\r\n            ctx.strokeStyle = this.colorStrok;\r\n            ctx.fillStyle = this.colorFill;\r\n        }\r\n        ctx.beginPath();\r\n        ctx.rect(this.x, this.y, this.width, this.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.lineWidth = 1;\r\n        ctx.stroke();\r\n    }\r\n    public IsInsideOfVecsWtihVecs(vs: NVector3[], vecs: NVector3[]): boolean {\r\n        let inside: boolean = true;\r\n        for (let i = 0; i < vs.length; i++) {\r\n            inside = this.IsInsideOfVecs(vs[i], vecs);\r\n            if (!inside) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    public IsInsideOfVecs(v: NVector3, vecs: NVector3[]): boolean {\r\n        // ray-casting algorithm based on https://github.com/substack/point-in-polygon\r\n        // http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\r\n        let x = v.x, y = v.y;\r\n        let inside = false;\r\n        for (let i = 0, j = vecs.length - 1; i < vecs.length; j = i++) {\r\n            let xi = vecs[i].x, yi = vecs[i].y;\r\n            let xj = vecs[j].x, yj = vecs[j].y;\r\n            let intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\r\n            if (intersect) {\r\n                inside = !inside;\r\n            }\r\n        }\r\n        return inside;\r\n    }\r\n}\r\n","import { OptimizerRectPosSystem } from '..';\r\nexport class CanvasCore {\r\n    optimizerRectPosSystem: OptimizerRectPosSystem;\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n    div: HTMLElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    t: number = 0.0;\r\n    width: number;\r\n    height: number;\r\n    constructor(optimizerRectPosSystem: OptimizerRectPosSystem, width: number = 600, height: number = 400) {\r\n        this.optimizerRectPosSystem = optimizerRectPosSystem;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.InitCanvas(optimizerRectPosSystem.id);\r\n    }\r\n    InitCanvas(id: string) {\r\n        const canvas = document.createElement('canvas');\r\n        const div = document.createElement('div');\r\n        const host = document.getElementById(id);\r\n        if (host && div) {\r\n            this.div = div;\r\n            this.div.style.width = this.width + 'px'; // this.host.clientWidth;\r\n            this.div.style.height = this.height + 'px'; // this.host.clientHeight;\r\n            this.div.style.margin = '10px';\r\n            this.div.style.padding = '10px';\r\n            div.appendChild(canvas);\r\n            this.host = host;\r\n            this.host.append(div);\r\n        }\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            this.canvas.width = this.width; // this.host.clientWidth;\r\n            this.canvas.height = this.height; // this.host.clientHeight;\r\n            this.canvas.style.backgroundColor = '#aaaaaa';\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.InitUI();\r\n                this.Init();\r\n            }\r\n        }\r\n    }\r\n    InitUI() {\r\n        const btn = document.createElement('button');\r\n        btn.textContent = 'reset';\r\n        btn.onclick = () => {\r\n            this.optimizerRectPosSystem.optimizer.Init();\r\n        };\r\n        this.div.append(btn);\r\n\r\n        const p = document.createElement('p');\r\n        if (!p) { return; } this.div.append(p);\r\n        p.style.width = 'max-content';\r\n        p.innerHTML = 'Graph and agent-based Optimization.<br>';\r\n        // const input = document.createElement('input');\r\n        // // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\r\n        // input.type = 'range';\r\n        // input.min = '0.1';\r\n        // input.max = '100.0';\r\n        // input.value = '1.5';\r\n\r\n        // this.div.append(input);\r\n    }\r\n    Init() {\r\n        // this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        // this.ctx.scale(10, 10);\r\n        this.EventBind();\r\n        this.Loop();\r\n    }\r\n    EventBind() {\r\n        this.canvas.onmousedown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.canvas.onmouseup = (e: MouseEvent) => this.MouseUp(e);\r\n        this.canvas.onmousemove = (e: MouseEvent) => this.MouseMove(e);\r\n        window.onresize = (e: UIEvent) => this.Resize(e);\r\n\r\n    }\r\n    Resize(e: UIEvent) {\r\n        // console.log(e);\r\n        // this.canvas.width = this.host.clientWidth;\r\n        // this.canvas.height = this.host.clientHeight;\r\n    }\r\n    Loop() {\r\n        requestAnimationFrame(() => { this.Loop(); });\r\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.fillStyle = '#dddddd';\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n        this.Render(this.ctx);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(ctx);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n}","import { OptimizerA } from './Core/OptimizerA';\r\nimport { NVector3 } from '../../lib';\r\nimport { CanvasCore } from './CanvasCore';\r\n\r\nexport class OptimizerRectPosSystem {\r\n    CanvasCore: CanvasCore;\r\n    optimizer: OptimizerA;\r\n    id: string;\r\n    t = 0.9;\r\n    m: NVector3 = new NVector3(0, 0, 0);\r\n    constructor(id: string) {\r\n        this.id = id;\r\n        this.CanvasCore = new CanvasCore(this, 500, 330);\r\n\r\n        this.optimizer = new OptimizerA();\r\n\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.CanvasCore.Render = (ctx: CanvasRenderingContext2D) => this.Render(ctx);\r\n        this.CanvasCore.MouseDown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.CanvasCore.MouseUp = (e: MouseEvent) => this.MouseUp(e);\r\n        this.CanvasCore.MouseMove = (e: MouseEvent) => this.MouseMove(e);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.optimizer.Update();\r\n        this.optimizer.Render(ctx);\r\n\r\n        // ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        // ctx.beginPath();\r\n        // ctx.arc(this.m.x, this.m.y, 2.5, 0, Math.PI * 2);\r\n        // ctx.closePath();\r\n        // ctx.fill();\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        for (let i = -10; i < 10; ++i) {\r\n            for (let j = -10; j < 10; ++j) {\r\n                ctx.beginPath();\r\n                ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n                ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n        }\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        this.m.x = e.x - this.CanvasCore.canvas.offsetLeft;\r\n        this.m.y = e.y - this.CanvasCore.canvas.offsetTop;\r\n        // this.m.x = ((e.x - this.CanvasCore.canvas.offsetLeft) - this.CanvasCore.canvas.width * 0.5) * 0.1;\r\n        // this.m.y = ((e.y - this.CanvasCore.canvas.offsetTop) - this.CanvasCore.canvas.height * 0.5) * 0.1;\r\n    }\r\n}","import { OptimizerRectPosSystem as OptimizerRectPosSystemA } from './OptimizerRectPosSystemA';\r\nimport { OptimizerRectPosSystem as OptimizerRectPosSystemB } from './OptimizerRectPosSystemB';\r\nimport { OptimizerRectPosSystem as OptimizerRectPosSystemC } from './OptimizerRectPosSystemC';\r\nimport { OptimizerRectPosSystem as OptimizerRectPosSystemD } from './OptimizerRectPosSystemD';\r\n\r\nexport class Implementation {\r\n    OptimizerRectPosSystemA: OptimizerRectPosSystemA;\r\n    OptimizerRectPosSystemB: OptimizerRectPosSystemB;\r\n    OptimizerRectPosSystemC: OptimizerRectPosSystemC;\r\n    OptimizerRectPosSystemD: OptimizerRectPosSystemD;\r\n    \r\n    constructor(id: string) {\r\n\r\n        this.OptimizerRectPosSystemA = new OptimizerRectPosSystemA(id);\r\n        this.OptimizerRectPosSystemB = new OptimizerRectPosSystemB(id);\r\n        this.OptimizerRectPosSystemC = new OptimizerRectPosSystemC(id);\r\n        // this.OptimizerRectPosSystemD = new OptimizerRectPosSystemD(id);\r\n        document.body.style.overflow = 'auto';\r\n    }\r\n}","import { CanvasCore } from './Implementation/OptimizerRectPosSystemA/CanvasCore';\r\nimport { Implementation } from './Implementation';\r\nexport class AppCanvasRectOptimizer {\r\n    canvasCore: CanvasCore;\r\n    implementation: Implementation;\r\n    static Init(id: string) {\r\n        const n = new AppCanvasRectOptimizer(id);\r\n        n.Dummy();\r\n    }\r\n    constructor(id: string = 'SandBox') {\r\n        this.implementation = new Implementation(id);\r\n    }\r\n    Dummy() {\r\n        //\r\n    }\r\n}\r\n","import { AppCanvasRectOptimizer } from './App';\nexport class Solution {\n    public divHost: HTMLElement;\n\n    constructor(id: string, index = 0) {\n        this.divHost = document.getElementById(id);\n\n        const div = document.createElement('div');\n        div.id ='ngl3d';\n        div.style.width = '100%';\n        div.style.height = '100%';\n        this.divHost.appendChild(div);\n\n        AppCanvasRectOptimizer.Init(div.id);\n    }\n    public destroy() {\n        try {\n            while (this.divHost !== undefined && this.divHost.lastElementChild !== undefined) {\n                this.divHost.removeChild(this.divHost.lastElementChild);\n            }\n        } catch (error) { console.debug(error) }\n    }\n}"],"names":["OptimizerA","constructor","this","Init","Rectangle","list","listSorted","i","t","Math","random","height","fixed","Update","Render","ctx","static","yList","length","push","cVec","y","yListSorted","SortSelectionAscending","index","r0","r1","targetLength","x0","y0","x1","y1","sqrt","d","temp","len","min","Number","MAX_SAFE_INTEGER","j","x","width","colorFill","colorStrok","f","u","m","targetLengthPre","boundaryVec","NVector3","UpdateBoundaryVec","cRect","FindCloseRect","ApplySpringForce","Move","UpdatePos","tRect","dp","z","dist","Length","Unitize","SpringConstant","dt","damping","IsHover","IsInsideOfVecsWtihVecs","dis","theDis","Distance","strokeStyle","fillStyle","beginPath","rect","closePath","fill","lineWidth","stroke","vs","vecs","inside","IsInsideOfVecs","v","xi","yi","xj","yj","CanvasCore","optimizerRectPosSystem","canvas","host","div","InitCanvas","id","document","createElement","getElementById","style","margin","marginBottom","padding","appendChild","append","backgroundColor","getContext","InitUI","btn","textContent","onclick","optimizer","EventBind","Loop","onmousedown","e","MouseDown","onmouseup","MouseUp","onmousemove","MouseMove","window","onresize","Resize","requestAnimationFrame","clearRect","OptimizerRectPosSystem","Grid","arc","PI","offsetLeft","offsetTop","moveTo","lineTo","isHover","p","innerHTML","Implementation","OptimizerRectPosSystemA","OptimizerRectPosSystemB","OptimizerRectPosSystemC","OptimizerRectPosSystemD","body","overflow","AppCanvasRectOptimizer","Dummy","canvasCore","implementation","Solution","divHost","destroy","undefined","lastElementChild","removeChild","error","console","debug"],"sourceRoot":""}