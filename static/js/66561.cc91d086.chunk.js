"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[66561],{66561:(t,r,o)=>{o.r(r),o.d(r,{Solution:()=>m});var e=o(1250),i=o(5483),n=o.n(i),a=(o(43161),o(72791));class s{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"custom",r=arguments.length>1?arguments[1]:void 0;this.type="custom",this.id=void 0,this.vertexSource="\n    precision highp float;\n    uniform mat4 u_matrix;\n    uniform float u_size;\n    attribute vec2 aPos;\n\n    varying vec2 position;\n    \n    void main() {\n        gl_Position = u_matrix * vec4(aPos, 0.0, 1.0);\n        gl_PointSize = u_size; \n        position = vec2(aPos.xy);\n    }",this.fragmentSource="\n    precision mediump float;\n\n    uniform vec4 u_color;\n    uniform vec4 u_stroke;\n\n    varying vec2 position;\n\n    void main() {\n        \n        float aRadius = 2.0;\n        float dist = distance(position, gl_FragCoord.xy);\n\n        // https://stackoverflow.com/questions/7237086/opengl-es-2-0-equivalent-for-es-1-0-circles-using-gl-point-smooth\n        float len = length(gl_PointCoord - vec2(0.5)) * 1.0;\n        float radius = 0.3;\n        float strokeWidth = 0.2;\n\n        if (len < radius) {\n            gl_FragColor = u_color;\n        } else if (len < radius + strokeWidth) {\n            gl_FragColor = u_stroke;\n        } else {\n            discard;\n        }\n    }",this.program=void 0,this.buffer=void 0,this.aPos=void 0,this.data=void 0,this.map=void 0,this.id=t,this.data=r}onAdd(t,r){this.map=t;const o=r.createShader(r.VERTEX_SHADER);r.shaderSource(o,this.vertexSource),r.compileShader(o);const e=r.createShader(r.FRAGMENT_SHADER);r.shaderSource(e,this.fragmentSource),r.compileShader(e),this.program=r.createProgram(),r.attachShader(this.program,o),r.attachShader(this.program,e),r.linkProgram(this.program),this.aPos=r.getAttribLocation(this.program,"aPos"),this.buffer=r.createBuffer(),r.bindBuffer(r.ARRAY_BUFFER,this.buffer),r.bufferData(r.ARRAY_BUFFER,this.data,r.STATIC_DRAW)}render(t,r){t.useProgram(this.program),t.uniform1f(t.getUniformLocation(this.program,"u_size"),5*Math.pow(2,this.map.transform.zoom)),t.uniform4fv(t.getUniformLocation(this.program,"u_color"),[1,1,0,1]),t.uniform4fv(t.getUniformLocation(this.program,"u_stroke"),[1,0,0,1]),t.uniformMatrix4fv(t.getUniformLocation(this.program,"u_matrix"),!1,r),t.bindBuffer(t.ARRAY_BUFFER,this.buffer),t.enableVertexAttribArray(this.aPos),t.vertexAttribPointer(this.aPos,2,t.FLOAT,!1,0,0),t.enable(t.BLEND),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA),t.drawArrays(t.POINTS,0,.5*this.data.length)}}class c{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"custom";this.type="custom",this.id=void 0,this.vertexSource="\n    uniform mat4 u_matrix;\n    attribute vec2 aPos;\n    \n    uniform vec4 u_color;\n    // out vec4 vertexColor;\n\n    void main() {\n        gl_Position = u_matrix * vec4(aPos, 0.0, 1.0);\n        gl_PointSize = 5.0; \n    }",this.fragmentSource="\n    \n    // uniform vec4 u_color;\n\n    void main() {\n        gl_FragColor = vec4(1.0, 1.0, 0.0, 0.25);\n    }",this.program=void 0,this.buffer=void 0,this.aPos=void 0,this.id=t}onAdd(t,r){const o=r.createShader(r.VERTEX_SHADER);r.shaderSource(o,this.vertexSource),r.compileShader(o);const e=r.createShader(r.FRAGMENT_SHADER);r.shaderSource(e,this.fragmentSource),r.compileShader(e),this.program=r.createProgram(),r.attachShader(this.program,o),r.attachShader(this.program,e),r.linkProgram(this.program),this.aPos=r.getAttribLocation(this.program,"aPos");const i=n().MercatorCoordinate.fromLngLat({lng:25.004,lat:60.239}),a=n().MercatorCoordinate.fromLngLat({lng:13.403,lat:52.562}),s=n().MercatorCoordinate.fromLngLat({lng:30.498,lat:50.541});this.buffer=r.createBuffer(),r.bindBuffer(r.ARRAY_BUFFER,this.buffer),r.bufferData(r.ARRAY_BUFFER,new Float32Array([i.x,i.y,a.x,a.y,s.x,s.y]),r.STATIC_DRAW)}render(t,r){t.useProgram(this.program),t.uniformMatrix4fv(t.getUniformLocation(this.program,"u_matrix"),!1,r),t.uniform4fv(t.getUniformLocation(this.program,"u_color"),[1,0,0,1]),t.bindBuffer(t.ARRAY_BUFFER,this.buffer),t.enableVertexAttribArray(this.aPos),t.vertexAttribPointer(this.aPos,2,t.FLOAT,!1,0,0),t.enable(t.BLEND),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA),t.drawArrays(t.TRIANGLES,0,3)}}class h{constructor(t){this.map=void 0,this.map=t}init(){this.map.addLayer(new c("custom-01"),"building");const t=this.toMercators([25.004,60.239,0,0,1,1,2,2,3,3]);this.map.addLayer(new s("custom-02",t),"building"),this.map.on("click",(t=>{const r=this.map.queryRenderedFeatures(t.point,{layers:["custom-01"]});if(r.length>0){const t=r[0];console.log(t.properties)}}))}dispose(){}toMercator(t,r){return n().MercatorCoordinate.fromLngLat({lng:t,lat:r})}toMercators(t){const r=new Float32Array(t.length);for(let o=0;o<t.length;o+=2){const e=this.toMercator(t[o],t[o+1]);r[o]=e.x,r[o+1]=e.y}return r}}const u="style_mapContainer__BkMw2";var l=o(80184);const d=()=>{const t=(0,a.useRef)(null),r=(0,a.useRef)(null),o=(0,a.useRef)(null);return(0,a.useEffect)((()=>(r.current||(n().accessToken="pk.eyJ1IjoiZGVzaWduanUiLCJhIjoiY2xhNGU0YWo4MDlhYzNwdHBwenVvang4eiJ9.P3sX4l_3KjdPeRRbVS1VVg",r.current=new(n().Map)({container:t.current,style:"mapbox://styles/mapbox/dark-v11",center:[0,38],projection:"mercator",zoom:2,attributionControl:!1}),o.current=new h(r.current),r.current.on("load",(()=>{o.current.init()})),r.current.on("move",(()=>{}))),()=>{o.current.dispose()})),[]),(0,l.jsx)("div",{ref:t,className:u})};class m{constructor(t){this.divHost=void 0,this.divHost=document.getElementById(t);const r=document.createElement("div");r.style.height="100%",this.divHost.appendChild(r);e.createRoot(r).render(a.createElement(d,{}))}destroy(){for(;this.divHost.lastElementChild;)this.divHost.removeChild(this.divHost.lastElementChild)}}},43161:()=>{}}]);
//# sourceMappingURL=66561.cc91d086.chunk.js.map