{"version":3,"file":"static/js/40210.736f18e0.chunk.js","mappings":"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","sources":["njslab/Tools/RectPosOptimizer/Implementation/OptimizerRectPosAgentSystemA/Core/Core/Particle.ts","njslab/Tools/RectPosOptimizer/Implementation/OptimizerRectPosAgentSystemA/Core/Core/Rect.ts","njslab/Tools/RectPosOptimizer/Implementation/OptimizerRectPosAgentSystemA/Core/Graph.ts","njslab/Tools/RectPosOptimizer/Implementation/OptimizerRectPosAgentSystemA/CanvasCore/index.ts","njslab/Tools/RectPosOptimizer/Implementation/OptimizerRectPosAgentSystemA/index.ts","njslab/Tools/RectPosOptimizer/Implementation/OptimizerRectPosAgentSystemB/Core/Core/Particle.ts","njslab/Tools/RectPosOptimizer/Implementation/OptimizerRectPosAgentSystemB/Core/Core/Rect.ts","njslab/Tools/RectPosOptimizer/Implementation/OptimizerRectPosAgentSystemB/Core/Graph.ts","njslab/Tools/RectPosOptimizer/Implementation/OptimizerRectPosAgentSystemB/CanvasCore/index.ts","njslab/Tools/RectPosOptimizer/Implementation/OptimizerRectPosAgentSystemB/index.ts","njslab/Tools/RectPosOptimizer/Implementation/OptimizerRectPosAgentSystemC/Core/Core/Particle.ts","njslab/Tools/RectPosOptimizer/Implementation/OptimizerRectPosAgentSystemC/Core/Core/Rect.ts","njslab/Tools/RectPosOptimizer/Implementation/OptimizerRectPosAgentSystemC/Core/Graph.ts","njslab/Tools/RectPosOptimizer/Implementation/OptimizerRectPosAgentSystemC/CanvasCore/index.ts","njslab/Tools/RectPosOptimizer/Implementation/OptimizerRectPosAgentSystemC/index.ts","njslab/Tools/RectPosOptimizer/Implementation/index.ts","njslab/Tools/RectPosOptimizer/App.ts","njslab/Tools/RectPosOptimizer/index.ts"],"sourcesContent":["import { NVector3 } from '../../../../lib';\r\nimport { Graph } from '../Graph';\r\nexport class Particle {\r\n    graph: Graph;\r\n    pos: NVector3;\r\n    u: NVector3;\r\n    f: NVector3;\r\n    m: number = 5;\r\n    r: number = 17;\r\n    colorFill: string = '#0099ff';\r\n\r\n    MAX_VELOCITY = 5.5;\r\n    velocity: NVector3;\r\n    listCollision: Particle[] = [];\r\n\r\n    isCaptured: boolean = false;\r\n\r\n    constructor(graph: Graph, x: number, y: number) {\r\n        this.graph = graph;\r\n        this.pos = new NVector3(x, y);\r\n        // this.r += 5 * Math.random();\r\n    }\r\n    public Update(target: NVector3) {\r\n        if (this.isCaptured) { return; }\r\n\r\n        this.UpdatePos(target);\r\n    }\r\n    public UpdatePos(target: NVector3) {\r\n        const vec = NVector3.Sub(this.pos, target);\r\n        const nor = NVector3.Normalize(vec);\r\n\r\n        const falloff = NVector3.CalculateFalloff(this.pos, target, 1, 0.01);\r\n        this.velocity = NVector3.Scale(nor, falloff);\r\n        this.UpdateCollision();\r\n\r\n        this.velocity.y += 1.1;\r\n        this.pos = NVector3.Add(this.pos, this.velocity);\r\n        this.UpdatePosInScreen(this.graph.graphSystem.CanvasCore.ctx);\r\n    }\r\n    public UpdateCollision() {\r\n        for (let i = 0; i < this.listCollision.length; ++i) {\r\n            const vec = NVector3.Sub(this.pos, this.listCollision[i].pos);\r\n            // const dis = NVector3.Distance(this.pos, this.listCollision[i].pos);\r\n            const nor = NVector3.Normalize(vec);\r\n            const falloff = NVector3.CalculateFalloff(this.pos, this.listCollision[i].pos, 1, 0.01);\r\n            this.velocity = NVector3.Scale(nor, falloff);\r\n            this.pos = NVector3.Add(this.pos, this.velocity);\r\n        }\r\n    }\r\n    public IsMouseHover(x: number, y: number) {\r\n        if (NVector3.Distance(this.pos, new NVector3(x, y)) < this.r) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = '#000000';\r\n        if (this.isCaptured) {\r\n            ctx.fillStyle = '#ff0000';\r\n        } else {\r\n            ctx.fillStyle = this.colorFill;\r\n\r\n        }\r\n        ctx.beginPath();\r\n        ctx.arc(this.pos.x, this.pos.y, this.r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        // console.log(this.listCollision.length);\r\n\r\n    }\r\n    private UpdatePosInScreen(ctx: CanvasRenderingContext2D) {\r\n        const offset = 10;\r\n        if (this.pos.y > ctx.canvas.height * 0.5 - offset) {\r\n            this.pos.y = ctx.canvas.height * 0.5 - offset;\r\n        }\r\n        if (this.pos.x < -ctx.canvas.width * 0.5 + offset) {\r\n            this.pos.x = -ctx.canvas.width * 0.5 + offset;\r\n        }\r\n        if (this.pos.x > ctx.canvas.width * 0.5 - offset) {\r\n            this.pos.x = ctx.canvas.width * 0.5 - offset;\r\n        }\r\n    }\r\n}","import { NVector3 } from '../../../../lib';\r\nimport { Graph } from '../Graph';\r\nexport class Rect {\r\n    graph: Graph;\r\n    public vec: NVector3;\r\n    public width: number;\r\n    public height: number;\r\n    listCollision: Rect[] = [];\r\n    fixed: boolean = false;\r\n    public velocity: NVector3;\r\n\r\n    public hover: boolean = false;\r\n    static AABBvsAABB(a: Rect, b: Rect, offset: number = 1.5): boolean {\r\n        // Exit with no intersection if found separated along an axis\r\n        if (a.vec.x + offset + a.width * 0.5 < b.vec.x - offset - b.width * 0.5 || a.vec.x - offset - a.width * 0.5 > b.vec.x + offset + b.width * 0.5) return false;\r\n        if (a.vec.y + offset + a.height * 0.5 < b.vec.y - offset - b.height * 0.5 || a.vec.y - offset - a.height * 0.5 > b.vec.y + offset + b.height * 0.5) return false;\r\n\r\n        // if (a.max.x < b.min.x || a.min.x > b.max.x) return false;\r\n        // if (a.max.y < b.min.y || a.min.y > b.max.y) return false;\r\n\r\n        // No separating axis found, therefor there is at least one overlapping axis\r\n        return true;\r\n    }\r\n    constructor(graph: Graph, vec: NVector3, width: number, height: number) {\r\n        this.graph = graph;\r\n        this.vec = new NVector3(vec.x, vec.y);\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n    }\r\n    public Overlaps(other: Rect): boolean {\r\n        return Rect.AABBvsAABB(this, other);\r\n    }\r\n    public Update() {\r\n        if (this.fixed) { return; }\r\n        this.UpdatePos();\r\n    }\r\n    public UpdatePos() {\r\n        for (let i = 0; i < this.listCollision.length; ++i) {\r\n            const vec = NVector3.Sub(this.vec, this.listCollision[i].vec);\r\n            // const dis = NVector3.Distance(this.vec, this.listCollision[i].vec);\r\n            const nor = NVector3.Normalize(vec);\r\n            // const falloff = NVector3.CalculateFalloff(this.vec, this.listCollision[i].vec, dis, 0.1);\r\n            this.velocity = NVector3.Scale(nor, 0.3 + Math.random());\r\n            // console.log(this.velocity.x);\r\n            this.vec = NVector3.Add(this.vec, this.velocity);\r\n        }\r\n\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        if (this.hover) {\r\n            ctx.fillStyle = '#0ff000';\r\n        } else {\r\n            ctx.fillStyle = '#ff0000';\r\n        }\r\n        if (this.fixed) {\r\n            ctx.fillStyle = '#000000';\r\n        }\r\n        ctx.strokeStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(this.vec.x - this.width * 0.5, this.vec.y - this.height * 0.5, this.width, this.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.lineWidth = 1;\r\n        ctx.stroke();\r\n    }\r\n}","import { NVector3 } from '../../../lib';\r\nimport { GraphSystem } from '..';\r\nimport { Particle } from './Core/Particle';\r\nimport { Rect } from './Core/Rect';\r\n// import { Blank } from './Blank';\r\nexport class Graph {\r\n    graphSystem: GraphSystem;\r\n\r\n    particles: Particle[] = [];\r\n    listRect: Rect[] = [];\r\n    offset: number = 1;\r\n\r\n    m: NVector3;\r\n    t: number = 1;\r\n    num: number = 50;\r\n    capture: Particle | undefined = undefined;\r\n    constructor(graphSystem: GraphSystem) {\r\n        this.graphSystem = graphSystem;\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.m = new NVector3(0, 0);\r\n        this.particles = [];\r\n        this.listRect = [];\r\n\r\n        // for (let i = 0; i < 20; ++i) {\r\n        //     this.particles.push(new Particle(this, -0.5 + Math.random(), -0.5 + Math.random()));\r\n        // }\r\n        // this.particles.push(new Particle(100, 200));\r\n\r\n        for (let i = 0; i < this.num; ++i) {\r\n            this.listRect.push(new Rect(this, new NVector3(-0.5 + Math.random(), -0.5 + Math.random()), 20 + 20 * Math.random(), 5 + Math.random() * 10));\r\n        }\r\n    }\r\n    UpdateNumber(v: number) {\r\n        this.num = v;\r\n        this.Init();\r\n        console.log(v, 'num');\r\n    }\r\n    UpdateOffset(v: number) {\r\n        this.offset = v;\r\n        console.log(v, 'off');\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            if (this.particles[i].IsMouseHover(x, y)) {\r\n                this.capture = this.particles[i];\r\n                this.capture.isCaptured = true;\r\n            }\r\n        }\r\n    }\r\n    MouseUp() {\r\n        if (this.capture) {\r\n            this.capture.isCaptured = false;\r\n        }\r\n        this.capture = undefined;\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        this.particles.push(new Particle(this, x, y));\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.capture) {\r\n            this.capture.pos.x = x;\r\n            this.capture.pos.y = y;\r\n        }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.UpdateCollisionRect();\r\n        this.UpdateCollision();\r\n\r\n        // for (let i = 0; i < this.particles.length; ++i) { this.particles[i].Update(this.m); }\r\n        // for (let i = 0; i < this.particles.length; ++i) { this.particles[i].Render(ctx); }\r\n\r\n        for (let i = 0; i < this.listRect.length; ++i) { this.listRect[i].Update(); }\r\n        for (let i = 0; i < this.listRect.length; ++i) { this.listRect[i].Render(ctx); }\r\n\r\n        if ((this.t & 5) === 0 && this.particles.length < 10) {\r\n            this.particles.push(new Particle(this, 0, 0));\r\n        }\r\n        // console.log(this.t);\r\n        // console.log(this.t & 2);\r\n        this.t += 1;\r\n    }\r\n    UpdateCollisionRect() {\r\n        for (let i = 0; i < this.listRect.length; ++i) {\r\n            let a = this.listRect[i];\r\n            a.listCollision = [];\r\n            let isHover = false;\r\n            for (let j = 0; j < this.listRect.length; ++j) {\r\n                let b = this.listRect[j];\r\n                if (a !== b) {\r\n                    if (Rect.AABBvsAABB(a, b, this.offset)) {\r\n                        a.listCollision.push(b);\r\n                        isHover = true;\r\n                    }\r\n                }\r\n            }\r\n            a.hover = isHover;\r\n        }\r\n    }\r\n    UpdateCollision() {\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            let a = this.particles[i];\r\n            a.listCollision = [];\r\n            for (let j = 0; j < this.particles.length; ++j) {\r\n                let b = this.particles[j];\r\n                if (a !== b) {\r\n                    if (a.pos.Distance(b.pos) < a.r + b.r) {\r\n                        a.listCollision.push(b);\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n}","import { GraphSystem } from '..';\r\nexport class CanvasCore {\r\n    graphSystem: GraphSystem;\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n\r\n    divLocalMain: HTMLElement;\r\n    divCanvas: HTMLElement;\r\n    divUI: HTMLElement;\r\n\r\n    ctx: CanvasRenderingContext2D;\r\n    timer: NodeJS.Timer | number;\r\n    click: boolean = false;\r\n    pressed: boolean = false;\r\n    prevent: boolean = false;\r\n    delay: number = 500;\r\n    down: boolean = false;\r\n    t: number = 0.0;\r\n    width: number;\r\n    height: number;\r\n    constructor(graphSystem: GraphSystem, width: number = 400, height: number = 250) {\r\n        this.graphSystem = graphSystem;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const host = document.getElementById(graphSystem.id);\r\n        if (!host) { return; } this.host = host;\r\n\r\n        this.InitCanvas();\r\n    }\r\n    InitCanvas() {\r\n        const divLocalMain = document.createElement('div');\r\n        if (!divLocalMain) { return; } this.divLocalMain = divLocalMain;\r\n        this.divLocalMain.style.display = 'flex';\r\n        // this.divLocalMain.style.width = '100%';\r\n        this.divLocalMain.style.width = this.width + 'px'; // this.host.clientWidth;\r\n        this.divLocalMain.style.height = this.height + 'px'; // this.host.clientHeight;\r\n        this.divLocalMain.style.margin = '10px';\r\n        this.divLocalMain.style.padding = '10px';\r\n        this.host.append(divLocalMain);\r\n\r\n        const divCanvas = document.createElement('div');\r\n        if (!divCanvas) { return; } this.divCanvas = divCanvas;\r\n        // this.divCanvas.style.width = '50%';\r\n        this.divLocalMain.append(divCanvas);\r\n\r\n        const canvas = document.createElement('canvas');\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            this.divCanvas.append(this.canvas);\r\n\r\n            this.canvas.width = this.width; // this.host.clientWidth;\r\n            this.canvas.height = this.height; // this.host.clientHeight;\r\n            this.canvas.style.backgroundColor = '#aaaaaa';\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.InitUI();\r\n                this.Init();\r\n            }\r\n        }\r\n    }\r\n    InitUI() {\r\n        const divUI = document.createElement('div');\r\n        if (!divUI) { return; } this.divUI = divUI;\r\n        this.divLocalMain.append(divUI);\r\n        this.divUI.style.marginLeft = '10px';\r\n        this.divUI.style.width = '100%';\r\n        // this.divUI.style.display = 'grid';\r\n\r\n        const btn = document.createElement('button');\r\n        btn.textContent = 'reset';\r\n        btn.onclick = () => { this.graphSystem.InitGraph(); };\r\n        this.divUI.append(btn);\r\n\r\n        let input = document.createElement('input');\r\n        input.oninput = () => {\r\n            const val = +input.value as number;\r\n            this.graphSystem.graph.UpdateNumber(val);\r\n        };\r\n        input.type = 'range';\r\n        input.min = '10';\r\n        input.max = '200.0';\r\n        input.value = '50';\r\n        this.divUI.append(input);\r\n\r\n        let inputOff = document.createElement('input');\r\n        inputOff.oninput = () => {\r\n            const val = +inputOff.value as number;\r\n            this.graphSystem.graph.UpdateOffset(val);\r\n        };\r\n        inputOff.type = 'range';\r\n        inputOff.min = '1';\r\n        inputOff.max = '10.0';\r\n        inputOff.value = '4';\r\n        this.divUI.append(inputOff);\r\n\r\n        const p = document.createElement('p');\r\n        if (!p) { return; } this.divUI.append(p);\r\n        p.style.width = 'max-content';\r\n        p.innerHTML = '1. clikc to reset! <br> ';\r\n        p.innerHTML += '2. first slider for num of Nodes! <br> ';\r\n        p.innerHTML += '3. second slider for offset! <br> ';\r\n    }\r\n    Init() {\r\n        this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        // this.ctx.scale(2, 2);\r\n        this.ctx.scale(1, 1);\r\n        this.EventBind();\r\n        this.Loop();\r\n    }\r\n    EventBind() {\r\n        this.canvas.onclick = (e: MouseEvent) => {\r\n            this.prevent = false;\r\n            this.timer = setTimeout(\r\n                () => {\r\n                    if (!this.prevent) {\r\n                        if (!this.click) { return; }\r\n                        this.MouseClick(e);\r\n                    }\r\n                    this.prevent = false;\r\n                },\r\n                this.delay);\r\n        };\r\n        this.canvas.ondblclick = (e: MouseEvent) => {\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.MouseDoubleClick(e);\r\n        };\r\n        this.canvas.addEventListener('wheel', (e: WheelEvent) => this.MouseWheel(e, e.deltaY));\r\n\r\n        // this.canvas.onclick = (e: MouseEvent) => {\r\n        //     this.timer = setTimeout(() => {\r\n        //         if (!this.prevent) { this.MouseClick(e); }\r\n        //         this.prevent = false;\r\n        //     }, this.delay);\r\n        // };\r\n        // this.canvas.ondblclick = (e: MouseEvent) => {\r\n        //     clearTimeout(this.timer as number);\r\n        //     this.prevent = true;\r\n        //     this.MouseDoubleClick(e);\r\n        // };\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.click = true;\r\n            this.pressed = true;\r\n            this.MouseDown(e);\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.pressed = false;\r\n            this.MouseUp(e);\r\n        };\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            if (this.pressed) { this.click = false; this.MouseDrag(e); }\r\n            this.MouseMove(e);\r\n        };\r\n        window.onresize = (e: UIEvent) => this.Resize(e);\r\n\r\n    }\r\n    Resize(e: UIEvent) {\r\n        // console.log(e);\r\n        // this.canvas.width = this.divCanvas.clientWidth;\r\n        // this.canvas.height = this.divCanvas.clientHeight;\r\n    }\r\n    Loop() {\r\n        requestAnimationFrame(() => { this.Loop(); });\r\n\r\n        this.ctx.clearRect(-this.ctx.canvas.width * 0.5, -this.ctx.canvas.height * 0.5, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.fillStyle = '#dddddd';\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(-this.ctx.canvas.width * 0.5, -this.ctx.canvas.height * 0.5, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n        this.Render(this.ctx);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(ctx);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        //\r\n    }\r\n    MouseWheel(e: WheelEvent, deltaY: number) {\r\n        // console.log(e);\r\n    }\r\n}","import { Graph } from './Core/Graph';\r\nimport { NVector3 } from '../../lib';\r\nimport { CanvasCore } from './CanvasCore';\r\nexport class GraphSystem {\r\n    CanvasCore: CanvasCore;\r\n    graph: Graph;\r\n    t = 0.9;\r\n    id: string;\r\n    m: NVector3 = new NVector3(0, 0, 0);\r\n    constructor(id: string) {\r\n        this.id = id;\r\n        this.CanvasCore = new CanvasCore(this);\r\n\r\n        this.Init();\r\n        this.InitGraph();\r\n    }\r\n    Init() {\r\n        this.CanvasCore.Render = (ctx: CanvasRenderingContext2D) => this.Render(ctx);\r\n        this.CanvasCore.MouseDown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.CanvasCore.MouseClick = (e: MouseEvent) => this.MouseClick(e);\r\n        this.CanvasCore.MouseDoubleClick = (e: MouseEvent) => this.MouseDoubleClick(e);\r\n        this.CanvasCore.MouseUp = (e: MouseEvent) => this.MouseUp(e);\r\n        this.CanvasCore.MouseMove = (e: MouseEvent) => this.MouseMove(e);\r\n        this.CanvasCore.MouseDrag = (e: MouseEvent) => this.MouseDrag(e);\r\n    }\r\n    InitGraph() {\r\n        this.graph = new Graph(this);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.graph.Render(ctx);\r\n\r\n        ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        ctx.beginPath();\r\n        ctx.arc(this.m.x, this.m.y, 2.5, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        for (let i = -10; i < 10; ++i) {\r\n            for (let j = -10; j < 10; ++j) {\r\n                ctx.beginPath();\r\n                ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n                ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n        }\r\n    }\r\n    // .......................................................................................\r\n    mouseRemap(e: MouseEvent) {\r\n        // this.m.x = ((e.x - this.CanvasCore.canvas.offsetLeft) - this.CanvasCore.canvas.width * 0.5) * 0.1;\r\n        // this.m.y = ((e.y - this.CanvasCore.canvas.offsetTop) - this.CanvasCore.canvas.height * 0.5) * 0.1;\r\n        this.m.x = e.offsetX - this.CanvasCore.canvas.width * 0.5// - this.CanvasCore.canvas.offsetLeft // ((e.x - this.CanvasCore.canvas.offsetLeft) - this.CanvasCore.canvas.width * 0.5) * 1;\r\n        this.m.y = e.offsetY - this.CanvasCore.canvas.height * 0.5// - this.CanvasCore.canvas.offsetTop // ((e.y - this.CanvasCore.canvas.offsetTop) - this.CanvasCore.canvas.height * 0.5) * 1;\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n        this.graph.MouseDown(this.m.x, this.m.y);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n        this.graph.MouseUp();\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n        this.graph.MouseMove(this.m.x, this.m.y);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n        this.graph.MouseDrag(this.m.x, this.m.y);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n        this.graph.MouseLeftClick(this.m.x, this.m.y);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n    }\r\n}","import { NVector3 } from '../../../../lib';\r\nimport { Graph } from '../Graph';\r\nexport class Particle {\r\n    graph: Graph;\r\n    pos: NVector3;\r\n    u: NVector3;\r\n    f: NVector3;\r\n    m: number = 5;\r\n    r: number = 17;\r\n    colorFill: string = '#0099ff';\r\n\r\n    MAX_VELOCITY = 5.5;\r\n    velocity: NVector3;\r\n    listCollision: Particle[] = [];\r\n\r\n    isCaptured: boolean = false;\r\n\r\n    constructor(graph: Graph, x: number, y: number) {\r\n        this.graph = graph;\r\n        this.pos = new NVector3(x, y);\r\n        // this.r += 5 * Math.random();\r\n    }\r\n    public Update(target: NVector3) {\r\n        if (this.isCaptured) { return; }\r\n\r\n        this.UpdatePos(target);\r\n    }\r\n    public UpdatePos(target: NVector3) {\r\n        const vec = NVector3.Sub(this.pos, target);\r\n        const nor = NVector3.Normalize(vec);\r\n\r\n        const falloff = NVector3.CalculateFalloff(this.pos, target, 1, 0.01);\r\n        this.velocity = NVector3.Scale(nor, falloff);\r\n        this.UpdateCollision();\r\n\r\n        this.velocity.y += 1.1;\r\n        this.pos = NVector3.Add(this.pos, this.velocity);\r\n        this.UpdatePosInScreen(this.graph.graphSystem.CanvasCore.ctx);\r\n    }\r\n    public UpdateCollision() {\r\n        for (let i = 0; i < this.listCollision.length; ++i) {\r\n            const vec = NVector3.Sub(this.pos, this.listCollision[i].pos);\r\n            // const dis = NVector3.Distance(this.pos, this.listCollision[i].pos);\r\n            const nor = NVector3.Normalize(vec);\r\n            const falloff = NVector3.CalculateFalloff(this.pos, this.listCollision[i].pos, 1, 0.01);\r\n            this.velocity = NVector3.Scale(nor, falloff);\r\n            this.pos = NVector3.Add(this.pos, this.velocity);\r\n        }\r\n    }\r\n    public IsMouseHover(x: number, y: number) {\r\n        if (NVector3.Distance(this.pos, new NVector3(x, y)) < this.r) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = '#000000';\r\n        if (this.isCaptured) {\r\n            ctx.fillStyle = '#ff0000';\r\n        } else {\r\n            ctx.fillStyle = this.colorFill;\r\n\r\n        }\r\n        ctx.beginPath();\r\n        ctx.arc(this.pos.x, this.pos.y, this.r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        // console.log(this.listCollision.length);\r\n\r\n    }\r\n    private UpdatePosInScreen(ctx: CanvasRenderingContext2D) {\r\n        const offset = 10;\r\n        if (this.pos.y > ctx.canvas.height * 0.5 - offset) {\r\n            this.pos.y = ctx.canvas.height * 0.5 - offset;\r\n        }\r\n        if (this.pos.x < -ctx.canvas.width * 0.5 + offset) {\r\n            this.pos.x = -ctx.canvas.width * 0.5 + offset;\r\n        }\r\n        if (this.pos.x > ctx.canvas.width * 0.5 - offset) {\r\n            this.pos.x = ctx.canvas.width * 0.5 - offset;\r\n        }\r\n    }\r\n}","import { NVector3 } from '../../../../lib';\r\nimport { Graph } from '../Graph';\r\nexport class Rect {\r\n    graph: Graph;\r\n    public vec: NVector3;\r\n    public width: number;\r\n    public height: number;\r\n    listCollision: Rect[] = [];\r\n    fixed: boolean = false;\r\n    public velocity: NVector3;\r\n\r\n    public hover: boolean = false;\r\n    static AABBvsAABB(a: Rect, b: Rect, offset: number = 1.5): boolean {\r\n        // Exit with no intersection if found separated along an axis\r\n        if (a.vec.x + offset + a.width * 0.5 < b.vec.x - offset - b.width * 0.5 || a.vec.x - offset - a.width * 0.5 > b.vec.x + offset + b.width * 0.5) return false;\r\n        if (a.vec.y + offset + a.height * 0.5 < b.vec.y - offset - b.height * 0.5 || a.vec.y - offset - a.height * 0.5 > b.vec.y + offset + b.height * 0.5) return false;\r\n\r\n        // if (a.max.x < b.min.x || a.min.x > b.max.x) return false;\r\n        // if (a.max.y < b.min.y || a.min.y > b.max.y) return false;\r\n\r\n        // No separating axis found, therefor there is at least one overlapping axis\r\n        return true;\r\n    }\r\n    constructor(graph: Graph, vec: NVector3, width: number, height: number) {\r\n        this.graph = graph;\r\n        this.vec = new NVector3(vec.x, vec.y);\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n    }\r\n    public Overlaps(other: Rect): boolean {\r\n        return Rect.AABBvsAABB(this, other);\r\n    }\r\n    public Update() {\r\n        if (this.fixed) { return; }\r\n        this.UpdatePos();\r\n        this.UpdatePosInScreen(this.graph.graphSystem.CanvasCore.ctx);\r\n    }\r\n    public UpdatePos() {\r\n        for (let i = 0; i < this.listCollision.length; ++i) {\r\n            const vec = NVector3.Sub(this.vec, this.listCollision[i].vec);\r\n            // const dis = NVector3.Distance(this.vec, this.listCollision[i].vec);\r\n            const nor = NVector3.Normalize(vec);\r\n            // const falloff = NVector3.CalculateFalloff(this.vec, this.listCollision[i].vec, dis, 0.1);\r\n            this.velocity = NVector3.Scale(nor, Math.random() * this.graph.optiLevel);\r\n            // console.log(this.velocity.x);\r\n            this.vec = NVector3.Add(this.vec, this.velocity);\r\n        }\r\n\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        if (this.hover) {\r\n            ctx.fillStyle = '#0ff000';\r\n        } else {\r\n            ctx.fillStyle = '#ff0000';\r\n        }\r\n        if (this.fixed) {\r\n            ctx.fillStyle = '#000000';\r\n        }\r\n        ctx.strokeStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(this.vec.x - this.width * 0.5, this.vec.y - this.height * 0.5, this.width, this.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.lineWidth = 1;\r\n        ctx.stroke();\r\n    }\r\n    private UpdatePosInScreen(ctx: CanvasRenderingContext2D) {\r\n        const offset = 10;\r\n        if (this.vec.y > ctx.canvas.height * 0.5 - offset) {\r\n            this.vec.y = ctx.canvas.height * 0.5 - offset;\r\n        }\r\n        if (this.vec.x - this.width * 0.5 - offset < -ctx.canvas.width * 0.5 + offset) {\r\n            this.vec.x = (-ctx.canvas.width * 0.5 + offset) + this.width * 0.5 + offset;\r\n        }\r\n        if (this.vec.x + this.width * 0.5 + offset > ctx.canvas.width * 0.5 - offset) {\r\n            this.vec.x = (ctx.canvas.width * 0.5 - offset) - this.width * 0.5 - offset;\r\n        }\r\n    }\r\n}","import { NVector3 } from '../../../lib';\r\nimport { GraphSystem } from '..';\r\nimport { Particle } from './Core/Particle';\r\nimport { Rect } from './Core/Rect';\r\n// import { Blank } from './Blank';\r\nexport class Graph {\r\n    graphSystem: GraphSystem;\r\n\r\n    particles: Particle[] = [];\r\n    listRect: Rect[] = [];\r\n    offset: number = 1;\r\n    optiLevel: number = 3;\r\n\r\n    m: NVector3;\r\n    t: number = 1;\r\n    num: number = 50;\r\n    capture: Particle | undefined = undefined;\r\n    constructor(graphSystem: GraphSystem) {\r\n        this.graphSystem = graphSystem;\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.m = new NVector3(0, 0);\r\n        this.particles = [];\r\n        this.listRect = [];\r\n\r\n        // for (let i = 0; i < 20; ++i) {\r\n        //     this.particles.push(new Particle(this, -0.5 + Math.random(), -0.5 + Math.random()));\r\n        // }\r\n        // this.particles.push(new Particle(100, 200));\r\n\r\n        for (let i = 0; i < this.num; ++i) {\r\n            this.listRect.push(new Rect(this, new NVector3(-0.5 + Math.random(), -0.5 + Math.random()), 20 + 20 * Math.random(), 5 + Math.random() * 10));\r\n        }\r\n        let rt = new Rect(this, new NVector3(-50, -50), 50, 50);\r\n        rt.fixed = true;\r\n        this.listRect.push(rt);\r\n\r\n        rt = new Rect(this, new NVector3(50, 20), 40, 20);\r\n        rt.fixed = true;\r\n        this.listRect.push(rt);\r\n\r\n        // this.listRect.push(new Rect(new NVector3(0, 0), 100, 50));\r\n        // this.listRect.push(new Rect(new NVector3(50, -50), 100, 100));\r\n        // this.listRect.push(new Rect(new NVector3(0, 0), 90, 40));\r\n        // this.listRect.push(new Rect(new NVector3(50, -50), 90, 120));\r\n    }\r\n    UpdateNumber(v: number) {\r\n        this.num = v;\r\n        this.Init();\r\n        console.log(v, 'num');\r\n    }\r\n    UpdateOffset(v: number) {\r\n        this.offset = v;\r\n        console.log(v, 'off');\r\n    }\r\n    UpdateOptiLevel(v: number) {\r\n        this.optiLevel = v;\r\n        this.Init();\r\n        console.log(v, 'opti');\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            if (this.particles[i].IsMouseHover(x, y)) {\r\n                this.capture = this.particles[i];\r\n                this.capture.isCaptured = true;\r\n            }\r\n        }\r\n    }\r\n    MouseUp() {\r\n        if (this.capture) {\r\n            this.capture.isCaptured = false;\r\n        }\r\n        this.capture = undefined;\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        this.particles.push(new Particle(this, x, y));\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.capture) {\r\n            this.capture.pos.x = x;\r\n            this.capture.pos.y = y;\r\n        }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.UpdateCollisionRect();\r\n        this.UpdateCollision();\r\n\r\n        // for (let i = 0; i < this.particles.length; ++i) { this.particles[i].Update(this.m); }\r\n        // for (let i = 0; i < this.particles.length; ++i) { this.particles[i].Render(ctx); }\r\n\r\n        for (let i = 0; i < this.listRect.length; ++i) { this.listRect[i].Update(); }\r\n        for (let i = 0; i < this.listRect.length; ++i) { this.listRect[i].Render(ctx); }\r\n\r\n        if ((this.t & 5) === 0 && this.particles.length < 10) {\r\n            this.particles.push(new Particle(this, 0, 0));\r\n        }\r\n        // console.log(this.t);\r\n        // console.log(this.t & 2);\r\n        this.t += 1;\r\n    }\r\n    UpdateCollisionRect() {\r\n        for (let i = 0; i < this.listRect.length; ++i) {\r\n            let a = this.listRect[i];\r\n            a.listCollision = [];\r\n            let isHover = false;\r\n            for (let j = 0; j < this.listRect.length; ++j) {\r\n                let b = this.listRect[j];\r\n                if (a !== b) {\r\n                    if (Rect.AABBvsAABB(a, b, this.offset)) {\r\n                        a.listCollision.push(b);\r\n                        isHover = true;\r\n                    }\r\n                }\r\n            }\r\n            a.hover = isHover;\r\n        }\r\n    }\r\n    UpdateCollision() {\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            let a = this.particles[i];\r\n            a.listCollision = [];\r\n            for (let j = 0; j < this.particles.length; ++j) {\r\n                let b = this.particles[j];\r\n                if (a !== b) {\r\n                    if (a.pos.Distance(b.pos) < a.r + b.r) {\r\n                        a.listCollision.push(b);\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n}","import { GraphSystem } from '..';\r\nexport class CanvasCore {\r\n    graphSystem: GraphSystem;\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n\r\n    divLocalMain: HTMLElement;\r\n    divCanvas: HTMLElement;\r\n    divUI: HTMLElement;\r\n\r\n    ctx: CanvasRenderingContext2D;\r\n    timer: NodeJS.Timer | number;\r\n    click: boolean = false;\r\n    pressed: boolean = false;\r\n    prevent: boolean = false;\r\n    delay: number = 500;\r\n    down: boolean = false;\r\n    t: number = 0.0;\r\n    width: number;\r\n    height: number;\r\n    constructor(graphSystem: GraphSystem, width: number = 400, height: number = 250) {\r\n        this.graphSystem = graphSystem;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const host = document.getElementById(graphSystem.id);\r\n        if (!host) { return; } this.host = host;\r\n\r\n        this.InitCanvas();\r\n    }\r\n    InitCanvas() {\r\n        const divLocalMain = document.createElement('div');\r\n        if (!divLocalMain) { return; } this.divLocalMain = divLocalMain;\r\n        this.divLocalMain.style.display = 'flex';\r\n        // this.divLocalMain.style.width = '100%';\r\n        this.divLocalMain.style.width = this.width + 'px'; // this.host.clientWidth;\r\n        this.divLocalMain.style.height = this.height + 'px'; // this.host.clientHeight;\r\n        this.divLocalMain.style.margin = '10px';\r\n        this.divLocalMain.style.padding = '10px';\r\n        this.host.append(divLocalMain);\r\n\r\n        const divCanvas = document.createElement('div');\r\n        if (!divCanvas) { return; } this.divCanvas = divCanvas;\r\n        // this.divCanvas.style.width = '50%';\r\n        this.divLocalMain.append(divCanvas);\r\n\r\n        const canvas = document.createElement('canvas');\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            this.divCanvas.append(this.canvas);\r\n\r\n            this.canvas.width = this.width; // this.host.clientWidth;\r\n            this.canvas.height = this.height; // this.host.clientHeight;\r\n            this.canvas.style.backgroundColor = '#aaaaaa';\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.InitUI();\r\n                this.Init();\r\n            }\r\n        }\r\n    }\r\n    InitUI() {\r\n        const divUI = document.createElement('div');\r\n        if (!divUI) { return; } this.divUI = divUI;\r\n        this.divLocalMain.append(divUI);\r\n        this.divUI.style.marginLeft = '10px';\r\n        this.divUI.style.width = '100%';\r\n        // this.divUI.style.display = 'grid';\r\n\r\n        const btn = document.createElement('button');\r\n        btn.textContent = 'reset';\r\n        btn.onclick = () => { this.graphSystem.InitGraph(); };\r\n        this.divUI.append(btn);\r\n\r\n        let input = document.createElement('input');\r\n        input.oninput = () => {\r\n            const val = +input.value as number;\r\n            this.graphSystem.graph.UpdateNumber(val);\r\n        };\r\n        input.type = 'range';\r\n        input.min = '10';\r\n        input.max = '200.0';\r\n        input.value = '50';\r\n        this.divUI.append(input);\r\n\r\n        let inputOff = document.createElement('input');\r\n        inputOff.oninput = () => {\r\n            const val = +inputOff.value as number;\r\n            this.graphSystem.graph.UpdateOffset(val);\r\n        };\r\n        inputOff.type = 'range';\r\n        inputOff.min = '1';\r\n        inputOff.max = '10.0';\r\n        inputOff.value = '4';\r\n        this.divUI.append(inputOff);\r\n\r\n        let inputOpt = document.createElement('input');\r\n        inputOpt.oninput = () => {\r\n            const val = +inputOpt.value as number;\r\n            this.graphSystem.graph.UpdateOptiLevel(val);\r\n        };\r\n        inputOpt.type = 'range';\r\n        inputOpt.min = '1';\r\n        inputOpt.max = '8';\r\n        inputOpt.value = '4';\r\n        this.divUI.append(inputOpt);\r\n\r\n        const p = document.createElement('p');\r\n        if (!p) { return; } this.divUI.append(p);\r\n        p.style.width = 'max-content';\r\n        p.innerHTML = '1. clikc to reset! <br> ';\r\n        p.innerHTML += '2. first slider for num of Nodes! <br> ';\r\n        p.innerHTML += '3. second slider for offset! <br> ';\r\n        p.innerHTML += '4. third slider for Opti level! <br> ';\r\n    }\r\n    Init() {\r\n        this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        // this.ctx.scale(2, 2);\r\n        this.ctx.scale(1, 1);\r\n        this.EventBind();\r\n        this.Loop();\r\n    }\r\n    EventBind() {\r\n        this.canvas.onclick = (e: MouseEvent) => {\r\n            this.prevent = false;\r\n            this.timer = setTimeout(\r\n                () => {\r\n                    if (!this.prevent) {\r\n                        if (!this.click) { return; }\r\n                        this.MouseClick(e);\r\n                    }\r\n                    this.prevent = false;\r\n                },\r\n                this.delay);\r\n        };\r\n        this.canvas.ondblclick = (e: MouseEvent) => {\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.MouseDoubleClick(e);\r\n        };\r\n        this.canvas.addEventListener('wheel', (e: WheelEvent) => this.MouseWheel(e, e.deltaY));\r\n\r\n        // this.canvas.onclick = (e: MouseEvent) => {\r\n        //     this.timer = setTimeout(() => {\r\n        //         if (!this.prevent) { this.MouseClick(e); }\r\n        //         this.prevent = false;\r\n        //     }, this.delay);\r\n        // };\r\n        // this.canvas.ondblclick = (e: MouseEvent) => {\r\n        //     clearTimeout(this.timer as number);\r\n        //     this.prevent = true;\r\n        //     this.MouseDoubleClick(e);\r\n        // };\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.click = true;\r\n            this.pressed = true;\r\n            this.MouseDown(e);\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.pressed = false;\r\n            this.MouseUp(e);\r\n        };\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            if (this.pressed) { this.click = false; this.MouseDrag(e); }\r\n            this.MouseMove(e);\r\n        };\r\n        window.onresize = (e: UIEvent) => this.Resize(e);\r\n\r\n    }\r\n    Resize(e: UIEvent) {\r\n        // console.log(e);\r\n        // this.canvas.width = this.divCanvas.clientWidth;\r\n        // this.canvas.height = this.divCanvas.clientHeight;\r\n    }\r\n    Loop() {\r\n        requestAnimationFrame(() => { this.Loop(); });\r\n\r\n        this.ctx.clearRect(-this.ctx.canvas.width * 0.5, -this.ctx.canvas.height * 0.5, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.fillStyle = '#dddddd';\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(-this.ctx.canvas.width * 0.5, -this.ctx.canvas.height * 0.5, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n        this.Render(this.ctx);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(ctx);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        //\r\n    }\r\n    MouseWheel(e: WheelEvent, deltaY: number) {\r\n        // console.log(e);\r\n    }\r\n}","import { Graph } from './Core/Graph';\r\nimport { NVector3 } from '../../lib';\r\nimport { CanvasCore } from './CanvasCore';\r\nexport class GraphSystem {\r\n    CanvasCore: CanvasCore;\r\n    graph: Graph;\r\n    t = 0.9;\r\n    id: string;\r\n    m: NVector3 = new NVector3(0, 0, 0);\r\n    constructor(id: string) {\r\n        this.id = id;\r\n        this.CanvasCore = new CanvasCore(this);\r\n\r\n        this.Init();\r\n        this.InitGraph();\r\n    }\r\n    Init() {\r\n        this.CanvasCore.Render = (ctx: CanvasRenderingContext2D) => this.Render(ctx);\r\n        this.CanvasCore.MouseDown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.CanvasCore.MouseClick = (e: MouseEvent) => this.MouseClick(e);\r\n        this.CanvasCore.MouseDoubleClick = (e: MouseEvent) => this.MouseDoubleClick(e);\r\n        this.CanvasCore.MouseUp = (e: MouseEvent) => this.MouseUp(e);\r\n        this.CanvasCore.MouseMove = (e: MouseEvent) => this.MouseMove(e);\r\n        this.CanvasCore.MouseDrag = (e: MouseEvent) => this.MouseDrag(e);\r\n    }\r\n    InitGraph() {\r\n        this.graph = new Graph(this);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.graph.Render(ctx);\r\n\r\n        ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        ctx.beginPath();\r\n        ctx.arc(this.m.x, this.m.y, 2.5, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        for (let i = -10; i < 10; ++i) {\r\n            for (let j = -10; j < 10; ++j) {\r\n                ctx.beginPath();\r\n                ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n                ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n        }\r\n    }\r\n    // .......................................................................................\r\n    mouseRemap(e: MouseEvent) {\r\n        // this.m.x = ((e.x - this.CanvasCore.canvas.offsetLeft) - this.CanvasCore.canvas.width * 0.5) * 0.1;\r\n        // this.m.y = ((e.y - this.CanvasCore.canvas.offsetTop) - this.CanvasCore.canvas.height * 0.5) * 0.1;\r\n        this.m.x = e.offsetX - this.CanvasCore.canvas.width * 0.5// - this.CanvasCore.canvas.offsetLeft // ((e.x - this.CanvasCore.canvas.offsetLeft) - this.CanvasCore.canvas.width * 0.5) * 1;\r\n        this.m.y = e.offsetY - this.CanvasCore.canvas.height * 0.5// - this.CanvasCore.canvas.offsetTop // ((e.y - this.CanvasCore.canvas.offsetTop) - this.CanvasCore.canvas.height * 0.5) * 1;\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n        this.graph.MouseDown(this.m.x, this.m.y);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        this.graph.MouseUp();\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n        this.graph.MouseMove(this.m.x, this.m.y);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n        this.graph.MouseDrag(this.m.x, this.m.y);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        this.mouseRemap(e);\r\n        this.graph.MouseLeftClick(this.m.x, this.m.y);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n        console.log('d click');\r\n    }\r\n}","import { NVector3 } from '../../../../lib';\r\nimport { Graph } from '../Graph';\r\nexport class Particle {\r\n    graph: Graph;\r\n    pos: NVector3;\r\n    u: NVector3;\r\n    f: NVector3;\r\n    m: number = 5;\r\n    r: number = 17;\r\n    colorFill: string = '#0099ff';\r\n\r\n    MAX_VELOCITY = 5.5;\r\n    velocity: NVector3;\r\n    listCollision: Particle[] = [];\r\n\r\n    isCaptured: boolean = false;\r\n\r\n    constructor(graph: Graph, x: number, y: number) {\r\n        this.graph = graph;\r\n        this.pos = new NVector3(x, y);\r\n        // this.r += 5 * Math.random();\r\n    }\r\n    public Update(target: NVector3) {\r\n        if (this.isCaptured) { return; }\r\n\r\n        this.UpdatePos(target);\r\n    }\r\n    public UpdatePos(target: NVector3) {\r\n        const vec = NVector3.Sub(this.pos, target);\r\n        const nor = NVector3.Normalize(vec);\r\n\r\n        const falloff = NVector3.CalculateFalloff(this.pos, target, 1, 0.01);\r\n        this.velocity = NVector3.Scale(nor, falloff);\r\n        this.UpdateCollision();\r\n\r\n        this.velocity.y += 1.1;\r\n        this.pos = NVector3.Add(this.pos, this.velocity);\r\n        this.UpdatePosInScreen(this.graph.graphSystem.CanvasCore.ctx);\r\n    }\r\n    public UpdateCollision() {\r\n        for (let i = 0; i < this.listCollision.length; ++i) {\r\n            const vec = NVector3.Sub(this.pos, this.listCollision[i].pos);\r\n            // const dis = NVector3.Distance(this.pos, this.listCollision[i].pos);\r\n            const nor = NVector3.Normalize(vec);\r\n            const falloff = NVector3.CalculateFalloff(this.pos, this.listCollision[i].pos, 1, 0.01);\r\n            this.velocity = NVector3.Scale(nor, falloff);\r\n            this.pos = NVector3.Add(this.pos, this.velocity);\r\n        }\r\n    }\r\n    public IsMouseHover(x: number, y: number) {\r\n        if (NVector3.Distance(this.pos, new NVector3(x, y)) < this.r) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = '#000000';\r\n        if (this.isCaptured) {\r\n            ctx.fillStyle = '#ff0000';\r\n        } else {\r\n            ctx.fillStyle = this.colorFill;\r\n\r\n        }\r\n        ctx.beginPath();\r\n        ctx.arc(this.pos.x, this.pos.y, this.r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        // console.log(this.listCollision.length);\r\n\r\n    }\r\n    private UpdatePosInScreen(ctx: CanvasRenderingContext2D) {\r\n        const offset = 10;\r\n        if (this.pos.y > ctx.canvas.height * 0.5 - offset) {\r\n            this.pos.y = ctx.canvas.height * 0.5 - offset;\r\n        }\r\n        if (this.pos.x < -ctx.canvas.width * 0.5 + offset) {\r\n            this.pos.x = -ctx.canvas.width * 0.5 + offset;\r\n        }\r\n        if (this.pos.x > ctx.canvas.width * 0.5 - offset) {\r\n            this.pos.x = ctx.canvas.width * 0.5 - offset;\r\n        }\r\n    }\r\n}","import { NVector3 } from '../../../../lib';\r\nimport { Graph } from '../Graph';\r\nexport class Rect {\r\n    graph: Graph;\r\n    public vec: NVector3;\r\n    public width: number;\r\n    public height: number;\r\n    listCollision: Rect[] = [];\r\n    RectCloset: Rect | undefined;\r\n    fixed: boolean = false;\r\n    public velocity: NVector3;\r\n\r\n    public hover: boolean = false;\r\n    static AABBvsAABB(a: Rect, b: Rect, offset: number = 1.5): boolean {\r\n        // Exit with no intersection if found separated along an axis\r\n        if (a.vec.x + offset + a.width * 0.5 < b.vec.x - offset - b.width * 0.5 || a.vec.x - offset - a.width * 0.5 > b.vec.x + offset + b.width * 0.5) return false;\r\n        if (a.vec.y + offset + a.height * 0.5 < b.vec.y - offset - b.height * 0.5 || a.vec.y - offset - a.height * 0.5 > b.vec.y + offset + b.height * 0.5) return false;\r\n\r\n        // if (a.max.x < b.min.x || a.min.x > b.max.x) return false;\r\n        // if (a.max.y < b.min.y || a.min.y > b.max.y) return false;\r\n\r\n        // No separating axis found, therefor there is at least one overlapping axis\r\n        return true;\r\n    }\r\n    constructor(graph: Graph, vec: NVector3, width: number, height: number) {\r\n        this.graph = graph;\r\n        this.vec = new NVector3(vec.x, vec.y);\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n    }\r\n    public Overlaps(other: Rect): boolean {\r\n        return Rect.AABBvsAABB(this, other);\r\n    }\r\n    public Update() {\r\n        if (this.fixed) { return; }\r\n        this.UpdatePosExpel();\r\n        this.UpdatePosContract();\r\n        this.UpdatePosInScreen(this.graph.graphSystem.CanvasCore.ctx);\r\n    }\r\n    public UpdatePosExpel() {\r\n        for (let i = 0; i < this.listCollision.length; ++i) {\r\n            const vec = NVector3.Sub(this.vec, this.listCollision[i].vec);\r\n            // const vec = NVector3.Sub(this.listCollision[i].vec, this.vec);\r\n            // const dis = NVector3.Distance(this.vec, this.listCollision[i].vec);\r\n            const nor = NVector3.Normalize(vec);\r\n            // const falloff = NVector3.CalculateFalloff(this.vec, this.listCollision[i].vec, dis, 0.1);\r\n            this.velocity = NVector3.Scale(nor, Math.random() * this.graph.optiLevel);\r\n            // console.log(this.velocity.x);\r\n            this.vec = NVector3.Add(this.vec, this.velocity);\r\n        }\r\n    }\r\n    public UpdatePosContract() {\r\n        if (this.RectCloset) {\r\n            // const vec = NVector3.Sub(this.vec, this.listCollision[i].vec);\r\n            const vec = NVector3.Sub(this.RectCloset.vec, this.vec);\r\n            // const dis = NVector3.Distance(this.vec, this.RectCloset.vec);\r\n            const nor = NVector3.Normalize(vec);\r\n            // const falloff = NVector3.CalculateFalloff(this.vec, this.RectCloset.vec, dis * 0.1, 0.02);\r\n            // const scale = Math.random() / (dis * 0.5);\r\n            this.velocity = NVector3.Scale(nor, Math.random() * 0.2);\r\n            // console.log(scale);\r\n            this.vec = NVector3.Add(this.vec, this.velocity);\r\n        }\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        if (this.hover) {\r\n            ctx.fillStyle = '#0ff000';\r\n        } else {\r\n            ctx.fillStyle = '#ff0000';\r\n        }\r\n        if (this.listCollision.length === 0) {\r\n            ctx.fillStyle = '#ff0000';\r\n        }\r\n\r\n        if (this.fixed) { ctx.fillStyle = '#000000'; }\r\n\r\n        ctx.strokeStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(this.vec.x - this.width * 0.5, this.vec.y - this.height * 0.5, this.width, this.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.lineWidth = 1;\r\n        ctx.stroke();\r\n    }\r\n    private UpdatePosInScreen(ctx: CanvasRenderingContext2D) {\r\n        const offset = 10;\r\n        if (this.vec.y > ctx.canvas.height * 0.5 - offset) {\r\n            this.vec.y = ctx.canvas.height * 0.5 - offset;\r\n        }\r\n        if (this.vec.x - this.width * 0.5 - offset < -ctx.canvas.width * 0.5 + offset) {\r\n            this.vec.x = (-ctx.canvas.width * 0.5 + offset) + this.width * 0.5 + offset;\r\n        }\r\n        if (this.vec.x + this.width * 0.5 + offset > ctx.canvas.width * 0.5 - offset) {\r\n            this.vec.x = (ctx.canvas.width * 0.5 - offset) - this.width * 0.5 - offset;\r\n        }\r\n    }\r\n}","import { NVector3 } from '../../../lib';\r\nimport { GraphSystem } from '..';\r\nimport { Particle } from './Core/Particle';\r\nimport { Rect } from './Core/Rect';\r\n// import { Blank } from './Blank';\r\nexport class Graph {\r\n    graphSystem: GraphSystem;\r\n\r\n    particles: Particle[] = [];\r\n    listRect: Rect[] = [];\r\n    offset: number = 1;\r\n    optiLevel: number = 3;\r\n\r\n    m: NVector3;\r\n    t: number = 1;\r\n    num: number = 50;\r\n    capture: Particle | undefined = undefined;\r\n    constructor(graphSystem: GraphSystem) {\r\n        this.graphSystem = graphSystem;\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.m = new NVector3(0, 0);\r\n        this.particles = [];\r\n        this.listRect = [];\r\n\r\n        // for (let i = 0; i < 20; ++i) {\r\n        //     this.particles.push(new Particle(this, -0.5 + Math.random(), -0.5 + Math.random()));\r\n        // }\r\n        // this.particles.push(new Particle(100, 200));\r\n\r\n        for (let i = 0; i < 2; ++i) {\r\n            this.listRect.push(new Rect(this, new NVector3(-0.5 + Math.random(), -0.5 + Math.random()), 20 + 20 * Math.random(), 5 + Math.random() * 10));\r\n        }\r\n        let rt = new Rect(this, new NVector3(-50, -50), 50, 50);\r\n        rt.fixed = true;\r\n        this.listRect.push(rt);\r\n\r\n        rt = new Rect(this, new NVector3(50, 20), 40, 20);\r\n        rt.fixed = true;\r\n        this.listRect.push(rt);\r\n\r\n        rt = new Rect(this, new NVector3(-30, 30), 20, 30);\r\n        rt.fixed = true;\r\n        this.listRect.push(rt);\r\n        // this.listRect.push(new Rect(new NVector3(0, 0), 100, 50));\r\n        // this.listRect.push(new Rect(new NVector3(50, -50), 100, 100));\r\n        // this.listRect.push(new Rect(new NVector3(0, 0), 90, 40));\r\n        // this.listRect.push(new Rect(new NVector3(50, -50), 90, 120));\r\n    }\r\n    UpdateNumber(v: number) {\r\n        this.num = v;\r\n        this.Init();\r\n        console.log(v, 'num');\r\n    }\r\n    UpdateOffset(v: number) {\r\n        this.offset = v;\r\n        console.log(v, 'off');\r\n    }\r\n    UpdateOptiLevel(v: number) {\r\n        this.optiLevel = v;\r\n        this.Init();\r\n        console.log(v, 'opti');\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            if (this.particles[i].IsMouseHover(x, y)) {\r\n                this.capture = this.particles[i];\r\n                this.capture.isCaptured = true;\r\n            }\r\n        }\r\n    }\r\n    MouseUp() {\r\n        if (this.capture) {\r\n            this.capture.isCaptured = false;\r\n        }\r\n        this.capture = undefined;\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        this.particles.push(new Particle(this, x, y));\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.capture) {\r\n            this.capture.pos.x = x;\r\n            this.capture.pos.y = y;\r\n        }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.UpdateCollisionRect();\r\n        this.UpdateAtt();\r\n        this.UpdateCollision();\r\n\r\n        // for (let i = 0; i < this.particles.length; ++i) { this.particles[i].Update(this.m); }\r\n        // for (let i = 0; i < this.particles.length; ++i) { this.particles[i].Render(ctx); }\r\n\r\n        for (let i = 0; i < this.listRect.length; ++i) { this.listRect[i].Update(); }\r\n        for (let i = 0; i < this.listRect.length; ++i) { this.listRect[i].Render(ctx); }\r\n\r\n        if ((this.t & 5) === 0 && this.particles.length < 10) {\r\n            this.particles.push(new Particle(this, 0, 0));\r\n        }\r\n        // console.log(this.t);\r\n        // console.log(this.t & 2);\r\n\r\n        if (this.t % 10 === 0 && this.listRect.length < this.num) {\r\n            this.listRect.push(new Rect(this, new NVector3(-0.5 + Math.random(), -0.5 + Math.random()), 20 + 20 * Math.random(), 5 + Math.random() * 10));\r\n            // this.listRect.push(new Rect(this, new NVector3(-0.5 + Math.random(), -0.5 + Math.random()), 20 + 20 * Math.random(), 5 + Math.random() * 10));\r\n            // this.listRect.push(new Rect(this, new NVector3(-0.5 + Math.random(), -0.5 + Math.random()), 20 + 20 * Math.random(), 5 + Math.random() * 10));\r\n            this.graphSystem.CanvasCore.divConsole.innerHTML = '1. clikc to reset! <br> ';\r\n            this.graphSystem.CanvasCore.divConsole.innerHTML += '2. first slider for num of Nodes! <br> ';\r\n            this.graphSystem.CanvasCore.divConsole.innerHTML += '3. second slider for offset! <br> ';\r\n            this.graphSystem.CanvasCore.divConsole.innerHTML += '4. third slider for Opti level! <br> ';\r\n            this.graphSystem.CanvasCore.divConsole.innerHTML += '* num of node: ' + this.listRect.length;\r\n        }\r\n\r\n        this.t += 1;\r\n    }\r\n    UpdateAtt() {\r\n        for (let i = 0; i < this.listRect.length; ++i) {\r\n            let a = this.listRect[i];\r\n            a.RectCloset = undefined;\r\n\r\n            for (let j = 0; j < this.listRect.length; ++j) {\r\n                let b = this.listRect[j];\r\n                let dis = Number.MAX_SAFE_INTEGER;\r\n                let index = -1;\r\n                if (a !== b) {\r\n                    const theDis = NVector3.Distance(a.vec, b.vec);\r\n                    if (theDis < dis) {\r\n                        dis = theDis;\r\n                        index = j;\r\n                    }\r\n                }\r\n                if (index > 0) {\r\n                    a.RectCloset = this.listRect[index];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    UpdateCollisionRect() {\r\n        for (let i = 0; i < this.listRect.length; ++i) {\r\n            let a = this.listRect[i];\r\n            a.listCollision = [];\r\n            let isHover = false;\r\n            for (let j = 0; j < this.listRect.length; ++j) {\r\n                let b = this.listRect[j];\r\n                if (a !== b) {\r\n                    if (Rect.AABBvsAABB(a, b, this.offset)) {\r\n                        a.listCollision.push(b);\r\n                        isHover = true;\r\n                    }\r\n                }\r\n            }\r\n            a.hover = isHover;\r\n        }\r\n    }\r\n    UpdateCollision() {\r\n        for (let i = 0; i < this.particles.length; ++i) {\r\n            let a = this.particles[i];\r\n            a.listCollision = [];\r\n            for (let j = 0; j < this.particles.length; ++j) {\r\n                let b = this.particles[j];\r\n                if (a !== b) {\r\n                    if (a.pos.Distance(b.pos) < a.r + b.r) {\r\n                        a.listCollision.push(b);\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n}","import { GraphSystem } from '..';\r\nexport class CanvasCore {\r\n    graphSystem: GraphSystem;\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n\r\n    divLocalMain: HTMLElement;\r\n    divCanvas: HTMLElement;\r\n    divUI: HTMLElement;\r\n\r\n    ctx: CanvasRenderingContext2D;\r\n    timer: NodeJS.Timer | number;\r\n    click: boolean = false;\r\n    pressed: boolean = false;\r\n    prevent: boolean = false;\r\n    delay: number = 500;\r\n    down: boolean = false;\r\n    t: number = 0.0;\r\n    width: number;\r\n    height: number;\r\n    divConsole: HTMLElement;\r\n    constructor(graphSystem: GraphSystem, width: number = 400, height: number = 250) {\r\n        this.graphSystem = graphSystem;\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const host = document.getElementById(graphSystem.id);\r\n        if (!host) { return; } this.host = host;\r\n\r\n        this.InitCanvas();\r\n    }\r\n    InitCanvas() {\r\n        const divLocalMain = document.createElement('div');\r\n        if (!divLocalMain) { return; } this.divLocalMain = divLocalMain;\r\n        this.divLocalMain.style.display = 'flex';\r\n        // this.divLocalMain.style.width = '100%';\r\n        this.divLocalMain.style.width = this.width + 'px'; // this.host.clientWidth;\r\n        this.divLocalMain.style.height = this.height + 'px'; // this.host.clientHeight;\r\n        this.divLocalMain.style.margin = '10px';\r\n        this.divLocalMain.style.padding = '10px';\r\n        this.host.append(divLocalMain);\r\n\r\n        const divCanvas = document.createElement('div');\r\n        if (!divCanvas) { return; } this.divCanvas = divCanvas;\r\n        // this.divCanvas.style.width = '50%';\r\n        this.divLocalMain.append(divCanvas);\r\n\r\n        const canvas = document.createElement('canvas');\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            this.divCanvas.append(this.canvas);\r\n\r\n            this.canvas.width = this.width; // this.host.clientWidth;\r\n            this.canvas.height = this.height; // this.host.clientHeight;\r\n            this.canvas.style.backgroundColor = '#aaaaaa';\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.InitUI();\r\n                this.Init();\r\n            }\r\n        }\r\n    }\r\n    InitUI() {\r\n        const divUI = document.createElement('div');\r\n        if (!divUI) { return; } this.divUI = divUI;\r\n        this.divLocalMain.append(divUI);\r\n        this.divUI.style.marginLeft = '10px';\r\n        this.divUI.style.width = '100%';\r\n        // this.divUI.style.display = 'grid';\r\n\r\n        const btn = document.createElement('button');\r\n        btn.textContent = 'reset';\r\n        btn.onclick = () => { this.graphSystem.InitGraph(); };\r\n        this.divUI.append(btn);\r\n\r\n        let input = document.createElement('input');\r\n        input.oninput = () => {\r\n            const val = +input.value as number;\r\n            this.graphSystem.graph.UpdateNumber(val);\r\n        };\r\n        input.type = 'range';\r\n        input.min = '10';\r\n        input.max = '200.0';\r\n        input.value = '50';\r\n        this.divUI.append(input);\r\n\r\n        let inputOff = document.createElement('input');\r\n        inputOff.oninput = () => {\r\n            const val = +inputOff.value as number;\r\n            this.graphSystem.graph.UpdateOffset(val);\r\n        };\r\n        inputOff.type = 'range';\r\n        inputOff.min = '1';\r\n        inputOff.max = '10.0';\r\n        inputOff.value = '4';\r\n        this.divUI.append(inputOff);\r\n\r\n        let inputOpt = document.createElement('input');\r\n        inputOpt.oninput = () => {\r\n            const val = +inputOpt.value as number;\r\n            this.graphSystem.graph.UpdateOptiLevel(val);\r\n        };\r\n        inputOpt.type = 'range';\r\n        inputOpt.min = '1';\r\n        inputOpt.max = '8';\r\n        inputOpt.value = '4';\r\n        this.divUI.append(inputOpt);\r\n\r\n        this.divConsole = document.createElement('p');\r\n        if (!this.divConsole) { return; } this.divUI.append(this.divConsole);\r\n        this.divConsole.style.width = 'max-content';\r\n        this.divConsole.innerHTML = '1. clikc to reset! <br> ';\r\n        this.divConsole.innerHTML += '2. first slider for num of Nodes! <br> ';\r\n        this.divConsole.innerHTML += '3. second slider for offset! <br> ';\r\n        this.divConsole.innerHTML += '4. third slider for Opti level! <br> ';\r\n        this.divConsole.innerHTML += '* num of node: ';\r\n    }\r\n    Init() {\r\n        this.ctx.translate(this.ctx.canvas.width * 0.5, this.ctx.canvas.height * 0.5);\r\n        // this.ctx.scale(2, 2);\r\n        this.ctx.scale(1, 1);\r\n        this.EventBind();\r\n        this.Loop();\r\n    }\r\n    EventBind() {\r\n        this.canvas.onclick = (e: MouseEvent) => {\r\n            this.prevent = false;\r\n            this.timer = setTimeout(\r\n                () => {\r\n                    if (!this.prevent) {\r\n                        if (!this.click) { return; }\r\n                        this.MouseClick(e);\r\n                    }\r\n                    this.prevent = false;\r\n                },\r\n                this.delay);\r\n        };\r\n        this.canvas.ondblclick = (e: MouseEvent) => {\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.MouseDoubleClick(e);\r\n        };\r\n        this.canvas.addEventListener('wheel', (e: WheelEvent) => this.MouseWheel(e, e.deltaY));\r\n\r\n        // this.canvas.onclick = (e: MouseEvent) => {\r\n        //     this.timer = setTimeout(() => {\r\n        //         if (!this.prevent) { this.MouseClick(e); }\r\n        //         this.prevent = false;\r\n        //     }, this.delay);\r\n        // };\r\n        // this.canvas.ondblclick = (e: MouseEvent) => {\r\n        //     clearTimeout(this.timer as number);\r\n        //     this.prevent = true;\r\n        //     this.MouseDoubleClick(e);\r\n        // };\r\n        this.canvas.onmousedown = (e: MouseEvent) => {\r\n            this.click = true;\r\n            this.pressed = true;\r\n            this.MouseDown(e);\r\n        };\r\n        this.canvas.onmouseup = (e: MouseEvent) => {\r\n            this.pressed = false;\r\n            this.MouseUp(e);\r\n        };\r\n        this.canvas.onmousemove = (e: MouseEvent) => {\r\n            if (this.pressed) { this.click = false; this.MouseDrag(e); }\r\n            this.MouseMove(e);\r\n        };\r\n        window.onresize = (e: UIEvent) => this.Resize(e);\r\n\r\n    }\r\n    Resize(e: UIEvent) {\r\n        // console.log(e);\r\n        // this.canvas.width = this.divCanvas.clientWidth;\r\n        // this.canvas.height = this.divCanvas.clientHeight;\r\n    }\r\n    Loop() {\r\n        requestAnimationFrame(() => { this.Loop(); });\r\n\r\n        this.ctx.clearRect(-this.ctx.canvas.width * 0.5, -this.ctx.canvas.height * 0.5, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.fillStyle = '#dddddd';\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(-this.ctx.canvas.width * 0.5, -this.ctx.canvas.height * 0.5, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.closePath();\r\n        this.ctx.fill();\r\n        this.Render(this.ctx);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(ctx);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        //\r\n    }\r\n    MouseWheel(e: WheelEvent, deltaY: number) {\r\n        // console.log(e);\r\n    }\r\n}","import { Graph } from './Core/Graph';\r\nimport { NVector3 } from '../../lib';\r\nimport { CanvasCore } from './CanvasCore';\r\nexport class GraphSystem {\r\n    CanvasCore: CanvasCore;\r\n    graph: Graph;\r\n    t = 0.9;\r\n    id: string;\r\n    m: NVector3 = new NVector3(0, 0, 0);\r\n    constructor(id: string) {\r\n        this.id = id;\r\n        this.CanvasCore = new CanvasCore(this);\r\n\r\n        this.Init();\r\n        this.InitGraph();\r\n    }\r\n    Init() {\r\n        this.CanvasCore.Render = (ctx: CanvasRenderingContext2D) => this.Render(ctx);\r\n        this.CanvasCore.MouseDown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.CanvasCore.MouseClick = (e: MouseEvent) => this.MouseClick(e);\r\n        this.CanvasCore.MouseDoubleClick = (e: MouseEvent) => this.MouseDoubleClick(e);\r\n        this.CanvasCore.MouseUp = (e: MouseEvent) => this.MouseUp(e);\r\n        this.CanvasCore.MouseMove = (e: MouseEvent) => this.MouseMove(e);\r\n        this.CanvasCore.MouseDrag = (e: MouseEvent) => this.MouseDrag(e);\r\n    }\r\n    InitGraph() {\r\n        this.graph = new Graph(this);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.graph.Render(ctx);\r\n\r\n        ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        ctx.beginPath();\r\n        ctx.arc(this.m.x, this.m.y, 2.5, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        for (let i = -10; i < 10; ++i) {\r\n            for (let j = -10; j < 10; ++j) {\r\n                ctx.beginPath();\r\n                ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n                ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n        }\r\n    }\r\n    // .......................................................................................\r\n    mouseRemap(e: MouseEvent) {\r\n        // this.m.x = ((e.x - this.CanvasCore.canvas.offsetLeft) - this.CanvasCore.canvas.width * 0.5) * 0.1;\r\n        // this.m.y = ((e.y - this.CanvasCore.canvas.offsetTop) - this.CanvasCore.canvas.height * 0.5) * 0.1;\r\n        this.m.x = e.offsetX - this.CanvasCore.canvas.width * 0.5// - this.CanvasCore.canvas.offsetLeft // ((e.x - this.CanvasCore.canvas.offsetLeft) - this.CanvasCore.canvas.width * 0.5) * 1;\r\n        this.m.y = e.offsetY - this.CanvasCore.canvas.height * 0.5// - this.CanvasCore.canvas.offsetTop // ((e.y - this.CanvasCore.canvas.offsetTop) - this.CanvasCore.canvas.height * 0.5) * 1;\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n        this.graph.MouseDown(this.m.x, this.m.y);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n        this.graph.MouseUp();\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n        this.graph.MouseMove(this.m.x, this.m.y);\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n        this.graph.MouseDrag(this.m.x, this.m.y);\r\n    }\r\n    MouseClick(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n        this.graph.MouseLeftClick(this.m.x, this.m.y);\r\n    }\r\n    MouseDoubleClick(e: MouseEvent) {\r\n        this.mouseRemap(e)\r\n        // console.log('d click');\r\n    }\r\n}","\r\nimport { GraphSystem as OptimizerRectPosAgentSystemA } from './OptimizerRectPosAgentSystemA';\r\nimport { GraphSystem as OptimizerRectPosAgentSystemB } from './OptimizerRectPosAgentSystemB';\r\nimport { GraphSystem as OptimizerRectPosAgentSystemC } from './OptimizerRectPosAgentSystemC';\r\n\r\nexport class Implementation {\r\n    OptimizerRectPosAgentSystemA: OptimizerRectPosAgentSystemA;\r\n    OptimizerRectPosAgentSystemB: OptimizerRectPosAgentSystemB;\r\n    OptimizerRectPosAgentSystemC: OptimizerRectPosAgentSystemC;\r\n    constructor(id: string) {\r\n        this.OptimizerRectPosAgentSystemA = new OptimizerRectPosAgentSystemA(id);\r\n        this.OptimizerRectPosAgentSystemB = new OptimizerRectPosAgentSystemB(id);\r\n        this.OptimizerRectPosAgentSystemC = new OptimizerRectPosAgentSystemC(id);\r\n\r\n        document.body.style.overflow = 'auto';\r\n    }\r\n}","import { CanvasCore } from './Implementation/OptimizerRectPosAgentSystemA/CanvasCore'\r\nimport { Implementation } from './Implementation';\r\nexport class AppCanvasRectOptimizer {\r\n    canvasCore: CanvasCore;\r\n    implementation: Implementation;\r\n    static Init(id: string) {\r\n        const n = new AppCanvasRectOptimizer(id);\r\n        n.Dummy();\r\n    }\r\n    constructor(id: string = 'SandBox') {\r\n        this.implementation = new Implementation(id);\r\n    }\r\n    Dummy() {\r\n        //\r\n    }\r\n}\r\n","import { AppCanvasRectOptimizer } from './App';\nexport class Solution {\n    public divHost: HTMLElement;\n\n    constructor(id: string, index = 0) {\n        this.divHost = document.getElementById(id);\n\n        const div = document.createElement('div');\n        div.id ='ngl3d';\n        div.style.width = '100%';\n        div.style.height = '100%';\n        this.divHost.appendChild(div);\n\n        AppCanvasRectOptimizer.Init(div.id);\n    }\n    public destroy() {\n        try {\n            while (this.divHost !== undefined && this.divHost.lastElementChild !== undefined) {\n                this.divHost.removeChild(this.divHost.lastElementChild);\n            }\n        } catch (error) { console.debug(error) }\n    }\n}"],"names":["Particle","constructor","graph","x","y","pos","u","f","m","r","colorFill","MAX_VELOCITY","velocity","listCollision","isCaptured","this","NVector3","Update","target","UpdatePos","vec","nor","falloff","UpdateCollision","UpdatePosInScreen","graphSystem","CanvasCore","ctx","i","length","IsMouseHover","Render","lineWidth","strokeStyle","fillStyle","beginPath","arc","Math","PI","closePath","fill","stroke","offset","canvas","height","width","Rect","static","a","b","fixed","hover","Overlaps","other","AABBvsAABB","random","rect","Graph","particles","listRect","t","num","capture","undefined","Init","push","UpdateNumber","v","console","log","UpdateOffset","MouseDown","MouseUp","MouseLeftClick","MouseMove","MouseDrag","UpdateCollisionRect","isHover","j","Distance","host","divLocalMain","divCanvas","divUI","timer","click","pressed","prevent","delay","down","document","getElementById","id","InitCanvas","createElement","style","display","margin","padding","append","backgroundColor","getContext","InitUI","marginLeft","btn","textContent","onclick","InitGraph","input","oninput","val","value","type","min","max","inputOff","p","innerHTML","translate","scale","EventBind","Loop","e","setTimeout","MouseClick","ondblclick","clearTimeout","MouseDoubleClick","addEventListener","MouseWheel","deltaY","onmousedown","onmouseup","onmousemove","window","onresize","Resize","requestAnimationFrame","clearRect","GraphSystem","Grid","mouseRemap","offsetX","offsetY","optiLevel","rt","UpdateOptiLevel","inputOpt","RectCloset","UpdatePosExpel","UpdatePosContract","UpdateAtt","divConsole","dis","Number","MAX_SAFE_INTEGER","index","theDis","Implementation","OptimizerRectPosAgentSystemA","OptimizerRectPosAgentSystemB","OptimizerRectPosAgentSystemC","body","overflow","AppCanvasRectOptimizer","Dummy","canvasCore","implementation","Solution","divHost","div","appendChild","destroy","lastElementChild","removeChild","error","debug"],"sourceRoot":""}