{"version":3,"file":"static/js/772.5692c22c.chunk.js","mappings":"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","sources":["njslab/LabStarter/AppNGL3d/NGL3dApp_08/Geometry/Core/Base.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_08/Geometry/Primatives/Quad.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_08/Utility/Matrix4.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_08/Utility/Vector3.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_08/WebGL/Model.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_08/WebGL/Shader.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_08/WebGL/Transform.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_08/WebGL/VAO.ts"],"sourcesContent":["import { Scene } from '../../Core/Scene';\r\n\r\nexport class GeometryBase {\r\n    scene: Scene;\r\n    constructor(scene: Scene) {\r\n        this.scene = scene;\r\n        this.scene.add(this);\r\n    }\r\n    render() {\r\n        //\r\n    }\r\n}","import { Vector3 } from '../../Utility/Vector3';\r\n\r\nimport { VAO } from '../../WebGL/VAO';\r\nimport { Model } from '../../WebGL/Model';\r\n\r\nimport { NGL3dApp } from '../..';\r\n\r\nimport { Shader } from '../../WebGL/Shader';\r\nimport { GeometryBase } from '../Core/Base';\r\n\r\nclass ShaderQuad extends Shader {\r\n\r\n    uPointSize: WebGLUniformLocation | null;\r\n    uAngle: WebGLUniformLocation | null;\r\n\r\n    texture: WebGLTexture;\r\n\r\n    pMatrix: Float32Array;\r\n    constructor(gl: WebGL2RenderingContext, vertSrc: string, fragSrc: string, pMatrix: Float32Array) {\r\n        super(gl, vertSrc, fragSrc);\r\n        this.pMatrix = pMatrix;\r\n\r\n        // Our shader uses custom uniforms, this is the time to get its location for future use.\r\n        if (this.program) {\r\n            gl.useProgram(this.program);\r\n            this.setPerspective(pMatrix);\r\n\r\n            let uColor = gl.getUniformLocation(this.program, 'uColor');\r\n            gl.uniform3fv(uColor, new Float32Array([0.8, 0.8, 0.8, 1, 0, 0, 0, 1, 0, 0, 0, 1]));\r\n\r\n            // this.uPointSize = gl.getUniformLocation(this.program, 'uPointSize');\r\n            // this.uAngle = gl.getUniformLocation(this.program, 'uAngle');\r\n\r\n            // gl.useProgram(this.program);\r\n            gl.useProgram(null); // Done setting up shader\r\n        }\r\n    }\r\n    // Simple function that passes in Angle and Pointsize uniform data to the shader program.\r\n    set(size: number, angle: number) {\r\n        // this.gl.useProgram(null);\r\n        // this.gl.uniform1f(this.uAngle, angle);\r\n        // this.gl.uniform1f(this.uPointSize, size);\r\n        return this;\r\n    }\r\n    setTexture(texID: WebGLTexture) {\r\n        this.texture = texID; return this;\r\n    }\r\n}\r\n\r\nexport class Quad extends GeometryBase {\r\n    v = `#version 300 es\r\n\r\n        in vec3 a_position;\t// Standard position data.\r\n        in vec2 a_uv;\r\n\r\n        layout(location=4) in float a_color;\r\n\r\n        uniform mat4 uPMatrix;\r\n        uniform mat4 uMVMatrix;\r\n        uniform mat4 uCameraMatrix;\r\n\r\n        uniform vec3 uColor[4];\r\n\r\n        out vec2 uv;\r\n        out lowp vec4 color;\r\n\r\n        void main(void) {\r\n            uv = a_uv;\r\n            // uv = vec2(0.5, 1);\r\n\r\n            color = vec4(uColor[ int(a_color) ], 1.0);\r\n\r\n            gl_Position = uPMatrix * uCameraMatrix * uMVMatrix * vec4(a_position, 1.0);\r\n        }\r\n    `;\r\n\r\n    f = `#version 300 es\r\n\r\n    precision mediump float;\r\n\r\n    in highp vec2 uv;\r\n    in vec4 color;\r\n\r\n    uniform sampler2D uMainTex;\r\n\r\n    out vec4 finalColor;\r\n\r\n    void main(void) {\r\n\r\n        //Square Border\r\n        // float c = (uv.x <= 0.1 || uv.x >=0.9 || uv.y <= 0.1 || uv.y >= 0.9)? 0.0 : 1.0;\r\n\r\n        // finalColor = vec4(1.0, uv.x, uv.y ,1.0-c);\r\n        // finalColor = vec4(color.xyz, 1.0 -c);\r\n\r\n        finalColor = texture(uMainTex, vec2(uv.s, uv.t));  //Get the color of the pixel at that UV location\r\n\r\n        // //Circle\r\n        // //  /*\r\n        // vec2 delta = uv - vec2(0.5,0.5); //delta position from center;\r\n        // float dist = 0.5 - sqrt(delta.x*delta.x + delta.y*delta.y);\r\n\r\n        // float border = 0.01;\r\n        // float a = 0.0;\r\n        // if(dist > border) a = 1.0;\r\n        // else if(dist > 0.0) a = dist / border;\r\n\r\n        // finalColor = vec4(0.0,0.0,0.0,a);\r\n        // //  */\r\n    }\r\n    `;\r\n    app: NGL3dApp;\r\n    vao: VAO;\r\n    shader: ShaderQuad;\r\n    model: Model;\r\n\r\n    size: number = 20.5;\r\n    rotation: number = 0.0;\r\n\r\n    constructor(app: NGL3dApp) {\r\n        super(app.scene);\r\n        this.app = app;\r\n        let aVert = [-0.5, 0.5, 0, -0.5, -0.5, 0, 0.5, -0.5, 0, 0.5, 0.5, 0];\r\n        // 0,  0, 0,  1, 1,   1  ,1,  0\r\n        let aUV = [0., 0., 0., 1., 1., 1., 1., 0.];\r\n        let aIndex = [0, 1, 2, 2, 3, 0];\r\n\r\n        this.shader = new ShaderQuad(this.app.canvas.gl, this.v, this.f, this.app.camera.projectionMatrix);\r\n        this.shader.setTexture(this.app.texture.uvGridWebGLTexture);\r\n        this.vao = new VAO(app.canvas.gl, 'Quad', aVert, aIndex, undefined, aUV);\r\n        this.vao.noCulling = true;\r\n        this.vao.doBlending = true;\r\n\r\n        this.model = new Model(this.vao);\r\n\r\n        this.SetTexture(this.app.canvas.gl);\r\n    }\r\n    SetTexture(gl: WebGL2RenderingContext) {\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.shader.texture);\r\n        // gl.uniform1i(this.shader.uniformLoc.mainTexture, 0);\r\n    }\r\n    render() {\r\n        // // console.log(this);\r\n        // this.size += 0.001;\r\n        // let size = (Math.sin(this.size) * 10.0) + 20.0;\r\n\r\n        this.model.transform.position = new Vector3(0, 0, this.model.transform.position.z + -0.01);\r\n\r\n        // this.UpdateTexture(this.app.canvas.gl);\r\n        this.shader.activate();\r\n        this.shader.setPerspective(this.shader.pMatrix);\r\n        // this.shader.set(size,  this.rotation);\r\n        // this.shader.activate().setCameraMatrix(this.app.camera.viewMatrix).renderModel(this.model.preRender());\r\n\r\n        this.shader.setCameraMatrix(this.app.camera.viewMatrix);\r\n        this.shader.renderModel(this.model.preRender());\r\n\r\n    }\r\n}","import { Vector3 } from './Vector3';\r\n\r\nexport class Matrix4 {\r\n    raw: Float32Array;\r\n    // ....................................................................\r\n    // Static Data Methods\r\n    static identity() {\r\n        let a = new Float32Array(16);\r\n        a[0] = a[5] = a[10] = a[15] = 1;\r\n        return a;\r\n    }\r\n\r\n    // from glMatrix\r\n    static perspective(out: Float32Array, fovy: number, aspect: number, near: number, far: number) {\r\n        let f = 1.0 / Math.tan(fovy / 2), nf = 1 / (near - far);\r\n        out[0] = f / aspect;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = f;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = (far + near) * nf;\r\n        out[11] = -1;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = (2 * far * near) * nf;\r\n        out[15] = 0;\r\n    }\r\n\r\n    static ortho(out: number[], left: number, right: number, bottom: number, top: number, near: number, far: number) {\r\n        let lr = 1 / (left - right),\r\n            bt = 1 / (bottom - top),\r\n            nf = 1 / (near - far);\r\n        out[0] = -2 * lr;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = -2 * bt;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = 2 * nf;\r\n        out[11] = 0;\r\n        out[12] = (left + right) * lr;\r\n        out[13] = (top + bottom) * bt;\r\n        out[14] = (far + near) * nf;\r\n        out[15] = 1;\r\n    }\r\n    // https:// github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js\r\n    // make the rows into the columns\r\n    static transpose(out: number[], a: number[]) {\r\n        // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n        if (out === a) {\r\n            let a01 = a[1], a02 = a[2], a03 = a[3], a12 = a[6], a13 = a[7], a23 = a[11];\r\n            out[1] = a[4];\r\n            out[2] = a[8];\r\n            out[3] = a[12];\r\n            out[4] = a01;\r\n            out[6] = a[9];\r\n            out[7] = a[13];\r\n            out[8] = a02;\r\n            out[9] = a12;\r\n            out[11] = a[14];\r\n            out[12] = a03;\r\n            out[13] = a13;\r\n            out[14] = a23;\r\n        } else {\r\n            out[0] = a[0];\r\n            out[1] = a[4];\r\n            out[2] = a[8];\r\n            out[3] = a[12];\r\n            out[4] = a[1];\r\n            out[5] = a[5];\r\n            out[6] = a[9];\r\n            out[7] = a[13];\r\n            out[8] = a[2];\r\n            out[9] = a[6];\r\n            out[10] = a[10];\r\n            out[11] = a[14];\r\n            out[12] = a[3];\r\n            out[13] = a[7];\r\n            out[14] = a[11];\r\n            out[15] = a[15];\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    // Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n    static normalMat3(out: Float32Array, a: Float32Array) {\r\n        let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n            a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n            a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n            a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\r\n\r\n            b00 = a00 * a11 - a01 * a10,\r\n            b01 = a00 * a12 - a02 * a10,\r\n            b02 = a00 * a13 - a03 * a10,\r\n            b03 = a01 * a12 - a02 * a11,\r\n            b04 = a01 * a13 - a03 * a11,\r\n            b05 = a02 * a13 - a03 * a12,\r\n            b06 = a20 * a31 - a21 * a30,\r\n            b07 = a20 * a32 - a22 * a30,\r\n            b08 = a20 * a33 - a23 * a30,\r\n            b09 = a21 * a32 - a22 * a31,\r\n            b10 = a21 * a33 - a23 * a31,\r\n            b11 = a22 * a33 - a23 * a32,\r\n\r\n            //  Calculate the determinant\r\n            det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) { return null; }\r\n\r\n        det = 1.0 / det;\r\n\r\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n        out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n        out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        return out;\r\n    }\r\n\r\n    // ....................................................................\r\n    // Static Operation\r\n\r\n    // https:// github.com/gregtatum/mdn-model-view-projection/blob/master/shared/matrices.js\r\n    static multiplyVector(mat4: Matrix4, v: number[]) {\r\n        let x = v[0], y = v[1], z = v[2], w = v[3];\r\n        let c1r1 = mat4[0], c2r1 = mat4[1], c3r1 = mat4[2], c4r1 = mat4[3],\r\n            c1r2 = mat4[4], c2r2 = mat4[5], c3r2 = mat4[6], c4r2 = mat4[7],\r\n            c1r3 = mat4[8], c2r3 = mat4[9], c3r3 = mat4[10], c4r3 = mat4[11],\r\n            c1r4 = mat4[12], c2r4 = mat4[13], c3r4 = mat4[14], c4r4 = mat4[15];\r\n\r\n        return [\r\n            x * c1r1 + y * c1r2 + z * c1r3 + w * c1r4,\r\n            x * c2r1 + y * c2r2 + z * c2r3 + w * c2r4,\r\n            x * c3r1 + y * c3r2 + z * c3r3 + w * c3r4,\r\n            x * c4r1 + y * c4r2 + z * c4r3 + w * c4r4\r\n        ];\r\n    }\r\n\r\n    // https:// github.com/toji/gl-matrix/blob/master/src/gl-matrix/vec4.js, vec4.transformMat4\r\n    static transformVec4(out: Float32Array, v: number[], m: Float32Array) {\r\n        out[0] = m[0] * v[0] + m[4] * v[1] + m[8] * v[2] + m[12] * v[3];\r\n        out[1] = m[1] * v[0] + m[5] * v[1] + m[9] * v[2] + m[13] * v[3];\r\n        out[2] = m[2] * v[0] + m[6] * v[1] + m[10] * v[2] + m[14] * v[3];\r\n        out[3] = m[3] * v[0] + m[7] * v[1] + m[11] * v[2] + m[15] * v[3];\r\n        return out;\r\n    }\r\n\r\n    // From glMatrix\r\n    // Multiple two mat4 together\r\n    static mult(out: Float32Array, a: Float32Array, b: Float32Array) {\r\n        let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n            a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n            a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n            a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n        //  Cache only the current line of the second matrix\r\n        let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\r\n        out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\r\n        out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\r\n        out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\r\n        out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        return out;\r\n    }\r\n\r\n    // ....................................................................\r\n    // Static Transformation\r\n    static scale(out: Float32Array, x: number, y: number, z: number) {\r\n        out[0] *= x;\r\n        out[1] *= x;\r\n        out[2] *= x;\r\n        out[3] *= x;\r\n        out[4] *= y;\r\n        out[5] *= y;\r\n        out[6] *= y;\r\n        out[7] *= y;\r\n        out[8] *= z;\r\n        out[9] *= z;\r\n        out[10] *= z;\r\n        out[11] *= z;\r\n        return out;\r\n    }\r\n\r\n    static rotateY(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a00 = out[0],\r\n            a01 = out[1],\r\n            a02 = out[2],\r\n            a03 = out[3],\r\n            a20 = out[8],\r\n            a21 = out[9],\r\n            a22 = out[10],\r\n            a23 = out[11];\r\n\r\n        //  Perform axis-specific matrix multiplication\r\n        out[0] = a00 * c - a20 * s;\r\n        out[1] = a01 * c - a21 * s;\r\n        out[2] = a02 * c - a22 * s;\r\n        out[3] = a03 * c - a23 * s;\r\n        out[8] = a00 * s + a20 * c;\r\n        out[9] = a01 * s + a21 * c;\r\n        out[10] = a02 * s + a22 * c;\r\n        out[11] = a03 * s + a23 * c;\r\n        return out;\r\n    }\r\n\r\n    static rotateX(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a10 = out[4],\r\n            a11 = out[5],\r\n            a12 = out[6],\r\n            a13 = out[7],\r\n            a20 = out[8],\r\n            a21 = out[9],\r\n            a22 = out[10],\r\n            a23 = out[11];\r\n\r\n        //  Perform axis-specific matrix multiplication\r\n        out[4] = a10 * c + a20 * s;\r\n        out[5] = a11 * c + a21 * s;\r\n        out[6] = a12 * c + a22 * s;\r\n        out[7] = a13 * c + a23 * s;\r\n        out[8] = a20 * c - a10 * s;\r\n        out[9] = a21 * c - a11 * s;\r\n        out[10] = a22 * c - a12 * s;\r\n        out[11] = a23 * c - a13 * s;\r\n        return out;\r\n    }\r\n\r\n    static rotateZ(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a00 = out[0],\r\n            a01 = out[1],\r\n            a02 = out[2],\r\n            a03 = out[3],\r\n            a10 = out[4],\r\n            a11 = out[5],\r\n            a12 = out[6],\r\n            a13 = out[7];\r\n\r\n        //  Perform axis-specific matrix multiplication\r\n        out[0] = a00 * c + a10 * s;\r\n        out[1] = a01 * c + a11 * s;\r\n        out[2] = a02 * c + a12 * s;\r\n        out[3] = a03 * c + a13 * s;\r\n        out[4] = a10 * c - a00 * s;\r\n        out[5] = a11 * c - a01 * s;\r\n        out[6] = a12 * c - a02 * s;\r\n        out[7] = a13 * c - a03 * s;\r\n        return out;\r\n    }\r\n\r\n    static rotate(out: Float32Array, rad: number, axis: number) {\r\n        let x = axis[0], y = axis[1], z = axis[2],\r\n            len = Math.sqrt(x * x + y * y + z * z),\r\n            s, c, t,\r\n            a00, a01, a02, a03,\r\n            a10, a11, a12, a13,\r\n            a20, a21, a22, a23,\r\n            b00, b01, b02,\r\n            b10, b11, b12,\r\n            b20, b21, b22;\r\n\r\n        if (Math.abs(len) < 0.000001) { return null; }\r\n\r\n        len = 1 / len;\r\n        x *= len;\r\n        y *= len;\r\n        z *= len;\r\n\r\n        s = Math.sin(rad);\r\n        c = Math.cos(rad);\r\n        t = 1 - c;\r\n\r\n        a00 = out[0]; a01 = out[1]; a02 = out[2]; a03 = out[3];\r\n        a10 = out[4]; a11 = out[5]; a12 = out[6]; a13 = out[7];\r\n        a20 = out[8]; a21 = out[9]; a22 = out[10]; a23 = out[11];\r\n\r\n        //  Construct the elements of the rotation matrix\r\n        b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\r\n        b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\r\n        b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\r\n\r\n        //  Perform rotation-specific matrix multiplication\r\n        out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n        out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n        out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n        out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n        out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n        out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n        out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n        out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n        out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n        out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n        out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n        out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n        return out;\r\n    }\r\n\r\n    static invert(out: Float32Array, mat?: Float32Array) {\r\n        if (mat === undefined) { mat = out; }// If input isn't sent, then output is also input\r\n\r\n        let a00 = mat[0], a01 = mat[1], a02 = mat[2], a03 = mat[3],\r\n            a10 = mat[4], a11 = mat[5], a12 = mat[6], a13 = mat[7],\r\n            a20 = mat[8], a21 = mat[9], a22 = mat[10], a23 = mat[11],\r\n            a30 = mat[12], a31 = mat[13], a32 = mat[14], a33 = mat[15],\r\n\r\n            b00 = a00 * a11 - a01 * a10,\r\n            b01 = a00 * a12 - a02 * a10,\r\n            b02 = a00 * a13 - a03 * a10,\r\n            b03 = a01 * a12 - a02 * a11,\r\n            b04 = a01 * a13 - a03 * a11,\r\n            b05 = a02 * a13 - a03 * a12,\r\n            b06 = a20 * a31 - a21 * a30,\r\n            b07 = a20 * a32 - a22 * a30,\r\n            b08 = a20 * a33 - a23 * a30,\r\n            b09 = a21 * a32 - a22 * a31,\r\n            b10 = a21 * a33 - a23 * a31,\r\n            b11 = a22 * a33 - a23 * a32,\r\n\r\n            //  Calculate the determinant\r\n            det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) { return false; }\r\n        det = 1.0 / det;\r\n\r\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n        out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n        out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n        out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n        out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n        out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n        out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n        return true;\r\n    }\r\n\r\n    // https:// github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js  mat4.scalar.translate = function (out, a, v) {\r\n    static translate(out: Float32Array, x: number, y: number, z: number) {\r\n        out[12] = out[0] * x + out[4] * y + out[8] * z + out[12];\r\n        out[13] = out[1] * x + out[5] * y + out[9] * z + out[13];\r\n        out[14] = out[2] * x + out[6] * y + out[10] * z + out[14];\r\n        out[15] = out[3] * x + out[7] * y + out[11] * z + out[15];\r\n    }\r\n    constructor() {\r\n        this.raw = Matrix4.identity();\r\n    }\r\n    // ....................................................................\r\n    // Transformations Methods\r\n    vtranslate(v: Vector3) {\r\n        Matrix4.translate(this.raw, v.x, v.y, v.z);\r\n        return this;\r\n    }\r\n    translate(x: number, y: number, z: number) {\r\n        Matrix4.translate(this.raw, x, y, z);\r\n        return this;\r\n    }\r\n    rotateY(rad: number) { Matrix4.rotateY(this.raw, rad); return this; }\r\n    rotateX(rad: number) { Matrix4.rotateX(this.raw, rad); return this; }\r\n    rotateZ(rad: number) { Matrix4.rotateZ(this.raw, rad); return this; }\r\n\r\n    vscale(vec3: Vector3) { Matrix4.scale(this.raw, vec3.x, vec3.y, vec3.z); return this; }\r\n    scale(x: number, y: number, z: number) {\r\n        Matrix4.scale(this.raw, x, y, z);\r\n        return this;\r\n    }\r\n\r\n    invert() {\r\n        Matrix4.invert(this.raw);\r\n        return this;\r\n    }\r\n\r\n    // ....................................................................\r\n    // Methods\r\n    // Bring is back to identity without changing the transform values.\r\n    resetRotation() {\r\n        for (let i = 0; i < this.raw.length; i++) {\r\n            if (i >= 12 && i <= 14) { continue; }\r\n            this.raw[i] = (i % 5 === 0) ? 1 : 0;  // only positions 0,5,10,15 need to be 1 else 0.\r\n        }\r\n        return this;\r\n    }\r\n\r\n    // reset data back to identity.\r\n    reset() {\r\n        for (let i = 0; i < this.raw.length; i++) { this.raw[i] = (i % 5 === 0) ? 1 : 0; } // only positions 0,5,10,15 need to be 1 else 0.\r\n        return this;\r\n    }\r\n}","\r\nexport class Vector3 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    magnitude(v?: Vector3) {\r\n        if (v === undefined) { return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z); }\r\n        let x = v.x - this.x, y = v.y - this.y, z = v.y - this.z;\r\n        return Math.sqrt(x * x + y * y + z * z);\r\n    }\r\n\r\n    normalize() {\r\n        let mag = this.magnitude();\r\n        this.x /= mag; this.y /= mag; this.z /= mag;\r\n        return this;\r\n    }\r\n    set(x: number, y: number, z: number) {\r\n        this.x = x; this.y = y; this.z = z;\r\n        return this;\r\n    }\r\n    multiScalar(v: number) {\r\n        this.x *= v; this.y *= v; this.z *= v; return this;\r\n    }\r\n    getArray() {\r\n        return [this.x, this.y, this.z];\r\n    }\r\n    getFloatArray() {\r\n        return new Float32Array([this.x, this.y, this.z]);\r\n    }\r\n    clone() {\r\n        return new Vector3(this.x, this.y, this.z);\r\n    }\r\n} ","import { VAO } from './VAO';\r\nimport { Transform } from './Transform';\r\n\r\nexport class Model {\r\n    vao: VAO;\r\n    transform: Transform;\r\n    constructor(vao: VAO) {\r\n        this.transform = new Transform();\r\n        this.vao = vao;\r\n    }\r\n\r\n    setScale(x: number, y: number, z: number) {\r\n        this.transform.scale.set(x, y, z);\r\n        return this;\r\n    }\r\n    setPosition(x: number, y: number, z: number) {\r\n        this.transform.position.set(x, y, z);\r\n        return this;\r\n    }\r\n    setRotation(x: number, y: number, z: number) {\r\n        this.transform.rotation.set(x, y, z);\r\n        return this;\r\n    }\r\n\r\n    addScale(x: number, y: number, z: number) {\r\n        this.transform.scale.x += x; this.transform.scale.y += y; this.transform.scale.y += y;\r\n        return this;\r\n    }\r\n    addPosition(x: number, y: number, z: number) {\r\n        this.transform.position.x += x; this.transform.position.y += y; this.transform.position.z += z;\r\n        return this;\r\n    }\r\n    addRotation(x: number, y: number, z: number) {\r\n        this.transform.rotation.x += x; this.transform.rotation.y += y; this.transform.rotation.z += z;\r\n        return this;\r\n    }\r\n\r\n    preRender() {\r\n        this.transform.updateMatrix();\r\n        return this;\r\n    }\r\n}","//  import { GLShaderCommon } from '../Utility/GLShaderCommon';\r\nimport { Model } from './Model';\r\n\r\nexport enum ATTR {\r\n    ATTR_POSITION_NAME = 'a_position',\r\n    ATTR_POSITION_LOC = 0,\r\n\r\n    ATTR_NORMAL_NAME = 'a_norm',\r\n    ATTR_NORMAL_LOC = 1,\r\n\r\n    ATTR_UV_NAME = 'a_uv',\r\n    ATTR_UV_LOC = 2,\r\n\r\n    ATTR_COLOR_NAME = 'a_color',\r\n    ATTR_COLOR_LOC = 4,\r\n}\r\n\r\nexport class AttribLocations {\r\n\r\n    position: number;\r\n    norm: number;\r\n    uv: number;\r\n\r\n    constructor(gl: WebGL2RenderingContext, program: WebGLProgram) {\r\n        this.position = gl.getAttribLocation(program, ATTR.ATTR_POSITION_NAME);\r\n        this.norm = gl.getAttribLocation(program, ATTR.ATTR_NORMAL_NAME);\r\n        this.uv = gl.getAttribLocation(program, ATTR.ATTR_UV_NAME);\r\n    }\r\n}\r\n\r\nexport class UniformLocations {\r\n\r\n    perspective: WebGLUniformLocation | null;\r\n    modelMatrix: WebGLUniformLocation | null;\r\n    cameraMatrix: WebGLUniformLocation | null;\r\n    mainTexture: WebGLUniformLocation | null;\r\n\r\n    constructor(gl: WebGL2RenderingContext, program: WebGLProgram) {\r\n        this.perspective = gl.getUniformLocation(program, 'uPMatrix');\r\n        this.modelMatrix = gl.getUniformLocation(program, 'uMVMatrix');\r\n        this.cameraMatrix = gl.getUniformLocation(program, 'uCameraMatrix');\r\n        this.mainTexture = gl.getUniformLocation(program, 'uMainTex');\r\n    }\r\n}\r\n\r\nexport class Shader {\r\n\r\n    gl: WebGL2RenderingContext;\r\n    program: WebGLProgram | null;\r\n\r\n    attribLoc: AttribLocations;\r\n    uniformLoc: UniformLocations;\r\n\r\n    vShader: WebGLShader | null;\r\n    fShader: WebGLShader | null;\r\n\r\n    constructor(gl: WebGL2RenderingContext, vertShaderSrc: string, fragShaderSrc: string, needValidate: boolean = true) {\r\n        this.gl = gl;\r\n        this.vShader = ShaderUtility.CreateShader(gl, gl.VERTEX_SHADER as unknown as WebGLShader, vertShaderSrc);\r\n        this.fShader = ShaderUtility.CreateShader(gl, gl.FRAGMENT_SHADER as unknown as WebGLShader, fragShaderSrc);\r\n\r\n        if (this.vShader && this.fShader) {\r\n            let program = ShaderUtility.CreateProgram(gl, this.vShader, this.fShader, needValidate);\r\n\r\n            if (program) {\r\n                this.program = program;\r\n                gl.useProgram(this.program);\r\n                this.attribLoc = new AttribLocations(gl, this.program);\r\n                this.uniformLoc = new UniformLocations(gl, this.program);\r\n                return;\r\n\r\n            } else {\r\n                console.error('vertex fragment shader error'); return;\r\n            }\r\n        } else {\r\n            console.error('vertex fragment shader error'); return;\r\n        }\r\n        // Note :: Extended shaders should deactivate shader when done calling super and setting up custom parts in the constructor.\r\n    }\r\n\r\n    // ...................................................\r\n    // Methods\r\n    activate() {\r\n        this.gl.useProgram(this.program); return this;\r\n    }\r\n    deactivate() {\r\n        this.gl.useProgram(null); return this;\r\n    }\r\n\r\n    // function helps clean up resources when shader is no longer needed.\r\n    dispose() {\r\n        // unbind the program if its currently active\r\n        if (this.gl.getParameter(this.gl.CURRENT_PROGRAM) === this.program) { this.gl.useProgram(null); }\r\n        this.gl.deleteProgram(this.program);\r\n    }\r\n    setPerspective(matData: Float32Array) {\r\n        this.gl.uniformMatrix4fv(this.uniformLoc.perspective, false, matData);\r\n        return this;\r\n    }\r\n    setModelMatrix(matData: Float32Array) {\r\n        this.gl.uniformMatrix4fv(this.uniformLoc.modelMatrix, false, matData);\r\n        return this;\r\n    }\r\n    setCameraMatrix(matData: Float32Array) {\r\n        this.gl.uniformMatrix4fv(this.uniformLoc.cameraMatrix, false, matData);\r\n        return this;\r\n    }\r\n    // ...................................................\r\n    // RENDER RELATED METHODS\r\n\r\n    // Setup custom properties\r\n    preRender() {\r\n        //\r\n    }\r\n    // Handle rendering a model\r\n    renderModel(model: Model) {\r\n        this.setModelMatrix(model.transform.getViewMatrix());\t// Set the transform, so the shader knows where the model exists in 3d space\r\n        this.gl.bindVertexArray(model.vao.vao);\t// Enable VAO, this will set all the predefined attributes for the shader\r\n\r\n        if (model.vao.noCulling) { this.gl.disable(this.gl.CULL_FACE); }\r\n        if (model.vao.doBlending) { this.gl.enable(this.gl.BLEND); }\r\n\r\n        if (model.vao.indexCount) {\r\n            // console.log(model.vao.indexCount);\r\n            this.gl.drawElements(model.vao.drawMode, model.vao.indexCount, this.gl.UNSIGNED_SHORT, 0);\r\n        } else {\r\n            this.gl.drawArrays(model.vao.drawMode, 0, model.vao.vertexCount);\r\n        }\r\n\r\n        this.gl.bindVertexArray(null);\r\n        if (model.vao.noCulling) { this.gl.enable(this.gl.CULL_FACE); }\r\n        if (model.vao.doBlending) { this.gl.disable(this.gl.BLEND); }\r\n\r\n        return this;\r\n\r\n    }\r\n}\r\n\r\nexport class ShaderUtility {\r\n    static CreateProgram(gl: WebGL2RenderingContext, vertexShader: WebGLShader, fragmentShader: WebGLShader, needValidate: boolean = true): WebGLProgram | null {\r\n        const program = gl.createProgram();\r\n        if (program === null) { return null; }\r\n        gl.attachShader(program, vertexShader);\r\n        gl.attachShader(program, fragmentShader);\r\n\r\n        gl.bindAttribLocation(program, ATTR.ATTR_POSITION_LOC, ATTR.ATTR_POSITION_NAME);\r\n        gl.bindAttribLocation(program, ATTR.ATTR_NORMAL_LOC, ATTR.ATTR_NORMAL_NAME);\r\n        gl.bindAttribLocation(program, ATTR.ATTR_UV_LOC, ATTR.ATTR_UV_NAME);\r\n\r\n        gl.linkProgram(program);\r\n\r\n        // Check that shader program was able to link to WebGL\r\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n            const error = gl.getProgramInfoLog(program);\r\n            console.log('Failed to link program: ' + error);\r\n            gl.deleteProgram(program);\r\n            gl.deleteShader(fragmentShader);\r\n            gl.deleteShader(vertexShader);\r\n            return null;\r\n        }\r\n        if (needValidate) {\r\n            gl.validateProgram(program);\r\n            if (!gl.getProgramParameter(program, gl.VALIDATE_STATUS)) {\r\n                console.error('Failed to validate program', gl.getProgramInfoLog(program));\r\n                gl.deleteProgram(program);\r\n                gl.deleteShader(fragmentShader);\r\n                gl.deleteShader(vertexShader);\r\n                return null;\r\n            }\r\n        }\r\n        gl.deleteShader(fragmentShader);\r\n        gl.deleteShader(vertexShader);\r\n        return program;\r\n    }\r\n    static CreateShader(gl: WebGL2RenderingContext, type: WebGLShader, shaderString: string) {\r\n        // console.log(type);\r\n        const shader = gl.createShader(type as unknown as number);\r\n        if (shader === null) { return null; }\r\n        gl.shaderSource(shader, shaderString);\r\n        gl.compileShader(shader);\r\n        const suc = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n        if (suc) { return shader; }\r\n        console.log(gl.getShaderInfoLog(shader));\r\n        gl.deleteShader(shader);\r\n        return null;\r\n    }\r\n    static LoadTexture(gl: WebGL2RenderingContext, img: HTMLImageElement, doYFlip: boolean) {\r\n        let tex = gl.createTexture();\r\n        if (doYFlip === true) { gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1); } // true); }\t// Flip the texture by the Y Position, So 0,0 is bottom left corner.\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, tex);\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Set text buffer for work\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img);\t\t\t// Push image to GPU.\r\n\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\t\t\t\t\t// Setup up scaling\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\t// Setup down scaling\r\n        gl.generateMipmap(gl.TEXTURE_2D);\t// Precalc different sizes of texture for better quality rendering.\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, null); // Unbind\r\n\r\n        // gl.mTextureCache[name] = tex;\t\t\t\t\t\t\t\t\t\t\t// Save ID for later unloading\r\n\r\n        if (doYFlip === true) { gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1); }\t// Stop flipping textures\r\n        return tex;\r\n    }\r\n}","import { Vector3 } from '../Utility/Vector3';\r\nimport { Matrix4 } from '../Utility/Matrix4';\r\n\r\nexport class Transform {\r\n    static deg2Rad = Math.PI / 180; // Cache result, one less operation to do for each update.\r\n\r\n    position: Vector3;\r\n    scale: Vector3;\r\n    rotation: Vector3;\r\n    matView: Matrix4;\r\n    matNormal: Float32Array;\r\n\r\n    forward: Float32Array;\r\n    up: Float32Array;\r\n    right: Float32Array;\r\n\r\n    constructor() {\r\n        this.position = new Vector3(0, 0, 0);\t// Traditional X,Y,Z 3d position\r\n        this.scale = new Vector3(1, 1, 1);\t// How much to scale a mesh. Having a 1 means no scaling is done.\r\n        this.rotation = new Vector3(0, 0, 0);\t// Hold rotation values based on degrees, Object will translate it to radians\r\n        this.matView = new Matrix4();\t\t// Cache the results when calling updateMatrix\r\n        this.matNormal = new Float32Array(9);\t// This is a Mat3, raw array to hold the values is enough for what its used for\r\n\r\n        // Direction Vectors\r\n        this.forward = new Float32Array(4);\t// When rotating, keep track of what the forward direction is\r\n        this.up = new Float32Array(4);\t// what the up direction is, invert to get bottom\r\n        this.right = new Float32Array(4);\t// what the right direction is, invert to get left\r\n    }\r\n    updateMatrix() {\r\n        this.matView.reset() // Order is very important!!\r\n            .vtranslate(this.position)\r\n            .rotateX(this.rotation.x * Transform.deg2Rad)\r\n            .rotateZ(this.rotation.z * Transform.deg2Rad)\r\n            .rotateY(this.rotation.y * Transform.deg2Rad)\r\n            .vscale(this.scale);\r\n\r\n        // Calcuate the Normal Matrix which doesn't need translate, then transpose and inverses the mat4 to mat3\r\n        Matrix4.normalMat3(this.matNormal, this.matView.raw);\r\n\r\n        // Determine Direction after all the transformations.\r\n        Matrix4.transformVec4(this.forward, [0, 0, 1, 0], this.matView.raw); // Z\r\n        Matrix4.transformVec4(this.up, [0, 1, 0, 0], this.matView.raw); // Y\r\n        Matrix4.transformVec4(this.right, [1, 0, 0, 0], this.matView.raw); // X\r\n\r\n        return this.matView.raw;\r\n    }\r\n\r\n    updateDirection() {\r\n        Matrix4.transformVec4(this.forward, [0, 0, 1, 0], this.matView.raw);\r\n        Matrix4.transformVec4(this.up, [0, 1, 0, 0], this.matView.raw);\r\n        Matrix4.transformVec4(this.right, [1, 0, 0, 0], this.matView.raw);\r\n        return this;\r\n    }\r\n\r\n    getViewMatrix() { return this.matView.raw; }\r\n    getNormalMatrix() { return this.matNormal; }\r\n\r\n    reset() {\r\n        this.position.set(0, 0, 0);\r\n        this.scale.set(1, 1, 1);\r\n        this.rotation.set(0, 0, 0);\r\n    }\r\n}\r\n","import { ATTR } from './Shader';\r\n\r\nexport enum DRAW_MODE {\r\n    //\r\n}\r\n\r\nexport class VAO {\r\n    name: string;\r\n\r\n    noCulling: boolean = true;\r\n    doBlending: boolean = true;\r\n\r\n    vao: WebGLVertexArrayObject | null;\r\n    bufVertices: WebGLBuffer | null;\r\n    bufNormals: WebGLBuffer | null;\r\n    bufUV: WebGLBuffer | null;\r\n    bufIndex: WebGLBuffer | null;\r\n\r\n    vertexComponentLen: number;\r\n    vertexCount: number;\r\n    indexCount: number;\r\n    drawMode: number;\r\n\r\n    constructor(gl: WebGL2RenderingContext, name: string, aryVert: number[], aryInd?: number[] | null, aryNorm?: number[] | null, aryUV?: number[] | null) {\r\n        this.name = name;\r\n        this.drawMode = gl.TRIANGLES;\r\n\r\n        this.vao = gl.createVertexArray();\r\n        gl.bindVertexArray(this.vao);\t//  Bind it so all the calls to vertexAttribPointer/enableVertexAttribArray is saved to the vao.\r\n\r\n        // .......................................................\r\n        // Set up vertices\r\n        if (aryVert !== undefined && aryVert != null) {\r\n            this.bufVertices = gl.createBuffer();\t\t\t\t\t\t\t\t\t\t\t\t\t// Create buffer...\r\n            this.vertexComponentLen = 3;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// How many floats make up a vertex\r\n            this.vertexCount = aryVert.length / this.vertexComponentLen;\t\t\t\t\t\t\t\t// How many vertices in the array\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.bufVertices);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(aryVert), gl.STATIC_DRAW);\t\t// then push array into it.\r\n            gl.enableVertexAttribArray(ATTR.ATTR_POSITION_LOC);\t\t\t\t\t\t\t\t\t\t// Enable Attribute location\r\n            gl.vertexAttribPointer(ATTR.ATTR_POSITION_LOC, 3, gl.FLOAT, false, 0, 0);\t\t\t\t\t\t// Put buffer at location of the vao\r\n        }\r\n\r\n        // .......................................................\r\n        // Setup normals\r\n        if (aryNorm !== undefined && aryNorm !== null) {\r\n            this.bufNormals = gl.createBuffer();\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.bufNormals);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(aryNorm), gl.STATIC_DRAW);\r\n            gl.enableVertexAttribArray(ATTR.ATTR_NORMAL_LOC);\r\n            gl.vertexAttribPointer(ATTR.ATTR_NORMAL_LOC, 3, gl.FLOAT, false, 0, 0);\r\n        }\r\n\r\n        // .......................................................\r\n        // Setup UV\r\n        if (aryUV !== undefined && aryUV !== null) {\r\n            // console.log(aryUV);\r\n            this.bufUV = gl.createBuffer();\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, this.bufUV);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(aryUV), gl.STATIC_DRAW);\r\n            // console.log(this);\r\n            gl.enableVertexAttribArray(ATTR.ATTR_UV_LOC);\r\n            gl.vertexAttribPointer(ATTR.ATTR_UV_LOC, 2, gl.FLOAT, false, 0, 0);\t// UV only has two floats per component\r\n        }\r\n\r\n        // .......................................................\r\n        // Setup Index.\r\n        if (aryInd !== undefined && aryInd !== null) {\r\n            this.bufIndex = gl.createBuffer();\r\n            this.indexCount = aryInd.length;\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.bufIndex);\r\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(aryInd), gl.STATIC_DRAW);\r\n            // gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n\r\n        }\r\n        // console.log(this);\r\n\r\n        // Clean up\r\n        gl.bindVertexArray(null);\t\t\t\t\t// Unbind the VAO, very Important. always unbind when your done using one.\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\t// Unbind any buffers that might be set\r\n\r\n        // this.mMeshCache[name] = rtn;\r\n    }\r\n\r\n}"],"names":["GeometryBase","constructor","scene","this","add","render","ShaderQuad","Shader","gl","vertSrc","fragSrc","pMatrix","super","uPointSize","uAngle","texture","program","useProgram","setPerspective","uColor","getUniformLocation","uniform3fv","Float32Array","set","size","angle","setTexture","texID","Quad","app","v","f","vao","shader","model","rotation","canvas","camera","projectionMatrix","uvGridWebGLTexture","VAO","undefined","noCulling","doBlending","Model","SetTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","transform","position","Vector3","z","activate","setCameraMatrix","viewMatrix","renderModel","preRender","Matrix4","static","a","out","fovy","aspect","near","far","Math","tan","nf","left","right","bottom","top","lr","bt","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","mat4","x","y","w","c1r1","c2r1","c3r1","c4r1","c1r2","c2r2","c3r2","c4r2","c1r3","c2r3","c3r3","c4r3","m","b","b0","b1","b2","b3","rad","s","sin","c","cos","axis","t","b12","b20","b21","b22","len","sqrt","abs","mat","raw","identity","vtranslate","translate","rotateY","rotateX","rotateZ","vscale","vec3","scale","invert","resetRotation","i","length","reset","magnitude","normalize","mag","multiScalar","getArray","getFloatArray","clone","Transform","setScale","setPosition","setRotation","addScale","addPosition","addRotation","updateMatrix","ATTR","AttribLocations","norm","uv","getAttribLocation","ATTR_POSITION_NAME","ATTR_NORMAL_NAME","ATTR_UV_NAME","UniformLocations","perspective","modelMatrix","cameraMatrix","mainTexture","vertShaderSrc","fragShaderSrc","needValidate","attribLoc","uniformLoc","vShader","fShader","ShaderUtility","CreateShader","VERTEX_SHADER","FRAGMENT_SHADER","CreateProgram","console","error","deactivate","dispose","getParameter","CURRENT_PROGRAM","deleteProgram","matData","uniformMatrix4fv","setModelMatrix","getViewMatrix","bindVertexArray","disable","CULL_FACE","enable","BLEND","indexCount","drawElements","drawMode","UNSIGNED_SHORT","drawArrays","vertexCount","vertexShader","fragmentShader","createProgram","attachShader","bindAttribLocation","ATTR_POSITION_LOC","ATTR_NORMAL_LOC","ATTR_UV_LOC","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","log","deleteShader","validateProgram","VALIDATE_STATUS","type","shaderString","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","img","doYFlip","tex","createTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_NEAREST","generateMipmap","matView","matNormal","forward","up","deg2Rad","updateDirection","getNormalMatrix","PI","DRAW_MODE","name","aryVert","aryInd","aryNorm","aryUV","bufVertices","bufNormals","bufUV","bufIndex","vertexComponentLen","TRIANGLES","createVertexArray","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","ELEMENT_ARRAY_BUFFER","Uint16Array"],"sourceRoot":""}