{"version":3,"file":"static/js/85640.4243a98f.chunk.js","mappings":"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","sources":["njslab/Project/Project_03_SlowZone/01_JSAPI/Tint/FilterGLViewDarkForDarken.ts","njslab/Project/Project_03_SlowZone/01_JSAPI/UI/index.ts","njslab/Project/Project_03_SlowZone/01_JSAPI/DataProcessTweets/TweetData/index.ts","njslab/Project/Project_03_SlowZone/01_JSAPI/DataProcessTweets/index.ts","njslab/Project/Project_03_SlowZone/01_JSAPI/index.ts"],"sourcesContent":["import { NVector3, GLShaderCommon } from '../../../../../lib/NJSCore';\n\n// import { Mat3 } from '../../AppCore/GLUtility/Mat3';\n\nexport class FilterGLViewDarkForDarken {\n\n    gl: WebGLRenderingContext;\n    program: WebGLProgram;\n    fragmentShader: WebGLShader;\n    vertexShader: WebGLShader;\n    matrixLocation: WebGLProgram;\n    posBuffer: WebGLBuffer;\n    colBuffer: WebGLBuffer;\n    vertexs: Float32Array;\n\n    posLocAtt: number;\n    colLocAtt: number;\n    matLoc: WebGLUniformLocation;\n    colLoc: WebGLUniformLocation;\n    cVecLoc: WebGLUniformLocation;\n    mouseLoc: WebGLUniformLocation;\n    timeGL: WebGLUniformLocation;\n    // startTime: number;\n    // randomSeed: number;\n\n    vShader: WebGLShader;\n    fShader: WebGLShader;\n\n    v = `\n    attribute vec2 a_position;\n    attribute vec4 a_color;\n    \n    varying vec4 f_color;\n\n    void main() {\n\n        vec2 mouse_distance = vec2(0,0) - (a_position.xy /vec2(2,2));\n        float red = 1.0 - length(mouse_distance);\n        f_color = vec4(a_position, 0, 1.0);\n    \n        // float dis = distance(vec2(a_position.xy), vec2(0,0));\n\n        // f_color = vec4(dis * 0.6, 0,0,1);\n        gl_Position = vec4( a_position, 0, 1);\n    }\n    `;\n\n    f = `\n    precision highp float;\n\n    varying vec4 f_color;\n    \n    void main() {\n        vec2 mouse_distance = vec2(0,0) - (f_color.xy /vec2(5,5));\n\n        float col =  length(mouse_distance*5.);\n        float val = 1.0 - length(mouse_distance*8.);\n        \n        gl_FragColor = vec4(0.19,0.19,0.19, col);\n\n    }\n    `;\n\n    positionAttribLocation: WebGLProgram;\n    colorAttribLocation: WebGLProgram;\n    translation: NVector3;\n    color: number[];\n    colArray: Float32Array;\n\n    constructor(gl: WebGLRenderingContext, xt: number = 100, yt: number = 100, zt: number = 0, xs: number = 1, ys: number = 1, zs: number = 1) {\n        this.gl = gl;\n        // this.translation = new NVector3(xt, yt, zt);\n        // this.angleInRadians = 0;\n        // this.scale = new NVector3(xs, ys, zs);\n        this.color = [Math.random(), Math.random(), Math.random(), 1];\n        this.InitShader();\n    }\n    InitShader() {\n        // let vShader = GLUtility.CreateShaderFromPath(this.gl, this.gl.VERTEX_SHADER,'/shader/vsCanvas.glsl');\n        // let fShader = GLUtility.CreateShaderFromPath(this.gl, this.gl.FRAGMENT_SHADER, '/shader/fsColor.glsl');\n\n        let vShader = GLShaderCommon.CreateShader(this.gl, this.gl.VERTEX_SHADER, this.v); // '/shader/vsCanvas.glsl');\n        let fShader = GLShaderCommon.CreateShader(this.gl, this.gl.FRAGMENT_SHADER, this.f); // '/shader/fsColor.glsl');\n\n        if (vShader && fShader) {\n            this.vShader = vShader;\n            this.fShader = fShader;\n            let program = GLShaderCommon.CreateProgram(this.gl, vShader, fShader);\n            if (program) { this.program = program; }\n        }\n\n        // this.InitVerext();\n    }\n    Render(gl: WebGLRenderingContext) {\n\n        let col = [0.1, 0, 0, 1];\n\n        this.vertexs = new Float32Array([\n            // left column\n            -1, -1, 1, 1, 1, 1,\n            - 1, 1, col[0], col[1], col[2], col[3],\n            1, -1, col[0], col[1], col[2], col[3],\n\n            -1, 1, 1, 1, 1, 1,\n            1, -1, col[0], col[1], col[2], col[3],\n            1, 1, col[0], col[1], col[2], col[3],\n\n        ]);\n\n        this.posBuffer = this.gl.createBuffer() as WebGLBuffer;\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.posBuffer);\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(this.vertexs), gl.STATIC_DRAW);\n\n        this.posLocAtt = this.gl.getAttribLocation(this.program, 'a_position');\n        // Tell the attribute how to get data out of posBuffer (ARRAY_BUFFER)\n        let size = 2;          // 2 components per iteration\n        let type = gl.FLOAT;   // the data is 32bit floats\n        let normalize = false; // don't normalize the data\n        let stride = 6 * Float32Array.BYTES_PER_ELEMENT; // 0 = move forward size * sizeof(type) each iteration to get the next position\n        let offset = 0;        // start at the beginning of the buffer\n        gl.vertexAttribPointer(this.posLocAtt, size, type, normalize, stride, offset);\n        gl.enableVertexAttribArray(this.posLocAtt);\n\n        // this.colLocAtt = this.gl.getAttribLocation(this.program, 'a_color');\n        // size = 4;          // 2 components per iteration\n        // type = gl.FLOAT;   // the data is 32bit floats\n        // normalize = false; // don't normalize the data\n        // stride = 6 * Float32Array.BYTES_PER_ELEMENT; // 0 = move forward size * sizeof(type) each iteration to get the next position\n        // offset = 2 * Float32Array.BYTES_PER_ELEMENT;        // start at the beginning of the buffer\n        // gl.vertexAttribPointer(this.colLocAtt, size, type, normalize, stride, offset);\n        // gl.enableVertexAttribArray(this.colLocAtt);\n\n        gl.useProgram(this.program);\n        let primitiveType = gl.TRIANGLES; // LINE_LOOP; // gl.TRIANGLE_STRIP;\n        offset = 0;\n        let count = 6; // this.vertexs.length * 0.5;\n        gl.drawArrays(primitiveType, offset, count);\n\n    }\n}","import { Solution } from '../';\r\nimport { Solution as Solution3D} from '../../02_Three';\r\nexport class UI {\r\n    solution: Solution | Solution3D;\r\n    hostDiv: HTMLElement;\r\n\r\n    isActive_high_low_connectedness_user = false;\r\n    isActive_Paris_main_st = true;\r\n    isActive_treated_st = false;\r\n    isActive_control_st = false;\r\n    isActive_zones_30 = false;\r\n    isActive_streetOSM = false;\r\n    isActive_twitter = false;\r\n\r\n    month: number = -1;\r\n\r\n    constructor(solution: Solution | Solution3D) {\r\n        this.solution = solution;\r\n        this.hostDiv = solution.hostDiv;\r\n        this.appendUI();\r\n    }\r\n    public appendUI(){\r\n\r\n        const mainMenu = document.createElement('div');\r\n        mainMenu.style.position = 'absolute';\r\n        this.hostDiv.append(mainMenu);\r\n\r\n\r\n        let checkBoxUIB = getCheckBox('main street');\r\n        mainMenu.append(checkBoxUIB.div);\r\n        checkBoxUIB.checkBox.checked = true;\r\n        checkBoxUIB.checkBox.onchange = () => {\r\n            if (checkBoxUIB.checkBox.checked === true){\r\n                this.isActive_Paris_main_st = true;\r\n            } else {\r\n                this.isActive_Paris_main_st = false;\r\n            }\r\n        }\r\n\r\n        \r\n        let checkBoxUI_OSM = getCheckBox('OSM street');\r\n        mainMenu.append(checkBoxUI_OSM.div);\r\n        checkBoxUI_OSM.checkBox.onchange = () => {\r\n            if (checkBoxUI_OSM.checkBox.checked === true){\r\n                this.isActive_streetOSM = true;\r\n            } else {\r\n                this.isActive_streetOSM = false;\r\n            }\r\n        }\r\n\r\n\r\n        let checkBoxUIC = getCheckBox('treated street');\r\n        mainMenu.append(checkBoxUIC.div);\r\n        checkBoxUIC.checkBox.onchange = () => {\r\n            if (checkBoxUIC.checkBox.checked === true){\r\n                this.isActive_treated_st = true;\r\n            } else {\r\n                this.isActive_treated_st = false;\r\n            }\r\n        }\r\n\r\n\r\n        let checkBoxUID = getCheckBox('control street');\r\n        mainMenu.append(checkBoxUID.div);\r\n        checkBoxUID.checkBox.onchange = () => {\r\n            if (checkBoxUID.checkBox.checked === true){\r\n                this.isActive_control_st = true;\r\n            } else {\r\n                this.isActive_control_st = false;\r\n            }\r\n        }\r\n\r\n        \r\n        let checkBoxUIE = getCheckBox('zones 30');\r\n        mainMenu.append(checkBoxUIE.div);\r\n        checkBoxUIE.checkBox.onchange = () => {\r\n            if (checkBoxUIE.checkBox.checked === true){\r\n                this.isActive_zones_30 = true;\r\n            } else {\r\n                this.isActive_zones_30 = false;\r\n            }\r\n        }\r\n\r\n        let checkBoxUI_Node = getCheckBox('Node');\r\n        mainMenu.append(checkBoxUI_Node.div);\r\n        checkBoxUI_Node.checkBox.onchange = () => {\r\n            if (checkBoxUI_Node.checkBox.checked === true){\r\n                this.isActive_twitter = true;\r\n            } else {\r\n                this.isActive_twitter = false;\r\n            }\r\n        }\r\n\r\n\r\n        let slider = getSlider('Month') \r\n        mainMenu.append(slider.div);\r\n\r\n        slider.slider.onchange = () => {\r\n           this.month = +slider.slider.value;\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst getCheckBox = (title: string) => {\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const checkBox = document.createElement('input');\r\n    checkBox.type = 'checkbox';\r\n    const text = document.createElement('div');\r\n    text.textContent = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(checkBox);\r\n    div.appendChild(text);\r\n\r\n    return {\r\n        div, checkBox\r\n    }\r\n};\r\n\r\nconst getSlider = (title: string) => {\r\n    // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const slider = document.createElement('input');\r\n    slider.type = 'range';\r\n    slider.min = '0';\r\n    slider.max = '12';\r\n\r\n    const text = document.createElement('div');\r\n    text.textContent = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(slider);\r\n    div.appendChild(text);\r\n\r\n    return {\r\n        div, slider\r\n    }\r\n};","\r\nexport class TweetData {\r\n    t: number = 0.1;\r\n    color: string = 'rgba(10, 250, 10, 0.8)';\r\n    lon: number;\r\n    lat: number;\r\n    userID: number;\r\n    streetID: number;\r\n    year: number;\r\n    month: number;\r\n    day: number;\r\n    constructor(x: number, y: number) {\r\n        this.lon = x;\r\n        this.lat = y;\r\n\r\n    }\r\n    render(ctx: CanvasRenderingContext2D, toScreen: (x: number, y: number)=> number[]) {\r\n        this.t += 0.1;\r\n\r\n        ctx.fillStyle = this.color;\r\n        ctx.beginPath();\r\n\r\n        const projected = toScreen(this.lon, this.lat);\r\n        ctx.arc(projected[0], projected[1], (Math.sin(this.t * 0.8) + 4) * 2, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n\r\n        ctx.fill();\r\n    }\r\n}","import { Solution } from '..';\r\nimport { getCSVFromURL, getJSONFromURL } from 'njscore';\r\nimport { TweetData } from './TweetData';\r\nexport class DataProcessTweets {\r\n    solution: Solution;\r\n\r\n    domains;\r\n\r\n    tweetDataArray: TweetData[] = [];\r\n    active = false;\r\n    constructor(solution: Solution, path) {\r\n        this.solution = solution;\r\n\r\n        this.domains = {\r\n            userID: new Domain('user-id'),\r\n            streetID: new Domain('street-id'),\r\n            year: new Domain('year'),\r\n            month: new Domain('month'),\r\n            day: new Domain('day'),\r\n        }\r\n\r\n\r\n\r\n        getJSONFromURL(path).then((dataRaw) => {\r\n            // const line = d.split(/\\r\\n|\\r|\\n/g);\r\n            // console.log(line)\r\n            const key = 'noNeighbsLog';\r\n            let count = 0;\r\n            let latSum = 0;\r\n            let lonSum = 0;\r\n\r\n            for (let i = 0; i < dataRaw['cells'].length; ++i) {\r\n                const cell = dataRaw['cells'][i];\r\n\r\n                const x = +cell['lon'];\r\n                const y = +cell['lat'];\r\n                // const [x, y] = this.solution.toScreen(+cell['lon'], +cell['lat'])\r\n                // console.log(x, y)\r\n                let keyIndex = +cell[key]\r\n                keyIndex /= 2;\r\n    \r\n\r\n                //     console.log(lat, lon, userID, year, month, day, streetID)\r\n                if (x !== 0 && y !== 0) {\r\n                    let tweetData = new TweetData(x, y);\r\n                    this.tweetDataArray.push(tweetData)\r\n                    lonSum += x;\r\n                    latSum += y;\r\n                    count++;\r\n                }\r\n                this.active = true;\r\n            }\r\n            // console.log(lonSum / count, latSum / count)\r\n            this.solution.center(lonSum / count, latSum / count)\r\n            this.solution.zoom(12);\r\n        });\r\n\r\n\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        if (!this.active) { return; }\r\n        this.tweetDataArray.map((d: TweetData) => {\r\n\r\n            if (d.month === this.solution.ui.month || this.solution.ui.month < 1) {\r\n                d.render(ctx, this.solution.toScreen);\r\n            }\r\n            return 0;\r\n        });\r\n    }\r\n}\r\n\r\n\r\nclass Domain {\r\n    title: string;\r\n    min: number = Number.MAX_VALUE\r\n    max: number = Number.MIN_VALUE\r\n    constructor(titie: string) {\r\n        this.title = titie;\r\n    }\r\n    public compute(value: number) {\r\n        this.min = value < this.min ? value : this.min;\r\n        this.max = value > this.max ? value : this.max;\r\n    }\r\n}\r\n","import { RendererJSAPI } from '../../../../lib';\r\nimport { getCSVFromURL, getJSONFromURL } from 'njscore';\r\nimport { UI } from './UI';\r\nimport { DataProcessTweets } from './DataProcessTweets';\r\n\r\nimport { FilterGLViewDarkForDarken } from './Tint/FilterGLViewDarkForDarken';\r\n\r\nexport class Solution extends RendererJSAPI {\r\n\r\n    pts: number[][] = [];\r\n\r\n    streetOSM: any = [];\r\n    routesMain: any = [];\r\n    routesTreated: any = [];\r\n    routesControl: any = [];\r\n    zones30: any = [];\r\n\r\n    ui: UI\r\n\r\n    dataProcessTweets: DataProcessTweets;\r\n\r\n    constructor(id: any) {\r\n\r\n        super(id);\r\n    }\r\n    initPost() {\r\n        const canvasGL = document.createElement('canvas');\r\n        canvasGL.style.position = 'absolute';\r\n        canvasGL.style.pointerEvents = 'none';\r\n        canvasGL.style.mixBlendMode = 'overlay';\r\n        canvasGL.width = this.mView.container.clientWidth;\r\n        canvasGL.height = this.mView.container.clientHeight;\r\n        this.mView.container.appendChild(canvasGL);\r\n        const glCtx = canvasGL.getContext('webgl');\r\n        const d = new FilterGLViewDarkForDarken(glCtx, 0.5, 5)\r\n        d.Render(glCtx);\r\n\r\n\r\n\r\n\r\n        const canvas = document.createElement('canvas');\r\n        canvas.id = 'layer';\r\n        canvas.width = this.mView.container.clientWidth;\r\n        canvas.height = this.mView.container.clientHeight;\r\n        canvas.style.background = 'rgba(0, 15, 0, 0.4)';\r\n        canvas.style.position = 'absolute';\r\n        canvas.style.pointerEvents = 'none';\r\n        this.mView.container.appendChild(canvas);\r\n\r\n\r\n        this.ui = new UI(this);\r\n        \r\n        // getJSONFromURL(process.env.PUBLIC_URL + path + 'street_osm.geojson').then((data) => {\r\n        getJSONFromURL('https://raw.githubusercontent.com/NamjuLee/data/master/Paris/street_osm.geojson').then((data) => {\r\n            for (let i = 0; i < data['features'].length; ++i) {\r\n                this.streetOSM.push(data['features'][i]['geometry']['coordinates']);\r\n            }\r\n        });\r\n        getJSONFromURL('https://raw.githubusercontent.com/NamjuLee/data/master/Paris/Paris-main-st.geojson').then((data) => {\r\n            for (let i = 0; i < data['features'].length; ++i) {\r\n                this.routesMain.push(data['features'][i]['geometry']['coordinates']);\r\n            }\r\n        });\r\n\r\n        getJSONFromURL('https://raw.githubusercontent.com/NamjuLee/data/master/Paris/treated-st.geojson').then((data) => {\r\n            for (let i = 0; i < data['features'].length; ++i) {\r\n                this.routesTreated.push(data['features'][i]['geometry']['coordinates']);\r\n            }\r\n        });\r\n        getJSONFromURL('https://raw.githubusercontent.com/NamjuLee/data/master/Paris/control-st.geojson').then((data) => {\r\n            for (let i = 0; i < data['features'].length; ++i) {\r\n                this.routesControl.push(data['features'][i]['geometry']['coordinates']);\r\n            }\r\n        });\r\n        getJSONFromURL('https://raw.githubusercontent.com/NamjuLee/data/master/Paris/zones-30.geojson').then((data) => {\r\n            for (let i = 0; i < data['features'].length; ++i) {\r\n                this.zones30.push(data['features'][i]['geometry']['coordinates']);\r\n            }\r\n            //     console.log(this.zones30)\r\n            this.start();\r\n        });\r\n\r\n        // const path = '/static/research/slow-zone/';\r\n        // this.dataProcessTweets = new DataProcessTweets(this, process.env.PUBLIC_URL + path + 'tweets_10pct_lat-lon_sample.csv');\r\n        this.dataProcessTweets = new DataProcessTweets(this, 'https://raw.githubusercontent.com/NamjuLee/data/master/Paris/twitter_data_2010-2015.json');\r\n\r\n    }\r\n    render(ctx: CanvasRenderingContext2D) {\r\n        ctx.globalCompositeOperation = 'screen'; //'lighten';\r\n        if (this.ui.isActive_streetOSM) {\r\n            renderLine(ctx, this.streetOSM, '#00FFFF', 0.5, this.toScreen);\r\n        }\r\n        if (this.ui.isActive_zones_30) {\r\n            renderMultiPolygon(ctx, this.zones30, '#0000ff39', 0.5, this.toScreen);\r\n        }\r\n        if (this.ui.isActive_Paris_main_st) {\r\n            renderLine(ctx, this.routesMain, '#00FFFF', 0.5, this.toScreen);\r\n        }\r\n\r\n        if (this.ui.isActive_control_st) {\r\n            renderLine(ctx, this.routesControl, '#ff0000', 0.5, this.toScreen);\r\n        }\r\n        if (this.ui.isActive_treated_st) {\r\n            renderLine(ctx, this.routesTreated, '#00ff00', 0.5, this.toScreen);\r\n        }\r\n\r\n        if (this.ui.isActive_twitter) {\r\n            // for (let i = 0; i < this.pts.length; ++i) {\r\n            //     const projected = this.toScreen(this.pts[i][0], this.pts[i][1]);\r\n            //     renderPoint(ctx, projected[0], projected[1], this.time + 3, 'rgba(255, 0, 0, 0.85)');\r\n            // }\r\n\r\n            this.dataProcessTweets.render(ctx);\r\n        }\r\n\r\n        // this.isStatic = true;\r\n    }\r\n    keyDown(k: KeyboardEvent): void {\r\n        //     console.log('key pressed', k);\r\n    }\r\n    mouseDown(x: number, y: number): void {\r\n        //     console.log('mouse down')\r\n    }\r\n    mouseUp(x: number, y: number): void {\r\n        //     console.log('mouse up')\r\n    }\r\n    mouseClick(x: number, y: number): void {\r\n        //     console.log(x, y)\r\n        const mapProjected = this.toMap(x, y);\r\n        this.pts.push(mapProjected);\r\n    }\r\n    mouseMove(x: number, y: number) {\r\n\r\n    }\r\n}\r\n\r\nconst renderPoint = (ctx: CanvasRenderingContext2D, x: number, y: number, t: number, color: string) => {\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, (Math.sin(t * 0.8) + 4) * 2, 0, Math.PI * 2);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n}\r\n\r\nconst renderLine = (ctx: CanvasRenderingContext2D, paths: any, color: string, lineWidth: number, toScreen: (x: number, y: number) => number[]) => {\r\n    ctx.strokeStyle = color;\r\n    for (let i = 0; i < paths.length; ++i) {\r\n        const route = paths[i]\r\n\r\n        for (let j = 0; j < route.length; ++j) {\r\n\r\n            let projected = toScreen(route[j][0][0], route[j][0][1]);\r\n            const path = new Path2D();\r\n            path.moveTo(projected[0], projected[1]);\r\n\r\n            for (let k = 1; k < route[j].length; ++k) {\r\n                projected = toScreen(route[j][k][0], route[j][k][1]);\r\n                path.lineTo(projected[0], projected[1]);\r\n            }\r\n\r\n            ctx.lineWidth = lineWidth; // Math.sin(lineWidth * 1.5) + 1.15;\r\n            ctx.stroke(path);\r\n        }\r\n    }\r\n};\r\n\r\nconst renderMultiPolygon = (ctx: CanvasRenderingContext2D, multiPolygons: any, color: string, lineWidth: number, toScreen: (x: number, y: number) => number[]) => {\r\n    // if (multiPolygons === undefined) return;\r\n\r\n    ctx.fillStyle = color;\r\n    for (let multi = 0; multi < multiPolygons.length; ++multi) {\r\n        const multiPolygon = multiPolygons[multi];\r\n\r\n        for (let polyI = 0; polyI < multiPolygon.length; ++polyI) {\r\n            const polygon = multiPolygon[polyI];\r\n\r\n            if (polygon.length === 1) {\r\n                const thePolygon = polygon[0];\r\n\r\n                let pl = thePolygon[0];\r\n                // console.log('pl', pl)\r\n                let lon = pl[0];\r\n                let lat = pl[1];\r\n                let projected = toScreen(lon, lat);\r\n\r\n                ctx.beginPath();\r\n                ctx.moveTo(projected[0], projected[1]);\r\n\r\n                for (let i = 1; i < thePolygon.length; ++i) {\r\n\r\n                    pl = thePolygon[i];\r\n                    lon = pl[0];\r\n                    lat = pl[1];\r\n                    projected = toScreen(lon, lat);\r\n                    ctx.lineTo(projected[0], projected[1]);\r\n                }\r\n                ctx.closePath();\r\n                ctx.fill();\r\n\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n"],"names":["FilterGLViewDarkForDarken","constructor","gl","program","fragmentShader","vertexShader","matrixLocation","posBuffer","colBuffer","vertexs","posLocAtt","colLocAtt","matLoc","colLoc","cVecLoc","mouseLoc","timeGL","vShader","fShader","v","f","positionAttribLocation","colorAttribLocation","translation","color","colArray","this","Math","random","InitShader","GLShaderCommon","VERTEX_SHADER","FRAGMENT_SHADER","Render","col","Float32Array","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","getAttribLocation","type","FLOAT","stride","BYTES_PER_ELEMENT","offset","vertexAttribPointer","enableVertexAttribArray","useProgram","primitiveType","TRIANGLES","drawArrays","UI","solution","hostDiv","isActive_high_low_connectedness_user","isActive_Paris_main_st","isActive_treated_st","isActive_control_st","isActive_zones_30","isActive_streetOSM","isActive_twitter","month","appendUI","mainMenu","document","createElement","style","position","append","checkBoxUIB","getCheckBox","div","checkBox","checked","onchange","checkBoxUI_OSM","checkBoxUIC","checkBoxUID","checkBoxUIE","checkBoxUI_Node","slider","getSlider","value","title","display","text","textContent","appendChild","min","max","TweetData","x","y","t","lon","lat","userID","streetID","year","day","render","ctx","toScreen","fillStyle","beginPath","projected","arc","sin","PI","closePath","fill","DataProcessTweets","path","domains","tweetDataArray","active","Domain","getJSONFromURL","then","dataRaw","count","latSum","lonSum","i","length","cell","keyIndex","tweetData","push","center","zoom","map","d","ui","titie","Number","MAX_VALUE","MIN_VALUE","compute","Solution","RendererJSAPI","id","super","pts","streetOSM","routesMain","routesTreated","routesControl","zones30","dataProcessTweets","initPost","canvasGL","pointerEvents","mixBlendMode","width","mView","container","clientWidth","height","clientHeight","glCtx","getContext","canvas","background","data","start","globalCompositeOperation","renderLine","renderMultiPolygon","keyDown","k","mouseDown","mouseUp","mouseClick","mapProjected","toMap","mouseMove","paths","lineWidth","strokeStyle","route","j","Path2D","moveTo","lineTo","stroke","multiPolygons","multi","multiPolygon","polyI","polygon","thePolygon","pl"],"sourceRoot":""}