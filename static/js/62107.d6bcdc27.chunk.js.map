{"version":3,"file":"static/js/62107.d6bcdc27.chunk.js","mappings":"wIACO,MAAMA,EAMTC,YAAYC,GAAa,KALzBC,YAAM,OACNC,UAAI,OACJC,SAAG,OACHC,EAAY,EAAI,KACRC,QAAS,EAEbC,KAAKC,WAAWP,EACpB,CACAO,WAAWP,GACP,MAAMC,EAASO,SAASC,cAAc,UAChCP,EAAOM,SAASE,eAAeV,GAKrC,GAJIE,IACAA,EAAKS,YAAYV,GACjBK,KAAKJ,KAAOA,GAEZD,EAAQ,CACRK,KAAKL,OAASA,EACdK,KAAKL,OAAOW,MAAQN,KAAKJ,KAAKW,YAC9BP,KAAKL,OAAOa,OAASR,KAAKJ,KAAKa,aAC/B,MAAMZ,EAAMG,KAAKL,OAAOe,WAAW,MAC/Bb,IACAG,KAAKH,IAAMA,EACXG,KAAKW,OAEb,CACJ,CACAA,OACIX,KAAKD,QAAS,EACdC,KAAKY,YACLZ,KAAKa,MACT,CACAD,YACIZ,KAAKL,OAAOmB,YAAeC,GAAkBf,KAAKgB,UAAUD,GAC5Df,KAAKL,OAAOsB,UAAaF,GAAkBf,KAAKkB,QAAQH,GACxDf,KAAKL,OAAOwB,YAAeJ,GAAkBf,KAAKoB,UAAUL,GAC5DM,OAAOC,SAAYP,GAAef,KAAKuB,OAAOR,EAElD,CACAQ,OAAOR,GACHf,KAAKL,OAAOW,MAAQN,KAAKJ,KAAKW,YAC9BP,KAAKL,OAAOa,OAASR,KAAKJ,KAAKa,YACnC,CACAI,OAEIW,uBAAsB,KAAQxB,KAAKa,MAAM,IACzCb,KAAKH,IAAI4B,UAAU,EAAG,EAAGzB,KAAKH,IAAIF,OAAOW,MAAON,KAAKH,IAAIF,OAAOa,QAChER,KAAKH,IAAI6B,YACT1B,KAAKH,IAAI8B,KAAK,EAAG,EAAG3B,KAAKH,IAAIF,OAAOW,MAAON,KAAKH,IAAIF,OAAOa,QAC3DR,KAAKH,IAAI+B,YACT5B,KAAKH,IAAIgC,UAAY,UACrB7B,KAAKH,IAAIiC,OACT9B,KAAK+B,OAAO/B,KAAKH,IACrB,CACAkC,OAAOlC,GACH,CAEJmB,UAAUD,GACN,CAEJG,QAAQH,GACJ,CAEJK,UAAUL,GACN,CAEGiB,UAEH,IADAhC,KAAKD,QAAS,EACRC,KAAKJ,KAAKqC,WACZjC,KAAKJ,KAAKsC,YAAYlC,KAAKJ,KAAKqC,UAExC,E,aCtEG,MAAME,EAcTC,eAAiB,OAAOD,EAAME,IAAM,CACpC5C,YAAY6C,GAAqD,IAAtCC,EAAW,uDAAG,IAAIC,EAAAA,GAAS,EAAG,EAAG,GAAE,KAb9DF,SAAG,OACHG,SAAG,OACHC,UAAI,OACJC,KAAgB,GAAG,KACnBC,YAAM,OACNC,GAAa,EAAE,KACfC,GAAa,EAAE,KACfC,GAAa,EAAE,KACfC,GAAa,EAAE,KACfT,GAAa,EAAE,KACf7C,QAAE,OACFuD,UAAI,EAGAjD,KAAKsC,IAAMA,EACXtC,KAAKyC,IAAMF,EACXvC,KAAK2C,KAAO,GACZ3C,KAAK4C,OAAS,GACd5C,KAAK6C,GAAK,EACV7C,KAAK8C,GAAK,EACV9C,KAAK+C,GAAK,EACV/C,KAAKN,GAAKyC,EAAMe,QAChBlD,KAAKiD,KAAO,CAAC,CACjB,CACOE,WAGH,MAFW,QAAUnD,KAAKN,EAG9B,CACO0D,SACE,CAEFrB,SACE,EAnCAI,EACFE,GAAK,ECAT,MAAMgB,EAQT5D,YAAY6D,EAAcC,GAAiD,IAAnCC,EAAU,uDAAG,GAAIC,EAAU,uDAAG,GAAE,KAPjEC,UAAqB,GAAG,KACxBF,GAAa,EAAE,KACfC,GAAa,EAAE,KACfE,IAAc,EAAI,KAClBC,IAAc,EAAI,KAClBN,GAAed,EAAAA,GAAAA,SAAkB,KACjCe,GAAef,EAAAA,GAAAA,SAElBxC,KAAKwD,GAAKA,EACVxD,KAAKyD,GAAKA,EACVzD,KAAK2D,IAAM,EACX3D,KAAK4D,IAAM,EACX5D,KAAKsD,GAAKA,EACVtD,KAAKuD,GAAKA,EAEVvD,KAAKW,MACT,CACOA,OACHX,KAAK2D,KAAO3D,KAAKuD,GAAGM,EAAI7D,KAAKsD,GAAGO,IAAM7D,KAAKwD,GAAK,GAChDxD,KAAK4D,KAAO5D,KAAKuD,GAAGO,EAAI9D,KAAKsD,GAAGQ,IAAM9D,KAAKyD,GAAK,GAGhDzD,KAAK+D,UACT,CACOA,WAGH,IAAK,IAAIjB,EAAI,EAAGA,EAAI9C,KAAKyD,KAAMX,EAC3B,IAAK,IAAID,EAAI,EAAGA,EAAI7C,KAAKwD,KAAMX,EAAG,CAC9B,IAAIgB,EAAI7D,KAAKsD,GAAGO,EAAIhB,EAAI7C,KAAK2D,IACzBG,EAAI9D,KAAKsD,GAAGQ,EAAIhB,EAAI9C,KAAK4D,IACzBI,EAAK,IAAI7B,EAAMnC,MACnBgE,EAAGnB,EAAIA,EAAGmB,EAAGlB,EAAIA,EACjBkB,EAAGvB,IAAM,IAAID,EAAAA,GAASqB,EAAGC,EAAG,GAC5BE,EAAGpB,OAAOqB,KAAK,IAAIzB,EAAAA,GAASqB,EAAe,GAAX7D,KAAK2D,IAAWG,EAAe,GAAX9D,KAAK4D,IAAW,IACpEI,EAAGpB,OAAOqB,KAAK,IAAIzB,EAAAA,GAASqB,EAAe,GAAX7D,KAAK2D,IAAWG,EAAe,GAAX9D,KAAK4D,IAAW,IACpEI,EAAGpB,OAAOqB,KAAK,IAAIzB,EAAAA,GAASqB,EAAe,GAAX7D,KAAK2D,IAAWG,EAAe,GAAX9D,KAAK4D,IAAW,IACpEI,EAAGpB,OAAOqB,KAAK,IAAIzB,EAAAA,GAASqB,EAAe,GAAX7D,KAAK2D,IAAWG,EAAe,GAAX9D,KAAK4D,IAAW,IAEpE5D,KAAK0D,UAAUO,KAAKD,EACxB,CAEJhE,KAAKkE,kBACT,CACOA,mBACH,IAAK,IAAIpB,EAAI,EAAGA,EAAI9C,KAAKyD,KAAMX,EAC3B,IAAK,IAAID,EAAI,EAAGA,EAAI7C,KAAKwD,KAAMX,EAAG,CAC9B,IAAIE,EAAID,EAAI9C,KAAKwD,GAAKX,EAClBsB,EAAMnE,KAAK0D,UAAUX,GACrBF,EAAI,GAAKsB,EAAIxB,KAAKsB,KAAKjE,KAAK0D,UAAUX,EAAI,IAC1CF,EAAI7C,KAAKwD,GAAK,GAAKW,EAAIxB,KAAKsB,KAAKjE,KAAK0D,UAAUX,EAAI,IACpDD,EAAI,GAAKqB,EAAIxB,KAAKsB,KAAKjE,KAAK0D,UAAUX,EAAI/C,KAAKwD,KAC/CV,EAAI9C,KAAKyD,GAAK,GAAKU,EAAIxB,KAAKsB,KAAKjE,KAAK0D,UAAUX,EAAI/C,KAAKwD,KACxDX,EAAI,GAAOC,EAAI9C,KAAKyD,GAAK,GAAMU,EAAIxB,KAAKsB,KAAKjE,KAAK0D,UAAUX,EAAI/C,KAAKwD,GAAK,IAC1EX,EAAI,GAAOC,EAAI,GAAMqB,EAAIxB,KAAKsB,KAAKjE,KAAK0D,UAAUX,EAAI/C,KAAKwD,GAAK,IAChEX,EAAI7C,KAAKwD,GAAK,GAAOV,EAAI9C,KAAKyD,GAAK,GAAMU,EAAIxB,KAAKsB,KAAKjE,KAAK0D,UAAUX,EAAI/C,KAAKwD,GAAK,IACpFX,EAAI7C,KAAKwD,GAAK,GAAOV,EAAI,GAAMqB,EAAIxB,KAAKsB,KAAKjE,KAAK0D,UAAUX,EAAI/C,KAAKwD,GAAK,GACnF,CAGR,CACOY,gBAAgBC,GACnB,IAAIC,EAAWtE,KACXuE,EAAK,IAAI/B,EAAAA,GAAS6B,EAAGR,EAAIS,EAAShB,GAAGO,EAAGQ,EAAGP,EAAIQ,EAAShB,GAAGQ,EAAGO,EAAGG,EAAIF,EAAShB,GAAGkB,GACjF3B,EAAI4B,KAAKC,MAAMH,EAAGV,EAAIS,EAASX,KAC/Bb,EAAI2B,KAAKC,MAAMH,EAAGT,EAAIQ,EAASV,KAKnC,OAJIf,GAAKyB,EAASd,KAAMX,EAAIyB,EAASd,GAAK,GACtCV,GAAKwB,EAASb,KAAMX,EAAIwB,EAASb,GAAK,GACtCZ,EAAI,IAAKA,EAAI,GACbC,EAAI,IAAKA,EAAI,GACVwB,EAASZ,UAAUZ,EAAIwB,EAASd,GAAKX,EAChD,CAEOzB,UAAUyC,EAAWC,EAAWU,GACpBxE,KAEIoE,gBAAgB,IAAI5B,EAAAA,GAASqB,EAAGC,EAAGU,GAG1D,CACOG,sBACH,CAEGC,eACH,CAGGC,aAAahF,GAChB,IAAIyE,EAAWtE,KACf,IAAK,IAAI6C,EAAI,EAAGA,EAAIyB,EAASZ,UAAUoB,SAAUjC,EAAG,CAChD,IAAIkC,EAAQ,UAEZlF,EAAImF,UAAY,GAChBnF,EAAI6B,YACJ7B,EAAIoF,OAAOX,EAASZ,UAAUb,GAAGD,OAAO,GAAGiB,EAAGS,EAASZ,UAAUb,GAAGD,OAAO,GAAGkB,GAE9E,IAAK,IAAIhB,EAAI,EAAGA,EAAIwB,EAASZ,UAAUb,GAAGD,OAAOkC,SAAUhC,EACvDjD,EAAIqF,OAAOZ,EAASZ,UAAUb,GAAGD,OAAOE,GAAGe,EAAGS,EAASZ,UAAUb,GAAGD,OAAOE,GAAGgB,GAIlFjE,EAAI+B,YACJ/B,EAAIsF,YAAcJ,EAClBlF,EAAIuF,QAER,CACJ,CACOC,cACH,IAAIf,EAAWtE,KACf,IAAK,IAAI6C,EAAI,EAAGA,EAAIyB,EAASZ,UAAUoB,SAAUjC,GAGrD,CACOyC,gBAAgBzF,GACnB,IAAIyE,EAAWtE,KAEfH,EAAIgC,UAAY,UAChB,IAAK,IAAIgB,EAAI,EAAGA,EAAIyB,EAASZ,UAAUoB,SAAUjC,EAC7ChD,EAAI6B,YACJ7B,EAAI0F,IAAIjB,EAASZ,UAAUb,GAAGJ,IAAIoB,EAAGS,EAASZ,UAAUb,GAAGJ,IAAIqB,EAAG,EAAG,EAAG,MAExEjE,EAAI+B,YACJ/B,EAAIiC,MAGZ,CACOC,OAAOlC,GAEVG,KAAK6E,aAAahF,GAClBG,KAAKsF,gBAAgBzF,EACzB,ECpIG,MAAM2F,EAET/F,cAAe,KADfgG,UAAI,EAEAzF,KAAKyF,KAAO,IAAIpC,EAAS,IAAIb,EAAAA,GAAS,GAAI,IAAK,IAAIA,EAAAA,GAAS,IAAK,KAErE,CACAT,OAAOlC,GACHG,KAAKyF,KAAK1D,OAAOlC,EACrB,CACAmB,UAAUD,GACV,CAEAG,QAAQH,GACR,CAEAK,UAAUL,GACV,CAEA2E,UAAU3E,GACV,ECnBG,MAAM4E,EAITlG,cAAqC,IAAzBC,EAAU,uDAAG,UAAS,KAHlCkG,gBAAU,OACVC,UAAI,EAGA7F,KAAK6F,KAAO,IAAIL,EAChBxF,KAAK4F,WAAa,IAAIpG,EAAWE,GACjCM,KAAK8F,YACL9F,KAAK+F,cACT,CACAD,YACI9F,KAAK4F,WAAW5E,UAAaD,GAAkBf,KAAK6F,KAAK7E,UAAUD,GACnEf,KAAK4F,WAAWxE,UAAaL,GAAkBf,KAAK6F,KAAKzE,UAAUL,GACnEf,KAAK4F,WAAW1E,QAAWH,GAAkBf,KAAK6F,KAAK3E,QAAQH,EACnE,CACAgF,eACI/F,KAAK4F,WAAW7D,OAAUlC,GAAkCG,KAAK6F,KAAK9D,OAAOlC,EACjF,CACOmC,UACHhC,KAAK4F,WAAW5D,SACpB,E","sources":["njslab/Lab/AppGridSystem/CanvasCore/index.ts","njslab/Lab/AppGridSystem/Core/PixelMap/Pixel.ts","njslab/Lab/AppGridSystem/Core/PixelMap/PixelMap.ts","njslab/Lab/AppGridSystem/Core/Core.ts","njslab/Lab/AppGridSystem/index.ts"],"sourcesContent":["\r\nexport class CanvasCore {\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    t: number = 0.0;\r\n    private active = false;\r\n    constructor(id: string) {\r\n        this.InitCanvas(id);\r\n    }\r\n    InitCanvas(id: string) {\r\n        const canvas = document.createElement('canvas');\r\n        const host = document.getElementById(id);\r\n        if (host) {\r\n            host.appendChild(canvas);\r\n            this.host = host;\r\n        }\r\n        if (canvas) {\r\n            this.canvas = canvas;\r\n            this.canvas.width = this.host.clientWidth;\r\n            this.canvas.height = this.host.clientHeight;\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.Init();\r\n            }\r\n        }\r\n    }\r\n    Init() {\r\n        this.active = true;\r\n        this.EventBind();\r\n        this.Loop();\r\n    }\r\n    EventBind() {\r\n        this.canvas.onmousedown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.canvas.onmouseup = (e: MouseEvent) => this.MouseUp(e);\r\n        this.canvas.onmousemove = (e: MouseEvent) => this.MouseMove(e);\r\n        window.onresize = (e: UIEvent) => this.Resize(e);\r\n\r\n    }\r\n    Resize(e: UIEvent) {\r\n        this.canvas.width = this.host.clientWidth;\r\n        this.canvas.height = this.host.clientHeight;\r\n    }\r\n    Loop() {\r\n        // if (!this.active) { return; }\r\n        requestAnimationFrame(() => { this.Loop(); });\r\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.closePath();\r\n        this.ctx.fillStyle = '#eeeeee';\r\n        this.ctx.fill();\r\n        this.Render(this.ctx);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // console.log(ctx);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    public destroy(){\r\n        this.active = false;\r\n        while(this.host.lastChild) {\r\n            this.host.removeChild(this.host.lastChild);\r\n        }\r\n    }\r\n}","import { PixelMap } from './PixelMap';\r\nimport { NVector3 } from '../../../../../lib/NJSCore';\r\nexport class Pixel {\r\n    static ID = 0;\r\n    map: PixelMap;\r\n    vec: NVector3;\r\n    norV: NVector3;\r\n    nPix: Pixel[] = [];\r\n    recVec: NVector3[];\r\n    i: number = -1;\r\n    j: number = -1;\r\n    k: number = -1;\r\n    u: number = -1;\r\n    v: number = -1;\r\n    id: number;\r\n    data: {};\r\n    static GetID() { return Pixel.ID++; }\r\n    constructor(map: PixelMap, v: NVector3 = new NVector3(0, 0, 0)) {\r\n        this.map = map;\r\n        this.vec = v;\r\n        this.nPix = [];\r\n        this.recVec = [];\r\n        this.i = -1;\r\n        this.j = -1;\r\n        this.k = -1;\r\n        this.id = Pixel.GetID();\r\n        this.data = {};\r\n    }\r\n    public ToString() {\r\n        let temp = 'Pixel' + this.id;\r\n    //     console.log(temp);\r\n        return temp;\r\n    }\r\n    public Update() {\r\n        /* */\r\n    }\r\n    public Render() {\r\n        /* */\r\n    }\r\n}","import { NVector3 } from '../../../../../lib/NJSCore';\r\nimport { Pixel } from './Pixel';\r\n\r\nexport class PixelMap {\r\n    public listPixel: Pixel[] = [];\r\n    public rx: number = 0;\r\n    public ry: number = 0;\r\n    public ddx: number = 0.0;\r\n    public ddy: number = 0.0;\r\n    public v0: NVector3 = NVector3.Origin();\r\n    public v1: NVector3 = NVector3.Origin();\r\n    constructor(v0: NVector3, v1: NVector3, rx: number = 10, ry: number = 10) {\r\n        this.rx = rx;\r\n        this.ry = ry;\r\n        this.ddx = 0.0;\r\n        this.ddy = 0.0;\r\n        this.v0 = v0;\r\n        this.v1 = v1;\r\n        // this.Built();\r\n        this.Init();\r\n    }\r\n    public Init() {\r\n        this.ddx = (this.v1.x - this.v0.x) / (this.rx - 1.0);\r\n        this.ddy = (this.v1.y - this.v0.y) / (this.ry - 1.0);\r\n    //     console.log('ddx is ' + this.ddx + '. ddy is ' + this.ddx);\r\n    //     console.log('Pixe Map was executed...');\r\n        this.InitGrid();\r\n    }\r\n    public InitGrid() {\r\n    //     console.log(this.rx, this.ry);\r\n\r\n        for (let j = 0; j < this.ry; ++j) {\r\n            for (let i = 0; i < this.rx; ++i) {\r\n                let x = this.v0.x + i * this.ddx;\r\n                let y = this.v0.y + j * this.ddy;\r\n                let px = new Pixel(this);\r\n                px.i = i; px.j = j;\r\n                px.vec = new NVector3(x, y, 0);\r\n                px.recVec.push(new NVector3(x - this.ddx * 0.5, y - this.ddy * 0.5, 0.0));\r\n                px.recVec.push(new NVector3(x + this.ddx * 0.5, y - this.ddy * 0.5, 0.0));\r\n                px.recVec.push(new NVector3(x + this.ddx * 0.5, y + this.ddy * 0.5, 0.0));\r\n                px.recVec.push(new NVector3(x - this.ddx * 0.5, y + this.ddy * 0.5, 0.0));\r\n                // console.log(px);\r\n                this.listPixel.push(px);\r\n            }\r\n        }\r\n        this.InitGridNeighbor();\r\n    }\r\n    public InitGridNeighbor() {\r\n        for (let j = 0; j < this.ry; ++j) {\r\n            for (let i = 0; i < this.rx; ++i) {\r\n                let k = j * this.rx + i;\r\n                let px0 = this.listPixel[k];\r\n                if (i > 0) { px0.nPix.push(this.listPixel[k - 1]); }\r\n                if (i < this.rx - 1) { px0.nPix.push(this.listPixel[k + 1]); }\r\n                if (j > 0) { px0.nPix.push(this.listPixel[k - this.rx]); }\r\n                if (j < this.ry - 1) { px0.nPix.push(this.listPixel[k + this.rx]); }\r\n                if ((i > 0) && (j < this.ry - 1)) { px0.nPix.push(this.listPixel[k + this.rx - 1]); }\r\n                if ((i > 0) && (j > 0)) { px0.nPix.push(this.listPixel[k - this.rx - 1]); }\r\n                if ((i < this.rx - 1) && (j < this.ry - 1)) { px0.nPix.push(this.listPixel[k + this.rx + 1]); }\r\n                if ((i < this.rx - 1) && (j > 0)) { px0.nPix.push(this.listPixel[k - this.rx + 1]); }\r\n            }\r\n        }\r\n    //     console.log('done for computing neighbors ');\r\n    }\r\n    public GetPixelAtPoint(pt: NVector3) {\r\n        let pixelMap = this;\r\n        let dp = new NVector3(pt.x - pixelMap.v0.x, pt.y - pixelMap.v0.y, pt.z - pixelMap.v0.z);\r\n        let i = Math.round(dp.x / pixelMap.ddx);\r\n        let j = Math.round(dp.y / pixelMap.ddy);\r\n        if (i >= pixelMap.rx) { i = pixelMap.rx - 1; }\r\n        if (j >= pixelMap.ry) { j = pixelMap.ry - 1; }\r\n        if (i < 0) { i = 0; }\r\n        if (j < 0) { j = 0; }\r\n        return pixelMap.listPixel[j * pixelMap.rx + i];\r\n    }\r\n    ////////////////// event\r\n    public MouseMove(x: number, y: number, z: number) {\r\n        let pixelMap = this;\r\n    //     console.log('mouseMove x:' + x + ', y:' + y + ', z:' + z);\r\n        let cpt = pixelMap.GetPixelAtPoint(new NVector3(x, y, z));\r\n    //     console.log(cpt.nPix);\r\n        // VisBufferPointsFromVecs(cpt.ptsCenter, 100);\r\n    }\r\n    public onDocumentMouseMove() {\r\n        // console.log('move');\r\n    }\r\n    public onmouseenter() {\r\n        // console.log('enter');\r\n    }\r\n    ////////////////// visualization\r\n    public CVisLineGrid(ctx: CanvasRenderingContext2D) {\r\n        let pixelMap = this;\r\n        for (let i = 0; i < pixelMap.listPixel.length; ++i) {\r\n            let color = '#ff0000';\r\n            // console.log('d');\r\n            ctx.lineWidth = 0.5;\r\n            ctx.beginPath();\r\n            ctx.moveTo(pixelMap.listPixel[i].recVec[0].x, pixelMap.listPixel[i].recVec[0].y);\r\n            // console.log(pixelMap.listPixel[i].recVec)\r\n            for (let j = 1; j < pixelMap.listPixel[i].recVec.length; ++j) {\r\n                ctx.lineTo(pixelMap.listPixel[i].recVec[j].x, pixelMap.listPixel[i].recVec[j].y);\r\n                // console.log(pixelMap.listPixel[i].nPix[j].vec.x, pixelMap.listPixel[i].nPix[j].vec.y);\r\n\r\n            }\r\n            ctx.closePath();\r\n            ctx.strokeStyle = color; // ColorUtility.HexToCanvasColor(color, 1);\r\n            ctx.stroke();\r\n            // ctx.fill();\r\n        }\r\n    }\r\n    public VisMeshGrid() {\r\n        let pixelMap = this;\r\n        for (let i = 0; i < pixelMap.listPixel.length; ++i) {\r\n            // VisMeshRectFromFourVecs(pixelMap.listPixel[i].ptsRectLst);\r\n        }\r\n    }\r\n    public VisCenterPoints(ctx: CanvasRenderingContext2D) {\r\n        let pixelMap = this;\r\n        // let pts: NVector3[] = [];\r\n        ctx.fillStyle = '#0ff00f';\r\n        for (let i = 0; i < pixelMap.listPixel.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(pixelMap.listPixel[i].vec.x, pixelMap.listPixel[i].vec.y, 5, 0, 3.14 * 2);\r\n            // pts.push(pixelMap.listPixel[i].vec);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        // VisBufferPointsFromVecs(pts);\r\n    }\r\n    public Render(ctx: CanvasRenderingContext2D) {\r\n        /* */\r\n        this.CVisLineGrid(ctx);\r\n        this.VisCenterPoints(ctx);\r\n    }\r\n}","import { PixelMap } from './PixelMap/PixelMap';\r\nimport { NVector3 } from '../../../../lib/NJSCore';\r\nexport class Core {\r\n    pMap: PixelMap;\r\n    constructor() {\r\n        this.pMap = new PixelMap(new NVector3(10, 10), new NVector3(200, 200));\r\n    //     console.log(this.pMap);\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        this.pMap.Render(ctx);\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n    //     console.log(e, 'core');\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n    //     console.log(e, 'core');\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n    //     console.log(e, 'core');\r\n    }\r\n    MouseDrag(e: MouseEvent) {\r\n    //     console.log(e, 'core');\r\n    }\r\n}","import { CanvasCore } from './CanvasCore';\r\nimport { Core } from './Core/Core';\r\nexport class AppGridSystem {\r\n    canvasCore: CanvasCore;\r\n    core: Core;\r\n\r\n    constructor(id: string = 'SandBox') {\r\n        this.core = new Core();\r\n        this.canvasCore = new CanvasCore(id);\r\n        this.BindEvent();\r\n        this.BindRenderer();\r\n    }\r\n    BindEvent() {\r\n        this.canvasCore.MouseDown = (e: MouseEvent) => this.core.MouseDown(e);\r\n        this.canvasCore.MouseMove = (e: MouseEvent) => this.core.MouseMove(e);\r\n        this.canvasCore.MouseUp = (e: MouseEvent) => this.core.MouseUp(e);\r\n    }\r\n    BindRenderer() {\r\n        this.canvasCore.Render = (ctx: CanvasRenderingContext2D) => this.core.Render(ctx);\r\n    }\r\n    public destroy() {\r\n        this.canvasCore.destroy();\r\n    }\r\n}\r\n"],"names":["CanvasCore","constructor","id","canvas","host","ctx","t","active","this","InitCanvas","document","createElement","getElementById","appendChild","width","clientWidth","height","clientHeight","getContext","Init","EventBind","Loop","onmousedown","e","MouseDown","onmouseup","MouseUp","onmousemove","MouseMove","window","onresize","Resize","requestAnimationFrame","clearRect","beginPath","rect","closePath","fillStyle","fill","Render","destroy","lastChild","removeChild","Pixel","static","ID","map","v","NVector3","vec","norV","nPix","recVec","i","j","k","u","data","GetID","ToString","Update","PixelMap","v0","v1","rx","ry","listPixel","ddx","ddy","x","y","InitGrid","px","push","InitGridNeighbor","px0","GetPixelAtPoint","pt","pixelMap","dp","z","Math","round","onDocumentMouseMove","onmouseenter","CVisLineGrid","length","color","lineWidth","moveTo","lineTo","strokeStyle","stroke","VisMeshGrid","VisCenterPoints","arc","Core","pMap","MouseDrag","AppGridSystem","canvasCore","core","BindEvent","BindRenderer"],"sourceRoot":""}