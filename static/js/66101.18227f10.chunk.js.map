{"version":3,"file":"static/js/66101.18227f10.chunk.js","mappings":"6JAOO,MAAMA,UAAiBC,EAAAA,GAM1BC,YAAYC,GACRC,MAAMD,GAAI,KALdE,SAAwB,GAAG,KAC3BC,OAAmB,GAAG,KACtBC,QAAgB,EAIhB,CACOC,WAIHC,KAAKC,MAAMC,GAAG,QAASC,IACnBA,EAAMC,iBAAiB,IAE3BJ,KAAKC,MAAMI,WAAWC,uBAAwB,EAG9CN,KAAKO,QAAQ,UAAW,WACxBP,KAAKQ,KAAK,GAGV,MAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOf,GAAK,QACZe,EAAOG,MAAQZ,KAAKC,MAAMY,UAAUC,YACpCL,EAAOM,OAASf,KAAKC,MAAMY,UAAUG,aACrCP,EAAOQ,MAAMC,WAAY,sBACzBT,EAAOQ,MAAME,SAAW,WACxBV,EAAOQ,MAAMG,cAAgB,OAC7BpB,KAAKC,MAAMY,UAAUQ,YAAYZ,IAIjCa,EAAAA,EAAAA,gBAAeC,0DAAoEC,MAAMC,IAErF,MAAMC,EAAWD,EAAY,SAC7BE,QAAQC,IAAI,CAACF,aAEb,IAAI,IAAIG,EAAI,EAAIA,EAAIH,EAASI,SAAUD,EAAG,CACtC,MAAME,EAAWL,EAASG,GAAa,SAGvC,GAAwB,YAArBE,EAAe,KAAgB,CAG9B,IAAIC,EAAID,EAAsB,YAAE,GAAG,GAAG,GAClCE,EAAIF,EAAsB,YAAE,GAAG,GAAG,GACtC,MAAMG,EAAU,GAChBA,EAAQC,KAAKH,EAAGC,GAEhB,IAAI,IAAIG,EAAI,EAAIA,EAAIL,EAAsB,YAAE,GAAGD,SAAUM,EACrDJ,EAAID,EAAsB,YAAE,GAAGK,GAAG,GAClCH,EAAIF,EAAsB,YAAE,GAAGK,GAAG,GAClCF,EAAQC,KAAKH,EAAGC,GAIpBjC,KAAKH,OAAOsC,KAAK,mBAAD,OAAoC,GAAhBE,KAAKC,SAAiB,GAAG,MAC7DtC,KAAKJ,SAASuC,KAAKD,EAEvB,CACJ,IAIR,CACAK,OAAOC,GAEH,IAAK,IAAIX,EAAI,EAAGA,EAAI7B,KAAKJ,SAASkC,SAAUD,EAAG,CAE3C,IAAIG,EAAIhC,KAAKJ,SAASiC,GAAG,GACrBI,EAAIjC,KAAKJ,SAASiC,GAAG,GACrBY,EAAYzC,KAAK0C,SAASV,EAAGC,GAEjCO,EAAIG,YACJH,EAAII,OAAOH,EAAU,GAAIA,EAAU,IAEnC,IAAK,IAAIL,EAAI,EAAGA,EAAIpC,KAAKJ,SAASiC,GAAGC,OAAQM,GAAK,EAC9CJ,EAAIhC,KAAKJ,SAASiC,GAAGO,GACrBH,EAAIjC,KAAKJ,SAASiC,GAAGO,EAAE,GACvBK,EAAYzC,KAAK0C,SAASV,EAAGC,GAE7BO,EAAIK,OAAOJ,EAAU,GAAIA,EAAU,IAGvCD,EAAIM,YACJN,EAAIO,UAAY/C,KAAKH,OAAOgC,GAE5BW,EAAIQ,MAER,CAEAhD,KAAKiD,UAAW,CACpB,CACOC,UAAUlB,EAAWC,GAE5B,E","sources":["njslab/Workshop/workshop-mapping/14_2_PolygonGeoJSON/index.ts"],"sourcesContent":["import { RendererJSAPI } from '../../../../lib'\r\nimport { getJSONFromURL } from 'njscore';\r\n\r\n// https://en.wikipedia.org/wiki/Thematic_map\r\n// https://en.wikipedia.org/wiki/Choropleth_map\r\n\r\n\r\nexport class Solution extends RendererJSAPI {\r\n\r\n    polygons: number [][] = [];\r\n    colors: string[] = [];\r\n    centers: [][] = [];\r\n\r\n    constructor(id: string) {\r\n        super(id);\r\n    }\r\n    public initPost(): void {\r\n\r\n        // disable interaction with a base map\r\n        // https://developers.arcgis.com/javascript/latest/api-reference/esri-views-MapView.html\r\n        this.mView.on(\"drag\", (event) => {\r\n            event.stopPropagation();\r\n        });\r\n        this.mView.navigation.mouseWheelZoomEnabled = false;\r\n\r\n        // reposition the center of the basemap\r\n        this.center(-97.893669, 39.176304);\r\n        this.zoom(4);\r\n\r\n\r\n        const canvas = document.createElement('canvas');\r\n        canvas.id = 'layer';\r\n        canvas.width = this.mView.container.clientWidth;\r\n        canvas.height = this.mView.container.clientHeight;\r\n        canvas.style.background= 'rgba(0, 32, 0, 0.6)';\r\n        canvas.style.position = 'absolute';\r\n        canvas.style.pointerEvents = 'none';\r\n        this.mView.container.appendChild(canvas);\r\n\r\n        \r\n        // https://eric.clst.org/tech/usgeojson/\r\n        getJSONFromURL(process.env.PUBLIC_URL + '/static/data/gz_2010_us_050_00_20m.json').then((d) => {\r\n\r\n            const features = d['features'];\r\n            console.log({features})\r\n\r\n            for(let i = 0 ; i < features.length; ++i) {\r\n                const geometry = features[i]['geometry'];\r\n                // console.log(geometry)\r\n                \r\n                if(geometry['type'] === 'Polygon'){\r\n                    // console.log(geometry['coordinates'].length)\r\n\r\n                    let x = geometry['coordinates'][0][0][0];\r\n                    let y = geometry['coordinates'][0][0][1];\r\n                    const polygon = [];\r\n                    polygon.push(x, y);\r\n\r\n                    for(let j = 1 ; j < geometry['coordinates'][0].length; ++j) {\r\n                        x = geometry['coordinates'][0][j][0];\r\n                        y = geometry['coordinates'][0][j][1];\r\n                        polygon.push(x, y);\r\n\r\n                    }\r\n                    \r\n                    this.colors.push(`rgba(0, 255, 0, ${Math.random() * 0.2 + 0.3})`);\r\n                    this.polygons.push(polygon);\r\n\r\n                }\r\n            }\r\n\r\n            // this.start();\r\n        });\r\n    }\r\n    render(ctx: CanvasRenderingContext2D) {\r\n\r\n        for (let i = 0; i < this.polygons.length; ++i) { \r\n\r\n            let x = this.polygons[i][0];\r\n            let y = this.polygons[i][1];\r\n            let projected = this.toScreen(x, y);\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(projected[0], projected[1]);\r\n\r\n            for (let j = 2; j < this.polygons[i].length; j += 2) { \r\n                x = this.polygons[i][j];\r\n                y = this.polygons[i][j+1];\r\n                projected = this.toScreen(x, y);\r\n            \r\n                ctx.lineTo(projected[0], projected[1]);\r\n            }\r\n\r\n            ctx.closePath()\r\n            ctx.fillStyle = this.colors[i];\r\n\r\n            ctx.fill();\r\n\r\n        }\r\n    //     console.log('done!');\r\n        this.isStatic = true;\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n    //     console.log('inspecting', x,y);\r\n    //     console.log(this.ctx.isPointInPath(x, y))\r\n\r\n    }\r\n}\r\n"],"names":["Solution","RendererJSAPI","constructor","id","super","polygons","colors","centers","initPost","this","mView","on","event","stopPropagation","navigation","mouseWheelZoomEnabled","center","zoom","canvas","document","createElement","width","container","clientWidth","height","clientHeight","style","background","position","pointerEvents","appendChild","getJSONFromURL","process","then","d","features","console","log","i","length","geometry","x","y","polygon","push","j","Math","random","render","ctx","projected","toScreen","beginPath","moveTo","lineTo","closePath","fillStyle","fill","isStatic","mouseMove"],"sourceRoot":""}