{"version":3,"file":"static/js/19731.6856ab38.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Core/ActiveCommandController.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Definition/Blank.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Definition/JSLinearRegression01.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Definition/JSLinearRegressionGradientDescent02.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Definition/TFLinearRegressionGradientDescent01.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Definition/TFModel01.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Definition/TFModel01HorsepowerAndMilesPerGallon.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Definition/TFModel02XOR.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Definition/TFModel03Iris.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Definition/TFModel03SmartDrawing.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Definition/TFPlayground01.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Definition/TFPolynomialRegressionGradientDescent02.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Definition/TFPolynomialRegressionGradientDescent03Interaction.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Definition/TFPolynomialRegressionGradientDescent04TFHorsepowerAndMilesPerGallon.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/Definition/TFPolynomialRegressionGradientDescent05Interaction.ts","njslab/Workshop/workshop-ml/AppTFEnv/Implementation/TFProject/index.ts"],"sourcesContent":["import { CLICK_TYPE } from '../../../lib';\r\n\r\nimport { MouseEventData } from '../../../Model/AppCoreWrapper/IOWrapper/EventInteraction/MouseInteraction';\r\n\r\nimport { TFProject } from '..';\r\n\r\nexport class ActiveCommandController {\r\n    scene: TFProject;\r\n\r\n    constructor(scene: TFProject) {\r\n        this.scene = scene;\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n\r\n        if (e.CLICK_TYPE === CLICK_TYPE.LEFT) {\r\n            this.MouseLeftClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MIDDLE) {\r\n            this.MouseMiddleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN_RIGHT) {\r\n            this.MouseRightClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOUBLE) {\r\n            this.MouseDoubleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MOVE) {\r\n            this.MouseMovePre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DRAG) {\r\n            this.MouseDragPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN) {\r\n            this.MouseDownPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.WHEEL) {\r\n            this.MouseWheelPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.UP) { this.MouseUpPre(e); return; }\r\n    }\r\n\r\n    // .......................................................\r\n    MouseDown(e: MouseEventData) {/* */ }\r\n    MouseDownPre(e: MouseEventData) {\r\n        this.scene.MouseDown(e.x, e.y);\r\n        this.MouseDown(e);\r\n    }\r\n    MouseLeftClick(e: MouseEventData) {/* */ }\r\n    MouseLeftClickPre(e: MouseEventData) {\r\n        this.scene.MouseLeftClick(e.x, e.y);\r\n        this.MouseLeftClick(e);\r\n    }\r\n    MouseMiddleClick(e: MouseEventData) {/* */ }\r\n    MouseMiddleClickPre(e: MouseEventData) {\r\n        this.scene.MouseMiddleClick(e.x, e.y);\r\n        this.MouseMiddleClick(e);\r\n    }\r\n    MouseRightClick(e: MouseEventData) { /* */ }\r\n    MouseRightClickPre(e: MouseEventData) {\r\n        this.scene.MouseRightClick(e.x, e.y);\r\n        this.MouseRightClick(e);\r\n    }\r\n    MouseUp(e: MouseEventData) { /* */ }\r\n    MouseUpPre(e: MouseEventData) {\r\n        this.scene.MouseUp(e.x, e.y);\r\n        this.MouseUp(e);\r\n\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {/* */ }\r\n    MouseDoubleClickPre(e: MouseEventData) {\r\n        this.scene.MouseDoubleClick(e.x, e.y);\r\n        this.MouseDoubleClick(e);\r\n    }\r\n    MouseMove(e: MouseEventData) {/* */ }\r\n    MouseMovePre(e: MouseEventData) {\r\n        this.scene.MouseMove(e.x, e.y);\r\n        this.MouseMove(e);\r\n    }\r\n    MouseDrag(e: MouseEventData) {/* */ }\r\n    MouseDragPre(e: MouseEventData) {\r\n        this.scene.MouseDrag(e.x, e.y);\r\n        this.MouseDrag(e);\r\n    }\r\n    MouseWheel(e: MouseEventData) {/* */ }\r\n    MouseWheelPre(e: MouseEventData) {\r\n        this.scene.MouseWheel(e.x, e.y, e.wheel);\r\n        // console.log(\"drag\");\r\n        this.MouseWheel(e);\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { TFProject } from '..';\r\nimport * as tf from '@tensorflow/tfjs';\r\nexport class Blank extends DefinitionIndeCanvasCore {\r\n    p: number[] = [0, 0];\r\n    constructor(tfProject: TFProject) {\r\n        super(tfProject);\r\n\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        console.log(tf.version);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { TFProject } from '..';\r\n\r\n// import * as tf from '@tensorflow/tfjs';\r\nimport { NVector3, MathUtility } from '../../../lib';\r\nexport class JSLinearRegression01 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n\r\n    a: number = 1;\r\n    bias: number = 0;\r\n\r\n    constructor(tfProjct: TFProject) {\r\n        super(tfProjct);\r\n        this.indeCanvas.title = 'LinearRegression';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, 0, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, 0);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.LinearRegression();\r\n        this.RenderLine(ctx);\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(MathUtility.Remap(this.vs[i].x, 0, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, 0, 1, this.height, 0), 5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        let x0 = 0;\r\n        let y0 = this.a * x0 + this.bias;\r\n\r\n        let x1 = 1;\r\n        let y1 = this.a * x1 + this.bias;\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(x0, 0, 1, 0, this.width), MathUtility.Remap(y0, 0, 1, this.height, 0));\r\n        ctx.lineTo(MathUtility.Remap(x1, 0, 1, 0, this.width), MathUtility.Remap(y1, 0, 1, this.height, 0));\r\n        ctx.stroke();\r\n    }\r\n    public LinearRegression() {\r\n        let xSum = 0;\r\n        let ySum = 0;\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            xSum += this.vs[i].x;\r\n            ySum += this.vs[i].y;\r\n        }\r\n        let xMean = xSum / this.vs.length;\r\n        let yMean = ySum / this.vs.length;\r\n\r\n        let num = 0;\r\n        let den = 0;\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            num += (this.vs[i].x - xMean) * (this.vs[i].y - yMean);\r\n            den += (this.vs[i].x - xMean) * (this.vs[i].x - xMean);\r\n        }\r\n        this.a = num / den;\r\n        this.bias = yMean - this.a * xMean;\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { TFProject } from '..';\r\n\r\n// import * as tf from '@tensorflow/tfjs';\r\nimport { NVector3, MathUtility } from '../../../lib';\r\nexport class JSLinearRegressionGradientDescent02 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n\r\n    weight: number = 1;\r\n    bias: number = 0;\r\n\r\n    constructor(tfProjct: TFProject) {\r\n        super(tfProjct);\r\n        this.indeCanvas.title = 'LinearRegression';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, 0, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, 0);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(MathUtility.Remap(this.vs[i].x, 0, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, 0, 1, this.height, 0), 5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        let x0 = 0;\r\n        let y0 = this.weight * x0 + this.bias;\r\n\r\n        let x1 = 1;\r\n        let y1 = this.weight * x1 + this.bias;\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(x0, 0, 1, 0, this.width), MathUtility.Remap(y0, 0, 1, this.height, 0));\r\n        ctx.lineTo(MathUtility.Remap(x1, 0, 1, 0, this.width), MathUtility.Remap(y1, 0, 1, this.height, 0));\r\n        ctx.stroke();\r\n    }\r\n    public GradientDescent() {\r\n        let learningRate = 0.1;\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let x = this.vs[i].x;\r\n            let y = this.vs[i].y;\r\n            let hypothesis = this.weight * x + this.bias;\r\n            let error = y - hypothesis;\r\n\r\n            this.weight = this.weight + (error * x) * learningRate;\r\n            this.bias = this.bias + (error) * learningRate;\r\n            // console.log(error);\r\n        }\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\n// import { TFUtility } from '../../../../../../NJSCore/ML/NMacineLearning';\r\nimport { TFDataUtility } from '../../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n\r\nexport class TFLinearRegressionGradientDescent01 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    vsTemp: NVector3[] = [];\r\n\r\n    tfLinearRegression: TFLinearRegression;\r\n    t: number = 0.0;\r\n    constructor(tfProjct: TFProject) {\r\n        super(tfProjct);\r\n        this.indeCanvas.title = 'TF LinearRegression GradientDescent 01';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n\r\n        this.tfLinearRegression = new TFLinearRegression();\r\n\r\n        this.InitData();\r\n        this.InitUI();\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '400px';\r\n        div.style.color = '#ffffff';\r\n\r\n        const t = document.createElement('p');\r\n        t.textContent = 'click on this screen to add data';\r\n        div.append(t);\r\n\r\n        const divHost = document.getElementById('indePanel');\r\n        if (divHost) {\r\n            divHost.append(div);\r\n        }\r\n        // this.scene.canvas.canvas.\r\n    }\r\n    InitData() {\r\n        TFDataUtility.getData().then((d: any) => {\r\n            let xMin = Number.MAX_SAFE_INTEGER;\r\n            let xMax = Number.MIN_SAFE_INTEGER;\r\n            let yMin = Number.MAX_SAFE_INTEGER;\r\n            let yMax = Number.MIN_SAFE_INTEGER;\r\n\r\n            d.map((data: any) => {\r\n                let x = (data['horsepower']);\r\n                if (x > xMax) { xMax = x; }\r\n                if (x < xMin) { xMin = x; }\r\n\r\n                let y = (data['mpg']);\r\n                if (y > yMax) { yMax = y; }\r\n                if (y < yMin) { yMin = y; }\r\n                return 0\r\n            });\r\n\r\n            for (let data of d) {\r\n                let x = (data['horsepower']);\r\n                let y = (data['mpg']);\r\n                this.vsTemp.push(new NVector3(\r\n                    MathUtility.Remap(x, xMin, xMax, 0.1, 0.9),\r\n                    MathUtility.Remap(y, yMin, yMax, 0.1, 0.9)));\r\n            }\r\n        });\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, 0, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, 0);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        if ((this.t & 2) === 0) {\r\n            const v = this.vsTemp.pop();\r\n            if (v) {\r\n                this.vs.push(v);\r\n            }\r\n        }\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n\r\n            // ............................ train\r\n            this.tfLinearRegression.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(MathUtility.Remap(this.vs[i].x, 0, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, 0, 1, this.height, 0), 5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        this.t += 0.3;\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        const lineX = [0, 1];\r\n\r\n        // ............................ predict\r\n        const ys = tf.tidy(() => {\r\n            return this.tfLinearRegression.predict(tf.tensor1d(lineX));\r\n        });\r\n\r\n        let lineY = ys.dataSync();\r\n        ys.dispose();\r\n        // ............................ end predict\r\n\r\n        let x0 = 0;\r\n        let y0 = lineY[0];\r\n\r\n        let x1 = 1;\r\n        let y1 = lineY[1];\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(x0, 0, 1, 0, this.width), MathUtility.Remap(y0, 0, 1, this.height, 0));\r\n        ctx.lineTo(MathUtility.Remap(x1, 0, 1, 0, this.width), MathUtility.Remap(y1, 0, 1, this.height, 0));\r\n        ctx.stroke();\r\n\r\n    }\r\n}\r\nclass TFLinearRegression {\r\n    weight: tf.Variable;\r\n    bias: tf.Variable;\r\n\r\n    leraningRate: number = 0.5;\r\n    optimizer: tf.Optimizer;\r\n    constructor() {\r\n        this.weight = tf.variable(tf.scalar(Math.random()));\r\n        this.bias = tf.variable(tf.scalar(Math.random()));\r\n\r\n        this.optimizer = tf.train.sgd(this.leraningRate);\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return x.mul(this.weight).add(this.bias);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n// import { LayersModel } from '@tensorflow/tfjs-layers';\r\nimport { ModelCompileArgs, ModelFitArgs } from '@tensorflow/tfjs';\r\n\r\n// import { TFDataUtility } from '../../../../../../NJSCore/ML/NMacineLearning';\r\n\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\n\r\nexport class TFModel01 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    tfModel: TFModel;\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Horsepower and Miles Per Gallon';\r\n        this.Init();\r\n\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n        this.tfModel = new TFModel();\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n            // console.log(xx);\r\n            // console.log(yy);\r\n            // ............................ train\r\n            // this.tfModel.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        // const curveX: number[] = [];\r\n        // for (let x = -1; x <= 1; x += 0.05) {\r\n        //     curveX.push(x);\r\n        // }\r\n\r\n        // // ............................ predict\r\n        // const ys = tf.tidy(() => {\r\n        //     return this.tfModel.predict(tf.tensor1d(curveX));\r\n        // });\r\n\r\n        // let curveY = ys.dataSync();\r\n        // ys.dispose();\r\n        // // ............................ end predict\r\n\r\n        // ctx.lineWidth = 3;\r\n        // ctx.strokeStyle = '#00fff0';\r\n        // ctx.beginPath();\r\n        // ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n        // for (let i = 1; i < curveX.length; ++i) {\r\n        //     ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n        // }\r\n        // ctx.stroke();\r\n\r\n    }\r\n}\r\nclass TFModel {\r\n    model: tf.Sequential;\r\n    constructor() {\r\n        this.model = tf.sequential();\r\n\r\n        const hidden = tf.layers.dense({\r\n            inputShape: [2],\r\n            units: 4,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            units: 1,\r\n            activation: 'sigmoid',\r\n\r\n        });\r\n\r\n        this.model.add(hidden);\r\n        this.model.add(output);\r\n\r\n        const compileArgs: ModelCompileArgs = {\r\n            optimizer: tf.train.sgd(0.1),\r\n            loss: tf.losses.meanSquaredError,\r\n        };\r\n\r\n        this.model.compile(compileArgs);\r\n\r\n        // const data = tf.tensor2d([\r\n        //     [0.25, 0.92]\r\n        // ]);\r\n        this.train1().then(() => {\r\n            const x = tf.tensor2d([\r\n                [0, 0],\r\n                [0.5, 0.5],\r\n                [1, 1],\r\n            ]);\r\n            const result = this.model.predict(x);\r\n            (result as tf.Tensor).print();\r\n        });\r\n    }\r\n    train0() {\r\n        const x = tf.tensor2d([\r\n            [0, 0],\r\n            [0.5, 0.5],\r\n            [1, 1],\r\n            // [0.1, 0.22],\r\n        ]);\r\n        const y = tf.tensor2d([\r\n            [1],\r\n            [0.5],\r\n            [0],\r\n        ]);\r\n        const config = {\r\n            epochs: 10\r\n        };\r\n        this.model.fit(x, y, config).then((response) => console.log(response.history));\r\n        const outResult: tf.Tensor<tf.Rank> | tf.Tensor<tf.Rank>[] = this.model.predict(x);\r\n        // console.log(outResult);\r\n        (outResult as tf.Tensor).print();\r\n    }\r\n    async train1() {\r\n        const xTrain = tf.tensor2d([\r\n            [0, 0],\r\n            [0.5, 0.5],\r\n            [1, 1],\r\n            // [0.1, 0.22],\r\n        ]);\r\n        const yTrain = tf.tensor2d([\r\n            [1],\r\n            [0.5],\r\n            [0],\r\n        ]);\r\n        const config: ModelFitArgs = {\r\n            epochs: 10,\r\n            shuffle: true,\r\n        };\r\n\r\n        for (let i = 0; i < 500; ++i) {\r\n            const response = await this.model.fit(xTrain, yTrain, config);\r\n            // response;\r\n            console.log(i, response.history.loss);\r\n        }\r\n\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport * as tfvis from '@tensorflow/tfjs-vis';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n// // https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFModel01HorsepowerAndMilesPerGallon extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    // tfModel: ModelForHorsepowerGallon;\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Horsepower and Miles Per Gallon';\r\n        this.Init();\r\n\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n\r\n        TFDataUtility.getData().then((d: any) => {\r\n            // this.tfModel = new ModelForHorsepowerGallon();\r\n            // this.train(d);\r\n            this.train(d);\r\n\r\n\r\n        });\r\n\r\n    }\r\n    async train(d: any) {\r\n        const tensorData = convertToTensor(d);\r\n        // console.log(tensorData);\r\n        const { inputs, labels } = tensorData;\r\n        // console.log(inputs, labels);\r\n        const model = createModel();\r\n\r\n        tfvis.show.modelSummary({ name: 'Model Summary' }, model);\r\n        // Train the model\r\n        await trainModel(model, inputs, labels);\r\n        // console.log('Done Training');\r\n        testModel(model, d, tensorData);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n            // console.log(xx);\r\n            // console.log(yy);\r\n            // ............................ train\r\n            // this.tfModel.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        const curveX: number[] = [];\r\n        for (let x = -1; x <= 1; x += 0.05) {\r\n            curveX.push(x);\r\n        }\r\n    }\r\n}\r\n\r\nfunction testModel(model: tf.Sequential, inputData: any, normalizationData: any) {\r\n    const { inputMax, inputMin, labelMin, labelMax } = normalizationData;\r\n\r\n    // Generate predictions for a uniform range of numbers between 0 and 1;\r\n    // We un-normalize the data by doing the inverse of the min-max scaling\r\n    // that we did earlier.\r\n    const [xs, preds] = tf.tidy(() => {\r\n\r\n        const xs = tf.linspace(0, 1, 100);\r\n        const preds = model.predict(xs.reshape([100, 1])) as any;\r\n\r\n        const unNormXs = xs\r\n            .mul(inputMax.sub(inputMin))\r\n            .add(inputMin);\r\n\r\n        const unNormPreds = preds.mul(labelMax.sub(labelMin))\r\n            .add(labelMin);\r\n\r\n        // Un-normalize the data\r\n        return [unNormXs.dataSync(), unNormPreds.dataSync()];\r\n    });\r\n\r\n\r\n    const predictedPoints = Array.from(xs).map((val, i) => {\r\n        return { x: val, y: preds[i] };\r\n    });\r\n\r\n    const originalPoints = inputData.map((d: any) => ({\r\n        x: d.horsepower, y: d.mpg,\r\n    }));\r\n\r\n    tfvis.render.scatterplot(\r\n        { name: 'Model Predictions vs Original Data' },\r\n        { values: [originalPoints, predictedPoints], series: ['original', 'predicted'] },\r\n        {\r\n            xLabel: 'Horsepower',\r\n            yLabel: 'MPG',\r\n            height: 300\r\n        }\r\n    );\r\n}\r\n\r\n\r\nasync function trainModel(model: tf.Sequential, inputs: tf.Tensor<tf.Rank>, labels: tf.Tensor<tf.Rank>) {\r\n    // Prepare the model for training.\r\n    model.compile({\r\n        optimizer: tf.train.adam(),\r\n        loss: tf.losses.meanSquaredError,\r\n        metrics: ['mse'],\r\n    });\r\n\r\n    const batchSize = 32;\r\n    const epochs = 50;\r\n\r\n    return await model.fit(inputs, labels, {\r\n        batchSize,\r\n        epochs,\r\n        shuffle: true,\r\n        callbacks: tfvis.show.fitCallbacks(\r\n            { name: 'Training Performance' },\r\n            ['loss', 'mse'],\r\n            { height: 200, callbacks: ['onEpochEnd'] }\r\n        )\r\n    });\r\n}\r\n\r\n\r\nexport const createModel = () => {\r\n    // Create a sequential model\r\n    const model = tf.sequential();\r\n    // Add a single hidden layer\r\n    model.add(tf.layers.dense({\r\n        inputShape: [1],\r\n        units: 16,\r\n        useBias: true\r\n    }));\r\n    // Add an output layer\r\n    model.add(tf.layers.dense({\r\n        units: 1,\r\n        useBias: true\r\n    }));\r\n    return model;\r\n};\r\nexport const convertToTensor = (data: any) => {\r\n    // Wrapping these calculations in a tidy will dispose any\r\n    // intermediate tensors.\r\n\r\n    return tf.tidy(() => {\r\n        // Step 1. Shuffle the data\r\n        tf.util.shuffle(data);\r\n\r\n        // Step 2. Convert data to Tensor\r\n        const inputs = data.map((d: any) => d.horsepower);\r\n        const labels = data.map((d: any) => d.mpg);\r\n\r\n        const inputTensor = tf.tensor2d(inputs, [inputs.length, 1]);\r\n        const labelTensor = tf.tensor2d(labels, [labels.length, 1]);\r\n\r\n        // Step 3. Normalize the data to the range 0 - 1 using min-max scaling\r\n        const inputMax = inputTensor.max();\r\n        const inputMin = inputTensor.min();\r\n        const labelMax = labelTensor.max();\r\n        const labelMin = labelTensor.min();\r\n\r\n        const normalizedInputs = inputTensor.sub(inputMin).div(inputMax.sub(inputMin));\r\n        const normalizedLabels = labelTensor.sub(labelMin).div(labelMax.sub(labelMin));\r\n\r\n        return {\r\n            inputs: normalizedInputs,\r\n            labels: normalizedLabels,\r\n            // Return the min/max bounds so we can use them later.\r\n            inputMax,\r\n            inputMin,\r\n            labelMax,\r\n            labelMin,\r\n        };\r\n    });\r\n};","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\n// import { TFDataUtility } from '../../../../../../NJSCore/ML/NMacineLearning';\r\n\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\n\r\nexport class TFModel02XOR extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    tfModel: TFModel;\r\n    xPredict: any; // tf.Tensor<tf.Rank>;\r\n    inputs: number[] = [];\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF XOR';\r\n        this.Init();\r\n        this.InitUI();\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '10px';\r\n        div.style.color = '#ffffff';\r\n\r\n        const t = document.createElement('p');\r\n        t.textContent = 'ref: Coding Challenge #106: XOR Problem with TensorFlow.js by The Cording Train';\r\n        t.style.fontSize = '11px';\r\n        div.append(t);\r\n\r\n        const divHost = document.getElementById('indePanel');\r\n        if (divHost) {\r\n            divHost.append(div);\r\n        }\r\n        // this.scene.canvas.canvas.\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n        this.tfModel = new TFModel();\r\n\r\n        let inputs = [];\r\n        for (let i = 0; i <= 10; ++i) {\r\n            for (let j = 0; j <= 10; ++j) {\r\n                // let x1 = i / 10;\r\n                // let x2 = j / 10;\r\n                inputs.push([j * 0.1, i * 0.1]);\r\n            }\r\n        }\r\n        // console.log(inputs);\r\n        // console.log(;)\r\n        this.xPredict = tf.tensor2d(inputs);\r\n        // console.log(xPredict);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // let ys = this.tfModel.model.predict(this.xPredict);\r\n\r\n        // (ys as tf.Tensor<tf.Rank.R2>).print();\r\n        // let y_values = ys.dataSync();\r\n\r\n        tf.tidy(() => {\r\n            const d = this.tfModel.model.predict(this.xPredict);\r\n            const result = (d as tf.Tensor2D).dataSync();\r\n\r\n\r\n            // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n            ctx.fillStyle = '#000000';\r\n            ctx.beginPath();\r\n            ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n\r\n\r\n\r\n            let index = 0;\r\n            for (let i = 0; i <= 10; i++) {\r\n                for (let j = 0; j <= 10; j++) {\r\n                    this.inputs.push(i);\r\n                    let offset = 42;\r\n                    let x = i * offset;\r\n                    let y = j * offset;\r\n                    const out = result[index];\r\n\r\n                    ctx.fillStyle = `rgba(${out * 255},${0},${0},1)`;\r\n                    // console.log(out);\r\n                    ctx.beginPath();\r\n                    ctx.rect(x, y, offset, offset);\r\n                    ctx.closePath();\r\n                    ctx.fill();\r\n\r\n                    index++;\r\n                }\r\n            }\r\n            // console.log(index);\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n    }\r\n}\r\nclass TFModel {\r\n    model: tf.Sequential;\r\n    xTrain = tf.tensor2d([\r\n        [0.0, 0.0],\r\n        [1.0, 0.0],\r\n        [0.0, 1.0],\r\n        [1.0, 1.0]\r\n    ]);\r\n    yTrain = tf.tensor2d([\r\n        [0.0],\r\n        [1.0],\r\n        [1.0],\r\n        [0.0]\r\n    ]);\r\n    constructor() {\r\n        this.model = tf.sequential();\r\n\r\n        const hidden = tf.layers.dense({\r\n            inputShape: [2],\r\n            units: 16,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            units: 1,\r\n            activation: 'sigmoid',\r\n        });\r\n        this.model.add(hidden);\r\n        this.model.add(output);\r\n        this.model.compile({\r\n            optimizer: tf.train.adam(0.05),\r\n            loss: tf.losses.meanSquaredError,\r\n        });\r\n        this.trainLoop();\r\n    }\r\n    public trainLoop() {\r\n        this.train().then((result: any) => {\r\n            // console.log(result.history.loss[0]);\r\n            setTimeout(() => this.trainLoop(), 1);\r\n        });\r\n    }\r\n    public async train() {\r\n        return await this.model.fit(this.xTrain, this.yTrain, {\r\n            epochs: 10,\r\n            shuffle: true,\r\n        });\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\n// import * as tfvis from '@tensorflow/tfjs-vis';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\n// import { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\n\r\nexport class TFModel03Iris extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    // vs: NVector3[] = [];\r\n    // selVec: NVector3 | undefined = undefined;\r\n\r\n    tfModel: TFModel;\r\n    xPredict: any; // tf.Tensor<tf.Rank>;\r\n    inputs: number[] = [];\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Horsepower and Miles Per Gallon';\r\n        this.Init();\r\n\r\n    }\r\n    Init() {\r\n        this.tfModel = new TFModel();\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n\r\n        tf.tidy(() => {\r\n            //\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n    }\r\n}\r\nclass TFModel {\r\n    model: tf.Sequential;\r\n    inputsTensor: tf.Tensor<tf.Rank.R2>;\r\n    labelsTensor: tf.Tensor<tf.Rank.R2>;\r\n\r\n    // xTrain = tf.tensor2d([\r\n    //     [0.0, 0.0],\r\n    //     [1.0, 0.0],\r\n    //     [0.0, 1.0],\r\n    //     [1.0, 1.0]\r\n    // ]);\r\n    // yTrain = tf.tensor2d([\r\n    //     [0.0],\r\n    //     [1.0],\r\n    //     [1.0],\r\n    //     [0.0]\r\n    // ]);\r\n    constructor() {\r\n        const d = TFDataUtility.GetIrisData();\r\n        tf.util.shuffle(d);\r\n        // console.log(d);\r\n\r\n        const inputs = [];\r\n        for (let i = 0; i < d.length; ++i) {\r\n            let row = [];\r\n            for (let j = 0; j < d[i].length - 1; ++j) {\r\n                row.push(d[i][j]);\r\n            }\r\n            inputs.push(row);\r\n        }\r\n\r\n        const labels = []; //  d.map((d: number[]) => [d[d.length - 1]]);\r\n        for (let i = 0; i < d.length; ++i) {\r\n            if (d[i][d[i].length - 1] === 0) {\r\n                labels.push([1, 0, 0]);\r\n            } else if (d[i][d[i].length - 1] === 1) {\r\n                labels.push([0, 1, 0]);\r\n            } else if (d[i][d[i].length - 1] === 2) {\r\n                labels.push([0, 0, 1]);\r\n            }\r\n\r\n        }\r\n\r\n        // console.log(inputs);\r\n        // console.log(labels);\r\n\r\n        // console.log('tensor......................');\r\n        this.inputsTensor = tf.tensor2d(inputs);\r\n        this.labelsTensor = tf.tensor2d(labels);\r\n        // console.log(this.inputsTensor);\r\n        // console.log(this.labelsTensor);\r\n        this.inputsTensor.print();\r\n        this.labelsTensor.print();\r\n\r\n        this.model = tf.sequential();\r\n\r\n        // console.log(this.inputsTensor.shape[1]);\r\n\r\n        const hidden = tf.layers.dense({\r\n            inputShape: [this.inputsTensor.shape[1]],\r\n            units: 10,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            // inputShape: [10],\r\n            units: 3,\r\n            activation: 'softmax',\r\n        });\r\n        this.model.add(hidden);\r\n        this.model.add(output);\r\n        this.model.compile({\r\n            optimizer: tf.train.adam(),\r\n            // loss: tf.losses.meanSquaredError,\r\n            // metrics: ['mse'],\r\n            loss: tf.losses.softmaxCrossEntropy,  // 'categoricalCrossentropy',\r\n            metrics: ['accuracy'],\r\n        });\r\n        this.model.summary();\r\n        // tfvis.show.modelSummary({ name: 'Model Summary' }, this.model);\r\n\r\n        this.trainLoop();\r\n    }\r\n    public async trainLoop() {\r\n        await this.model.save('downloads://my-model');\r\n        const saveResults = await this.model.save('localstorage://ml/my-model-1');\r\n        console.log(saveResults);\r\n        this.train().then((result: any) => {\r\n            console.log(result.history.loss[0]);\r\n            setTimeout(() => this.trainLoop(), 1);\r\n        });\r\n    }\r\n    public async train() {\r\n        return await this.model.fit(this.inputsTensor, this.labelsTensor, {\r\n            // batchSize: 100,\r\n            epochs: 50,\r\n            shuffle: true,\r\n            validationData: [this.inputsTensor, this.labelsTensor],\r\n        });\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\n// import * as tfvis from '@tensorflow/tfjs-vis';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\n// import { NVector3, MathUtility } from '../../../lib';\r\n\r\n// import { csv } from './smartDrawingTrainData.csv';\r\n\r\n// import { TFDataUtility } from '../../../../../../NJSCore/ML/NMacineLearning';\r\n\r\n// const csv = require('./smartDrawingTrainData.csv');\r\n\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\n\r\nexport class TFModel03SmartDrawing extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    // vs: NVector3[] = [];\r\n    // selVec: NVector3 | undefined = undefined;\r\n\r\n    tfModel: TFModel;\r\n    xPredict: any; // tf.Tensor<tf.Rank>;\r\n    inputs: number[] = [];\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Horsepower and Miles Per Gallon';\r\n        this.Init();\r\n\r\n    }\r\n    async Init() {\r\n        const d = new DataProcess();\r\n        await d.Init().then(() => {\r\n            this.tfModel = new TFModel('model1', d.inputsTensor, d.labelsTensor);\r\n            this.tfModel.CreateModel01();\r\n\r\n            this.tfModel = new TFModel('model2', d.inputsTensor, d.labelsTensor);\r\n            this.tfModel.CreateModel02();\r\n\r\n        });\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n\r\n        tf.tidy(() => {\r\n            //\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n    }\r\n}\r\n\r\nclass DataProcess {\r\n    raw: any;\r\n    inputsTensor: tf.Tensor<tf.Rank.R2>;\r\n    labelsTensor: tf.Tensor<tf.Rank.R2>;\r\n    constructor() {\r\n        //\r\n    }\r\n    async Init() {\r\n        const d = await this.OpenCSV();\r\n        if (d) {\r\n            this.raw = this.processData(d);\r\n            tf.util.shuffle(this.raw);\r\n            // console.log(this.raw);\r\n\r\n            const inputs = [];\r\n            const labelsTemp = [];\r\n            for (let i = 0; i < this.raw.length; ++i) {\r\n                let row = [];\r\n                for (let j = 0; j < this.raw[i].length - 1; ++j) { row.push(this.raw[i][j]); }\r\n                inputs.push(row);\r\n                labelsTemp.push(this.raw[i][this.raw[i].length - 1]);\r\n            }\r\n            console.log(inputs);\r\n            console.log(labelsTemp);\r\n            const max = tf.max(labelsTemp);\r\n            const maxNum = max.dataSync();\r\n\r\n            const labels = [];\r\n            for (let i = 0; i < labelsTemp.length; ++i) {\r\n                const label = [];\r\n                for (let j = 0; j <= maxNum[0]; ++j) {\r\n                    if (j === labelsTemp[i]) {\r\n                        label.push(1);\r\n                    } else {\r\n                        label.push(0);\r\n                    }\r\n                }\r\n                labels.push(label);\r\n            }\r\n            console.log(labels);\r\n\r\n            this.inputsTensor = tf.tensor2d(inputs);\r\n            this.labelsTensor = tf.tensor2d(labels);\r\n\r\n            this.inputsTensor.print();\r\n            this.labelsTensor.print();\r\n        }\r\n    }\r\n    private processData(allText: any) {\r\n        const allTextLines = allText.split(/\\r\\n|\\n/);\r\n        const headers = allTextLines[0].split(',');\r\n        const lines = [];\r\n\r\n        for (let i = 1; i < allTextLines.length; i++) {\r\n            const data = allTextLines[i].split(',');\r\n            if (data.length === headers.length) {\r\n\r\n                const tarr = [];\r\n                for (let j = 0; j < headers.length; j++) {\r\n                    const dataTemp = +data[j];\r\n                    if (isNaN(dataTemp)) {\r\n                        tarr.push(data[j]);\r\n                    } else {\r\n                        tarr.push(dataTemp);\r\n                    }\r\n                }\r\n                lines.push(tarr);\r\n            }\r\n        }\r\n        return lines;\r\n    }\r\n    public async OpenCSV() {\r\n        // if (njslabSandboxStatic.app) { if (njslabSandboxStatic.app.isProduction) { return; } }\r\n        let file = 'smartDrawingTrainData.csv';\r\n        // console.log(location.host);\r\n        return fetch(`njslabSandboxStatic/ML/SmartDrawing/${file}`)\r\n            .then((response: Response) => {\r\n                console.log(response);\r\n                return response.text();\r\n            })\r\n            .catch((err: Error) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n}\r\n\r\nclass TFModel {\r\n    t0: number;\r\n    t1: number;\r\n    name: string;\r\n    model: tf.Sequential;\r\n    inputsTensor: tf.Tensor<tf.Rank.R2>;\r\n    labelsTensor: tf.Tensor<tf.Rank.R2>;\r\n    constructor(name: string, inputsTensor: tf.Tensor<tf.Rank.R2>, labelsTensor: tf.Tensor<tf.Rank.R2>) {\r\n        this.name = name;\r\n        this.inputsTensor = inputsTensor;\r\n        this.labelsTensor = labelsTensor;\r\n    }\r\n    CreateModel01() {\r\n        this.model = tf.sequential();\r\n        const hidden01 = tf.layers.dense({\r\n            inputShape: [this.inputsTensor.shape[1]],\r\n            units: 20,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            // inputShape: [10],\r\n            units: this.labelsTensor.shape[1],\r\n            activation: 'softmax',\r\n        });\r\n        this.model.add(hidden01);\r\n        this.model.add(output);\r\n        this.Compile();\r\n    }\r\n    CreateModel02() {\r\n        this.model = tf.sequential();\r\n        const hidden01 = tf.layers.dense({\r\n            inputShape: [this.inputsTensor.shape[1]],\r\n            units: 20,\r\n            activation: 'sigmoid',\r\n        });\r\n        const hidden02 = tf.layers.dense({\r\n            // inputShape: [this.inputsTensor.shape[1]],\r\n            units: 15,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            // inputShape: [10],\r\n            units: this.labelsTensor.shape[1],\r\n            activation: 'softmax',\r\n        });\r\n        this.model.add(hidden01);\r\n        this.model.add(hidden02);\r\n        this.model.add(output);\r\n        this.Compile();\r\n    }\r\n    Compile() {\r\n        this.model.compile({\r\n            optimizer: tf.train.adam(),\r\n            // loss: tf.losses.meanSquaredError,\r\n            // metrics: ['mse'],\r\n            loss: tf.losses.softmaxCrossEntropy,  // 'categoricalCrossentropy',\r\n            metrics: ['accuracy'],\r\n        });\r\n        this.model.summary();\r\n        // tfvis.show.modelSummary({ name: 'Model Summary' }, this.model);\r\n\r\n        this.trainLoop();\r\n    }\r\n    public async trainLoop() {\r\n        this.t0 = performance.now();\r\n\r\n        await this.model.save('downloads://my-model');\r\n        // const saveResults = await this.model.save('localstorage://ml/my-model-1');\r\n        // console.log(saveResults);\r\n        this.train().then((result: any) => {\r\n            this.t1 = performance.now();\r\n            console.log(`${this.name}: ${result.history.loss[0]}, ${this.t1 - this.t0} `);\r\n            setTimeout(() => this.trainLoop(), 1);\r\n        });\r\n    }\r\n    public async train() {\r\n        // return await this.model.fit(this.inputsTensor, this.labelsTensor, {\r\n        //     batchSize: 100,\r\n        //     epochs: 10,\r\n        //     shuffle: true,\r\n        //     validationData: [this.inputsTensor, this.labelsTensor],\r\n        // });\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { TFProject } from '..';\r\n\r\n// import * as tf from '@tensorflow/tfjs';\r\nimport { NVector3 } from '../../../lib';\r\nimport { TFUtility } from '../../../../../../../lib/NJSCore/ML/NMacineLearning';\r\nexport class TFPlayground01 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n\r\n    a: number = 1;\r\n    bias: number = 0;\r\n\r\n    constructor(tfProjct: TFProject) {\r\n        super(tfProjct);\r\n        this.indeCanvas.title = 'TF Playground';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n        // this.Tensor01();\r\n        // this.Tensor02();\r\n        // this.Tensor03();\r\n        TFUtility.Playground();\r\n    }\r\n\r\n    MouseDown(x: number, y: number) {\r\n        //\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\nimport { TFDataUtility } from '../../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n\r\n// import { TFUtility } from '../../../../../../NJSCore/ML/NMacineLearning';\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFPolynomialRegressionGradientDescent02 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    vsTemp: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    tfLinearRegression: PolynomialRegression;\r\n    t: number = 0.0;\r\n    constructor(tfProjct: TFProject) {\r\n        super(tfProjct);\r\n        this.indeCanvas.title = 'TF LinearRegression GradientDescent 01';\r\n        this.Init();\r\n        this.InitData();\r\n        this.InitUI();\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '400px';\r\n        div.style.color = '#ffffff';\r\n\r\n        const t = document.createElement('p');\r\n        t.textContent = 'click on this screen to add data';\r\n        div.append(t);\r\n\r\n\r\n        const divHost = document.getElementById('indePanel');\r\n        if (divHost) {\r\n            divHost.append(div);\r\n\r\n            const b = document.createElement('button');\r\n            b.textContent = 'run';\r\n            b.style.position = 'absolute';\r\n            b.style.left = '650px';\r\n            b.onclick = () => {\r\n                console.log(this);\r\n            };\r\n            this.scene.implementation.app.model.modelViewCoreWrapper.viewWrapper.div.append(b);\r\n        }\r\n        // this.scene.canvas.canvas.\r\n    }\r\n    InitData() {\r\n        TFDataUtility.getData().then((d: any) => {\r\n            let xMin = Number.MAX_SAFE_INTEGER;\r\n            let xMax = Number.MIN_SAFE_INTEGER;\r\n            let yMin = Number.MAX_SAFE_INTEGER;\r\n            let yMax = Number.MIN_SAFE_INTEGER;\r\n\r\n            d.map((data: any) => {\r\n                let x = (data['horsepower']);\r\n                if (x > xMax) { xMax = x; }\r\n                if (x < xMin) { xMin = x; }\r\n\r\n                let y = (data['mpg']);\r\n                if (y > yMax) { yMax = y; }\r\n                if (y < yMin) { yMin = y; }\r\n                return 0\r\n            });\r\n\r\n            for (let data of d) {\r\n                let x = (data['horsepower']);\r\n                let y = (data['mpg']);\r\n                this.vsTemp.push(new NVector3(\r\n                    MathUtility.Remap(x, xMin, xMax, -0.9, 0.9),\r\n                    MathUtility.Remap(y, yMin, yMax, -0.9, 0.9)));\r\n            }\r\n        });\r\n    }\r\n    Init() {\r\n        console.log(tf.version);\r\n\r\n        this.tfLinearRegression = new PolynomialRegression();\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        // for (let i = -10; i < 10; ++i) {\r\n        //     for (let j = -10; j < 10; ++j) {\r\n        //         ctx.beginPath();\r\n        //         ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        //         ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n        //         ctx.closePath();\r\n        //         ctx.fill();\r\n        //     }\r\n        // }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.Grid(ctx);\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        if ((this.t & 2) === 0) {\r\n            const v = this.vsTemp.pop();\r\n            if (v) {\r\n                this.vs.push(v);\r\n            }\r\n        }\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n            // console.log(xx);\r\n            // console.log(yy);\r\n            // ............................ train\r\n            this.tfLinearRegression.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        this.t += 0.3;\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        const curveX: number[] = [];\r\n        for (let x = -1; x <= 1; x += 0.05) {\r\n            curveX.push(x);\r\n        }\r\n\r\n        // ............................ predict\r\n        const ys = tf.tidy(() => {\r\n            // return this.tfLinearRegression.predict(tf.tensor1d(curveX));\r\n            return this.tfLinearRegression.predict2d(tf.tensor1d(curveX));\r\n        });\r\n\r\n        let curveY = ys.dataSync();\r\n        ys.dispose();\r\n        // ............................ end predict\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n        for (let i = 1; i < curveX.length; ++i) {\r\n            ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n        }\r\n        ctx.stroke();\r\n\r\n    }\r\n}\r\nclass PolynomialRegression {\r\n    weights: tf.Variable[] = [];\r\n    bias: tf.Variable;\r\n\r\n    dim: number = 1;\r\n    leraningRate: number = 0.2;\r\n    optimizer: tf.AdamOptimizer;\r\n    constructor() {\r\n        for (let i = 0; i < 5; ++i) {\r\n            const weight = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n            weight.print();\r\n            this.weights.push(weight);\r\n        }\r\n\r\n        this.bias = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n        this.optimizer = tf.train.adam(this.leraningRate);\r\n    }\r\n\r\n    public predict1d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.mul(this.weights[0])\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict2d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.square().mul(this.weights[1])\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict3d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(3)).mul(this.weights[2])\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict4d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(4)).mul(this.weights[3])\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict5d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(5)).mul(this.weights[4])\r\n            .add(x.pow(tf.scalar(4)).mul(this.weights[3]))\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        if (this.dim === 5) { return this.predict5d(x); }\r\n        if (this.dim === 4) { return this.predict4d(x); }\r\n        if (this.dim === 3) { return this.predict3d(x); }\r\n        if (this.dim === 2) { return this.predict2d(x); }\r\n\r\n        return this.predict1d(x);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n        console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFPolynomialRegressionGradientDescent03Interaction extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    tfLinearRegression: PolynomialRegression;\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF LinearRegression GradientDescent 01';\r\n        this.Init();\r\n\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n\r\n        this.tfLinearRegression = new PolynomialRegression();\r\n\r\n        this.indeCanvas.canvas.style.zIndex = '-1';\r\n        // this.indeCanvas.bodyDiv.divHost.style.pointerEvents = 'auto';\r\n        // this.indeCanvas.bodyDiv.div.style.pointerEvents = 'auto';\r\n\r\n        // const div = document.createElement('div');\r\n        // div.style.background = '#ff0000';\r\n        // div.style.width = '100px';\r\n        // div.style.height = '100px';\r\n        // div.style.position = 'absolute';\r\n        // div.style.zIndex = '1';\r\n        // div.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.preventDefault();\r\n        // };\r\n        // console.log(this.indeCanvas);\r\n\r\n        // let input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // this.indeCanvas.bodyDiv.div.append(div);\r\n\r\n        TFDataUtility.getData().then((d: any) => {\r\n            // console.log(d);\r\n        });\r\n\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n            // console.log(xx);\r\n            // console.log(yy);\r\n            // ............................ train\r\n            this.tfLinearRegression.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        const curveX: number[] = [];\r\n        for (let x = -1; x <= 1; x += 0.05) {\r\n            curveX.push(x);\r\n        }\r\n\r\n        // ............................ predict\r\n        const ys = tf.tidy(() => {\r\n            return this.tfLinearRegression.predict(tf.tensor1d(curveX));\r\n        });\r\n\r\n        let curveY = ys.dataSync();\r\n        ys.dispose();\r\n        // ............................ end predict\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n        for (let i = 1; i < curveX.length; ++i) {\r\n            ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n        }\r\n        ctx.stroke();\r\n\r\n    }\r\n}\r\nclass PolynomialRegression {\r\n    weights: tf.Variable[] = [];\r\n    bias: tf.Variable;\r\n\r\n    dim: number = 3;\r\n    leraningRate: number = 0.2;\r\n    optimizer: tf.AdamOptimizer;\r\n    constructor() {\r\n        for (let i = 0; i < 5; ++i) {\r\n            const weight = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n            weight.print();\r\n            this.weights.push(weight);\r\n        }\r\n\r\n        this.bias = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n        this.optimizer = tf.train.adam(this.leraningRate);\r\n    }\r\n\r\n    public predict1d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.mul(this.weights[0])\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict2d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.square().mul(this.weights[1])\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict3d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(3)).mul(this.weights[2])\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict4d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(4)).mul(this.weights[3])\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict5d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(5)).mul(this.weights[4])\r\n            .add(x.pow(tf.scalar(4)).mul(this.weights[3]))\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        if (this.dim === 5) { return this.predict5d(x); }\r\n        if (this.dim === 4) { return this.predict4d(x); }\r\n        if (this.dim === 3) { return this.predict3d(x); }\r\n        if (this.dim === 2) { return this.predict2d(x); }\r\n\r\n        return this.predict1d(x);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFPolynomialRegressionGradientDescent04TFHorsepowerAndMilesPerGallon extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    tfLinearRegression: PolynomialRegression;\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Horsepower and Miles Per Gallon';\r\n        this.Init();\r\n\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n\r\n        this.tfLinearRegression = new PolynomialRegression();\r\n\r\n        this.indeCanvas.canvas.style.zIndex = '-1';\r\n        // this.indeCanvas.bodyDiv.divHost.style.pointerEvents = 'auto';\r\n        // this.indeCanvas.bodyDiv.div.style.pointerEvents = 'auto';\r\n\r\n        // const div = document.createElement('div');\r\n        // div.style.background = '#ff0000';\r\n        // div.style.width = '100px';\r\n        // div.style.height = '100px';\r\n        // div.style.position = 'absolute';\r\n        // div.style.zIndex = '1';\r\n        // div.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.preventDefault();\r\n        // };\r\n        // console.log(this.indeCanvas);\r\n\r\n        // let input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // this.indeCanvas.bodyDiv.div.append(div);\r\n\r\n        TFDataUtility.getData().then((d: any) => {\r\n            let xMin = Number.MAX_SAFE_INTEGER;\r\n            let xMax = Number.MIN_SAFE_INTEGER;\r\n            let yMin = Number.MAX_SAFE_INTEGER;\r\n            let yMax = Number.MIN_SAFE_INTEGER;\r\n\r\n            d.map((data: any) => {\r\n                let x = (data['horsepower']);\r\n                if (x > xMax) { xMax = x; }\r\n                if (x < xMin) { xMin = x; }\r\n\r\n                let y = (data['mpg']);\r\n                if (y > yMax) { yMax = y; }\r\n                if (y < yMin) { yMin = y; }\r\n                return 0\r\n            });\r\n\r\n            for (let data of d) {\r\n                let x = (data['horsepower']);\r\n                let y = (data['mpg']);\r\n                this.vs.push(new NVector3(\r\n                    MathUtility.Remap(x, xMin, xMax, -0.9, 0.9),\r\n                    MathUtility.Remap(y, yMin, yMax, -0.9, 0.9)));\r\n            }\r\n        });\r\n\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n            // console.log(xx);\r\n            // console.log(yy);\r\n            // ............................ train\r\n            this.tfLinearRegression.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        const curveX: number[] = [];\r\n        for (let x = -1; x <= 1; x += 0.05) {\r\n            curveX.push(x);\r\n        }\r\n\r\n        // ............................ predict\r\n        const ys = tf.tidy(() => {\r\n            return this.tfLinearRegression.predict(tf.tensor1d(curveX));\r\n        });\r\n\r\n        let curveY = ys.dataSync();\r\n        ys.dispose();\r\n        // ............................ end predict\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n        for (let i = 1; i < curveX.length; ++i) {\r\n            ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n        }\r\n        ctx.stroke();\r\n\r\n    }\r\n}\r\nclass PolynomialRegression {\r\n    weights: tf.Variable[] = [];\r\n    bias: tf.Variable;\r\n\r\n    dim: number = 3;\r\n    leraningRate: number = 0.2;\r\n    optimizer: tf.AdamOptimizer;\r\n    constructor() {\r\n        for (let i = 0; i < 5; ++i) {\r\n            const weight = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n            weight.print();\r\n            this.weights.push(weight);\r\n        }\r\n\r\n        this.bias = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n        this.optimizer = tf.train.adam(this.leraningRate);\r\n    }\r\n\r\n    public predict1d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.mul(this.weights[0])\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict2d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.square().mul(this.weights[1])\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict3d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(3)).mul(this.weights[2])\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict4d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(4)).mul(this.weights[3])\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict5d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(5)).mul(this.weights[4])\r\n            .add(x.pow(tf.scalar(4)).mul(this.weights[3]))\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        if (this.dim === 5) { return this.predict5d(x); }\r\n        if (this.dim === 4) { return this.predict4d(x); }\r\n        if (this.dim === 3) { return this.predict3d(x); }\r\n        if (this.dim === 2) { return this.predict2d(x); }\r\n\r\n        return this.predict1d(x);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFPolynomialRegressionGradientDescent05Interaction extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    col: string[] = ['#ff0000', '#00ff00', '#0000ff', '#00fff0', '#ff0000', '#fff000', '#0fff00'];\r\n\r\n    tfLinearRegression: PolynomialRegression[] = [];\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Regression ';\r\n        this.Init();\r\n        this.InitUI();\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n\r\n        this.tfLinearRegression.push(new PolynomialRegression(1));\r\n        this.tfLinearRegression.push(new PolynomialRegression(2));\r\n        this.tfLinearRegression.push(new PolynomialRegression(3));\r\n        this.tfLinearRegression.push(new PolynomialRegression(4));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(2));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(3));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(4));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(5));\r\n\r\n        this.indeCanvas.canvas.style.zIndex = '-1';\r\n        // this.indeCanvas.bodyDiv.divHost.style.pointerEvents = 'auto';\r\n        // this.indeCanvas.bodyDiv.div.style.pointerEvents = 'auto';\r\n\r\n        // const div = document.createElement('div');\r\n        // div.style.background = '#ff0000';\r\n        // div.style.width = '100px';\r\n        // div.style.height = '100px';\r\n        // div.style.position = 'absolute';\r\n        // div.style.zIndex = '1';\r\n        // div.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.preventDefault();\r\n        // };\r\n        // console.log(this.indeCanvas);\r\n\r\n        // let input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // this.indeCanvas.bodyDiv.div.append(div);\r\n\r\n        TFDataUtility.getData().then((d: any) => {\r\n            // console.log(d);\r\n        });\r\n\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '40px';\r\n        div.style.color = '#ffffff';\r\n\r\n        let t = document.createElement('p');\r\n        t.textContent = 'click on this screen to add data';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.textContent = 'LinearRegression';\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[0];\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[1];\r\n        t.textContent = 'Degree of polynomial - 2';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[2];\r\n        t.textContent = 'Degree of polynomial - 3';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[3];\r\n        t.textContent = 'Degree of polynomial - 4';\r\n        div.append(t);\r\n\r\n        const divHost = document.getElementById('indePanel');\r\n        if (divHost) {\r\n            divHost.append(div);\r\n\r\n            //     const b = document.createElement('button');\r\n            //     b.textContent = 'run';\r\n            //     b.style.position = 'absolute';\r\n            //     b.style.left = '650px';\r\n            //     b.onclick = () => {\r\n            //         console.log(this);\r\n            //     };\r\n            //     this.scene.implementation.app.model.modelViewCoreWrapper.viewWrapper.div.append(b);\r\n        }\r\n        // this.scene.canvas.canvas.\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n\r\n            for (let m = 0; m < this.tfLinearRegression.length; ++m) {\r\n                const xx = [], yy = [];\r\n                for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n                // console.log(xx);\r\n                // console.log(yy);\r\n                // ............................ train\r\n                this.tfLinearRegression[m].train(xx, yy);\r\n                // ............................ end train\r\n\r\n                this.RenderLine(ctx);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        for (let m = 0; m < this.tfLinearRegression.length; ++m) {\r\n            const curveX: number[] = [];\r\n            for (let x = -1; x <= 1; x += 0.08) {\r\n                curveX.push(x);\r\n            }\r\n\r\n            // ............................ predict\r\n            const ys = tf.tidy(() => {\r\n                return this.tfLinearRegression[m].predict(tf.tensor1d(curveX));\r\n            });\r\n\r\n            let curveY = ys.dataSync();\r\n            ys.dispose();\r\n            // ............................ end predict\r\n\r\n            ctx.lineWidth = 1;\r\n            ctx.strokeStyle = this.col[m]; // '#00fff0';\r\n            ctx.beginPath();\r\n            ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n            for (let i = 1; i < curveX.length; ++i) {\r\n                ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n            }\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}\r\nclass PolynomialRegression {\r\n    weights: tf.Variable[] = [];\r\n    bias: tf.Variable;\r\n\r\n    dim: number = 3;\r\n    leraningRate: number = 0.2;\r\n    optimizer: tf.AdamOptimizer;\r\n    constructor(dim: number = 0) {\r\n        this.dim = dim;\r\n        for (let i = 0; i < 5; ++i) {\r\n            const weight = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n            weight.print();\r\n            this.weights.push(weight);\r\n        }\r\n\r\n        this.bias = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n        this.optimizer = tf.train.adam(this.leraningRate);\r\n    }\r\n\r\n    public predict1d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.mul(this.weights[0])\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict2d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.square().mul(this.weights[1])\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict3d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(3)).mul(this.weights[2])\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict4d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(4)).mul(this.weights[3])\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict5d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(5)).mul(this.weights[4])\r\n            .add(x.pow(tf.scalar(4)).mul(this.weights[3]))\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        if (this.dim === 5) { return this.predict5d(x); }\r\n        if (this.dim === 4) { return this.predict4d(x); }\r\n        if (this.dim === 3) { return this.predict3d(x); }\r\n        if (this.dim === 2) { return this.predict2d(x); }\r\n        if (this.dim === 1) { return this.predict1d(x); }\r\n        return this.predict1d(x);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}","import { Canvas } from '../../Model/GraphicsCoreWrapper/CanvasWrapper/Canvas/Canvas';\r\nimport { ActiveCommandController } from './Core/ActiveCommandController';\r\n\r\nimport { DefinitionIndeCanvasCore } from './Core/DefinitionIndeCanvasCore';\r\nimport { JSLinearRegression01 } from './Definition/JSLinearRegression01';\r\nimport { JSLinearRegressionGradientDescent02 } from './Definition/JSLinearRegressionGradientDescent02';\r\n\r\nimport { TFPlayground01 } from './Definition/TFPlayground01';\r\nimport { TFLinearRegressionGradientDescent01 } from './Definition/TFLinearRegressionGradientDescent01';\r\nimport { TFPolynomialRegressionGradientDescent02 } from './Definition/TFPolynomialRegressionGradientDescent02';\r\nimport { TFPolynomialRegressionGradientDescent03Interaction } from './Definition/TFPolynomialRegressionGradientDescent03Interaction';\r\nimport { TFPolynomialRegressionGradientDescent04TFHorsepowerAndMilesPerGallon } from './Definition/TFPolynomialRegressionGradientDescent04TFHorsepowerAndMilesPerGallon';\r\nimport { TFModel01 } from './Definition/TFModel01';\r\nimport { TFModel02XOR } from './Definition/TFModel02XOR';\r\nimport { TFModel03Iris } from './Definition/TFModel03Iris';\r\nimport { TFModel03SmartDrawing } from './Definition/TFModel03SmartDrawing';\r\n\r\nimport { TFModel01HorsepowerAndMilesPerGallon } from './Definition/TFModel01HorsepowerAndMilesPerGallon';\r\nimport { TFPolynomialRegressionGradientDescent05Interaction } from './Definition/TFPolynomialRegressionGradientDescent05Interaction';\r\nimport { TFMnist } from './Definition/TFMnist';\r\n\r\nimport { Blank } from './Definition/Blank';\r\nimport { Implementation } from '..';\r\nexport class TFProject {\r\n    implementation: Implementation;\r\n    canvas: Canvas;\r\n    activeCommandController: ActiveCommandController;\r\n\r\n    definitions: DefinitionIndeCanvasCore[] = [];\r\n\r\n    constructor(implementation: Implementation) {\r\n        this.implementation = implementation;\r\n        this.canvas = implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas;\r\n\r\n        console.log('--')\r\n\r\n        this.activeCommandController = new ActiveCommandController(this);\r\n        this.Init();\r\n        this.InitDefinition();\r\n        this.InitDefault();\r\n        this.InitPullDown();\r\n    }\r\n    public Init() {\r\n        this.definitions = [];\r\n    }\r\n    get width() {\r\n        return this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.canvas.height;\r\n    }\r\n    InitDefinition() {\r\n        for (let d of this.definitions) { d.Init(this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.ctx); }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // for (let d of this.definitions) {d.Render(ctx); }\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseMovePre(x, y); }\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseLeftClickPre(x, y); }\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDownPre(x, y); }\r\n    }\r\n    MouseUp(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseUpPre(x, y); }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDragPre(x, y); }\r\n    }\r\n    MouseMiddleClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseMiddleClickPre(x, y); }\r\n    }\r\n    MouseRightClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseRightClickPre(x, y); }\r\n    }\r\n    MouseDoubleClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDoubleClickPre(x, y); }\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) {\r\n        for (let d of this.definitions) { d.MouseWheelPre(x, y, v); }\r\n    }\r\n    Dispose() {\r\n        this.definitions = [];\r\n    }\r\n    InitDefault() {\r\n        // new TFModel03SmartDrawing(this);\r\n\r\n    }\r\n    LoadDefinition(v: string) {\r\n        console.log('project code', v);\r\n        if (v === 'blank') { new Blank(this); }\r\n        if (v === 'TFPlayground01') { new TFPlayground01(this); }\r\n\r\n        // ...............................................................................\r\n\r\n        if (v === 'TFModel02XOR') { new TFModel02XOR(this, 480, 500); }\r\n        if (v === 'TFModel03Iris') { new TFModel03Iris(this, 480, 500); }\r\n        if (v === 'TFModel03SmartDrawing') { new TFModel03SmartDrawing(this, 480, 500); }\r\n\r\n        if (v === 'TFModel01HorsepowerAndMilesPerGallon') { new TFModel01HorsepowerAndMilesPerGallon(this, 500, 500); }\r\n\r\n        // ...............................................................................\r\n        if (v === 'TFModel01') { new TFModel01(this, 500, 500); }\r\n\r\n        if (v === 'JSLinearRegression') { new JSLinearRegression01(this); }\r\n        if (v === 'JSLinearRegressionGD') { new JSLinearRegressionGradientDescent02(this); }\r\n        if (v === 'TFLinearRegressionGD') { new TFLinearRegressionGradientDescent01(this); }\r\n\r\n        if (v === 'TFPolynomialRegression GD') { new TFPolynomialRegressionGradientDescent02(this); }\r\n        if (v === 'TFPolyRegress Interaction') { new TFPolynomialRegressionGradientDescent03Interaction(this, 500, 500); }\r\n        if (v === 'TFPolyRegress Miles/Gallon') { new TFPolynomialRegressionGradientDescent04TFHorsepowerAndMilesPerGallon(this, 500, 500); }\r\n\r\n        if (v === 'TF Regression') { new TFPolynomialRegressionGradientDescent05Interaction(this, 500, 500); }\r\n\r\n        if (v === 'TFMnist') { new TFMnist(this, 500, 500); }\r\n\r\n        console.log(v);\r\n        // ...............................................................................\r\n    }\r\n    public InitPullDown() {\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('mlProject@TFModel01');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('mlProject@TFModel02XOR');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('mlProject@TFModel03Iris');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('mlProject@--');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('mlProject@TFModel03SmartDrawing');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('mlProject@TFModel01HorsepowerAndMilesPerGallon');\r\n\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@TFPlayground01');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@JSLinearRegression');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@JSLinearRegressionGD');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@TFLinearRegressionGD');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@--');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@TFPolynomialRegression GD');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@TFPolyRegress Interaction');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@TFPolyRegress Miles/Gallon');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@--');\r\n        this.implementation.app.viewController.NUIWrapper.NUI.pullDownMenuWrapper.menus[1].AddApp('tfProject@TF Regression');\r\n    }\r\n}"],"names":["ActiveCommandController","constructor","scene","this","MouseEventController","e","CLICK_TYPE","MouseUpPre","MouseWheelPre","MouseDownPre","MouseDragPre","MouseMovePre","MouseDoubleClickPre","MouseRightClickPre","MouseMiddleClickPre","MouseLeftClickPre","MouseDown","x","y","MouseLeftClick","MouseMiddleClick","MouseRightClick","MouseUp","MouseDoubleClick","MouseMove","MouseDrag","MouseWheel","wheel","Blank","DefinitionIndeCanvasCore","tfProject","super","p","Init","console","log","tf","RenderIndependentCanvas","ctx","fillStyle","beginPath","arc","closePath","fill","JSLinearRegression01","tfProjct","xpos","ypos","xspeed","yspeed","xdirection","ydirection","rad","vs","a","bias","indeCanvas","title","push","NVector3","MapX","MapY","v","MathUtility","width","height","rect","canvas","LinearRegression","RenderLine","i","length","Math","PI","y0","y1","lineWidth","strokeStyle","moveTo","lineTo","stroke","xSum","ySum","xMean","yMean","num","den","JSLinearRegressionGradientDescent02","weight","GradientDescent","error","TFLinearRegressionGradientDescent01","vsTemp","tfLinearRegression","t","TFLinearRegression","InitData","InitUI","div","document","createElement","style","position","left","color","textContent","append","divHost","getElementById","TFDataUtility","then","d","xMin","Number","MAX_SAFE_INTEGER","xMax","MIN_SAFE_INTEGER","yMin","yMax","map","data","pop","xx","yy","train","lineX","ys","predict","lineY","dataSync","dispose","leraningRate","optimizer","random","mul","add","loss","pred","label","sub","square","mean","xVal","yVal","xs","minimize","TFModel01","selVec","undefined","tfModel","TFModel","m","GridLine","xInterval","yInterval","x0","x1","font","textAlign","fillText","toFixed","model","hidden","inputShape","units","activation","output","compileArgs","compile","train1","print","train0","fit","epochs","response","history","async","xTrain","yTrain","config","shuffle","TFModel01HorsepowerAndMilesPerGallon","tensorData","convertToTensor","inputs","labels","createModel","tfvis","name","metrics","batchSize","callbacks","trainModel","inputData","normalizationData","inputMax","inputMin","labelMin","labelMax","preds","reshape","unNormXs","unNormPreds","predictedPoints","Array","from","val","originalPoints","horsepower","mpg","values","series","xLabel","yLabel","testModel","curveX","useBias","inputTensor","labelTensor","max","min","TFModel02XOR","xPredict","fontSize","j","result","index","offset","out","trainLoop","setTimeout","TFModel03Iris","inputsTensor","labelsTensor","row","shape","summary","save","saveResults","validationData","TFModel03SmartDrawing","DataProcess","CreateModel01","CreateModel02","raw","OpenCSV","processData","labelsTemp","maxNum","allText","allTextLines","split","headers","lines","tarr","dataTemp","isNaN","fetch","text","catch","err","t0","t1","hidden01","Compile","hidden02","performance","now","TFPlayground01","TFUtility","TFPolynomialRegressionGradientDescent02","b","onclick","implementation","app","modelViewCoreWrapper","viewWrapper","PolynomialRegression","Grid","predict2d","curveY","weights","dim","predict1d","predict3d","pow","predict4d","predict5d","numTensors","TFPolynomialRegressionGradientDescent03Interaction","zIndex","TFPolynomialRegressionGradientDescent04TFHorsepowerAndMilesPerGallon","TFPolynomialRegressionGradientDescent05Interaction","col","marginTop","marginBottom","TFProject","activeCommandController","definitions","graphicsCoreWrapper","canvasWrapper","InitDefinition","InitDefault","InitPullDown","Render","Dispose","LoadDefinition","TFMnist","viewController","NUIWrapper","NUI","pullDownMenuWrapper","menus","AddApp"],"sourceRoot":""}