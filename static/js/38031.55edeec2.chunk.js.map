{"version":3,"file":"static/js/38031.55edeec2.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-pixel/06_pixelMapTerrain/RendererPixelMap/index.ts","njslab/Workshop/workshop-pixel/06_pixelMapTerrain/ControllerPixelMap/index.ts","njslab/Workshop/workshop-pixel/06_pixelMapTerrain/PMapTerrain/index.ts","njslab/Workshop/workshop-pixel/06_pixelMapTerrain/index.ts"],"sourcesContent":["import * as THREE from 'three';\nimport { OrbitControls } from 'three-orbitcontrols-ts';\n\nexport class RendererThree {\n    public canvas: HTMLCanvasElement;\n    public hostDiv: HTMLElement;\n    public ctx: CanvasRenderingContext2D;\n    public t: number = 0.0;\n    public camera: THREE.PerspectiveCamera;\n    public scene: THREE.Scene;\n    public renderer: THREE.WebGLRenderer;\n    public controls: OrbitControls;\n    private requestFrame: number;\n    constructor(id: string) {\n        this.hostDiv = document.getElementById(id);\n        this.initCanvas();\n    }\n    private initCanvas() {\n        THREE.Object3D.DEFAULT_UP.set(0, 0, 1);\n\n        this.scene = new THREE.Scene();\n        \n        this.scene.castShadow = true;\n\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n        this.renderer.setPixelRatio(this.hostDiv.clientWidth / this.hostDiv.clientHeight);\n        this.renderer.domElement.id = 'Three';\n        this.renderer.domElement.style.position = 'absolute';\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.setSize(this.hostDiv.clientWidth, this.hostDiv.clientHeight);\n        this.hostDiv.appendChild(this.renderer.domElement);\n\n        this.camera = new THREE.PerspectiveCamera(30, this.hostDiv.clientWidth / this.hostDiv.clientHeight, 1, 5000);\n        this.controls = new OrbitControls( this.camera, this.renderer.domElement );\n        this.camera.position.set( 0, 0, 0 );\n        this.controls.update();\n\n        this.canvas = this.renderer.domElement;\n\n        this.init();\n    }\n    private init() {\n        this.eventBind();\n\n    }\n    private eventBind() {\n        this.renderer.domElement.onmousedown = (e: MouseEvent) => this.mouseDown(e);\n        this.renderer.domElement.onmouseup = (e: MouseEvent) => this.mouseUp(e);\n        this.renderer.domElement.onmousemove = (e: MouseEvent) => this.mouseMove(e);\n        this.renderer.domElement.addEventListener('click', (e: MouseEvent) =>this.mouseClick(e))\n\n        window.addEventListener('resize', () => this.onWindowResize());\n\n    }\n    private onWindowResize() {\n        this.camera.aspect = this.hostDiv.clientWidth / this.hostDiv.clientHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize( this.hostDiv.clientWidth, this.hostDiv.clientHeight );\n    }\n    private loop = () => {\n        this.requestFrame = requestAnimationFrame(this.loop);\n        this.controls.update();\n        this.update(this.scene);\n        this.renderer.render(this.scene, this.camera);\n        this.t += 0.01;\n\n        // console.log('rendering...');\n    }\n    // .............................................................................\n    public start() {\n        this.loop();\n    }\n    public mouseDown(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseUp(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseClick(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseDClick(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseMove(e: MouseEvent) {\n        // console.log(e);\n    }\n    public mouseDrag(e: MouseEvent) {\n        // console.log(e);\n    }\n    public update(scene: THREE.Scene) {\n\n    }\n    public destroy() {\n        window.removeEventListener('resize', () => this.onWindowResize());\n        cancelAnimationFrame(this.requestFrame);\n        this.requestFrame = undefined;\n        while (this.hostDiv.lastChild) {\n            this.hostDiv.removeChild(this.hostDiv.lastChild);\n        }\n    }\n}","import { getImgFromURL } from '../../../../../lib';\nimport { Solution } from '..';\nexport class ControllerPixelMap {\n    public img: HTMLImageElement | undefined = undefined;\n\n    public rx: number = 20;\n    public ry: number = 20;\n    public size: number = 1;\n\n    public app: Solution;\n    public hostDiv: HTMLElement;\n    public divMenu: HTMLElement;\n    public divText: HTMLElement;\n\n    constructor(app: Solution) {\n        this.app = app;\n        this.hostDiv = this.app.divMenu;\n        this.initUI();\n    }\n    public initUI() {\n        const path0 = 'https://upload.wikimedia.org/wikipedia/commons/5/57/Heightmap.png';\n        const path1 = 'https://upload.wikimedia.org/wikipedia/commons/1/15/Srtm_ramp2.world.21600x10800.jpg';\n        const path2 = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/heightMap/Heightmap_01.png';\n        const path3 = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/heightMap/Heightmap_02.jpg';\n        const path4 = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/heightMap/Heightmap_03.jpg';\n\n\n        const divMenu = document.createElement('div');\n        this.divMenu = divMenu;\n        this.hostDiv.appendChild(divMenu);\n        divMenu.style.display = 'block';\n        divMenu.style.position = 'absolute';\n        divMenu.style.top = '0px';\n\n        const divInput = document.createElement('input');\n        // divInput.value = 'https://upload.wikimedia.org/wikipedia/commons/f/ff/Mozilla_Firefox_logo_2013.png';\n        divInput.value = path3\n        divInput.addEventListener('keydown', (e: KeyboardEvent) => {\n            if (e.code === 'Enter') {\n                // this.buildMeshByImg(divInput.value)\n                this.loadImg(divInput.value)\n            }\n        });\n        divMenu.appendChild(divInput);\n\n        const slType = getSlider('rx', 10, 30)\n        slType.slider.defaultValue = '20';\n        divMenu.appendChild(slType.div);\n        slType.slider.oninput = () => {\n            const value = parseInt(slType.slider.value);\n            this.rx = value;\n            this.update();\n            // this.buildMeshByImg(this.img) \n        };\n        const slType2 = getSlider('ry', 10, 30)\n        slType2.slider.defaultValue = '20';\n        divMenu.appendChild(slType2.div);\n        slType2.slider.oninput = () => {\n            const value = parseInt(slType2.slider.value);\n            this.ry = value;\n            this.update();\n            // this.buildMeshByImg(this.img) \n        };\n\n        const slType3 = getSlider('rz', 0, 50)\n        slType3.slider.defaultValue = '10';\n        divMenu.appendChild(slType3.div);\n        slType3.slider.oninput = () => {\n            const value = parseInt(slType3.slider.value);\n            this.size = value * 0.1;\n            this.update();\n            // this.buildMeshByImg(this.img) \n        };\n\n        \n        this.divText = document.createElement('div')\n        this.divText.textContent = ''\n        divMenu.appendChild(this.divText);\n    }\n    public loadImg(url: string) {\n        getImgFromURL(url).then((img: HTMLImageElement) => {\n            // console.log(this.img)\n            if (this.img) {\n                this.divMenu.removeChild(this.img)\n            }\n\n            img.onload = (ev) => {\n                this.divMenu.appendChild(img)\n                this.img = img;\n                this.update();\n            };\n\n        });\n    }\n    public update() {\n        // console.log(this.rx, this.ry, this.size)\n        this.app.init(this.img)\n    }\n    public destroy() {\n        this.hostDiv.removeChild(this.divMenu);\n    }\n}\n\nconst getSlider = (title: string, min: number, max: number) => {\n    // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\n    const div = document.createElement('div');\n    div.style.display = 'flex';\n\n    const slider = document.createElement('input');\n    slider.type = 'range';\n    slider.min = `${min}`;\n    slider.max = `${max}`;\n\n    const text = document.createElement('div');\n    text.textContent = title;\n    text.style.color = '#aaa';\n    div.appendChild(slider);\n    div.appendChild(text);\n    return {\n        div, slider, text\n    }\n};","\nexport class PixelMap {\n    public pixelList: Pixel[] = []\n    public minV: Vector3;\n    public maxV: Vector3;\n    public rx = 10;\n    public ry = 10;\n    public rz = 2;\n    public intervalX;\n    public intervalY;\n    public selPixel: Pixel | undefined = undefined;\n    constructor() {\n\n\n    }\n    public init(minV: Vector3, maxV: Vector3, rx: number, ry: number){\n        this.minV = minV;\n        this.maxV = maxV;\n        this.rx = rx;\n        this.ry = ry;\n\n        this.pixelList = []\n        const x = this.minV.x\n        const y = this.minV.y\n\n        this.intervalX = (this.maxV.x - this.minV.x) / (this.rx - 1)\n        this.intervalY = (this.maxV.y - this.minV.y) / (this.ry - 1)\n        \n        for(let j = 0 ; j < this.ry; j++) {\n            for(let i = 0 ; i < this.rx; i++) {\n                const xV = x + i * this.intervalX;\n                const yV = y + j * this.intervalY;\n\n                let pix = new Pixel(this, xV * -1 , yV , 0); // flip x\n                // let pix = new Pixel(this, xV * -1 , yV , 0);\n\n                pix.xi = i;\n                pix.yi = j;\n                this.pixelList.push(pix);\n            }\n        }\n        this.initGridNeighbor();\n    }\n    private initGridNeighbor() {\n        for (let j = 0; j < this.ry; ++j) {\n            for (let i = 0; i < this.rx; ++i) {\n                let k = i + j * this.rx;\n                let px = this.pixelList[k];\n                if (i > 0) { px.nPix.push(this.pixelList[k - 1]); }\n                if (i < this.rx - 1) { px.nPix.push(this.pixelList[k + 1]); }\n                if (j > 0) { px.nPix.push(this.pixelList[k - this.rx]); }\n                if (j < this.ry - 1) { px.nPix.push(this.pixelList[k + this.rx]); }\n                if ((i > 0) && (j < this.ry - 1)) { px.nPix.push(this.pixelList[k + this.rx - 1]); }\n                if ((i > 0) && (j > 0)) { px.nPix.push(this.pixelList[k - this.rx - 1]); }\n                if ((i < this.rx - 1) && (j < this.ry - 1)) { px.nPix.push(this.pixelList[k + this.rx + 1]); }\n                if ((i < this.rx - 1) && (j > 0)) { px.nPix.push(this.pixelList[k - this.rx + 1]); }\n            }\n        }\n    }\n    public updateImage(img: HTMLImageElement) {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d', {willReadFrequently: true})\n        ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, this.rx, this.ry)\n\n        const imgData = ctx.getImageData(0, 0, this.rx, this.ry);\n\n        const px = (x: number, y: number) => {\n            return x * 4 + y * imgData.width * 4;\n        };\n\n        for (let j = 0; j < this.ry; ++j) {\n            for (let i = 0; i < this.rx; ++i) {\n                let k = px(i, j)\n                let indexList = i + j * this.rx;\n\n                this.pixelList[indexList].color = [\n                    imgData.data[k], imgData.data[k+1], imgData.data[k+2], imgData.data[k+3]\n                ]\n                this.pixelList[indexList].vec.z = RGBtoGray(\n                    imgData.data[k] / 255, imgData.data[k+1] / 255, imgData.data[k+2] / 255\n                ) * this.rz\n            }\n        }\n    }\n    public picking(x: number, y: number, z: number) {\n        const mv = new Vector3(x,y,z)\n        let dis = Number.MAX_VALUE;\n        let id = -1\n        for(let i = 0 ; i < this.pixelList.length; ++i) {\n           const theDis = distance(this.pixelList[i].vec, mv);\n           if (dis > theDis) {\n            dis = theDis;\n            id = i;\n           }\n           this.pixelList[i].hover = false;\n        }\n\n        this.selPixel = undefined;\n        if (id > -1) {\n            this.pixelList[id].hover = true;\n            this.selPixel = this.pixelList[id];\n            // console.log(this.selPixel)\n        }\n        return this.selPixel;\n    }\n    public render(ctx) {\n        this.pixelList.forEach((p: Pixel) => {\n            p.render(ctx);\n        })\n\n        if (this.selPixel) {\n            this.selPixel.render(ctx);\n        }\n    }\n    public onClick (x: number, y: number, z: number) {\n        return this.picking(x, y, z)\n    }\n}\n\nclass Pixel {\n    public xi: number;\n    public yi: number;\n    public pMap: PixelMap;\n    public vec: Vector3;\n    public hover: boolean = false;\n    public nPix: Pixel[] = [];\n    public color: number[] = [];\n    public mesh: any;\n    constructor(pMap: PixelMap, x: number, y: number, z: number) {\n        this.pMap = pMap;\n        this.vec = new Vector3(x,y,z);\n    }\n    public render(ctx: CanvasRenderingContext2D) {\n        const width = this.pMap.intervalX \n        const height = this.pMap.intervalY\n\n        ctx.beginPath()\n        ctx.rect(this.vec.x - width * 0.5, this.vec.y - height * 0.5, width, height)\n        ctx.closePath()\n        ctx.stroke()\n        if (this.hover) {\n            ctx.fillStyle = '#555';\n            ctx.fill()\n        } else {\n            ctx.fillStyle = `rgba(${this.color[0]}, ${this.color[1]}, ${this.color[2]}, ${this.color[3]})`;\n            ctx.fill()\n        }\n\n        ctx.beginPath();\n        ctx.arc(this.vec.x, this.vec.y, this.vec.r, 0, Math.PI * 2.0);\n        ctx.closePath();\n        if (this.hover) {\n            ctx.fillStyle = '#999';\n        } else {\n            ctx.fillStyle = '#333';\n        }\n        ctx.fill();\n\n        if (this.hover) {\n            for(let i = 0 ; i < this.nPix.length; ++i) {\n                ctx.beginPath();\n                ctx.moveTo(this.vec.x, this.vec.y)\n                ctx.lineTo(this.nPix[i].vec.x, this.nPix[i].vec.y)\n                ctx.closePath();\n                ctx.stroke()\n            }\n\n            ctx.strokeText(`x: ${this.xi}, y: ${this.yi}` ,this.vec.x, this.vec.y)\n        }\n    }\n}\n\nexport class Vector3 {\n    public x: number = 0.0;\n    public y: number = 0.0;\n    public z: number = 0.0;\n    public r: number = 3\n    constructor(x,y,z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n}\n\n\nconst distance = (v0: Vector3, v1: Vector3) => {\n    return Math.sqrt(distance2(v0, v1));\n}\nconst distance2 = (v0: Vector3, v1: Vector3) => {\n    return (v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z);\n}\n\nexport const RGBtoGray = (r: number, g: number, b: number) => {\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n}","import * as THREE from 'three';\r\nimport { RendererThree } from './RendererPixelMap';\r\nimport { ControllerPixelMap } from './ControllerPixelMap';\r\nimport { PixelMap, Vector3 } from './PMapTerrain'\r\n\r\nexport class Solution {\r\n    public controller: ControllerPixelMap;\r\n    public renderer: Renderer;\r\n    public pMap: PixelMap;\r\n\r\n    public canvas: HTMLCanvasElement;\r\n\r\n    public divMain: HTMLElement;\r\n    public divMenu: HTMLElement;\r\n\r\n    constructor(id: string = 'main') {\r\n        const divMain = document.getElementById(id);\r\n        this.divMain = divMain;\r\n\r\n        const divMenu = document.createElement('div');\r\n        this.divMenu = divMenu;\r\n        divMenu.style.height = '50px';\r\n        divMenu.style.position = 'absolute';\r\n        divMenu.style.backgroundColor = '#f00';\r\n        divMenu.style.zIndex = '1';\r\n        divMain.append(divMenu);\r\n        this.controller = new ControllerPixelMap(this);\r\n\r\n        const divCanvas = document.createElement('div');\r\n        divCanvas.id = 'pMap';\r\n        divCanvas.style.width = '100%';\r\n        divCanvas.style.height = '100%';\r\n        divMain.append(divCanvas);\r\n\r\n        this.renderer = new Renderer(divCanvas.id);\r\n\r\n\r\n        this.controller.loadImg('https://upload.wikimedia.org/wikipedia/commons/5/57/Heightmap.png')\r\n    }\r\n    public init(img) {\r\n        this.pMap = new PixelMap();\r\n        this.pMap.rx = this.controller.rx;\r\n        this.pMap.ry = this.controller.ry;\r\n        this.pMap.rz = this.controller.size;\r\n\r\n        this.pMap.init(\r\n            new Vector3(10, 10, 0),\r\n            new Vector3(-10, -10, 0),\r\n            this.controller.rx,\r\n            this.controller.ry\r\n        );\r\n\r\n        this.pMap.updateImage(img);\r\n        this.renderer.updatePoint(this.pMap);\r\n        this.renderer.onClickBind = (x: number, y: number, z: number) => {\r\n            const pixel = this.pMap.onClick(x, y, z)\r\n            // console.log(pixel.vec.z)\r\n            // console.log(pixel.color)\r\n\r\n            this.controller.divText.textContent = `Elevation: ${pixel.vec.z}, Col: ${pixel.color}`\r\n        }\r\n    }\r\n\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n\r\n        try {\r\n            while (this.divMain !== undefined && this.divMain.lastElementChild !== undefined) {\r\n                this.divMain.removeChild(this.divMain.lastElementChild);\r\n            }\r\n        } catch (error) { }\r\n    }\r\n}\r\n\r\nclass Renderer extends RendererThree {\r\n    public canvas: HTMLCanvasElement;\r\n    public pointLight: THREE.PointLight;\r\n\r\n    rayCaster = new THREE.Raycaster();\r\n    mouse2 = new THREE.Vector2();\r\n    m: THREE.Vector3 | undefined = undefined;\r\n    sphere: THREE.Mesh;\r\n\r\n    preSelection: THREE.Mesh | undefined = undefined\r\n\r\n    public meshList: THREE.Mesh[] = [];\r\n    \r\n    constructor(id: string = 'main') {\r\n        super(id)\r\n\r\n        this.pointLight = new THREE.PointLight(0xffffff, 0.75);\r\n        this.pointLight.position.x = 80;\r\n        this.pointLight.position.z = 80;\r\n        this.scene.add(this.pointLight);\r\n\r\n        this.canvas = document.createElement('canvas');\r\n        this.hostDiv.append(this.canvas);\r\n\r\n        this.renderer.setClearColor(0x000000, 0);\r\n        this.scene.background = null;\r\n        this.camera.position.set(0, -80, 80);\r\n\r\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n        const geometrySphere = new THREE.SphereGeometry(0.05, 50, 50);\r\n        const objectSphere = new THREE.Mesh(geometrySphere, material);\r\n        objectSphere.translateX(1)\r\n        this.sphere = objectSphere\r\n        this.scene.add(objectSphere);\r\n\r\n\r\n        this.start();\r\n    }\r\n    public updatePoint(pMap: PixelMap) {\r\n        this.scene.remove(...this.meshList)\r\n        this.preSelection = undefined;\r\n        this.meshList = []\r\n\r\n        for (let i = 0; i < pMap.pixelList.length; ++i) {\r\n            const vec = pMap.pixelList[i].vec;\r\n            const col = pMap.pixelList[i].color;\r\n\r\n            const geometry = new THREE.SphereGeometry(0.25, 8, 8);\r\n            const material = new THREE.MeshBasicMaterial({ color: new THREE.Color(col[0] / 255, col[1] / 255, col[2] / 255) });\r\n\r\n            const mesh = new THREE.Mesh(geometry, material);\r\n            mesh.userData['pixel'] = pMap.pixelList[i]\r\n            pMap.pixelList[i].mesh = mesh; \r\n\r\n            this.meshList.push(mesh);\r\n            mesh.position.set(vec.x, vec.y, vec.z);\r\n            this.scene.add(mesh);\r\n\r\n        }\r\n    }\r\n    public mouseClick(e: MouseEvent): void {\r\n        const obj = picking(e, this.meshList, this.renderer, this.camera, this.rayCaster, this.mouse2)\r\n        if (obj) {\r\n            if (this.preSelection) {\r\n                const mat = this.preSelection.material as THREE.MeshBasicMaterial\r\n                mat.color.setRGB(this.preSelection.userData.pixel.color[0] / 255, this.preSelection.userData.pixel.color[1] / 255, this.preSelection.userData.pixel.color[2] / 255)\r\n            }\r\n\r\n            this.m = new THREE.Vector3(obj.mouse3.x, obj.mouse3.y, obj.mouse3.z);\r\n\r\n            this.sphere.position.set(this.m.x, this.m.y, this.m.z);\r\n\r\n            this.onClickBind(this.m.x, this.m.y, this.m.z);\r\n            const mesh = obj.mesh[0].object as THREE.Mesh;\r\n            // console.log(mesh)\r\n            const mat = mesh.material as THREE.MeshBasicMaterial\r\n            mat.color.setHex(0xff0000)\r\n            this.preSelection = mesh\r\n            return\r\n        }\r\n\r\n        this.m = undefined;\r\n    }\r\n    public onClickBind(x: number, y: number, z: number) { /* bind needed */ }\r\n    \r\n}\r\n\r\n\r\nconst picking = (e: MouseEvent, arrayMesh, renderer, camera, rayCaster, mouse2 ) => {\r\n    mouse2.x = (e.offsetX / renderer.domElement.clientWidth) * 2 - 1;\r\n    mouse2.y = -(e.offsetY / renderer.domElement.clientHeight) * 2 + 1;\r\n    rayCaster.setFromCamera(mouse2, camera);\r\n    const intersects = rayCaster.intersectObjects([ ...arrayMesh]);\r\n    if (intersects.length > 0) {\r\n        return {\r\n            mesh: intersects,\r\n            mouse3: new THREE.Vector3(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z) \r\n        };\r\n    }\r\n    return undefined;\r\n}"],"names":["RendererThree","constructor","id","canvas","hostDiv","ctx","t","camera","scene","renderer","controls","requestFrame","loop","this","requestAnimationFrame","update","render","document","getElementById","initCanvas","THREE","castShadow","antialias","alpha","setPixelRatio","clientWidth","clientHeight","domElement","style","position","shadowMap","enabled","setSize","appendChild","OrbitControls","set","init","eventBind","onmousedown","e","mouseDown","onmouseup","mouseUp","onmousemove","mouseMove","addEventListener","mouseClick","window","onWindowResize","aspect","updateProjectionMatrix","start","mouseDClick","mouseDrag","destroy","removeEventListener","cancelAnimationFrame","undefined","lastChild","removeChild","ControllerPixelMap","app","img","rx","ry","size","divMenu","divText","initUI","createElement","display","top","divInput","value","code","loadImg","slType","getSlider","slider","defaultValue","div","oninput","parseInt","slType2","slType3","textContent","url","getImgFromURL","then","onload","ev","title","min","max","type","text","color","PixelMap","pixelList","minV","maxV","rz","intervalX","intervalY","selPixel","x","y","j","i","xV","yV","pix","Pixel","xi","yi","push","initGridNeighbor","k","px","nPix","updateImage","getContext","willReadFrequently","drawImage","width","height","imgData","getImageData","indexList","data","vec","z","RGBtoGray","picking","mv","Vector3","dis","Number","MAX_VALUE","length","theDis","distance","hover","forEach","p","onClick","pMap","mesh","beginPath","rect","closePath","stroke","fillStyle","fill","arc","r","Math","PI","moveTo","lineTo","strokeText","v0","v1","sqrt","distance2","g","b","Solution","controller","divMain","backgroundColor","zIndex","append","divCanvas","Renderer","updatePoint","onClickBind","pixel","lastElementChild","error","super","pointLight","rayCaster","mouse2","m","sphere","preSelection","meshList","add","setClearColor","background","material","geometrySphere","objectSphere","translateX","remove","col","geometry","userData","obj","setRGB","mouse3","object","setHex","arrayMesh","offsetX","offsetY","setFromCamera","intersects","intersectObjects","point"],"sourceRoot":""}