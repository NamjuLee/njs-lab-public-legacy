{"version":3,"file":"static/js/8535.b250ce15.chunk.js","mappings":"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","sources":["njslab/LabStarter/Starter-Three-Sandbox/ThreeCore/index.ts","njslab/LabStarter/Starter-Three-Sandbox/Core/Core.ts","njslab/LabStarter/Starter-Three-Sandbox/index.ts"],"sourcesContent":["import * as THREE from 'three';\r\nimport { OrbitControls } from 'three-orbitcontrols-ts';\r\n\r\nexport class ThreeCore {\r\n    canvas: HTMLCanvasElement;\r\n    host: HTMLElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    t: number = 0.0;\r\n    camera: THREE.PerspectiveCamera;\r\n    scene: THREE.Scene;\r\n    renderer: THREE.WebGLRenderer;\r\n    controls: OrbitControls;\r\n    requestFrame: number;\r\n    constructor(id: string) {\r\n        this.initCanvas(id);\r\n    }\r\n    public initCanvas(id: string) {\r\n        this.host = document.getElementById(id);\r\n\r\n        this.scene = new THREE.Scene();\r\n        this.scene.background = new THREE.Color(0, 0, 0);\r\n        this.scene.castShadow = true;\r\n\r\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n        this.renderer.setPixelRatio(this.host.clientWidth / this.host.clientHeight);\r\n        this.renderer.domElement.id = 'Three';\r\n        this.renderer.setSize(this.host.clientWidth, this.host.clientHeight);\r\n        this.host.appendChild(this.renderer.domElement);\r\n\r\n        const ambientLight = new THREE.AmbientLight(0xcccccc, .25);\r\n        ambientLight.castShadow = true;\r\n        this.scene.add(ambientLight);\r\n\r\n        let pointLight = new THREE.PointLight(0xffffff, 100);\r\n        pointLight.position.x = 10;\r\n        pointLight.castShadow = true;\r\n        this.scene.add(pointLight);\r\n\r\n        this.camera = new THREE.PerspectiveCamera(30, this.host.clientWidth / this.host.clientHeight, 1, 5000);\r\n        this.controls = new OrbitControls( this.camera, this.renderer.domElement );\r\n        this.camera.position.set( 0, 0, 5 );\r\n        this.controls.update();\r\n\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.eventBind();\r\n        this.loop();\r\n    }\r\n    eventBind() {\r\n        this.renderer.domElement.onmousedown = (e: MouseEvent) => this.MouseDown(e);\r\n        this.renderer.domElement.onmouseup = (e: MouseEvent) => this.MouseUp(e);\r\n        this.renderer.domElement.onmousemove = (e: MouseEvent) => this.MouseMove(e);\r\n\r\n        window.addEventListener('resize', () => this.onWindowResize());\r\n        // this.host.addEventListener('resize', () => this.onWindowResize() );\r\n\r\n    }\r\n    private onWindowResize() {\r\n        this.camera.aspect = this.host.clientWidth / this.host.clientHeight;\r\n        this.camera.updateProjectionMatrix();\r\n\r\n        this.renderer.setSize( this.host.clientWidth, this.host.clientHeight );\r\n    }\r\n    MouseDown(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseUp(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    MouseMove(e: MouseEvent) {\r\n        // console.log(e);\r\n    }\r\n    loop = () => {\r\n        this.requestFrame = requestAnimationFrame(this.loop);\r\n        this.controls.update();\r\n        this.render();\r\n        this.renderer.render(this.scene, this.camera);\r\n        this.t += 0.01;\r\n    }\r\n    render() {\r\n\r\n    }\r\n    destroy(){\r\n        window.removeEventListener('resize', () => this.onWindowResize());\r\n        cancelAnimationFrame(this.requestFrame);\r\n        this.requestFrame = undefined;\r\n        while (this.host.lastChild) {\r\n            this.host.removeChild(this.host.lastChild);\r\n        }\r\n    }\r\n}","import { ThreeCore } from '../ThreeCore';\r\nimport * as THREE from 'three';\r\nexport class Core {\r\n    threeCore: ThreeCore;\r\n    boxMeshes: THREE.Mesh[] = [];\r\n    constructor(threeCore: ThreeCore) {\r\n        this.threeCore = threeCore;\r\n\r\n        const geometry = new THREE.SphereGeometry( 1, 50, 50 );\r\n\r\n\r\n        const object = new THREE.Mesh( geometry, new THREE.MeshPhongMaterial( ) );\r\n        object.position.x = 0\r\n        object.position.y = 0;\r\n        object.position.z = 0;\r\n        // object.castShadow = true;\r\n        // object.receiveShadow = true;\r\n\r\n        this.threeCore.scene.add( object );\r\n    }\r\n    public render() {\r\n\r\n    }\r\n    public mouseDown(e: MouseEvent) {\r\n        // console.log(e, 'core');\r\n    }\r\n    public mouseUp(e: MouseEvent) {\r\n        // console.log(e, 'core');\r\n    }\r\n    public mouseMove(e: MouseEvent) {\r\n        // console.log(e, 'core');\r\n    }\r\n    public mouseDrag(e: MouseEvent) {\r\n        // console.log(e, 'core');\r\n    }\r\n    public destroy() {\r\n\r\n    }\r\n}","import { ThreeCore } from './ThreeCore';\r\nimport { Core } from './Core/Core';\r\nexport class Solution {\r\n    threeCore: ThreeCore;\r\n    core: Core;\r\n    static Init(id: string) {\r\n        const app = new Solution(id);\r\n        app.Dummy();\r\n    }\r\n    constructor(id: string = 'main') {\r\n        // console.log(id);\r\n        this.threeCore = new ThreeCore(id);\r\n        this.core = new Core(this.threeCore);\r\n        this.bindEvent();\r\n        this.BindRenderer();\r\n    }\r\n    Dummy() {\r\n        //\r\n    }\r\n    bindEvent() {\r\n        this.threeCore.MouseDown = (e: MouseEvent) => this.core.mouseDown(e);\r\n        this.threeCore.MouseMove = (e: MouseEvent) => this.core.mouseMove(e);\r\n        this.threeCore.MouseUp = (e: MouseEvent) => this.core.mouseUp(e);\r\n    }\r\n    BindRenderer() {\r\n        this.threeCore.render = () => this.core.render();\r\n    }\r\n    destroy(){\r\n        this.core.destroy();\r\n        this.threeCore.destroy();\r\n    }\r\n}\r\n"],"names":["ThreeCore","constructor","id","canvas","host","ctx","t","camera","scene","renderer","controls","requestFrame","loop","this","requestAnimationFrame","update","render","initCanvas","document","getElementById","THREE","background","castShadow","antialias","alpha","setPixelRatio","clientWidth","clientHeight","domElement","setSize","appendChild","ambientLight","add","pointLight","position","x","OrbitControls","set","init","eventBind","onmousedown","e","MouseDown","onmouseup","MouseUp","onmousemove","MouseMove","window","addEventListener","onWindowResize","aspect","updateProjectionMatrix","destroy","removeEventListener","cancelAnimationFrame","undefined","lastChild","removeChild","Core","threeCore","boxMeshes","geometry","object","y","z","mouseDown","mouseUp","mouseMove","mouseDrag","Solution","static","Dummy","core","bindEvent","BindRenderer"],"sourceRoot":""}