{"version":3,"file":"static/js/21947.4c861d95.chunk.js","mappings":"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","sources":["njslab/Raster/ImageCropViewer/ImplementationCanvasSecond/Core/Canvas/index.ts","njslab/Raster/ImageCropViewer/ImplementationCanvasSecond/lib/index.ts","njslab/Raster/ImageCropViewer/ImplementationCanvasSecond/Core/Frame/index.ts","njslab/Raster/ImageCropViewer/ImplementationCanvasSecond/Core/Renderer/index.ts","njslab/Raster/ImageCropViewer/ImplementationCanvasSecond/Core/EventController/Event/TouchInteraction.ts","njslab/Raster/ImageCropViewer/ImplementationCanvasSecond/Core/EventController/Event/MouseInteraction.ts","njslab/Raster/ImageCropViewer/ImplementationCanvasSecond/Core/EventController/index.ts","njslab/Raster/ImageCropViewer/ImplementationCanvasSecond/Core/index.ts","njslab/Raster/ImageCropViewer/ImplementationCanvasSecond/index.ts","njslab/Raster/ImageCropViewer/index.ts"],"sourcesContent":["import { Core } from '..';\r\nexport class Canvas {\r\n    public core: Core;\r\n    public div: HTMLElement;\r\n    public canvas: HTMLCanvasElement;\r\n    public ctx: CanvasRenderingContext2D;\r\n    public isActive: boolean = false;\r\n\r\n    public log: string;\r\n    public isViewChanging: boolean = false;\r\n    public loopNum: number = 0;\r\n    public needRenderloop: boolean = true;\r\n    public ablePan: boolean = true;\r\n\r\n    public mousePre: number [] = [0, 0];\r\n    public canvasOut: HTMLCanvasElement;\r\n    public ctxOut: CanvasRenderingContext2D;\r\n    public loopNeeded = false;\r\n    constructor(core: Core, div: HTMLElement) {\r\n        this.core = core;\r\n        this.div = div;\r\n        this.loopNeeded = false;\r\n        this.init();\r\n        this.loopInit();\r\n    }\r\n    private init() {\r\n        const canvas = document.createElement('canvas');\r\n        const canvasOut = document.createElement('canvas');\r\n        if (canvas && canvasOut) {\r\n            this.canvas = canvas;\r\n            this.canvas.width = this.div.clientWidth;\r\n            this.canvas.height = this.div.clientHeight;\r\n            this.div.append(this.canvas);\r\n\r\n            this.canvasOut = canvasOut;\r\n            this.canvasOut.style.backgroundColor = '#999999';\r\n            this.canvasOut.style.border = '5px';\r\n            this.ctxOut = this.canvasOut.getContext('2d') as CanvasRenderingContext2D;\r\n            this.core.divHost.append(this.canvasOut);\r\n\r\n            const ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                this.ctx = ctx;\r\n                this.isActive = true;\r\n                this.initEvent();\r\n            }\r\n        }\r\n    }\r\n    public initEvent() {\r\n        this.canvas.addEventListener('keydown', (k: KeyboardEvent) => {});\r\n        this.canvas.addEventListener('keyup', (k: KeyboardEvent) => {});\r\n        \r\n        this.canvas.addEventListener('mousedown', (e: MouseEvent) => { this.core.controller.mouseInteraction.mouseDown(e); }, false);\r\n        this.canvas.addEventListener('mouseup', (e: MouseEvent) => { this.core.controller.mouseInteraction.mouseUp(e); }, false);\r\n        this.canvas.addEventListener('mousemove', (e: MouseEvent) => { this.core.controller.mouseInteraction.mouseMove(e); }, false);\r\n        this.canvas.addEventListener('wheel', (e: WheelEvent) => this.core.controller.mouseInteraction.mouseWheel(e, e.deltaY), false);\r\n        this.canvas.addEventListener('mouseout', (e: MouseEvent) => { this.core.controller.mouseInteraction.mouseUp(e); }, false);\r\n\r\n        this.canvas.addEventListener('touchstart', (t: TouchEvent) => this.core.controller.touchInteraction.touchstart(t), false);\r\n        this.canvas.addEventListener('touchmove', (t: TouchEvent) => this.core.controller.touchInteraction.touchmove(t), false);\r\n        this.canvas.addEventListener('touchcancel', (t: TouchEvent) => this.core.controller.touchInteraction.touchcancel(t), false);\r\n        this.canvas.addEventListener('touchend', (t: TouchEvent) => this.core.controller.touchInteraction.touchend(t), false);\r\n    }\r\n    public capture() {\r\n        const img = new Image();\r\n        img.crossOrigin ='anonymous';\r\n        img.src = this.canvasOut.toDataURL();\r\n        return img;\r\n    }\r\n    private loopInit() {\r\n        this.loop();\r\n    }\r\n    public resize() {\r\n        this.canvas.width = this.div.clientWidth;\r\n        this.canvas.height = this.div.clientHeight;\r\n    }\r\n    public loop() {\r\n        requestAnimationFrame(() => { this.loop(); });\r\n\r\n        if (this.loopNum++ < 130) {\r\n\r\n            let before = performance.now();\r\n            this.renderPre(this.ctx);\r\n\r\n            let after = performance.now();\r\n            this.log = `level: , total frames: ${this.loopNum++} (FPS: ), a loop took: ${(after - before).toFixed(2)} ms to execute.`;\r\n        }\r\n    }\r\n    public clear(ctx: CanvasRenderingContext2D) {\r\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n    }\r\n    public renderForce() {\r\n        // if (!this.loopNeeded) {\r\n            // this.loop();\r\n            this.loopNum = 0;\r\n        // }\r\n    }\r\n    public renderPre(ctx: CanvasRenderingContext2D) {\r\n        if (!this.isActive) { return; }\r\n        this.clear(this.ctx);\r\n        this.render(ctx);\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        // ctx.beginPath();\r\n        // ctx.arc(0, 0, 15, 0, 3.14 * 2);\r\n        // ctx.closePath()\r\n        // ctx.fill();\r\n    }\r\n}","export const distance = (x0: number, y0: number, x1: number, y1: number) => {\r\n    return Math.sqrt((x0 - x1) * (x0 - x1) + (y0 - y1) * (y0 - y1));\r\n};\r\nexport const renderVertex = (ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, r: number = 0.5) => {\r\n    const angle = 3.14 * 0.5;\r\n    ctx.beginPath();\r\n    ctx.arc(x + width - r, y - height + r, r, angle * 3 , angle * 4 , false);\r\n    ctx.arc(x + width - r, y + height - r, r, angle * 0 , angle * 1 , false);\r\n    ctx.arc(x - width + r, y + height - r, r, angle * 1 , angle * 2 , false);\r\n    ctx.arc(x - width + r, y - height + r, r, angle * 2 , angle * 3 , false);\r\n    ctx.closePath();\r\n    ctx.strokeStyle  = '#000000';\r\n    ctx.fillStyle   = '#ffffff';\r\n    ctx.fill();\r\n    ctx.stroke();\r\n};\r\n\r\nexport enum PUSH_ACTION {\r\n    GetImage = 'GetImage',\r\n\r\n}\r\n\r\nexport enum ENGINE {\r\n    Canvas = 'Canvas', // default\r\n    WebGL2 = 'WebGL2',\r\n    WebGPU = 'WebGPU',\r\n    WebAssembly = 'WebAssembly',\r\n}","import { distance, renderVertex } from '../../lib';\r\nimport { Core } from '..';\r\nexport class Frame {\r\n    public id = -1;\r\n\r\n    public x = 100;\r\n    public y = 100;\r\n    public width = 200;\r\n    public height = 200;\r\n\r\n    public xOffGuid = 0;\r\n    public yOffGuid = 0;\r\n\t\r\n\tpublic r = 19;\r\n\r\n    public tOpacityA: number = 0.0;\r\n    public tOpacityB: number = 0.0;\r\n\r\n    public fillStyle = 'rgba(220, 220, 220, 1)';\r\n    public fillStyleHover = 'rgba(220, 220, 220, 0.5)';\r\n\r\n    public strokeStyle = 'rgba(200, 200, 200, 1)';\r\n    public strokeStyleInner = 'rgba(200, 200, 200, 1)';\r\n\r\n    public t = 0.0;\r\n    public cv: number[] = [0 ,0];\r\n    public core: Core;\r\n\r\n    constructor(core: Core) {\r\n        this.core = core;\r\n        this.xOffGuid = this.width / 3;\r\n        this.yOffGuid = this.height / 3;\r\n\t}\r\n\r\n    public linearColorInterpolation(c0: number[], c1: number, interpolation = 0.5) {\r\n        const cOut = [];\r\n        for (let i = 0 ; i < c0.length; ++i) {\r\n            const c = c0[1] + (c1[i] - c0[i]) * interpolation;\r\n            cOut.push(c);\r\n        }\r\n        return cOut;\r\n    }\r\n\r\n    public ColorInterpolation() {\r\n        let opacity = 0;\r\n        if (this.core.controller.isHover) {\r\n            this.tOpacityA += 0.05;\r\n            this.tOpacityB = 0.0;\r\n\r\n            opacity = this.tOpacityA;\r\n        } else {\r\n            this.tOpacityA = 0.0;\r\n            this.tOpacityB += 0.05;\r\n\r\n            opacity = this.tOpacityB;\r\n        }\r\n\r\n        // console.log(opacity);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n\t\t// ctx.globalCompositeOperation = 'xor';\r\n        this.ColorInterpolation();\r\n        if (this.core.controller.isHover) {\r\n            ctx.fillStyle = this.fillStyleHover;\r\n        } else {\r\n            ctx.fillStyle = this.fillStyle;\r\n        }\r\n\r\n\t\tctx.beginPath();\r\n\t\tctx.rect(0, 0, ctx.canvas.width, this.y);\r\n\t\tctx.rect(0, this.y + this.height, ctx.canvas.width, ctx.canvas.height);\r\n\t\tctx.rect(0, 0, this.x, ctx.canvas.height);\r\n\t\tctx.rect(this.x + this.width , 0, ctx.canvas.width, ctx.canvas.height);\r\n\t\tctx.fill();\r\n    }\r\n    public renderPost(ctx: CanvasRenderingContext2D) {\r\n\r\n        // this.cv[0] = this.x + this.width * 0.5;\r\n        // this.cv[1] = this.y + this.height * 0.5;\r\n        \r\n        ctx.lineWidth = 1;\r\n        ctx.lineDashOffset = this.t;\r\n        ctx.setLineDash([4, 1]);\r\n\r\n        ctx.beginPath();\r\n        ctx.rect(this.x, this.y, this.width, this.height);\r\n        ctx.strokeStyle = this.strokeStyle;\r\n        ctx.stroke();\r\n\r\n        \r\n        ctx.beginPath();\r\n        for (let i = 1 ; i < 3; ++i) {\r\n            ctx.moveTo(this.x + this.xOffGuid * i, this.y);\r\n            ctx.lineTo(this.x + this.xOffGuid * i, this.y + this.height);\r\n            ctx.moveTo(this.x, this.y + this.yOffGuid * i);\r\n            ctx.lineTo(this.x + this.width , this.y + this.yOffGuid * i);\r\n        }\r\n        ctx.stroke();\r\n\t\t// ctx.globalCompositeOperation = 'source-over';\r\n\r\n        ctx.setLineDash([]);\r\n\r\n        const size = 3\r\n        renderVertex(ctx, this.x, this.y, size, size);\r\n        renderVertex(ctx, this.x + this.width, this.y, size, size);\r\n        renderVertex(ctx, this.x + this.width, this.y + this.height, size, size);\r\n        renderVertex(ctx, this.x, this.y + this.height, size, size);\r\n\r\n        renderVertex(ctx, this.x + this.width * 0.5, this.y, size * 4, size);\r\n        renderVertex(ctx, this.x + this.width * 0.5, this.y + this.height, size * 4, size);\r\n\r\n        renderVertex(ctx, this.x , this.y + this.height * 0.5, size, size * 4);\r\n        renderVertex(ctx, this.x + this.width, this.y + this.height * 0.5, size, size * 4);\r\n\r\n        // ctx.beginPath();\r\n        // ctx.arc(0, 0, 15, 0, 3.14 * 2);\r\n        // ctx.closePath()\r\n        // ctx.fillStyle = '#ff0000';\r\n        // ctx.fill();\r\n\r\n\t\tthis.t += 0.15;\r\n\t}\r\n    public translate(xOff: number, yOff: number) {\r\n\r\n        // do not allow to move the frame out of the extent\r\n        if (this.x + xOff < 0 ||\r\n            this.x + this.width + xOff > this.core.canvs.canvas.width ||\r\n            this.y + yOff < 0 ||\r\n            this.y + this.height + yOff > this.core.canvs.canvas.height ) { \r\n            return;\r\n        }\r\n\r\n        if (this.id === 0) {\r\n            this.x += xOff;\r\n            this.y += yOff;\r\n            this.width -= xOff;\r\n            this.height -= yOff;\r\n        } else if (this.id === 1) {\r\n            this.width += xOff;\r\n            this.y += yOff;\r\n            this.height -= yOff;\r\n        } else if (this.id === 2) {\r\n            this.width += xOff;\r\n            this.height += yOff;\r\n        } else if (this.id === 3) {\r\n            this.x += xOff;\r\n            this.width -= xOff;\r\n            this.height += yOff;\r\n        } else {\r\n            this.x += xOff;\r\n            this.y += yOff;\r\n        }\r\n\r\n        this.xOffGuid = this.width / 3;\r\n        this.yOffGuid = this.height / 3;\r\n        this.cv[0] = this.x + this.width * 0.5;\r\n        this.cv[1] = this.y + this.height * 0.5;\r\n\r\n        // this.cv[0]\r\n    }\r\n\tpublic isHover(x: number, y: number) {\r\n        if (distance(x, y, this.x, this.y) < this.r) {\r\n            this.core.controller.isHover = true;\r\n            this.id = 0;\r\n            return true;\r\n        }\r\n        if (distance(x, y, this.x + this.width, this.y) < this.r) {\r\n            this.core.controller.isHover = true;\r\n            this.id = 1;\r\n            return true;\r\n        }\r\n        if (distance(x, y, this.x + this.width, this.y + this.height) < this.r) {\r\n            this.core.controller.isHover = true;\r\n            this.id = 2;\r\n            return true;\r\n        }\r\n        if (distance(x, y, this.x, this.y + this.height) < this.r) {\r\n            this.core.controller.isHover = true;\r\n            this.id = 3;\r\n            return true;\r\n        }\r\n\r\n        if (this.x < x  && this.x + this.width > x &&\r\n            this.y < y  && this.y + this.height > y) {\r\n            this.id = -1;\r\n            this.core.controller.isHover = true;\r\n            return true;\r\n         } \r\n\r\n        this.id = -1;\r\n\t\tthis.core.controller.isHover = false;\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n","import { Core } from '..';\r\nexport class Renderer {\r\n    public core: Core;\r\n    public t = 0.0;\r\n    constructor(core: Core) {\r\n        this.core = core;\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n\r\n        // this.translation[0] = this.rect.cv[0];\r\n        // this.translation[1] = this.rect.cv[1];\r\n\r\n        // console.log(this.translation);\r\n        // this.ctx.translate(this.translation[0], this.translation[1]);\r\n        // this.ctx.scale(this.zoom, this.zoom);\r\n        // this.ctx.rotate(this.rotation)\r\n        // this.ctx.translate(this.rect.cv[0], this.rect.cv[1]);\r\n        // this.ctx.translate(100, 100);\r\n\r\n        // this.Render(ctx);\r\n        if (this.core.img) {\r\n            ctx.save();\r\n\r\n            const mat = new DOMMatrix([1, 0, 0, 1, 0, 0]);\r\n\r\n            const xPos = this.core.img.width; // * .5;\r\n            const yPos = this.core.img.height; // * .5;\r\n\r\n            const xPosRatio = this.core.frame.cv[0] / this.core.img.width; // * 0.01;\r\n            const yPosRatio = this.core.frame.cv[1] / this.core.img.height; // * 0.01;\r\n\r\n            // console.log(xPosRatio, yPosRatio)\r\n            // console.log(1 - xPosRatio, 1 - yPosRatio)\r\n\r\n            ctx.setTransform(mat.translate(xPos * xPosRatio, yPos * yPosRatio)\r\n                                    .rotate(this.core.controller.rotation * 180)\r\n                                    .scale(this.core.controller.zoomLevel)\r\n                                    .translate(xPos * (1 - xPosRatio ), yPos * (1 - yPosRatio)));\r\n\r\n            ctx.drawImage(this.core.img, -this.core.img.width, -this.core.img.height);\r\n\r\n            // ctx.beginPath();\r\n            // ctx.arc(0, 0, 10,  0, 3.14 * 2);\r\n            // ctx.closePath()\r\n            // ctx.fill();\r\n\r\n            ctx.restore();\r\n        }\r\n\r\n        this.captureImage();\r\n\r\n\r\n        // this.ctx.restore();\r\n        // this.ctx.save();\r\n\r\n        // this.ctx.translate(this.translation[0], this.translation[1]);\r\n        this.core.frame.render(ctx);\r\n        this.core.frame.renderPost(ctx);\r\n\r\n        ctx.beginPath();\r\n        const xx = this.core.controller.touchInteraction.touchPre[0];\r\n        const yy = this.core.controller.touchInteraction.touchPre[1];\r\n        ctx.arc(xx, yy, 20,  0, 3.14 * 2);\r\n        ctx.closePath()\r\n        const op = 1 - this.t;\r\n        // console.log(op);\r\n        ctx.fillStyle = `rgba{255, 255, 255, ${op}}`\r\n        ctx.fill();\r\n\r\n\r\n        \r\n\r\n        ctx.restore();\r\n\r\n        // this.ctx.restore();\r\n        this.t += 0.025;\r\n    }\r\n    private captureImage() {\r\n        this.core.canvs.ctxOut.drawImage(this.core.canvs.canvas, -this.core.frame.x, -this.core.frame.y);\r\n    }\r\n}","import { EventController } from '..';\r\nexport class TouchInteraction {\r\n    public controller: EventController\r\n    public down = false;\r\n    public touchPre: number[] = [0, 0];\r\n    public zoom: number = 1;\r\n    constructor(controller: EventController) {\r\n        this.controller = controller;\r\n    }\r\n    public touchstart(e: TouchEvent) {\r\n        this.controller.core.renderer.t = 0.0;\r\n        // console.log('touchstart', e);\r\n\r\n        var rect = this.controller.core.canvs.canvas.getBoundingClientRect();\r\n        const evX = e.targetTouches[0].pageX - rect.left;\r\n        const evY = e.targetTouches[0].pageY - rect.top;\r\n        this.touchPre[0] = evX;\r\n        this.touchPre[1] = evY;\r\n\r\n        this.controller.pointDown(evX, evY);\r\n    }\r\n    public touchmove(e: TouchEvent) {\r\n        // console.log('touchmove', e);\r\n\r\n        var rect = this.controller.core.canvs.canvas.getBoundingClientRect();\r\n        const evX = e.targetTouches[0].pageX - rect.left;\r\n        const evY = e.targetTouches[0].pageY - rect.top;\r\n        this.touchPre[0] = evX;\r\n        this.touchPre[1] = evY;\r\n\r\n        this.controller.pointDrag(evX, evY);\r\n    }\r\n    public touchcancel(e: TouchEvent) {\r\n        console.log('touchcancel', e)\r\n    }\r\n    public touchend(e: TouchEvent) {\r\n        this.controller.pointUp(-1, -1);\r\n    }\r\n}","import { EventController } from '..';\r\nexport class MouseInteraction {\r\n    public controller: EventController\r\n    constructor(core: EventController) {\r\n        this.controller = core;\r\n    }\r\n    public mouseDown(e: MouseEvent) {\r\n        this.controller.pointDown(e.offsetX, e.offsetY);\r\n    }\r\n    public mouseUp(e: MouseEvent) {\r\n        this.controller.pointUp(e.offsetX, e.offsetY);\r\n    }\r\n    public mouseWheel(e: WheelEvent, v: number) {\r\n        this.controller.zoom(e.deltaY);\r\n    }\r\n    public mouseMove(e: MouseEvent) {\r\n        if (this.controller.down) {\r\n            this.controller.pointDrag(e.offsetX, e.offsetY)\r\n        } else {\r\n            this.controller.pointMove(e.offsetX, e.offsetY);\r\n        }\r\n    }\r\n}","import { Core } from '..';\r\nimport { TouchInteraction } from './Event/TouchInteraction';\r\nimport { MouseInteraction } from './Event/MouseInteraction';\r\nexport class EventController {\r\n    public core: Core;\r\n    public mouseInteraction: MouseInteraction;\r\n    public touchInteraction: TouchInteraction;\r\n    public isHover = false;\r\n    public down = false;\r\n    public mousePre = [0, 0];\r\n    public zoomLevel: number = 1;\r\n    // public translation: number[] = [0, 0];\r\n    public rotation: number = 0;\r\n    constructor(core: Core) {\r\n        this.core = core;\r\n        this.touchInteraction = new TouchInteraction(this);\r\n        this.mouseInteraction = new MouseInteraction(this);\r\n\r\n    }\r\n    public import(url: string) {\r\n        this.reset();\r\n        \r\n    }\r\n    public reset() {\r\n\r\n    }\r\n    public rotate(v: number) {\r\n        this.rotation = v;\r\n        this.postUpdate();\r\n    }\r\n    public pointDown(x: number, y: number) {\r\n        this.down = true;\r\n        this.core.frame.isHover(x, y);\r\n        this.mousePre[0] = x; \r\n        this.mousePre[1] = y;\r\n\r\n        this.postUpdate();\r\n    }\r\n    public pointUp(x: number, y: number) {\r\n        this.down = false;\r\n        this.core.controller.isHover = false;\r\n        \r\n        this.postUpdate();\r\n    }\r\n    public pointMove(x: number, y: number) {\r\n        this.core.frame.isHover(x, y);\r\n\r\n        this.mousePre[0] = x; \r\n        this.mousePre[1] = y;\r\n\r\n        this.postUpdate();\r\n    }\r\n    public pointDrag(x: number, y: number) {\r\n        // this.core.frame.isHover(x, y);\r\n        // console.log(x, y);\r\n\r\n        if (this.core.controller.isHover) {\r\n            this.mouseDragRect(x, y);\r\n        } else {\r\n            this.mouseDragPan(x, y);\r\n        }\r\n        // return;\r\n\r\n        this.postUpdate();\r\n    }\r\n\r\n    public mouseDragRect = (x: number, y: number) => {\r\n        const xOff = x - this.mousePre[0];\r\n        const yOff = y - this.mousePre[1];\r\n        this.core.frame.translate(xOff, yOff);\r\n\r\n\r\n        // let cos = Math.cos(angle * (3.14159265358979 / 180.0));\r\n        // let sin = Math.sin(angle * (3.14159265358979 / 180.0));\r\n        // let x = v.x * cos - v.y * sin;\r\n        // let y = v.x * sin + v.y * cos;\r\n\r\n        \r\n        // this.translation[0] += xOff;\r\n        // this.translation[1] += yOff;\r\n\r\n\r\n        this.core.canvs.canvasOut.width = this.core.frame.width;\r\n        this.core.canvs.canvasOut.height = this.core.frame.height;\r\n\r\n        this.mousePre[0] = x;\r\n        this.mousePre[1] = y;\r\n        // this.pointDrag(x, y);\r\n    }\r\n    public mouseDragPan = (x: number, y: number) => {\r\n        this.pan(x, y);\r\n    }\r\n    public zoom(v: number) {\r\n        // console.log(e.deltaY);\r\n        if (v < 0) {\r\n            this.zoomLevel += this.zoomLevel * 0.19;\r\n        } else {\r\n            this.zoomLevel -= this.zoomLevel * 0.19;\r\n        }\r\n        \r\n        this.postUpdate();\r\n    }\r\n    // public RemapByZoom(e: MouseEventData) {\r\n    //     e.x = (e.x - this.translation[0]) / this.zoom;\r\n    //     e.y = (e.y - this.translation[1]) / this.zoom;\r\n    //     return e;\r\n    // }\r\n    public pan(x: number, y: number) {\r\n        // if (!this.ablePan) { return; }\r\n        // const xOff = e.x - this.mousePre[0];\r\n        // const yOff = e.y - this.mousePre[1];\r\n        // this.translation[0] += xOff;\r\n        // this.translation[1] += yOff;\r\n        // console.log(this.translation);\r\n    }\r\n    public postUpdate() {\r\n\r\n        this.core.canvs.renderForce();\r\n    }\r\n}","import { Canvas } from './Canvas';\r\nimport { Frame } from './Frame';\r\nimport { Renderer } from './Renderer';\r\nimport { EventController } from './EventController';\r\nimport { ImageEditor_Param } from '..';\r\nexport class Core {\r\n    public param: ImageEditor_Param;\r\n    public divHost: HTMLElement;\r\n    public div: HTMLElement;\r\n\r\n    public frame: Frame;\r\n    public renderer: Renderer;\r\n    public canvs: Canvas;\r\n    public controller: EventController;\r\n    public ctx: CanvasRenderingContext2D;\r\n    public img: HTMLImageElement;\r\n    constructor(param: ImageEditor_Param) {\r\n        this.param = param;\r\n        const divHost = document.getElementById(this.param.id);\r\n        if (divHost) {\r\n            this.divHost = divHost;\r\n            this.divHost.style.backgroundColor = '#ffffff';\r\n            // this.divHost.style.pointerEvents = 'none';\r\n            this.initApp();\r\n            this.initCanvas();\r\n            this.importImage('https://raw.githubusercontent.com/NamjuLee/data/master/img/bg/zoom-James-River-Kayaking.jpg');\r\n        }\r\n        // console.log('second');\r\n    }\r\n    private initApp() {\r\n        this.frame = new Frame(this);\r\n        this.renderer = new Renderer(this);\r\n        this.controller = new EventController(this);\r\n    }\r\n    private initCanvas() {\r\n        const div = document.createElement('div');\r\n        div.style.width = '400px';\r\n        div.style.height = '400px';\r\n        div.style.margin = '50px';\r\n        div.style.overflow = 'hidden';\r\n        div.style.backgroundColor = '#ffffff';\r\n        this.div = div;\r\n        this.divHost.append(div);\r\n\r\n        this.canvs = new Canvas(this, div);\r\n        this.canvs.render = (ctx: CanvasRenderingContext2D) => { this.renderer.render(ctx); }\r\n    }\r\n    public importImage(url: string) {\r\n        const image = new Image();\r\n        image.crossOrigin ='anonymous';\r\n        image.src = url;\r\n        image.style.pointerEvents ='none';\r\n        image.onload = () => {\r\n            this.canvs.canvas.width = image.width;\r\n            this.canvs.canvas.height = image.height;\r\n\r\n            this.div.style.width = image.width + 'px';\r\n            this.div.style.height = image.height +'px';\r\n\r\n            this.img = image;\r\n        };\r\n    }\r\n}","import { Core }from './Core'\r\nexport interface ImageEditor_Param {\r\n    id: string;\r\n    ui: boolean;\r\n}\r\n\r\n\r\nexport class ImageEditor {\r\n    implementation: Core;\r\n    param: ImageEditor_Param;\r\n\r\n    static Init(id: string = 'SandBox') {\r\n        const param: ImageEditor_Param = {\r\n            id: id,\r\n            ui: true,\r\n        }\r\n\r\n        const n = new ImageEditor(id);\r\n        n.Dummy();\r\n    }\r\n    constructor(id: string) {\r\n    // constructor(param: ImageEditor_Param) {\r\n        this.param = {\r\n            id: id,\r\n            ui: true,\r\n        };\r\n        this.implementation = new Core(this.param);\r\n\r\n        if(this.param.ui) {\r\n\r\n        }\r\n    }\r\n    public Dummy() {\r\n        //\r\n    }\r\n}\r\n","// import { Implementation } from './Implementation';\r\n// import { Implementation } from './ImplementationCanvas';\r\nimport { ImageEditor as Implementation } from './ImplementationCanvasSecond';\r\n\r\nexport class ImageEditor {\r\n    implementation: Implementation;\r\n    static Init(id: string) {\r\n        const n = new ImageEditor(id);\r\n        n.Dummy();\r\n    }\r\n    constructor(id: string = 'SandBox') {\r\n        this.implementation = new Implementation(id);\r\n    }\r\n    public Dummy() {\r\n        //\r\n    }\r\n}\r\n\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n\r\n    constructor(id: string) {\r\n        this.divHost = document.getElementById(id);\r\n\r\n        ImageEditor.Init(id)\r\n    }\r\n    public destroy() {\r\n        if (this.divHost) {\r\n            try {\r\n                while (this.divHost.firstChild) {\r\n                    this.divHost.removeChild(this.divHost.firstChild);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error in destroy method:', error);\r\n            }\r\n        } else {\r\n            console.warn('divHost is undefined in destroy method');\r\n        }\r\n    }\r\n}"],"names":["Canvas","constructor","core","div","canvas","ctx","isActive","log","isViewChanging","loopNum","needRenderloop","ablePan","mousePre","canvasOut","ctxOut","loopNeeded","this","init","loopInit","document","createElement","width","clientWidth","height","clientHeight","append","style","backgroundColor","border","getContext","divHost","initEvent","addEventListener","k","e","controller","mouseInteraction","mouseDown","mouseUp","mouseMove","mouseWheel","deltaY","t","touchInteraction","touchstart","touchmove","touchcancel","touchend","capture","img","Image","crossOrigin","src","toDataURL","loop","resize","requestAnimationFrame","before","performance","now","renderPre","after","toFixed","clear","clearRect","renderForce","render","distance","x0","y0","x1","y1","Math","sqrt","renderVertex","x","y","r","beginPath","arc","angle","closePath","strokeStyle","fillStyle","fill","stroke","PUSH_ACTION","ENGINE","Frame","id","xOffGuid","yOffGuid","tOpacityA","tOpacityB","fillStyleHover","strokeStyleInner","cv","linearColorInterpolation","c0","c1","interpolation","cOut","i","length","c","push","ColorInterpolation","opacity","isHover","rect","renderPost","lineWidth","lineDashOffset","setLineDash","moveTo","lineTo","size","translate","xOff","yOff","canvs","Renderer","save","mat","DOMMatrix","xPos","yPos","xPosRatio","frame","yPosRatio","setTransform","rotate","rotation","scale","zoomLevel","drawImage","restore","captureImage","xx","touchPre","yy","op","TouchInteraction","down","zoom","renderer","getBoundingClientRect","evX","targetTouches","pageX","left","evY","pageY","top","pointDown","pointDrag","console","pointUp","MouseInteraction","offsetX","offsetY","v","pointMove","EventController","mouseDragRect","mouseDragPan","pan","import","url","reset","postUpdate","Core","param","getElementById","initApp","initCanvas","importImage","margin","overflow","image","pointerEvents","onload","ImageEditor","static","Dummy","implementation","ui","Implementation","Solution","Init","destroy","firstChild","removeChild","error","warn"],"sourceRoot":""}