{"version":3,"file":"static/js/50640.59683b0c.chunk.js","mappings":"0NAGO,MAAMA,UAAiBC,EAAAA,GAO1BC,YAAYC,GACRC,MAAMD,GAAI,KAPdE,IAAkB,GAAG,KAErBC,gBAAU,OAEVC,cAAQ,CAIR,CACOC,WAIHC,KAAKC,MAAMC,GAAG,QAASC,IACnBA,EAAMC,iBAAiB,IAE3BJ,KAAKC,MAAMI,WAAWC,uBAAwB,GAG9CC,EAAAA,EAAAA,eAAcC,+DAAyEC,MAAMC,IACzF,IAAIC,EAAQ,EACRC,EAAS,EACTC,EAAS,EACb,MAAMC,EAAOJ,EAAEK,MAAM,eACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKG,SAAUD,EAAG,CAClC,MAAME,EAASJ,EAAKE,GAAGD,MAAM,KACvBI,GAAOD,EAAO,IACdE,GAAOF,EAAO,IACdG,MAAMF,IAASE,MAAMD,IAAkB,IAARD,GAAuB,IAARC,IAGhDpB,KAAKJ,IAAI0B,KAAK,CAACH,EAAKC,IACpBT,IACAC,GAAUQ,EACVP,GAAUM,EAElB,CAEAnB,KAAKuB,OAAOV,EAASF,EAAOC,EAASD,GACrCX,KAAKwB,KAAK,IAIVxB,KAAKF,SAAW,IAAI2B,EAChB,IAAIC,EAAAA,QAAQ,IAAK,IAAK,GACtB,IAAIA,EAAAA,QAAQ,IAAK,IAAK,IAE1B1B,KAAKF,SAAS6B,KAAO,EACrB3B,KAAKF,SAAS8B,MAAM,GAK5B,CACOC,OAAOC,GAIV,GAAK9B,KAAKF,SAAV,CAEAgC,EAAIC,yBAA2B,cAE/B,IAAK,IAAIf,EAAI,EAAGA,EAAIhB,KAAKJ,IAAIqB,SAAUD,GAKvChB,KAAKF,SAASkC,YAAYF,GAC1B9B,KAAKF,SAASmC,aAAaH,GAC3B9B,KAAKF,SAASoC,eAAeJ,EAXC,CAoBlC,CACOK,UAAUC,EAAWC,GACnBrC,KAAKF,WAEVE,KAAKH,WAAaG,KAAKF,SAASwC,QAAQF,EAAGC,GAC/C,CACOE,UAAUH,EAAWC,GACnBrC,KAAKF,WAEVE,KAAKF,SAAS0C,eAAeJ,EAAGC,GAC5BrC,KAAKF,SAAS2C,UAMdzC,KAAKH,YACLG,KAAKF,SAAS4C,iBAAiBN,EAAGC,GAG1C,CACOM,QAAQP,EAAWC,GACtBrC,KAAKH,gBAAa+C,CACtB,EAiBG,MAAMnB,EAcThC,YAAYoD,EAAaC,GAAc,KAbvCD,QAAE,OACFC,QAAE,OACFC,QAAE,OACFC,QAAE,OACFC,SAAG,OACHC,SAAG,OACHtD,IAAmB,GAAG,KACtBuD,OAAoB,GAAG,KACvBC,WAAsB,GAAG,KACzBC,OAAC,OACDC,EAAY,EAAI,KAChB3B,KAAe,EAAE,KACjBc,cAA8BG,EAE1B5C,KAAK6C,GAAKA,EACV7C,KAAK8C,GAAKA,EACV9C,KAAK+C,GAAK,GACV/C,KAAKgD,GAAK,GACVhD,KAAKiD,IAAM,EACXjD,KAAKkD,IAAM,EACXlD,KAAKqD,EAAI,IAAI3B,EAAAA,QAAQ,EAAG,GACxB1B,KAAK4B,MACT,CACOU,QAAQF,EAAWC,GACtBrC,KAAKqD,EAAEjB,EAAIA,EAAGpC,KAAKqD,EAAEhB,EAAIA,EACzB,IAAIkB,EAAIvD,KAAKJ,IAAI,GAAG,GACpB,OAAI8B,EAAAA,QAAAA,WAAmB1B,KAAKqD,EAAGE,GAAK,EAAYA,GAChDA,EAAIvD,KAAKJ,IAAI,GAAGI,KAAKJ,IAAI,GAAGqB,OAAS,GACjCS,EAAAA,QAAAA,WAAmB1B,KAAKqD,EAAGE,GAAK,EAAYA,GAChDA,EAAIvD,KAAKJ,IAAII,KAAKJ,IAAIqB,OAAS,GAAGjB,KAAKJ,IAAI,GAAGqB,OAAS,GACnDS,EAAAA,QAAAA,WAAmB1B,KAAKqD,EAAGE,GAAK,EAAYA,GAChDA,EAAIvD,KAAKJ,IAAII,KAAKJ,IAAIqB,OAAS,GAAG,GAC9BS,EAAAA,QAAAA,WAAmB1B,KAAKqD,EAAGE,GAAK,EAAYA,OAAhD,IAEJ,CACOC,KAAKpB,EAAWC,GACnBrC,KAAKwC,eAAeJ,EAAGC,EAC3B,CACOG,eAAeJ,EAAWC,GAC7BrC,KAAKqD,EAAEjB,EAAIA,EACXpC,KAAKqD,EAAEhB,EAAIA,EACX,IAAK,IAAIoB,EAAI,EAAGA,EAAIzD,KAAKoD,WAAWnC,SAAUwC,EAAG,CAE7C,IAAIC,EAAAA,EAAAA,gBAAe1D,KAAKqD,EAAGrD,KAAKoD,WAAWK,GAAGE,QAE1C,YADA3D,KAAKyC,SAAWzC,KAAKoD,WAAWK,IAGhCzD,KAAKyC,cAAWG,CAGxB,CACJ,CACOF,iBAAiBN,EAAWC,GAC/BrC,KAAKqD,EAAEjB,EAAIA,EAAGpC,KAAKqD,EAAEhB,EAAIA,EACzB,IAAIkB,EAAIvD,KAAKJ,IAAI,GAAG,GAChB8B,EAAAA,QAAAA,WAAmB1B,KAAKqD,EAAGE,GAAK,KAChCvD,KAAK6C,GAAGT,EAAIA,EACZpC,KAAK6C,GAAGR,EAAIA,GAEhBkB,EAAIvD,KAAKJ,IAAI,GAAGI,KAAKJ,IAAI,GAAGqB,OAAS,GACjCS,EAAAA,QAAAA,WAAmB1B,KAAKqD,EAAGE,GAAK,KAChCvD,KAAK8C,GAAGV,EAAIA,EACZpC,KAAK6C,GAAGR,EAAIA,GAEhBkB,EAAIvD,KAAKJ,IAAII,KAAKJ,IAAIqB,OAAS,GAAGjB,KAAKJ,IAAI,GAAGqB,OAAS,GACnDS,EAAAA,QAAAA,WAAmB1B,KAAKqD,EAAGE,GAAK,KAChCvD,KAAK8C,GAAGV,EAAIA,EACZpC,KAAK8C,GAAGT,EAAIA,GAEhBkB,EAAIvD,KAAKJ,IAAII,KAAKJ,IAAIqB,OAAS,GAAG,GAC9BS,EAAAA,QAAAA,WAAmB1B,KAAKqD,EAAGE,GAAK,KAChCvD,KAAK6C,GAAGT,EAAIA,EACZpC,KAAK8C,GAAGT,EAAIA,GAEhBrC,KAAK4B,MACT,CACOA,OAYH,OAXA5B,KAAKiD,KAAOjD,KAAK8C,GAAGV,EAAIpC,KAAK6C,GAAGT,IAAMpC,KAAK+C,GAAK,GAChD/C,KAAKkD,KAAOlD,KAAK8C,GAAGT,EAAIrC,KAAK6C,GAAGR,IAAMrC,KAAKgD,GAAK,GAGhDhD,KAAKJ,IAAM,GACXI,KAAKmD,OAAS,GACdnD,KAAKoD,WAAa,GAElBpD,KAAK4D,WAGG5D,KAAK2B,MACT,KAAK,EAAG3B,KAAK6D,aAAc,MAC3B,KAAK,EAAG7D,KAAK8D,cAAe,MAC5B,KAAK,EAAG9D,KAAK+D,cAAe,MAC5B,KAAK,EAAG/D,KAAKgE,aAAc,MAC3B,KAAK,EAAGhE,KAAKiE,gBAAiB,MAC9B,QAASjE,KAAKkE,aAGtB,CACOC,WAAWC,GACd,IAAK,IAAIX,EAAI,EAAGA,EAAIzD,KAAKoD,WAAWnC,SAAUwC,EAC1CzD,KAAKoD,WAAWK,GAAGY,KAAU,IAAI,EAErC,IAAK,IAAIrD,EAAI,EAAGA,EAAIoD,EAAGnD,SAAUD,EAAG,CAChC,MAAMuC,EAAIa,EAAGpD,GACb,IAAK,IAAIyC,EAAI,EAAGA,EAAIzD,KAAKoD,WAAWnC,SAAUwC,GACtCC,EAAAA,EAAAA,gBAAeH,EAAGvD,KAAKoD,WAAWK,GAAGE,UACrC3D,KAAKoD,WAAWK,GAAGY,KAAU,KAAKd,EAAEe,EAGhD,CACJ,CACOV,WACH5D,KAAKJ,IAAM,GACX,IAAK,IAAI6D,EAAI,EAAGA,EAAIzD,KAAKgD,KAAMS,EAAG,CAC9B,IAAIpB,EAAIrC,KAAK6C,GAAGR,EAAIoB,EAAIzD,KAAKkD,IACzBqB,EAAoB,GACxB,IAAK,IAAIvD,EAAI,EAAGA,EAAIhB,KAAK+C,KAAM/B,EAAG,CAC9B,IAAIoB,EAAIpC,KAAK6C,GAAGT,EAAIpB,EAAIhB,KAAKiD,IAC7B,MAAMuB,EAAI,IAAI9C,EAAAA,QAAQU,EAAGC,EAAG,GAC5BkC,EAAOjD,KAAKkD,GACZxE,KAAKmD,OAAO7B,KAAKkD,EACrB,CACAxE,KAAKJ,IAAI0B,KAAKiD,EAClB,CACJ,CACOV,aACH7D,KAAKoD,WAAa,GAClB,IAAK,IAAIK,EAAI,EAAGA,EAAIzD,KAAKgD,GAAIS,GAAK,EAC9B,IAAK,IAAIzC,EAAI,EAAGA,EAAIhB,KAAK+C,GAAI/B,GAAK,EAC9B,GAAIA,EAAIhB,KAAK+C,GAAK,GAAKU,EAAIzD,KAAKgD,GAAK,EAAG,CACpC,IAAIO,EAAI,IAAIkB,EAAMzE,MAClBuD,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,GAAGzC,IAC1BuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,GAAGzC,EAAI,IAC9BuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAClCuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,IAC9BhB,KAAKoD,WAAW9B,KAAKiC,EACzB,CAGZ,CACOO,cACH9D,KAAKoD,WAAa,GAClB,IAAK,IAAIK,EAAI,EAAGA,EAAIzD,KAAKgD,GAAIS,GAAK,EAC9B,IAAK,IAAIzC,EAAI,EAAGA,EAAIhB,KAAK+C,GAAI/B,GAAK,EAC9B,GAAIA,EAAIhB,KAAK+C,GAAK,GAAKU,EAAIzD,KAAKgD,GAAK,EAAG,CACpC,IAAIO,EAAI,IAAIkB,EAAMzE,MAClBuD,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,GAAGzC,IAC1BuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,GAAGzC,EAAI,IAC9BuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,IAC9BhB,KAAKoD,WAAW9B,KAAKiC,GAErBA,EAAI,IAAIkB,EAAMzE,MACduD,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,GAAGzC,EAAI,IAC9BuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAClCuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,IAC9BhB,KAAKoD,WAAW9B,KAAKiC,EACzB,CAGZ,CACOS,aACHhE,KAAKoD,WAAa,GAClB,IAAK,IAAIK,EAAI,EAAGA,EAAIzD,KAAKgD,GAAIS,GAAK,EAC9B,IAAK,IAAIzC,EAAI,EAAGA,EAAIhB,KAAK+C,GAAI/B,GAAK,EAC9B,GAAIA,EAAIhB,KAAK+C,GAAK,GAAKU,EAAIzD,KAAKgD,GAAK,EAAG,CACpC,IAAIO,EAAI,IAAIkB,EAAMzE,MAClBuD,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,GAAGzC,IAC1BuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,GAAGzC,EAAI,IAC9BuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAClCuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAElChB,KAAKoD,WAAW9B,KAAKiC,EACzB,CAGZ,CACOU,gBACHjE,KAAKoD,WAAa,GAClB,IAAK,IAAIK,EAAI,EAAGA,EAAIzD,KAAKgD,GAAIS,GAAK,EAC9B,IAAK,IAAIzC,EAAI,EAAGA,EAAIhB,KAAK+C,GAAI/B,GAAK,EAC9B,GAAIA,EAAIhB,KAAK+C,GAAK,GAAKU,EAAIzD,KAAKgD,GAAK,EAAG,CACpC,IAAIO,EAAI,IAAIkB,EAAMzE,MAClBuD,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,GAAGzC,IAC1BuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,GAAGzC,EAAI,IAC9BuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAClCuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAClCuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAClCuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,IAC9BhB,KAAKoD,WAAW9B,KAAKiC,GAErBA,EAAI,IAAIkB,EAAMzE,MACduD,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,IAC9BuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,IAC9BuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAClCuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAClCuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAClCuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAKlChB,KAAKoD,WAAW9B,KAAKiC,EACzB,CAGZ,CACOQ,cACH/D,KAAKoD,WAAa,GAClB,IAAK,IAAIK,EAAI,EAAGA,EAAIzD,KAAKgD,GAAIS,GAAK,EAC9B,IAAK,IAAIzC,EAAI,EAAGA,EAAIhB,KAAK+C,GAAI/B,GAAK,EAC9B,GAAIA,EAAIhB,KAAK+C,GAAK,GAAKU,EAAIzD,KAAKgD,GAAK,EAAG,CACpC,IAAIO,EAAI,IAAIkB,EAAMzE,MAClBuD,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,GAAGzC,IAC1BuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,GAAGzC,EAAI,IAC9BuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAClChB,KAAKoD,WAAW9B,KAAKiC,GAErBA,EAAI,IAAIkB,EAAMzE,MACduD,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,GAAGzC,IAC1BuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAClCuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,IAC9BhB,KAAKoD,WAAW9B,KAAKiC,EACzB,CAGZ,CACOW,aACHlE,KAAKoD,WAAa,GAClB,IAAIsB,GAAQ,EACZ,IAAK,IAAIjB,EAAI,EAAGA,EAAIzD,KAAKgD,GAAIS,GAAK,EAAG,CACjC,IAAK,IAAIzC,EAAI,EAAGA,EAAIhB,KAAK+C,GAAI/B,GAAK,EAC9B,GAAI0D,GACA,GAAI1D,EAAI,IAAM,GAAKA,EAAIhB,KAAK+C,GAAK,GAAKU,EAAI,IAAM,GAAKA,EAAIzD,KAAKgD,GAAK,EAAG,CAClE,IAAIO,EAAI,IAAIkB,EAAMzE,MAClBuD,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,GAAGzC,EAAI,IAC9BuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAClCuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAClCuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAClCuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,IAC9BuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,IAE9BhB,KAAKoD,WAAW9B,KAAKiC,EACzB,OAEA,GAAIvC,EAAI,IAAM,GAAKA,EAAIhB,KAAK+C,GAAK,GAAKU,EAAI,IAAM,GAAKA,EAAIzD,KAAKgD,GAAK,EAAG,CAClE,IAAIO,EAAI,IAAIkB,EAAMzE,MAClBuD,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,GAAGzC,EAAI,IAC9BuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAClCuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAClCuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAClCuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAClCuC,EAAEI,OAAOrC,KAAKtB,KAAKJ,IAAI6D,EAAI,GAAGzC,EAAI,IAElChB,KAAKoD,WAAW9B,KAAKiC,EACzB,CAGRmB,GAASA,CACb,CAGJ,CACA1C,YAAYF,GACR,IAAK,IAAId,EAAI,EAAGA,EAAIhB,KAAKoD,WAAWnC,SAAUD,EAC1ChB,KAAKoD,WAAWpC,GAAG2D,OAAO7C,EAElC,CACAG,aAAaH,GACT,IAAIyB,EAAIvD,KAAKJ,IAAI,GAAG,GACpBgF,EAAcC,eAAe/C,EAAKyB,EAAG,EAAGvD,KAAKsD,EAAG,sBAChDxB,EAAIgD,SACJvB,EAAIvD,KAAKJ,IAAI,GAAGI,KAAKJ,IAAI,GAAGqB,OAAS,GACrC2D,EAAcC,eAAe/C,EAAKyB,EAAG,EAAGvD,KAAKsD,EAAG,sBAChDxB,EAAIgD,SACJvB,EAAIvD,KAAKJ,IAAII,KAAKJ,IAAIqB,OAAS,GAAGjB,KAAKJ,IAAI,GAAGqB,OAAS,GACvD2D,EAAcC,eAAe/C,EAAKyB,EAAG,EAAGvD,KAAKsD,EAAG,sBAChDxB,EAAIgD,SACJvB,EAAIvD,KAAKJ,IAAII,KAAKJ,IAAIqB,OAAS,GAAG,GAClC2D,EAAcC,eAAe/C,EAAKyB,EAAG,EAAGvD,KAAKsD,EAAG,sBAChDxB,EAAIgD,SACJ9E,KAAKsD,GAAK,GACd,CACOpB,eAAeJ,GAClB,GAAI9B,KAAKyC,SAAU,CACfX,EAAIiD,UAAY,EAChBjD,EAAIkD,YAAc,UAElBlD,EAAImD,YACJnD,EAAIoD,OAAOlF,KAAKyC,SAASkB,OAAO,GAAGvB,EAAGpC,KAAKyC,SAASkB,OAAO,GAAGtB,GAC9D,IAAK,IAAIrB,EAAI,EAAGA,EAAIhB,KAAKyC,SAASkB,OAAO1C,SAAUD,EAC/Cc,EAAIqD,OAAOnF,KAAKyC,SAASkB,OAAO3C,GAAGoB,EAAGpC,KAAKyC,SAASkB,OAAO3C,GAAGqB,GAElEP,EAAIsD,YAEJtD,EAAIgD,QACR,CACJ,EAIG,MAAML,EAiBTY,eAAiB,OAAOZ,EAAMa,IAAM,CAEpC7F,YAAY8F,GAAiE,IAApCf,EAAU,uDAAG,IAAI9C,EAAAA,QAAQ,EAAG,EAAG,GAAE,KAhB1E6D,SAAG,OACHC,SAAG,OACHC,UAAI,OACJC,KAAgB,GAAG,KACnB/B,YAAM,OACN3C,GAAa,EAAE,KACfyC,GAAa,EAAE,KACfkC,GAAa,EAAE,KACfC,GAAa,EAAE,KACfpB,GAAa,EAAE,KACf9E,QAAE,OACFmG,MAAkB,GAAG,KACrBxB,UAAI,EAKArE,KAAKuF,IAAMA,EACXvF,KAAKwF,IAAMhB,EACXxE,KAAK0F,KAAO,GACZ1F,KAAK2D,OAAS,GACd3D,KAAKgB,GAAK,EACVhB,KAAKyD,GAAK,EACVzD,KAAK2F,GAAK,EACV3F,KAAKN,GAAK+E,EAAMqB,QAChB9F,KAAKqE,KAAO,CAAC,CACjB,CACA0B,WAGI,MAFW,QAAU/F,KAAKN,EAG9B,CACAsG,SACS,CAETrB,OAAO7C,GACHA,EAAIiD,UAAY,EAChBjD,EAAIkD,YAAc,UAClBlD,EAAImE,UAAS,4BAA2C,IAAnBjG,KAAKqE,KAAU,IAAQ,MAC5DvC,EAAImD,YACJnD,EAAIoD,OAAOlF,KAAK2D,OAAO,GAAGvB,EAAGpC,KAAK2D,OAAO,GAAGtB,GAC5C,IAAK,IAAIrB,EAAI,EAAGA,EAAIhB,KAAK2D,OAAO1C,SAAUD,EACtCc,EAAIqD,OAAOnF,KAAK2D,OAAO3C,GAAGoB,EAAGpC,KAAK2D,OAAO3C,GAAGqB,GAEhDP,EAAIsD,YACJtD,EAAIoE,OACJpE,EAAIgD,QAGR,EApDSL,EACFa,GAAK,EAuDT,MAAMV,EACT,kBAAyB9C,EAA+Be,EAAaC,GAA2D,IAA9CqD,EAAa,uDAAG,EAAGD,EAAY,uDAAG,UAChHpE,EAAIkD,YAAckB,EAClBpE,EAAIiD,UAAYoB,EAChBrE,EAAImD,YACJnD,EAAIoD,OAAOrC,EAAGT,EAAGS,EAAGR,GACpBP,EAAIqD,OAAOrC,EAAGV,EAAGU,EAAGT,GACpBP,EAAIsD,YACJtD,EAAIgD,QACR,CACA,YAAmBhD,EAA+BsE,EAAYC,EAAYC,EAAYC,GAA0D,IAA9CJ,EAAa,uDAAG,EAAGD,EAAY,uDAAG,UAChIpE,EAAIkD,YAAckB,EAClBpE,EAAIiD,UAAYoB,EAChBrE,EAAImD,YACJnD,EAAIoD,OAAOkB,EAAIC,GACfvE,EAAIqD,OAAOmB,EAAIC,GACfzE,EAAIsD,YACJtD,EAAIgD,QACR,CACA,aAAoBhD,EAA+BM,EAAWC,GAAqD,IAA1CmE,EAAS,uDAAG,EAAGN,EAAY,uDAAG,UACnGpE,EAAImE,UAAYC,EAChBpE,EAAImD,YACJnD,EAAI2E,IAAIrE,EAAGC,EAAGmE,EAAG,EAAa,EAAVE,KAAKC,IACzB7E,EAAIsD,YACJtD,EAAIoE,MACR,CACA,mBAA0BpE,EAA+B0C,GAAsD,IAA1CgC,EAAS,uDAAG,EAAGN,EAAY,uDAAG,UAC/FpE,EAAImE,UAAYC,EAChBpE,EAAImD,YACJnD,EAAI2E,IAAIjC,EAAEpC,EAAGoC,EAAEnC,EAAGmE,EAAG,EAAa,EAAVE,KAAKC,IAC7B7E,EAAIsD,YACJtD,EAAIoE,MACR,CACA,sBAA6BpE,EAA+B0C,GAAiE,IAArDgC,EAAS,uDAAG,EAAGlD,EAAS,uCAAE4C,EAAY,uDAAG,UAC7GpE,EAAImE,UAAYC,EAChBpE,EAAImD,YACJnD,EAAI2E,IAAIjC,EAAEpC,EAAGoC,EAAEnC,EAAGmE,EAAwB,GAAnB,EAAIE,KAAKE,IAAItD,IAAS,EAAa,EAAVoD,KAAKC,IACrD7E,EAAIsD,YACJtD,EAAIoE,MACR,CAGA,sBAA6BpE,GAA4G,IAA7E+E,EAAY,uDAAG,GAAIC,EAAY,uDAAG,GAAIC,EAAY,uDAAG,GAAIC,EAAY,uDAAG,GAChI,MAAMC,GAAaJ,EAAOE,EAAQ,GAC5BG,GAAaJ,EAAOE,EAAQ,GAElClF,EAAIiD,UAAY,GAEhB,IAAK,IAAI1C,EAAI,EAAGA,GAAKyE,IAAQzE,EAOzBP,EAAImD,YACJnD,EAAIoD,OAAO+B,EAAQC,EAAUF,EAAO3E,GACpCP,EAAIqD,OAAQ0B,EAAOE,EAAQ,GAAKG,EAAUF,EAAO3E,GACjDP,EAAIsD,YACJtD,EAAIgD,SAEJhD,EAAImD,YACJnD,EAAIoD,OAAO+B,EAAUF,EAAO1E,EAAI6E,GAChCpF,EAAIqD,OAAO+B,EAAUF,EAAO3E,EAAKyE,EAAOE,EAAQ,IAChDlF,EAAIsD,YACJtD,EAAIgD,QAGZ,CACA,uBAA8BhD,GAA4G,IAA7E+E,EAAY,uDAAG,GAAIC,EAAY,uDAAG,GAAIC,EAAY,uDAAG,GAAIC,EAAY,uDAAG,GACjI,MAAMC,GAAaJ,EAAOE,EAAQ,GAC5BG,GAAaJ,EAAOE,EAAQ,GAElClF,EAAIiD,UAAY,GAEhB,IAAK,IAAI1C,EAAI,EAAGA,GAAKyE,IAAQzE,EACzB,IAAK,IAAID,EAAI,EAAGA,GAAKyE,IAAQzE,EACzBN,EAAImD,YACJnD,EAAI2E,IAAIQ,EAAUF,EAAO3E,EAAI8E,EAAUF,EAAO3E,EAAI,EAAG,EAAa,EAAVqE,KAAKC,IAC7D7E,EAAIsD,YACJtD,EAAIoE,MAKhB,CAEAzG,cACI,E","sources":["njslab/Workshop/workshop-mapping/20_CSV Tree/index.ts"],"sourcesContent":["import { RendererJSAPI } from '../../../../lib'\r\nimport { getCSVFromURL, Vector3, isInsideOfVecs } from 'njscore';\r\n\r\nexport class Solution extends RendererJSAPI {\r\n    pts: number[][] = [];\r\n\r\n    captureVec: Vector3\r\n\r\n    pixelMap: CustomDynamicBinSystem;\r\n\r\n    constructor(id: string) {\r\n        super(id);\r\n    }\r\n    public initPost(): void {\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.mView.on(\"drag\", (event) => {\r\n            event.stopPropagation();\r\n        });\r\n        this.mView.navigation.mouseWheelZoomEnabled = false;\r\n\r\n        // https://data.boston.gov/dataset/blue-bike-stations\r\n        getCSVFromURL(process.env.PUBLIC_URL + '/static/data/Primary_Street_Trees_Public.csv').then((d) => {\r\n            let count = 0;\r\n            let latSum = 0;\r\n            let lonSum = 0;\r\n            const line = d.split(/\\r\\n|\\r|\\n/g);\r\n            for (let i = 1; i < line.length; ++i) {\r\n                const values = line[i].split(',');\r\n                const lon = +values[13];\r\n                const lat = +values[14];\r\n                if ((!isNaN(lon) && !isNaN(lat) && ((lon !== 0) && (lat !== 0)))) {\r\n                    //     console.log(lon, lat);\r\n\r\n                    this.pts.push([lon, lat]);\r\n                    count++;\r\n                    latSum += lat;\r\n                    lonSum += lon;\r\n                }\r\n            }\r\n            // console.log(count)\r\n            this.center(lonSum / count, latSum / count);\r\n            this.zoom(12);\r\n\r\n\r\n\r\n            this.pixelMap = new CustomDynamicBinSystem(\r\n                new Vector3(100, 100, 0),\r\n                new Vector3(500, 500, 0),\r\n            );\r\n            this.pixelMap.mode = 2;\r\n            this.pixelMap.Init();\r\n\r\n            // this.start();\r\n        });\r\n\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n\r\n        if (!this.pixelMap) { return; }\r\n\r\n        ctx.globalCompositeOperation = 'color-dodge';\r\n\r\n        for (let i = 0; i < this.pts.length; ++i) {\r\n            // const projected = this.toScreen(this.pts[i][0], this.pts[i][1]); \r\n            // renderPoint(ctx, projected[0], projected[1], this.time + 3, 'rgba(10, 255, 10, 0.2)' );\r\n        }\r\n\r\n        this.pixelMap.RenderPixel(ctx);\r\n        this.pixelMap.RenderCorner(ctx);\r\n        this.pixelMap.RenderSelPixel(ctx);\r\n\r\n\r\n        // this.pixelMap.RenderPixel(ctx);\r\n        // this.pixelMap.RenderCorner(ctx);\r\n        // this.pixelMap.RenderSelPixel(ctx);\r\n\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n        if (!this.pixelMap) { return; }\r\n\r\n        this.captureVec = this.pixelMap.IsHover(x, y);\r\n    }\r\n    public mouseMove(x: number, y: number): void {\r\n        if (!this.pixelMap) { return; }\r\n        \r\n        this.pixelMap.MoveInspection(x, y);\r\n        if (this.pixelMap.selPixel) {\r\n            // const d = (this.pixelMap.selPixel.data['num'] as number).toFixed(4);\r\n            // const text = 'data: ' + d;\r\n            // console.log(text);\r\n            return;\r\n        }\r\n        if (this.captureVec) {\r\n            this.pixelMap.DragControlPoint(x, y);\r\n\r\n        }\r\n    }\r\n    public mouseUp(x: number, y: number): void {\r\n        this.captureVec = undefined;\r\n    }\r\n}\r\nconst renderPoint = (ctx: CanvasRenderingContext2D, x: number, y: number, t: number, color: string) => {\r\n\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, (Math.sin(t * 0.8) + 6) * 3, 0, Math.PI * 2);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport class CustomDynamicBinSystem {\r\n    v0: Vector3;\r\n    v1: Vector3;\r\n    rx: number;\r\n    ry: number;\r\n    ddx: number;\r\n    ddy: number;\r\n    pts: Vector3[][] = [];\r\n    ptList: Vector3[] = [];\r\n    listPixels: Pixel[] = [];\r\n    m: Vector3;\r\n    t: number = 0.0;\r\n    mode: number = 0;\r\n    selPixel: Pixel | undefined = undefined;\r\n    constructor(v0: Vector3, v1: Vector3) {\r\n        this.v0 = v0;\r\n        this.v1 = v1;\r\n        this.rx = 10;\r\n        this.ry = 10;\r\n        this.ddx = 0.0;\r\n        this.ddy = 0.0;\r\n        this.m = new Vector3(0, 0);\r\n        this.Init();\r\n    }\r\n    public IsHover(x: number, y: number) {\r\n        this.m.x = x; this.m.y = y;\r\n        let p = this.pts[0][0];\r\n        if (Vector3.distanceTo(this.m, p) < 8) { return p; }\r\n        p = this.pts[0][this.pts[0].length - 1];\r\n        if (Vector3.distanceTo(this.m, p) < 8) { return p; }\r\n        p = this.pts[this.pts.length - 1][this.pts[0].length - 1];\r\n        if (Vector3.distanceTo(this.m, p) < 8) { return p; }\r\n        p = this.pts[this.pts.length - 1][0];\r\n        if (Vector3.distanceTo(this.m, p) < 8) { return p; }\r\n        return undefined;\r\n    }\r\n    public Move(x: number, y: number) {\r\n        this.MoveInspection(x, y);\r\n    }\r\n    public MoveInspection(x: number, y: number) {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n        for (let j = 0; j < this.listPixels.length; ++j) {\r\n            // console.log('ddd');\r\n            if (isInsideOfVecs(this.m, this.listPixels[j].recVec)) {\r\n                this.selPixel = this.listPixels[j];\r\n                return;\r\n            } else {\r\n                this.selPixel = undefined;\r\n                // console.log('out');\r\n            }\r\n        }\r\n    }\r\n    public DragControlPoint(x: number, y: number) {\r\n        this.m.x = x; this.m.y = y;\r\n        let p = this.pts[0][0];\r\n        if (Vector3.distanceTo(this.m, p) < 60) {\r\n            this.v0.x = x;\r\n            this.v0.y = y;\r\n        }\r\n        p = this.pts[0][this.pts[0].length - 1];\r\n        if (Vector3.distanceTo(this.m, p) < 60) {\r\n            this.v1.x = x;\r\n            this.v0.y = y;\r\n        }\r\n        p = this.pts[this.pts.length - 1][this.pts[0].length - 1];\r\n        if (Vector3.distanceTo(this.m, p) < 60) {\r\n            this.v1.x = x;\r\n            this.v1.y = y;\r\n        }\r\n        p = this.pts[this.pts.length - 1][0];\r\n        if (Vector3.distanceTo(this.m, p) < 60) {\r\n            this.v0.x = x;\r\n            this.v1.y = y;\r\n        }\r\n        this.Init();\r\n    }\r\n    public Init() {\r\n        this.ddx = (this.v1.x - this.v0.x) / (this.rx - 1.0);\r\n        this.ddy = (this.v1.y - this.v0.y) / (this.ry - 1.0);\r\n        // console.log('ddx is ' + this.ddx + '. ddy is ' + this.ddx);\r\n        // console.log('Pixe Map was executed...');\r\n        this.pts = [];\r\n        this.ptList = [];\r\n        this.listPixels = [];\r\n\r\n        this.InitGrid();\r\n        // this.ComputeAtt();\r\n\r\n        switch (this.mode) {\r\n            case 0: this.ComputeRec(); break;\r\n            case 1: this.ComputeTriA(); break;\r\n            case 2: this.ComputeTriB(); break;\r\n            case 3: this.ComputeDia(); break;\r\n            case 4: this.ComputeLShape(); break;\r\n            default: this.ComputeHex(); break;\r\n        }\r\n\r\n    }\r\n    public UpdateData(vs: Vector3[]) {\r\n        for (let j = 0; j < this.listPixels.length; ++j) {\r\n            this.listPixels[j].data['num'] = 0;\r\n        }\r\n        for (let i = 0; i < vs.length; ++i) {\r\n            const p = vs[i];\r\n            for (let j = 0; j < this.listPixels.length; ++j) {\r\n                if (isInsideOfVecs(p, this.listPixels[j].recVec)) {\r\n                    this.listPixels[j].data['num'] += p.z;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public InitGrid() {\r\n        this.pts = [];\r\n        for (let j = 0; j < this.ry; ++j) {\r\n            let y = this.v0.y + j * this.ddy;\r\n            let xArray: Vector3[] = [];\r\n            for (let i = 0; i < this.rx; ++i) {\r\n                let x = this.v0.x + i * this.ddx;\r\n                const v = new Vector3(x, y, 0);\r\n                xArray.push(v);\r\n                this.ptList.push(v);\r\n            }\r\n            this.pts.push(xArray);\r\n        }\r\n    }\r\n    public ComputeRec() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 1) {\r\n            for (let i = 0; i < this.rx; i += 1) {\r\n                if (i < this.rx - 1 && j < this.ry - 1) {\r\n                    let p = new Pixel(this);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i]);\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeTriA() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 1) {\r\n            for (let i = 0; i < this.rx; i += 1) {\r\n                if (i < this.rx - 1 && j < this.ry - 1) {\r\n                    let p = new Pixel(this);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i]);\r\n                    this.listPixels.push(p);\r\n\r\n                    p = new Pixel(this);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i]);\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeDia() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 1) {\r\n            for (let i = 0; i < this.rx; i += 1) {\r\n                if (i < this.rx - 2 && j < this.ry - 1) {\r\n                    let p = new Pixel(this);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeLShape() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 3) {\r\n            for (let i = 0; i < this.rx; i += 2) {\r\n                if (i < this.rx - 2 && j < this.ry - 2) {\r\n                    let p = new Pixel(this);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 2][i + 1]);\r\n                    p.recVec.push(this.pts[j + 2][i]);\r\n                    this.listPixels.push(p);\r\n\r\n                    p = new Pixel(this);\r\n                    p.recVec.push(this.pts[j + 2][i]);\r\n                    p.recVec.push(this.pts[j + 3][i]);\r\n                    p.recVec.push(this.pts[j + 3][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 2]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 2][i + 1]);\r\n                    // p.recVec.push(this.pts[j + 1][i + 2]);\r\n                    // p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    // p.recVec.push(this.pts[j + 2][i + 1]);\r\n                    // p.recVec.push(this.pts[j + 2][i]);\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeTriB() {\r\n        this.listPixels = [];\r\n        for (let j = 0; j < this.ry; j += 1) {\r\n            for (let i = 0; i < this.rx; i += 1) {\r\n                if (i < this.rx - 1 && j < this.ry - 1) {\r\n                    let p = new Pixel(this);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    this.listPixels.push(p);\r\n\r\n                    p = new Pixel(this);\r\n                    p.recVec.push(this.pts[j][i]);\r\n                    p.recVec.push(this.pts[j + 1][i + 1]);\r\n                    p.recVec.push(this.pts[j + 1][i]);\r\n                    this.listPixels.push(p);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public ComputeHex() {\r\n        this.listPixels = [];\r\n        let alter = true;\r\n        for (let j = 0; j < this.ry; j += 2) {\r\n            for (let i = 0; i < this.rx; i += 2) {\r\n                if (alter) {\r\n                    if (i % 2 === 0 && i < this.rx - 2 && j % 2 === 0 && j < this.ry - 2) {\r\n                        let p = new Pixel(this);\r\n                        p.recVec.push(this.pts[j][i + 1]);\r\n                        p.recVec.push(this.pts[j + 1][i + 2]);\r\n                        p.recVec.push(this.pts[j + 2][i + 2]);\r\n                        p.recVec.push(this.pts[j + 3][i + 1]);\r\n                        p.recVec.push(this.pts[j + 2][i]);\r\n                        p.recVec.push(this.pts[j + 1][i]);\r\n                        // p.recVec.push(this.pts[j][i+1]);\r\n                        this.listPixels.push(p);\r\n                    }\r\n                } else {\r\n                    if (i % 2 === 0 && i < this.rx - 2 && j % 2 === 0 && j < this.ry - 2) {\r\n                        let p = new Pixel(this);\r\n                        p.recVec.push(this.pts[j][i + 2]);\r\n                        p.recVec.push(this.pts[j + 1][i + 3]);\r\n                        p.recVec.push(this.pts[j + 2][i + 3]);\r\n                        p.recVec.push(this.pts[j + 3][i + 2]);\r\n                        p.recVec.push(this.pts[j + 2][i + 1]);\r\n                        p.recVec.push(this.pts[j + 1][i + 1]);\r\n                        // p.vecs.push(this.pts[j][i+2]);\r\n                        this.listPixels.push(p);\r\n                    }\r\n                }\r\n            }\r\n            alter = !alter;\r\n        }\r\n        // console.log('done for grid');\r\n        // this.InitGridNeighbor();\r\n    }\r\n    RenderPixel(ctx: CanvasRenderingContext2D) {\r\n        for (let i = 0; i < this.listPixels.length; ++i) {\r\n            this.listPixels[i].Render(ctx);\r\n        }\r\n    }\r\n    RenderCorner(ctx: CanvasRenderingContext2D) {\r\n        let p = this.pts[0][0];\r\n        CanvasDrawing.PointByNVecAni(ctx, p, 7, this.t, 'rgba(255, 0, 0, 1)');\r\n        ctx.stroke();\r\n        p = this.pts[0][this.pts[0].length - 1];\r\n        CanvasDrawing.PointByNVecAni(ctx, p, 7, this.t, 'rgba(255, 0, 0, 1)');\r\n        ctx.stroke();\r\n        p = this.pts[this.pts.length - 1][this.pts[0].length - 1];\r\n        CanvasDrawing.PointByNVecAni(ctx, p, 7, this.t, 'rgba(255, 0, 0, 1)');\r\n        ctx.stroke();\r\n        p = this.pts[this.pts.length - 1][0];\r\n        CanvasDrawing.PointByNVecAni(ctx, p, 7, this.t, 'rgba(255, 0, 0, 1)');\r\n        ctx.stroke();\r\n        this.t += 0.07;\r\n    }\r\n    public RenderSelPixel(ctx: CanvasRenderingContext2D) {\r\n        if (this.selPixel) {\r\n            ctx.lineWidth = 3;\r\n            ctx.strokeStyle = '#ffffff';\r\n            // ctx.fillStyle = `rgba(255, 0, 255, ${this.data['num'] * 0.05} )`;\r\n            ctx.beginPath();\r\n            ctx.moveTo(this.selPixel.recVec[0].x, this.selPixel.recVec[0].y);\r\n            for (let i = 1; i < this.selPixel.recVec.length; ++i) {\r\n                ctx.lineTo(this.selPixel.recVec[i].x, this.selPixel.recVec[i].y);\r\n            }\r\n            ctx.closePath();\r\n\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport class Pixel {\r\n    static ID = 0;\r\n\r\n    map: CustomDynamicBinSystem;\r\n    vec: Vector3;\r\n    norV: Vector3;\r\n    nPix: Pixel[] = [];\r\n    recVec: Vector3[];\r\n    i: number = -1;\r\n    j: number = -1;\r\n    k: number = -1;\r\n    u: number = -1;\r\n    v: number = -1;\r\n    id: number;\r\n    color: number[] = [];\r\n    data: {};\r\n\r\n    static GetID() { return Pixel.ID++; }\r\n\r\n    constructor(map: CustomDynamicBinSystem, v: Vector3 = new Vector3(0, 0, 0)) {\r\n        this.map = map;\r\n        this.vec = v;\r\n        this.nPix = [];\r\n        this.recVec = [];\r\n        this.i = -1;\r\n        this.j = -1;\r\n        this.k = -1;\r\n        this.id = Pixel.GetID();\r\n        this.data = {};\r\n    }\r\n    ToString() {\r\n        let temp = 'Pixel' + this.id;\r\n        // console.log(temp);\r\n        return temp;\r\n    }\r\n    Update() {\r\n        /* */\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.lineWidth = 1;\r\n        ctx.strokeStyle = '#000000';\r\n        ctx.fillStyle = `rgba(255, 0, 255, ${this.data['num'] * 0.05} )`;\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.recVec[0].x, this.recVec[0].y);\r\n        for (let i = 1; i < this.recVec.length; ++i) {\r\n            ctx.lineTo(this.recVec[i].x, this.recVec[i].y);\r\n        }\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n        // }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport class CanvasDrawing {\r\n    public static LineByVecs(ctx: CanvasRenderingContext2D, v0: Vector3, v1: Vector3, width: number = 1, fill: string = '#ff0000') {\r\n        ctx.strokeStyle = fill;\r\n        ctx.lineWidth = width;\r\n        ctx.beginPath();\r\n        ctx.moveTo(v0.x, v0.y);\r\n        ctx.lineTo(v1.x, v1.y);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n    public static Line(ctx: CanvasRenderingContext2D, x0: number, y0: number, x1: number, y1: number, width: number = 1, fill: string = '#ff0000') {\r\n        ctx.strokeStyle = fill;\r\n        ctx.lineWidth = width;\r\n        ctx.beginPath();\r\n        ctx.moveTo(x0, y0);\r\n        ctx.lineTo(x1, y1);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n    public static Point(ctx: CanvasRenderingContext2D, x: number, y: number, r: number = 5, fill: string = '#ff0000') {\r\n        ctx.fillStyle = fill;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    public static PointByNVec(ctx: CanvasRenderingContext2D, v: Vector3, r: number = 5, fill: string = '#ff0000') {\r\n        ctx.fillStyle = fill;\r\n        ctx.beginPath();\r\n        ctx.arc(v.x, v.y, r, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    public static PointByNVecAni(ctx: CanvasRenderingContext2D, v: Vector3, r: number = 5, t: number, fill: string = '#ff0000') {\r\n        ctx.fillStyle = fill;\r\n        ctx.beginPath();\r\n        ctx.arc(v.x, v.y, r + (1 + Math.sin(t)) * 2, 0, Math.PI * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    // .....................................................\r\n    public static GridLineOrigin(ctx: CanvasRenderingContext2D, xNum: number = 10, yNum: number = 10, xOff: number = 20, yOff: number = 20) {\r\n        const xStart = - ((xNum * xOff) * 0.5);\r\n        const yStart = - ((yNum * yOff) * 0.5);\r\n\r\n        ctx.lineWidth = 0.1;\r\n\r\n        for (let y = 0; y <= yNum; ++y) {\r\n            // for (let x = 0; x <= xNum; ++x) {\r\n            //     ctx.beginPath();\r\n            //     ctx.arc(xStart + (xOff * x), yStart + (yOff * y), 1, 0, Math.PI * 2);\r\n            //     ctx.closePath();\r\n            //     ctx.fill();\r\n            // }\r\n            ctx.beginPath();\r\n            ctx.moveTo(xStart, yStart + (yOff * y));\r\n            ctx.lineTo((xNum * xOff) * 0.5, yStart + (yOff * y));\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(xStart + (xOff * y), yStart);\r\n            ctx.lineTo(yStart + (yOff * y), (yNum * yOff) * 0.5);\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n        }\r\n\r\n    }\r\n    public static GridPointOrigin(ctx: CanvasRenderingContext2D, xNum: number = 10, yNum: number = 10, xOff: number = 20, yOff: number = 20) {\r\n        const xStart = - ((xNum * xOff) * 0.5);\r\n        const yStart = - ((yNum * yOff) * 0.5);\r\n        // console.log(xStart, yStart);\r\n        ctx.lineWidth = 0.1;\r\n\r\n        for (let y = 0; y <= yNum; ++y) {\r\n            for (let x = 0; x <= xNum; ++x) {\r\n                ctx.beginPath();\r\n                ctx.arc(xStart + (xOff * x), yStart + (yOff * y), 1, 0, Math.PI * 2);\r\n                ctx.closePath();\r\n                ctx.fill();\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    constructor() {\r\n        //\r\n    }\r\n}"],"names":["Solution","RendererJSAPI","constructor","id","super","pts","captureVec","pixelMap","initPost","this","mView","on","event","stopPropagation","navigation","mouseWheelZoomEnabled","getCSVFromURL","process","then","d","count","latSum","lonSum","line","split","i","length","values","lon","lat","isNaN","push","center","zoom","CustomDynamicBinSystem","Vector3","mode","Init","render","ctx","globalCompositeOperation","RenderPixel","RenderCorner","RenderSelPixel","mouseDown","x","y","IsHover","mouseMove","MoveInspection","selPixel","DragControlPoint","mouseUp","undefined","v0","v1","rx","ry","ddx","ddy","ptList","listPixels","m","t","p","Move","j","isInsideOfVecs","recVec","InitGrid","ComputeRec","ComputeTriA","ComputeTriB","ComputeDia","ComputeLShape","ComputeHex","UpdateData","vs","data","z","xArray","v","Pixel","alter","Render","CanvasDrawing","PointByNVecAni","stroke","lineWidth","strokeStyle","beginPath","moveTo","lineTo","closePath","static","ID","map","vec","norV","nPix","k","u","color","GetID","ToString","Update","fillStyle","fill","width","x0","y0","x1","y1","r","arc","Math","PI","sin","xNum","yNum","xOff","yOff","xStart","yStart"],"sourceRoot":""}