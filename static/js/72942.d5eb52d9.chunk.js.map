{"version":3,"file":"static/js/72942.d5eb52d9.chunk.js","mappings":"6JAOO,MAAMA,UAAiBC,EAAAA,GAI7BC,cACCC,MADqB,uDAAG,QAGxB,KALDC,gBAAU,EAMK,IAAIC,EAAAA,IACH,IAAIA,EAAAA,IAAwB,GAAI,EAAG,EAAG,KAMnCC,SAASC,cAAc,OACvBD,SAASC,cAAc,MAiJ1C,CAEOC,OAAOC,GAIb,E","sources":["njslab/Workshop/workshop-three/LAB_Web_01_Starter-CSS/index.ts"],"sourcesContent":["import * as THREE from 'three';\r\n// import { CSS3DRenderer, CSS3DSprite, CSS3DObject } from 'three-css3drenderer';\r\n// import { CSS3DRenderer, CSS3DSprite, CSS3DObject } from 'three-css3d';\r\n// import {  } from 'three';\r\n\r\nimport { RendererThree } from '../../../../lib';\r\n\r\nexport class Solution extends RendererThree {\r\n\r\n\tpointLight: THREE.PointLight\r\n\r\n\tconstructor(id: string = 'main') {\r\n\t\tsuper(id)\r\n\r\n\t\t// Create Scene, camera and renderer\r\n\t\tconst scene = new THREE.Scene();\r\n\t\tconst camera = new THREE.PerspectiveCamera(50, 1, 0, 500);\r\n\t\t// const renderer = new CSS3DRenderer();\r\n\r\n\t\t// document.body.appendChild(renderer.domElement);\r\n\r\n\t\t// Create DOM for CSS3D\r\n\t\tconst objectDOM = document.createElement('div');\r\n\t\tconst spriteDOM = document.createElement('div');\r\n\r\n\t\t// Update style, content for your DOM\r\n\t\t// ...\r\n\r\n\t\t// Create CSS3D Objects\r\n\t\t// const object = new CSS3DObject(objectDOM);\r\n\t\t// const sprite = new CSS3DSprite(spriteDOM);\r\n\r\n\t\t// Change the 3D property of CSS3D Objects\r\n\t\t// ...\r\n\r\n\t\t// Add to your scene\r\n\t\t// scene.add(object, sprite);\r\n\r\n\t\t// Render, on each frame, or manually\r\n\t\t// renderer.render(scene, camera);\r\n\r\n\t\t// const ambientLight = new THREE.AmbientLight(0xcccccc, 0.25);\r\n\t\t// this.scene.add(ambientLight);\r\n\r\n\t\t// this.pointLight = new THREE.PointLight(0xffffff, 0.75);\r\n\t\t// this.pointLight.position.x = 10;\r\n\t\t// this.pointLight.castShadow = true;\r\n\t\t// this.scene.add(this.pointLight);\r\n\r\n\t\t// const geometry = new THREE.SphereGeometry( 1, 50, 50 );\r\n\t\t// const object = new THREE.Mesh( geometry, new THREE.MeshPhongMaterial( ) );\r\n\t\t// this.scene.add(object);\r\n\r\n\t\t// this.camera.position.set(0, 100, 3000);\r\n\r\n\r\n\r\n\t\t// glRenderer = createGlRenderer();\r\n\t\t// cssRenderer = createCssRenderer();\r\n\r\n\t\t//document.body.appendChild(glRenderer.domElement);\r\n\r\n\t\t// document.body.appendChild(cssRenderer.domElement);\r\n\t\t// cssRenderer.domElement.appendChild(glRenderer.domElement);\r\n\r\n\t\t// glScene = new THREE.Scene();\r\n\t\t// cssScene = new THREE.Scene();\r\n\r\n\t\t// var ambientLight = new THREE.AmbientLight(0x555555);\r\n\t\t// this.scene.add(ambientLight);\r\n\r\n\t\t// var directionalLight = new THREE.DirectionalLight(0xffffff);\r\n\t\t// directionalLight.position.set( -.5, .5, -1.5 ).normalize();\r\n\t\t// this.scene.add(directionalLight);\r\n\r\n\t\t// create3dPage(\r\n\t\t//     this.scene,\r\n\t\t//     1000, 1000,\r\n\t\t//     new THREE.Vector3(-1050, 0, 400),\r\n\t\t//     new THREE.Vector3(0, 45 * Math.PI / 180, 0),\r\n\t\t//     'http://viewer.autodesk.io/node/ng-gallery/#/home');\r\n\r\n\t\t//   create3dPage(\r\n\t\t//     this.scene,\r\n\t\t//     900, 1000,\r\n\t\t//     new THREE.Vector3(0, 0, 0),\r\n\t\t//     new THREE.Vector3(0, 0, 0),\r\n\t\t//     'http://adndevblog.typepad.com/cloud_and_mobile');\r\n\r\n\t\t//   create3dPage(\r\n\t\t//     this.scene,\r\n\t\t//     1000, 1000,\r\n\t\t//     new THREE.Vector3(1050, 0, 400),\r\n\t\t//     new THREE.Vector3(0, -45 * Math.PI / 180, 0),\r\n\t\t//     'http://mongo.autodesk.io');\r\n\r\n\t\t//   create3dGeometry(this.scene);\r\n\r\n\t\t// const renderer = new CSS3DRenderer();\r\n\r\n\t\t// document.body.appendChild(renderer.domElement);\r\n\r\n\t\t// // Create DOM for CSS3D\r\n\t\t// const objectDOM = document.createElement('div');\r\n\t\t// const spriteDOM = document.createElement('div');\r\n\r\n\t\t// // Update style, content for your DOM\r\n\t\t// // ...\r\n\r\n\t\t// // Create CSS3D Objects\r\n\t\t// const object = new CSS3DObject(objectDOM);\r\n\t\t// const sprite = new CSS3DSprite(spriteDOM);\r\n\r\n\t\t// // Change the 3D property of CSS3D Objects\r\n\t\t// // ...\r\n\r\n\t\t// // Add to your scene\r\n\t\t// this.scene.add(object, sprite);\r\n\r\n\t\t// // Render, on each frame, or manually\r\n\t\t// renderer.render(this.scene, this.camera);\r\n\r\n\t\t// console.log(CSS3DObject);\r\n\r\n\t\t// \tlet element = document.createElement('div');\r\n\t\t// \telement.innerHTML = 'Plain text inside a div.';\r\n\t\t// \telement.className = 'animated bounceInDown' ; \r\n\t\t// \telement.style.background = \"#0094ff\";\r\n\t\t// \telement.style.fontSize = \"2em\";\r\n\t\t// \telement.style.color = \"white\";\r\n\t\t// \telement.style.padding = \"2em\";\r\n\r\n\t\t// \t//CSS Object\r\n\t\t// \tlet div = new CSS3DObject(element);\r\n\t\t// \tdiv.position.x = 8;\r\n\t\t// \tdiv.position.y = 9;\r\n\t\t// \tdiv.position.z = 185;\r\n\t\t// this.\tscene.add(div);\r\n\r\n\t\t// const element = document.createElement(\"div\");\r\n\t\t// element.className = \"element\";\r\n\t\t// element.style.backgroundColor =\r\n\t\t//   \"rgba(0,127,127,\" + (Math.random() * 0.5 + 0.25) + \")\";\r\n\r\n\t\t// const number = document.createElement(\"div\");\r\n\t\t// number.className = \"number\";\r\n\t\t// // number.textContent = item.stat;\r\n\t\t// element.appendChild(number);\r\n\r\n\t\t// const symbol = document.createElement(\"div\");\r\n\t\t// symbol.className = \"symbol\";\r\n\t\t// // symbol.textContent = item.title;\r\n\t\t// element.appendChild(symbol);\r\n\r\n\t\t// const details = document.createElement(\"div\");\r\n\t\t// details.className = \"details\";\r\n\t\t// // details.innerHTML = item.description + \"<br>\" + item.stat;\r\n\t\t// element.appendChild(details);\r\n\r\n\t\t// \t\t\t// @ts-ignore\r\n\t\t// const objectCSS = new THREE.CSS3DObject(element);\r\n\t\t// objectCSS.position.x = Math.random() * 4000 - 2000;\r\n\t\t// objectCSS.position.y = Math.random() * 4000 - 2000;\r\n\t\t// objectCSS.position.z = Math.random() * 4000 - 2000;\r\n\t\t// this.scene.add(objectCSS);\r\n\r\n\r\n\t\t// \tthis.start();\r\n\t}\r\n\r\n\tpublic update(scene: THREE.Scene) {\r\n\r\n\t\t// var matrix = new THREE.Matrix4();\r\n\t\t// matrix.makeRotationY(Math.PI * 0.011);\r\n\t\t// this.pointLight.position.applyMatrix4(matrix);\r\n\r\n\t}\r\n\r\n}\r\n// function create3dGeometry(glScene) {\r\n\r\n// \tvar mesh1 = new THREE.Mesh(\r\n// \t\tnew THREE.CylinderGeometry(0, 200, 300, 20, 4),\r\n// \t\tcreateColoredMaterial());\r\n\r\n// \tmesh1.position.x = 0;\r\n// \tmesh1.position.y = -300;\r\n// \tmesh1.position.z = 400;\r\n\r\n// \tglScene.add(mesh1);\r\n\r\n// \tvar mesh2 = new THREE.Mesh(\r\n// \t\tnew THREE.BoxGeometry(200, 200, 200),\r\n// \t\tcreateColoredMaterial());\r\n\r\n// \tmesh2.position.x = -300;\r\n// \tmesh2.position.y = -300;\r\n// \tmesh2.position.z = 400;\r\n\r\n// \tglScene.add(mesh2);\r\n\r\n\r\n// \tvar mesh3 = new THREE.Mesh(\r\n// \t\tnew THREE.SphereGeometry(100, 128, 128),\r\n// \t\tcreateColoredMaterial());\r\n\r\n// \tmesh3.position.x = 500;\r\n// \tmesh3.position.y = -300;\r\n// \tmesh3.position.z = 400;\r\n\r\n// \tglScene.add(mesh3);\r\n// }\r\n\r\n// function create3dPage(glScene, w, h, position, rotation, url) {\r\n\r\n// \tvar plane = createPlane(\r\n// \t\tw, h,\r\n// \t\tposition,\r\n// \t\trotation);\r\n\r\n// \tglScene.add(plane);\r\n\r\n// \tvar cssObject = createCssObject(\r\n// \t\tw, h,\r\n// \t\tposition,\r\n// \t\trotation,\r\n// \t\turl);\r\n\r\n// \t// cssScene.add(cssObject);\r\n// }\r\n// function createColoredMaterial() {\r\n\r\n// \tvar material = new THREE.MeshBasicMaterial({\r\n// \t\tcolor: Math.floor(Math.random() * 16777215),\r\n// \t\t//   shading: THREE.FlatShading,\r\n// \t\tside: THREE.DoubleSide\r\n// \t});\r\n\r\n// \treturn material;\r\n// }\r\n// function createPlane(w, h, position, rotation) {\r\n\r\n// \tvar material = new THREE.MeshBasicMaterial({\r\n// \t\tcolor: 0x000000,\r\n// \t\topacity: 0.0,\r\n// \t\tside: THREE.DoubleSide\r\n// \t});\r\n\r\n// \tvar geometry = new THREE.PlaneGeometry(w, h);\r\n\r\n// \tvar mesh = new THREE.Mesh(geometry, material);\r\n\r\n// \tmesh.position.x = position.x;\r\n// \tmesh.position.y = position.y;\r\n// \tmesh.position.z = position.z;\r\n\r\n// \tmesh.rotation.x = rotation.x;\r\n// \tmesh.rotation.y = rotation.y;\r\n// \tmesh.rotation.z = rotation.z;\r\n\r\n// \treturn mesh;\r\n// }\r\n// function createCssObject(w, h, position, rotation, url) {\r\n\r\n// \tvar html = [\r\n\r\n// \t\t'<div style=\"width:' + w + 'px; height:' + h + 'px;\">',\r\n// \t\t'<iframe src=\"' + url + '\" width=\"' + w + '\" height=\"' + h + '\">',\r\n// \t\t'</iframe>',\r\n// \t\t'</div>'\r\n\r\n// \t].join('\\n');\r\n\r\n// \tvar div = document.createElement('div');\r\n\r\n// \tdiv.innerHTML = html;\r\n// \t//     $(div).html(html);\r\n\r\n\r\n// \t// var cssObject = new CSS3DObject();\r\n\r\n// \t// cssObject.position.x = position.x;\r\n// \t// cssObject.position.y = position.y;\r\n// \t// cssObject.position.z = position.z;\r\n\r\n// \t// cssObject.rotation.x = rotation.x;\r\n// \t// cssObject.rotation.y = rotation.y;\r\n// \t// cssObject.rotation.z = rotation.z;\r\n\r\n// \t// return cssObject;\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function CSS3DObject ( element ) {\r\n\r\n// \tTHREE.Object3D.call( this );\r\n\r\n// \tthis.element = element;\r\n// \tthis.element.style.position = 'absolute';\r\n\r\n// \tthis.addEventListener( 'removed', function () {\r\n\r\n// \t\tif ( this.element.parentNode !== null ) {\r\n\r\n// \t\t\tthis.element.parentNode.removeChild( this.element );\r\n\r\n// \t\t}\r\n\r\n// \t} );\r\n\r\n// };\r\n\r\n\r\n// CSS3DObject.prototype = Object.create( THREE.Object3D.prototype );\r\n// CSS3DObject.prototype.constructor = CSS3DObject;\r\n// module.exports.CSS3DObject = CSS3DObject;\r\n\r\n// const CSS3DSprite = function ( element ) {\r\n\r\n// \tCSS3DObject.call( this, element );\r\n\r\n// };\r\n\r\n// CSS3DSprite.prototype = Object.create( CSS3DObject.prototype );\r\n// CSS3DSprite.prototype.constructor = CSS3DSprite;\r\n// // module.exports.CSS3DSprite = CSS3DSprite;\r\n\r\n// //\r\n\r\n// function CSS3DRenderer () {\r\n\r\n// \tvar _width, _height;\r\n// \tvar _widthHalf, _heightHalf;\r\n\r\n// \tvar matrix = new THREE.Matrix4();\r\n\r\n// \tvar cache = {\r\n// \t\tcamera: { fov: 0, style: '' },\r\n// \t\tobjects: {}\r\n// \t};\r\n\r\n// \tvar domElement = document.createElement( 'div' );\r\n// \tdomElement.style.overflow = 'hidden';\r\n\r\n// \tthis.domElement = domElement;\r\n\r\n// \tvar cameraElement = document.createElement( 'div' );\r\n\r\n// \tcameraElement.style.webkitTransformStyle = 'preserve-3d';\r\n// \tcameraElement.style.transformStyle = 'preserve-3d';\r\n// \tcameraElement.style.transformStyle = 'preserve-3d';\r\n\r\n// \tdomElement.appendChild( cameraElement );\r\n\r\n// \tvar isIE = /Trident/i.test( navigator.userAgent );\r\n\r\n// \tthis.setClearColor = function () {};\r\n\r\n// \tthis.getSize = function () {\r\n\r\n// \t\treturn {\r\n// \t\t\twidth: _width,\r\n// \t\t\theight: _height\r\n// \t\t};\r\n\r\n// \t};\r\n\r\n// \tthis.setSize = function ( width, height ) {\r\n\r\n// \t\t_width = width;\r\n// \t\t_height = height;\r\n// \t\t_widthHalf = _width / 2;\r\n// \t\t_heightHalf = _height / 2;\r\n\r\n// \t\tdomElement.style.width = width + 'px';\r\n// \t\tdomElement.style.height = height + 'px';\r\n\r\n// \t\tcameraElement.style.width = width + 'px';\r\n// \t\tcameraElement.style.height = height + 'px';\r\n\r\n// \t};\r\n\r\n// \tfunction epsilon( value ) {\r\n\r\n// \t\treturn Math.abs( value ) < 1e-10 ? 0 : value;\r\n\r\n// \t}\r\n\r\n// \tfunction getCameraCSSMatrix( matrix ) {\r\n\r\n// \t\tvar elements = matrix.elements;\r\n\r\n// \t\treturn 'matrix3d(' +\r\n// \t\t\tepsilon( elements[ 0 ] ) + ',' +\r\n// \t\t\tepsilon( - elements[ 1 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 2 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 3 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 4 ] ) + ',' +\r\n// \t\t\tepsilon( - elements[ 5 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 6 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 7 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 8 ] ) + ',' +\r\n// \t\t\tepsilon( - elements[ 9 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 10 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 11 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 12 ] ) + ',' +\r\n// \t\t\tepsilon( - elements[ 13 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 14 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 15 ] ) +\r\n// \t\t')';\r\n\r\n// \t}\r\n\r\n// \tfunction getObjectCSSMatrix( matrix, cameraCSSMatrix ) {\r\n\r\n// \t\tvar elements = matrix.elements;\r\n// \t\tvar matrix3d = 'matrix3d(' +\r\n// \t\t\tepsilon( elements[ 0 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 1 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 2 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 3 ] ) + ',' +\r\n// \t\t\tepsilon( - elements[ 4 ] ) + ',' +\r\n// \t\t\tepsilon( - elements[ 5 ] ) + ',' +\r\n// \t\t\tepsilon( - elements[ 6 ] ) + ',' +\r\n// \t\t\tepsilon( - elements[ 7 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 8 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 9 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 10 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 11 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 12 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 13 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 14 ] ) + ',' +\r\n// \t\t\tepsilon( elements[ 15 ] ) +\r\n// \t\t')';\r\n\r\n// \t\tif ( isIE ) {\r\n\r\n// \t\t\treturn 'translate(-50%,-50%)' +\r\n// \t\t\t\t'translate(' + _widthHalf + 'px,' + _heightHalf + 'px)' +\r\n// \t\t\t\tcameraCSSMatrix +\r\n// \t\t\t\tmatrix3d;\r\n\r\n// \t\t}\r\n\r\n// \t\treturn 'translate(-50%,-50%)' + matrix3d;\r\n\r\n// \t}\r\n\r\n// \tfunction renderObject( object, camera, cameraCSSMatrix ) {\r\n\r\n// \t\tif ( object instanceof CSS3DObject ) {\r\n\r\n// \t\t\tvar style;\r\n\r\n// \t\t\tif ( object instanceof CSS3DSprite ) {\r\n\r\n// \t\t\t\t// http://swiftcoder.wordpress.com/2008/11/25/constructing-a-billboard-matrix/\r\n\r\n// \t\t\t\tmatrix.copy( camera.matrixWorldInverse );\r\n// \t\t\t\tmatrix.transpose();\r\n// \t\t\t\t// @ts-ignore\r\n// \t\t\t\tmatrix.copyPosition( object.matrixWorld );\r\n// \t\t\t\t\t\t\t\t// @ts-ignore\r\n// \t\t\t\tmatrix.scale( object.scale );\r\n\r\n// \t\t\t\tmatrix.elements[ 3 ] = 0;\r\n// \t\t\t\tmatrix.elements[ 7 ] = 0;\r\n// \t\t\t\tmatrix.elements[ 11 ] = 0;\r\n// \t\t\t\tmatrix.elements[ 15 ] = 1;\r\n\r\n// \t\t\t\tstyle = getObjectCSSMatrix( matrix, cameraCSSMatrix );\r\n\r\n// \t\t\t} else {\r\n// \t\t\t\t// @ts-ignore\r\n// \t\t\t\tstyle = getObjectCSSMatrix( object.matrixWorld, cameraCSSMatrix );\r\n\r\n// \t\t\t}\r\n// \t\t\t\t// @ts-ignore\r\n// \t\t\tvar element = object.element;\r\n// \t\t\t\t\t\t\t// @ts-ignore\r\n// \t\t\tvar cachedStyle = cache.objects[ object.id ] && cache.objects[ object.id ].style;\r\n\r\n// \t\t\tif ( cachedStyle === undefined || cachedStyle !== style ) {\r\n\r\n// \t\t\t\telement.style.WebkitTransform = style;\r\n// \t\t\t\telement.style.MozTransform = style;\r\n// \t\t\t\telement.style.transform = style;\r\n// \t\t\t\t// @ts-ignore\r\n// \t\t\t\tcache.objects[ object.id ] = { style: style };\r\n\r\n// \t\t\t\tif ( isIE ) {\r\n// \t\t\t\t// @ts-ignore\r\n// \t\t\t\t\tcache.objects[ object.id ].distanceToCameraSquared = getDistanceToSquared( camera, object );\r\n\r\n// \t\t\t\t}\r\n\r\n// \t\t\t}\r\n\r\n// \t\t\tif ( element.parentNode !== cameraElement ) {\r\n\r\n// \t\t\t\tcameraElement.appendChild( element );\r\n\r\n// \t\t\t}\r\n\r\n// \t\t}\r\n\r\n// \t\tfor ( var i = 0, l = object.children.length; i < l; i ++ ) {\r\n\r\n// \t\t\trenderObject( object.children[ i ], camera, cameraCSSMatrix );\r\n\r\n// \t\t}\r\n\r\n// \t}\r\n\r\n// \tvar getDistanceToSquared = function () {\r\n\r\n// \t\tvar a = new THREE.Vector3();\r\n// \t\tvar b = new THREE.Vector3();\r\n\r\n// \t\treturn function ( object1, object2 ) {\r\n\r\n// \t\t\ta.setFromMatrixPosition( object1.matrixWorld );\r\n// \t\t\tb.setFromMatrixPosition( object2.matrixWorld );\r\n\r\n// \t\t\treturn a.distanceToSquared( b );\r\n\r\n// \t\t};\r\n\r\n// \t}();\r\n\r\n// \tfunction zOrder( scene ) {\r\n\r\n// \t\tvar order = Object.keys( cache.objects ).sort( function ( a, b ) {\r\n\r\n// \t\t\treturn cache.objects[ a ].distanceToCameraSquared - cache.objects[ b ].distanceToCameraSquared;\r\n\r\n// \t\t} );\r\n// \t\tvar zMax = order.length;\r\n\r\n// \t\tscene.traverse( function ( object ) {\r\n\r\n// \t\t\tvar index = order.indexOf( object.id + '' );\r\n\r\n// \t\t\tif ( index !== - 1 ) {\r\n\r\n// \t\t\t\tobject.element.style.zIndex = zMax - index;\r\n\r\n// \t\t\t}\r\n\r\n// \t\t} );\r\n\r\n// \t}\r\n\r\n// \tthis.render = function ( scene, camera ) {\r\n\r\n// \t\tvar fov = camera.projectionMatrix.elements[ 5 ] * _heightHalf;\r\n\r\n// \t\tif ( cache.camera.fov !== fov ) {\r\n\r\n// \t\t\tdomElement.style.webkitPerspective = fov + 'px';\r\n// \t\t\tdomElement.style.perspective = fov + 'px';\r\n// \t\t\tdomElement.style.perspective = fov + 'px';\r\n\r\n// \t\t\tcache.camera.fov = fov;\r\n\r\n// \t\t}\r\n\r\n// \t\tscene.updateMatrixWorld();\r\n\r\n// \t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\r\n// \t\tvar cameraCSSMatrix = 'translateZ(' + fov + 'px)' +\r\n// \t\t\tgetCameraCSSMatrix( camera.matrixWorldInverse );\r\n\r\n// \t\tvar style = cameraCSSMatrix +\r\n// \t\t\t'translate(' + _widthHalf + 'px,' + _heightHalf + 'px)';\r\n\r\n// \t\tif ( cache.camera.style !== style && ! isIE ) {\r\n\r\n// \t\t\tcameraElement.style.webkitTransform = style;\r\n// \t\t\tcameraElement.style.transform = style;\r\n// \t\t\tcameraElement.style.transform = style;\r\n\r\n// \t\t\tcache.camera.style = style;\r\n\r\n// \t\t}\r\n\r\n// \t\trenderObject( scene, camera, cameraCSSMatrix );\r\n\r\n// \t\tif ( isIE ) {\r\n\r\n// \t\t\t// IE10 and 11 does not support 'preserve-3d'.\r\n// \t\t\t// Thus, z-order in 3D will not work.\r\n// \t\t\t// We have to calc z-order manually and set CSS z-index for IE.\r\n// \t\t\t// FYI: z-index can't handle object intersection\r\n// \t\t\tzOrder( scene );\r\n\r\n// \t\t}\r\n\r\n// \t};\r\n\r\n// };\r\n\r\n// CSS3DRenderer.prototype = Object.create( THREE.EventDispatcher.prototype );\r\n// CSS3DRenderer.prototype.constructor = CSS3DRenderer;\r\n// // module.exports.CSS3DRenderer = CSS3DRenderer;\r\n\r\n\r\n// ( function () {\r\n\r\n// \t/**\r\n//  * Based on http://www.emagix.net/academic/mscs-project/item/camera-sync-with-css3-and-webgl-threejs\r\n//  */\r\n\r\n// \tconst _position = new THREE.Vector3();\r\n// \tconst _quaternion = new THREE.Quaternion();\r\n// \tconst _scale = new THREE.Vector3();\r\n// \tclass CSS3DObject extends THREE.Object3D {\r\n// \t\tisCSS3DObject: boolean;\r\n// \t\telement: HTMLDivElement;\r\n\r\n// \t\tconstructor( element = document.createElement( 'div' ) ) {\r\n\r\n// \t\t\tsuper();\r\n// \t\t\tthis.isCSS3DObject = true;\r\n// \t\t\tthis.element = element;\r\n// \t\t\tthis.element.style.position = 'absolute';\r\n// \t\t\tthis.element.style.pointerEvents = 'auto';\r\n// \t\t\tthis.element.style.userSelect = 'none';\r\n// \t\t\t// @ts-ignore\r\n// \t\t\tthis.element.setAttribute( 'draggable', false );\r\n// \t\t\tthis.addEventListener( 'removed', function () {\r\n\r\n// \t\t\t\tthis.traverse( function ( object ) {\r\n\r\n// \t\t\t\t\tif ( object.element instanceof Element && object.element.parentNode !== null ) {\r\n\r\n// \t\t\t\t\t\tobject.element.parentNode.removeChild( object.element );\r\n\r\n// \t\t\t\t\t}\r\n\r\n// \t\t\t\t} );\r\n\r\n// \t\t\t} );\r\n\r\n// \t\t}\r\n// \t\tcopy( source, recursive ) {\r\n\r\n// \t\t\tsuper.copy( source, recursive );\r\n// \t\t\tthis.element = source.element.cloneNode( true );\r\n// \t\t\treturn this;\r\n\r\n// \t\t}\r\n\r\n// \t}\r\n// \tclass CSS3DSprite extends CSS3DObject {\r\n// \t\tisCSS3DSprite: boolean;\r\n// \t\trotation2D: number;\r\n\r\n// \t\tconstructor( element ) {\r\n\r\n// \t\t\tsuper( element );\r\n// \t\t\tthis.isCSS3DSprite = true;\r\n// \t\t\tthis.rotation2D = 0;\r\n\r\n// \t\t}\r\n// \t\tcopy( source, recursive ) {\r\n\r\n// \t\t\tsuper.copy( source, recursive );\r\n// \t\t\tthis.rotation2D = source.rotation2D;\r\n// \t\t\treturn this;\r\n\r\n// \t\t}\r\n\r\n// \t}\r\n\r\n// \t//\r\n\r\n// \tconst _matrix = new THREE.Matrix4();\r\n// \tconst _matrix2 = new THREE.Matrix4();\r\n// \tclass CSS3DRenderer {\r\n// \t\tdomElement: any;\r\n// \t\tgetSize: () => { width: any; height: any; };\r\n// \t\trender: (scene: any, camera: any) => void;\r\n// \t\tsetSize: (width: any, height: any) => void;\r\n\r\n// \t\tconstructor( parameters = {} ) {\r\n\r\n// \t\t\tconst _this = this;\r\n// \t\t\tlet _width, _height;\r\n// \t\t\tlet _widthHalf, _heightHalf;\r\n// \t\t\tconst cache = {\r\n// \t\t\t\tcamera: {\r\n// \t\t\t\t\tfov: 0,\r\n// \t\t\t\t\tstyle: ''\r\n// \t\t\t\t},\r\n// \t\t\t\tobjects: new WeakMap()\r\n// \t\t\t};\r\n// \t\t\t\t\t\t// @ts-ignore\r\n// \t\t\tconst domElement = parameters.element !== undefined ? parameters.element : document.createElement( 'div' );\r\n// \t\t\tdomElement.style.overflow = 'hidden';\r\n// \t\t\tthis.domElement = domElement;\r\n// \t\t\tconst cameraElement = document.createElement( 'div' );\r\n// \t\t\tcameraElement.style.transformStyle = 'preserve-3d';\r\n// \t\t\tcameraElement.style.pointerEvents = 'none';\r\n// \t\t\tdomElement.appendChild( cameraElement );\r\n// \t\t\tthis.getSize = function () {\r\n\r\n// \t\t\t\treturn {\r\n// \t\t\t\t\twidth: _width,\r\n// \t\t\t\t\theight: _height\r\n// \t\t\t\t};\r\n\r\n// \t\t\t};\r\n\r\n// \t\t\tthis.render = function ( scene, camera ) {\r\n\r\n// \t\t\t\tconst fov = camera.projectionMatrix.elements[ 5 ] * _heightHalf;\r\n// \t\t\t\tif ( cache.camera.fov !== fov ) {\r\n\r\n// \t\t\t\t\tdomElement.style.perspective = camera.isPerspectiveCamera ? fov + 'px' : '';\r\n// \t\t\t\t\tcache.camera.fov = fov;\r\n\r\n// \t\t\t\t}\r\n\r\n// \t\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\r\n// \t\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\r\n// \t\t\t\tlet tx, ty;\r\n// \t\t\t\tif ( camera.isOrthographicCamera ) {\r\n\r\n// \t\t\t\t\ttx = - ( camera.right + camera.left ) / 2;\r\n// \t\t\t\t\tty = ( camera.top + camera.bottom ) / 2;\r\n\r\n// \t\t\t\t}\r\n\r\n// \t\t\t\tconst cameraCSSMatrix = camera.isOrthographicCamera ? 'scale(' + fov + ')' + 'translate(' + epsilon( tx ) + 'px,' + epsilon( ty ) + 'px)' + getCameraCSSMatrix( camera.matrixWorldInverse ) : 'translateZ(' + fov + 'px)' + getCameraCSSMatrix( camera.matrixWorldInverse );\r\n// \t\t\t\tconst style = cameraCSSMatrix + 'translate(' + _widthHalf + 'px,' + _heightHalf + 'px)';\r\n// \t\t\t\tif ( cache.camera.style !== style ) {\r\n\r\n// \t\t\t\t\tcameraElement.style.transform = style;\r\n// \t\t\t\t\tcache.camera.style = style;\r\n\r\n// \t\t\t\t}\r\n\r\n// \t\t\t\trenderObject( scene, scene, camera, cameraCSSMatrix );\r\n\r\n// \t\t\t};\r\n\r\n// \t\t\tthis.setSize = function ( width, height ) {\r\n\r\n// \t\t\t\t_width = width;\r\n// \t\t\t\t_height = height;\r\n// \t\t\t\t_widthHalf = _width / 2;\r\n// \t\t\t\t_heightHalf = _height / 2;\r\n// \t\t\t\tdomElement.style.width = width + 'px';\r\n// \t\t\t\tdomElement.style.height = height + 'px';\r\n// \t\t\t\tcameraElement.style.width = width + 'px';\r\n// \t\t\t\tcameraElement.style.height = height + 'px';\r\n\r\n// \t\t\t};\r\n\r\n// \t\t\tfunction epsilon( value ) {\r\n\r\n// \t\t\t\treturn Math.abs( value ) < 1e-10 ? 0 : value;\r\n\r\n// \t\t\t}\r\n\r\n// \t\t\tfunction getCameraCSSMatrix( matrix ) {\r\n\r\n// \t\t\t\tconst elements = matrix.elements;\r\n// \t\t\t\treturn 'matrix3d(' + epsilon( elements[ 0 ] ) + ',' + epsilon( - elements[ 1 ] ) + ',' + epsilon( elements[ 2 ] ) + ',' + epsilon( elements[ 3 ] ) + ',' + epsilon( elements[ 4 ] ) + ',' + epsilon( - elements[ 5 ] ) + ',' + epsilon( elements[ 6 ] ) + ',' + epsilon( elements[ 7 ] ) + ',' + epsilon( elements[ 8 ] ) + ',' + epsilon( - elements[ 9 ] ) + ',' + epsilon( elements[ 10 ] ) + ',' + epsilon( elements[ 11 ] ) + ',' + epsilon( elements[ 12 ] ) + ',' + epsilon( - elements[ 13 ] ) + ',' + epsilon( elements[ 14 ] ) + ',' + epsilon( elements[ 15 ] ) + ')';\r\n\r\n// \t\t\t}\r\n\r\n// \t\t\tfunction getObjectCSSMatrix( matrix ) {\r\n\r\n// \t\t\t\tconst elements = matrix.elements;\r\n// \t\t\t\tconst matrix3d = 'matrix3d(' + epsilon( elements[ 0 ] ) + ',' + epsilon( elements[ 1 ] ) + ',' + epsilon( elements[ 2 ] ) + ',' + epsilon( elements[ 3 ] ) + ',' + epsilon( - elements[ 4 ] ) + ',' + epsilon( - elements[ 5 ] ) + ',' + epsilon( - elements[ 6 ] ) + ',' + epsilon( - elements[ 7 ] ) + ',' + epsilon( elements[ 8 ] ) + ',' + epsilon( elements[ 9 ] ) + ',' + epsilon( elements[ 10 ] ) + ',' + epsilon( elements[ 11 ] ) + ',' + epsilon( elements[ 12 ] ) + ',' + epsilon( elements[ 13 ] ) + ',' + epsilon( elements[ 14 ] ) + ',' + epsilon( elements[ 15 ] ) + ')';\r\n// \t\t\t\treturn 'translate(-50%,-50%)' + matrix3d;\r\n\r\n// \t\t\t}\r\n\r\n// \t\t\tfunction renderObject( object, scene, camera, cameraCSSMatrix ) {\r\n\r\n// \t\t\t\tif ( object.isCSS3DObject ) {\r\n\r\n// \t\t\t\t\tconst visible = object.visible === true && object.layers.test( camera.layers ) === true;\r\n// \t\t\t\t\tobject.element.style.display = visible === true ? '' : 'none';\r\n// \t\t\t\t\tif ( visible === true ) {\r\n\r\n// \t\t\t\t\t\tobject.onBeforeRender( _this, scene, camera );\r\n// \t\t\t\t\t\tlet style;\r\n// \t\t\t\t\t\tif ( object.isCSS3DSprite ) {\r\n\r\n// \t\t\t\t\t\t\t// http://swiftcoder.wordpress.com/2008/11/25/constructing-a-billboard-matrix/\r\n\r\n// \t\t\t\t\t\t\t_matrix.copy( camera.matrixWorldInverse );\r\n// \t\t\t\t\t\t\t_matrix.transpose();\r\n// \t\t\t\t\t\t\tif ( object.rotation2D !== 0 ) _matrix.multiply( _matrix2.makeRotationZ( object.rotation2D ) );\r\n// \t\t\t\t\t\t\tobject.matrixWorld.decompose( _position, _quaternion, _scale );\r\n// \t\t\t\t\t\t\t_matrix.setPosition( _position );\r\n// \t\t\t\t\t\t\t_matrix.scale( _scale );\r\n// \t\t\t\t\t\t\t_matrix.elements[ 3 ] = 0;\r\n// \t\t\t\t\t\t\t_matrix.elements[ 7 ] = 0;\r\n// \t\t\t\t\t\t\t_matrix.elements[ 11 ] = 0;\r\n// \t\t\t\t\t\t\t_matrix.elements[ 15 ] = 1;\r\n// \t\t\t\t\t\t\tstyle = getObjectCSSMatrix( _matrix );\r\n\r\n// \t\t\t\t\t\t} else {\r\n\r\n// \t\t\t\t\t\t\tstyle = getObjectCSSMatrix( object.matrixWorld );\r\n\r\n// \t\t\t\t\t\t}\r\n\r\n// \t\t\t\t\t\tconst element = object.element;\r\n// \t\t\t\t\t\tconst cachedObject = cache.objects.get( object );\r\n// \t\t\t\t\t\tif ( cachedObject === undefined || cachedObject.style !== style ) {\r\n\r\n// \t\t\t\t\t\t\telement.style.transform = style;\r\n// \t\t\t\t\t\t\tconst objectData = {\r\n// \t\t\t\t\t\t\t\tstyle: style\r\n// \t\t\t\t\t\t\t};\r\n// \t\t\t\t\t\t\tcache.objects.set( object, objectData );\r\n\r\n// \t\t\t\t\t\t}\r\n\r\n// \t\t\t\t\t\tif ( element.parentNode !== cameraElement ) {\r\n\r\n// \t\t\t\t\t\t\tcameraElement.appendChild( element );\r\n\r\n// \t\t\t\t\t\t}\r\n\r\n// \t\t\t\t\t\tobject.onAfterRender( _this, scene, camera );\r\n\r\n// \t\t\t\t\t}\r\n\r\n// \t\t\t\t}\r\n\r\n// \t\t\t\tfor ( let i = 0, l = object.children.length; i < l; i ++ ) {\r\n\r\n// \t\t\t\t\trenderObject( object.children[ i ], scene, camera, cameraCSSMatrix );\r\n\r\n// \t\t\t\t}\r\n\r\n// \t\t\t}\r\n\r\n// \t\t}\r\n\r\n// \t}\r\n// \t\t\t// @ts-ignore\r\n// \tTHREE.CSS3DObject = CSS3DObject;\r\n// \t\t\t\t// @ts-ignore\r\n// \tTHREE.CSS3DRenderer = CSS3DRenderer;\r\n// \t\t\t\t// @ts-ignore\r\n// \tTHREE.CSS3DSprite = CSS3DSprite;\r\n\r\n// } )();\r\n"],"names":["Solution","RendererThree","constructor","super","pointLight","THREE","document","createElement","update","scene"],"sourceRoot":""}