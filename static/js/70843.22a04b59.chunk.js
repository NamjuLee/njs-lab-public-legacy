"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[70843],{70843:(t,s,i)=>{i.r(s),i.d(s,{Renderer:()=>n,Solution:()=>o});var e=i(65812),h=i(55913);class o{constructor(t){this.divHost=void 0,this.renderer=void 0,this.divHost=document.getElementById(t);const s=document.createElement("div");s.style.marginTop="80px",s.style.marginLeft="auto",s.style.marginRight="auto",s.style.backgroundColor="#555",s.style.width="600px",s.style.height="350px",this.divHost.appendChild(s),this.renderer=new n(s),this.renderer.canvas.style.position="unset"}destroy(){for(this.renderer.stopTrain(),this.renderer.destroy();this.divHost.lastElementChild;)this.divHost.removeChild(this.divHost.lastElementChild)}}class n extends h.bb{constructor(t){super(t),this.tfModel=void 0,this.accList=[],this.lossList=[],this.divText=void 0,this.canvas.style.position="unset",this.tfModel=new l,this.divText=document.createElement("div"),this.divHost.appendChild(this.divText),this.divText.textContent="title",this.start()}render(t){this.accList=[],this.lossList=[];this.canvas.width;let s=Number.MIN_VALUE;this.tfModel.hist.length>0&&(this.divText.textContent="acc: ".concat(parseFloat(this.tfModel.hist[this.tfModel.hist.length-1].acc).toFixed(3),", loss: ").concat(parseFloat(this.tfModel.hist[this.tfModel.hist.length-1].loss).toFixed(3)));for(let i=0;i<this.tfModel.hist.length;++i){let t=this.tfModel.hist[i].acc,e=this.tfModel.hist[i].loss;s<t&&(s=t),s<e&&(s=e),this.accList.push(t),this.lossList.push(e)}if(this.accList.length>1){for(let i=0;i<this.accList.length;++i){let e=this.accList[i],o=(0,h.a2)(i,0,this.accList.length,0,this.canvas.width),n=(0,h.a2)(e,s,0,0,this.canvas.height);0===i?(t.beginPath(),t.moveTo(o,n)):t.lineTo(o,n)}t.strokeStyle="#0f0",t.stroke()}if(this.lossList.length>1){for(let i=0;i<this.lossList.length;++i){let e=this.lossList[i],o=(0,h.a2)(i,0,this.lossList.length,0,this.canvas.width),n=(0,h.a2)(e,0,s,this.canvas.height,0);0===i||(t.beginPath(),t.arc(o,n,1,0,6.28),t.closePath(),t.strokeStyle="#f00",t.stroke())}t.strokeStyle="#f00",t.stroke()}}stopTrain(){this.tfModel.isTraining=!1}}class l{constructor(){this.model=void 0,this.inputsTensor=void 0,this.labelsTensor=void 0,this.hist=[],this.isTraining=!1,this.iteration=0,this.trainLoop=async()=>{this.isTraining&&(this.iteration++,this.train().then((t=>{this.hist.push(t.history),setTimeout((()=>this.trainLoop()),1)})))},this.train=async()=>await this.model.fit(this.inputsTensor,this.labelsTensor,{batchSize:100,epochs:1,shuffle:!0,validationData:[this.inputsTensor,this.labelsTensor]});const t=a();e.util.shuffle(t);const s=[];for(let e=0;e<t.length;++e){let i=[];for(let s=0;s<t[e].length-1;++s)i.push(t[e][s]);s.push(i)}const i=[];for(let e=0;e<t.length;++e)0===t[e][t[e].length-1]?i.push([1,0,0]):1===t[e][t[e].length-1]?i.push([0,1,0]):2===t[e][t[e].length-1]&&i.push([0,0,1]);this.inputsTensor=e.tensor2d(s),this.labelsTensor=e.tensor2d(i),this.inputsTensor.print(),this.labelsTensor.print(),this.model=e.sequential();const h=e.layers.dense({inputShape:[this.inputsTensor.shape[1]],units:10,activation:"sigmoid"}),o=e.layers.dense({units:3,activation:"softmax"});this.model.add(h),this.model.add(o),this.model.compile({optimizer:e.train.adam(),loss:e.losses.softmaxCrossEntropy,metrics:["accuracy"]}),this.model.summary(),this.isTraining=!0,this.trainLoop()}}const a=()=>[[5.1,3.5,1.4,.2,0],[4.9,3,1.4,.2,0],[4.7,3.2,1.3,.2,0],[4.6,3.1,1.5,.2,0],[5,3.6,1.4,.2,0],[5.4,3.9,1.7,.4,0],[4.6,3.4,1.4,.3,0],[5,3.4,1.5,.2,0],[4.4,2.9,1.4,.2,0],[4.9,3.1,1.5,.1,0],[5.4,3.7,1.5,.2,0],[4.8,3.4,1.6,.2,0],[4.8,3,1.4,.1,0],[4.3,3,1.1,.1,0],[5.8,4,1.2,.2,0],[5.7,4.4,1.5,.4,0],[5.4,3.9,1.3,.4,0],[5.1,3.5,1.4,.3,0],[5.7,3.8,1.7,.3,0],[5.1,3.8,1.5,.3,0],[5.4,3.4,1.7,.2,0],[5.1,3.7,1.5,.4,0],[4.6,3.6,1,.2,0],[5.1,3.3,1.7,.5,0],[4.8,3.4,1.9,.2,0],[5,3,1.6,.2,0],[5,3.4,1.6,.4,0],[5.2,3.5,1.5,.2,0],[5.2,3.4,1.4,.2,0],[4.7,3.2,1.6,.2,0],[4.8,3.1,1.6,.2,0],[5.4,3.4,1.5,.4,0],[5.2,4.1,1.5,.1,0],[5.5,4.2,1.4,.2,0],[4.9,3.1,1.5,.1,0],[5,3.2,1.2,.2,0],[5.5,3.5,1.3,.2,0],[4.9,3.1,1.5,.1,0],[4.4,3,1.3,.2,0],[5.1,3.4,1.5,.2,0],[5,3.5,1.3,.3,0],[4.5,2.3,1.3,.3,0],[4.4,3.2,1.3,.2,0],[5,3.5,1.6,.6,0],[5.1,3.8,1.9,.4,0],[4.8,3,1.4,.3,0],[5.1,3.8,1.6,.2,0],[4.6,3.2,1.4,.2,0],[5.3,3.7,1.5,.2,0],[5,3.3,1.4,.2,0],[7,3.2,4.7,1.4,1],[6.4,3.2,4.5,1.5,1],[6.9,3.1,4.9,1.5,1],[5.5,2.3,4,1.3,1],[6.5,2.8,4.6,1.5,1],[5.7,2.8,4.5,1.3,1],[6.3,3.3,4.7,1.6,1],[4.9,2.4,3.3,1,1],[6.6,2.9,4.6,1.3,1],[5.2,2.7,3.9,1.4,1],[5,2,3.5,1,1],[5.9,3,4.2,1.5,1],[6,2.2,4,1,1],[6.1,2.9,4.7,1.4,1],[5.6,2.9,3.6,1.3,1],[6.7,3.1,4.4,1.4,1],[5.6,3,4.5,1.5,1],[5.8,2.7,4.1,1,1],[6.2,2.2,4.5,1.5,1],[5.6,2.5,3.9,1.1,1],[5.9,3.2,4.8,1.8,1],[6.1,2.8,4,1.3,1],[6.3,2.5,4.9,1.5,1],[6.1,2.8,4.7,1.2,1],[6.4,2.9,4.3,1.3,1],[6.6,3,4.4,1.4,1],[6.8,2.8,4.8,1.4,1],[6.7,3,5,1.7,1],[6,2.9,4.5,1.5,1],[5.7,2.6,3.5,1,1],[5.5,2.4,3.8,1.1,1],[5.5,2.4,3.7,1,1],[5.8,2.7,3.9,1.2,1],[6,2.7,5.1,1.6,1],[5.4,3,4.5,1.5,1],[6,3.4,4.5,1.6,1],[6.7,3.1,4.7,1.5,1],[6.3,2.3,4.4,1.3,1],[5.6,3,4.1,1.3,1],[5.5,2.5,4,1.3,1],[5.5,2.6,4.4,1.2,1],[6.1,3,4.6,1.4,1],[5.8,2.6,4,1.2,1],[5,2.3,3.3,1,1],[5.6,2.7,4.2,1.3,1],[5.7,3,4.2,1.2,1],[5.7,2.9,4.2,1.3,1],[6.2,2.9,4.3,1.3,1],[5.1,2.5,3,1.1,1],[5.7,2.8,4.1,1.3,1],[6.3,3.3,6,2.5,2],[5.8,2.7,5.1,1.9,2],[7.1,3,5.9,2.1,2],[6.3,2.9,5.6,1.8,2],[6.5,3,5.8,2.2,2],[7.6,3,6.6,2.1,2],[4.9,2.5,4.5,1.7,2],[7.3,2.9,6.3,1.8,2],[6.7,2.5,5.8,1.8,2],[7.2,3.6,6.1,2.5,2],[6.5,3.2,5.1,2,2],[6.4,2.7,5.3,1.9,2],[6.8,3,5.5,2.1,2],[5.7,2.5,5,2,2],[5.8,2.8,5.1,2.4,2],[6.4,3.2,5.3,2.3,2],[6.5,3,5.5,1.8,2],[7.7,3.8,6.7,2.2,2],[7.7,2.6,6.9,2.3,2],[6,2.2,5,1.5,2],[6.9,3.2,5.7,2.3,2],[5.6,2.8,4.9,2,2],[7.7,2.8,6.7,2,2],[6.3,2.7,4.9,1.8,2],[6.7,3.3,5.7,2.1,2],[7.2,3.2,6,1.8,2],[6.2,2.8,4.8,1.8,2],[6.1,3,4.9,1.8,2],[6.4,2.8,5.6,2.1,2],[7.2,3,5.8,1.6,2],[7.4,2.8,6.1,1.9,2],[7.9,3.8,6.4,2,2],[6.4,2.8,5.6,2.2,2],[6.3,2.8,5.1,1.5,2],[6.1,2.6,5.6,1.4,2],[7.7,3,6.1,2.3,2],[6.3,3.4,5.6,2.4,2],[6.4,3.1,5.5,1.8,2],[6,3,4.8,1.8,2],[6.9,3.1,5.4,2.1,2],[6.7,3.1,5.6,2.4,2],[6.9,3.1,5.1,2.3,2],[5.8,2.7,5.1,1.9,2],[6.8,3.2,5.9,2.3,2],[6.7,3.3,5.7,2.5,2],[6.7,3,5.2,2.3,2],[6.3,2.5,5,1.9,2],[6.5,3,5.2,2,2],[6.2,3.4,5.4,2.3,2],[5.9,3,5.1,1.8,2]]}}]);
//# sourceMappingURL=70843.22a04b59.chunk.js.map