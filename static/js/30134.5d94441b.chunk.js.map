{"version":3,"file":"static/js/30134.5d94441b.chunk.js","mappings":"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,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,EAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,EAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,EAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,EAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,IAAK,IAAK,IAAK,GAAK,GACvE,CAAC,IAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,GAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,EAAK,EAAK,IAAK,EAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,EAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,EAAK,IAAK,GACvE,CAAC,EAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,EAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,EAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,EAAK,IAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GACvE,CAAC,IAAK,EAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK,IAAK,EAAK,GACvE,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,CAAC,IAAK,IAAK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","sources":["lib/NJSCore/ML/TF/TFUtility.ts","lib/NJSCore/ML/Core/TFDataUtility.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Core/ActiveCommandController.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Core/DefinitionIndeCanvasCore.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/JSLinearRegression01.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/JSLinearRegressionGradientDescent02.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFLinearRegressionGradientDescent01.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFPolynomialRegressionGradientDescent02.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFPolynomialRegressionGradientDescent03Interaction.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFModel01.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFModel02XOR.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFModel03Iris.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFModel03SmartDrawing.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFModel01HorsepowerAndMilesPerGallon.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/TFMnist.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/Definition/Blank.ts","njslab/Lab/AppTFEnv/Implementation/TFProject/index.ts"],"sourcesContent":["import * as tf from '@tensorflow/tfjs';\r\nimport '@tensorflow/tfjs-backend-webgl';\r\n\r\nexport class TFUtility {\r\n\r\n    public static Playground() {\r\n        // this.ExeScalar();\r\n        // this.ExeAdd();\r\n        // this.ExeOperation();\r\n        // this.Tensor01();\r\n        // this.Tensor02();\r\n        // this.Tensor03();\r\n    //     console.log('Playground');\r\n    }\r\n\r\n    public static ExeScalar() {\r\n        const d = tf.scalar(10);\r\n    //     console.log('scalar.....');\r\n    //     console.log(d);\r\n        d.print();\r\n        d.print(true);\r\n\r\n        const d2 = tf.tensor([1, 2, 3]);\r\n        d2.print();\r\n        d2.print(true);\r\n\r\n        const d3 = tf.tensor1d([1, 2, 3]);\r\n        d3.print();\r\n        d3.print(true);\r\n\r\n        const d4 = tf.tensor([[1, 2], [3, 4]]);\r\n        d4.print();\r\n        //    d4.print(true);\r\n\r\n        const d5 = tf.tensor2d([[1, 2], [3, 4]]);\r\n        d5.print();\r\n        //    d5.print(true);\r\n        //    d4.add(d5).print();\r\n        const d6 = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\r\n        d6.print();\r\n\r\n        const length = 30;\r\n        const data = new Float32Array(length);\r\n        for (let i = 0; i < length; ++i) { data[i] = i; }\r\n        const d7 = tf.tensor2d(data, [10, 3]);\r\n        d7.print();\r\n\r\n        const length2 = 18;\r\n        const data2 = new Float32Array(length2);\r\n        for (let i = 0; i < length2; ++i) { data2[i] = i; }\r\n        const d8 = tf.tensor3d(data2, [2, 3, 3]);\r\n        d8.print();\r\n    }\r\n    public static ExeAdd() {\r\n        const d1 = tf.scalar(5);\r\n        const d2 = tf.tensor([1, 2, 3]).mul(d1);\r\n        d2.print();\r\n\r\n        const d3 = tf.tensor([1, 2, 3, 4, 5, 6], [2, 3]);\r\n        d3.print();\r\n        d3.mul(d1).print();\r\n        d3.add(d1).print();\r\n        d3.div(3).print();\r\n\r\n        // ..\r\n        const length = 30;\r\n        const data = new Float32Array(length);\r\n        for (let i = 0; i < length; ++i) { data[i] = i; }\r\n        const d4 = tf.tensor2d(data, [10, 3]);\r\n        d4.print();\r\n\r\n        const d5 = d4;\r\n        d5.print();\r\n\r\n        const d6 = d5.add(d4);\r\n        d6.print();\r\n\r\n        const d7 = d5.sub(d1);\r\n        d7.print();\r\n\r\n    }\r\n    public static ExeOperation() {\r\n\r\n        tf.tidy(() => {\r\n            const d1 = tf.tensor([1, 2, 3, 4, 5, 6], [2, 3], 'float32');\r\n            d1.print();\r\n\r\n            const d2 = tf.tensor([1, 2, 3, 4, 5, 6], [3, 2], 'float32');\r\n            d2.print();\r\n\r\n            d1.matMul(d2).print();\r\n\r\n            const d3 = d2.matMul(d1);\r\n            d3.print();\r\n\r\n            const d4 = tf.scalar(0.5);\r\n            d3.mul(d4).print();\r\n\r\n            const mathScore = tf.tensor1d([80, 90, 100, 80]);\r\n            const historyScore = tf.tensor1d([70, 70, 70, 70]);\r\n            mathScore.add(historyScore).div(2).print(); // print mean  // tensor num 10\r\n            mathScore.add(historyScore).div(2).abs().print(); // print mean  // tensor num 11\r\n\r\n        });\r\n        //\r\n    //     console.log(tf.memory().numTensors);\r\n\r\n    }\r\n    public static Tensor01() {\r\n        let data = tf.tensor([0, 1, 2, 3], [2, 2]);\r\n        data.print();\r\n        // [[0, 1],\r\n        // [2, 3]]\r\n\r\n        data = tf.tensor([0, 1, 2, 3, 4, 5, 6, 7]);\r\n        data.print(); // [0, 1, 2, 3, 4, 5, 6, 7]\r\n\r\n        data = tf.tensor([0, 1, 2, 3, 4, 5, 6, 7], [2, 2, 2]);\r\n        data.print();\r\n        //     [[[0, 1],\r\n        //     [2, 3]],\r\n        //    [[4, 5],\r\n        //     [6, 7]]]\r\n    }\r\n    public static Tensor02() {\r\n        let data: number[] = [];\r\n        for (let i = 0; i < 15; ++i) {\r\n            data.push(Math.random());\r\n        }\r\n        let shape = [3, 5];\r\n        let dataTensor = tf.tensor(data, shape);\r\n        dataTensor.print();\r\n\r\n        data = [];\r\n        for (let i = 0; i < 30; ++i) {\r\n            data.push(Math.random() * 100);\r\n        }\r\n        shape = [2, 3, 5];\r\n        dataTensor = tf.tensor(data, shape, 'int32');\r\n        dataTensor.print();\r\n\r\n        dataTensor = tf.tensor3d(data, [2, 3, 5], 'int32');\r\n        dataTensor.print();\r\n    }\r\n    public static Tensor03() {\r\n        let data: number[] = [];\r\n        for (let i = 0; i < 150000; ++i) {\r\n            data.push(Math.random());\r\n        }\r\n        let shape = [300, 500];\r\n        let dataTensor = tf.tensor(data, shape);\r\n        dataTensor.print();\r\n    //     console.log(tf.memory().numTensors);\r\n    }\r\n    constructor() {\r\n        //\r\n    }\r\n}\r\n\r\n","import * as tf from '@tensorflow/tfjs';\r\n\r\nexport class TFDataUtility {\r\n    static async getData() {\r\n        const carsDataReq = await fetch('https://storage.googleapis.com/tfjs-tutorials/carsData.json');\r\n        const carsData = await carsDataReq.json();\r\n        const cleaned = carsData.map((car: any) => ({\r\n            mpg: car.Miles_per_Gallon,\r\n            horsepower: car.Horsepower,\r\n        }))\r\n            .filter((car: any) => (car.mpg != null && car.horsepower != null));\r\n        return cleaned;\r\n    }\r\n    public static Get_XY_OneHot_TensorFromCSV(csv: number[][]) {\r\n        return tf.tidy(() => {\r\n            const dataByClass: number[][] = [];\r\n            const targetsByClass: number[] = [];\r\n            let targetLength = -1;\r\n            for (const example of csv) {\r\n                const data = example.slice(0, example.length - 1);\r\n                const target = example[example.length - 1];\r\n                dataByClass.push(data);\r\n                targetsByClass.push(target);\r\n                if (targetLength < target) { targetLength = target; }\r\n            }\r\n            // console.log(targetLength);\r\n            // console.log(targetsByClass);\r\n            const xs = tf.tensor2d(dataByClass, [dataByClass.length, dataByClass[0].length]);\r\n            const ys = tf.oneHot(tf.tensor1d(targetsByClass).toInt(), targetLength + 1);\r\n            return [xs, ys];\r\n        });\r\n    }\r\n    public static Get_XY_TensorFromCSV(csv: number[][]) {\r\n        return tf.tidy(() => {\r\n            const dataByClass: number[][] = [];\r\n            const targetsByClass: number[] = [];\r\n            let targetLength = -1;\r\n            for (const example of csv) {\r\n                const data = example.slice(0, example.length - 1);\r\n                const target = example[example.length - 1];\r\n                dataByClass.push(data);\r\n                targetsByClass.push(target);\r\n                if (targetLength < target) { targetLength = target; }\r\n            }\r\n            const xs = tf.tensor2d(dataByClass, [dataByClass.length, dataByClass[0].length]);\r\n            const ys = tf.tensor1d(targetsByClass);\r\n            return [xs, ys];\r\n        });\r\n    }\r\n\r\n    // tslint:disable-next-line:no-any\r\n    public static SplitTensorFromXY(xs: any, ys: any, testSplit: number = 0.5) {\r\n        const numTestExamples = Math.round(xs.shape[0] * testSplit);\r\n        const numTrainExamples = xs.shape[0] - numTestExamples;\r\n        const xTrain = xs.slice([0, 0], [numTrainExamples, xs.shape[1]]);\r\n        const xTest = xs.slice([numTrainExamples, 0], [numTestExamples, xs.shape[1]]);\r\n        const yTrain = ys.slice([0, 0], [numTrainExamples, ys.shape[1]]);\r\n        const yTest = ys.slice([numTrainExamples, 0], [numTestExamples, ys.shape[1]]);\r\n        return [xTrain, yTrain, xTest, yTest];\r\n\r\n        // return tf.tidy(() => {\r\n        //     const dataByClass = [];\r\n        //     const targetsByClass = [];\r\n        //     // for (let i = 0; i < IRIS_CLASSES.length; ++i) {\r\n        //     //     dataByClass.push([]);\r\n        //     //     targetsByClass.push([]);\r\n        //     // }\r\n        //     // for (const example of IRIS_DATA) {\r\n        //     //     const target = example[example.length - 1];\r\n        //     //     const data = example.slice(0, example.length - 1);\r\n        //     //     dataByClass[target].push(data);\r\n        //     //     targetsByClass[target].push(target);\r\n        //     // }\r\n        //     // console.log();\r\n\r\n        //     const xTrains = [];\r\n        //     const yTrains = [];\r\n        //     const xTests = [];\r\n        //     const yTests = [];\r\n        //     for (let i = 0; i < IRIS_CLASSES.length; ++i) {\r\n        //         const [xTrain, yTrain, xTest, yTest] = DataUtility.ConvertToTensors(dataByClass[i], targetsByClass[i], testSplit);\r\n        //         xTrains.push(xTrain);\r\n        //         yTrains.push(yTrain);\r\n        //         xTests.push(xTest);\r\n        //         yTests.push(yTest);\r\n        //     }\r\n\r\n        //     const concatAxis = 0;\r\n        //     return [\r\n        //         tf.concat(xTrains, concatAxis), tf.concat(yTrains, concatAxis),\r\n        //         tf.concat(xTests, concatAxis), tf.concat(yTests, concatAxis)\r\n        //     ];\r\n        // });\r\n\r\n    }\r\n    public static ConvertToTensors(data: number[][], targets: number[], testSplit: number) {\r\n    //     console.log('++');\r\n    //     console.log(data);\r\n    //     console.log(targets);\r\n    //     console.log(testSplit);\r\n\r\n        const numExamples = data.length;\r\n        if (numExamples !== targets.length) {\r\n            throw new Error('data and split have different numbers of examples');\r\n        }\r\n\r\n        const numTestExamples = Math.round(numExamples * testSplit);\r\n        const numTrainExamples = numExamples - numTestExamples;\r\n\r\n        const xDims = data[0].length;\r\n\r\n        // Create a 2D `tf.Tensor` to hold the feature data.\r\n        const xs = tf.tensor2d(data, [numExamples, xDims]);\r\n\r\n        // Create a 1D `tf.Tensor` to hold the labels, and convert the number label\r\n        // from the set {0, 1, 2} into one-hot encoding (.e.g., 0 --> [1, 0, 0]).\r\n        const ys = tf.oneHot(tf.tensor1d(targets).toInt(), 4); // IRIS_NUM_CLASSES\r\n\r\n        // Split the data into training and test sets, using `slice`.\r\n        const xTrain = xs.slice([0, 0], [numTrainExamples, xDims]);\r\n        const xTest = xs.slice([numTrainExamples, 0], [numTestExamples, xDims]);\r\n        const yTrain = ys.slice([0, 0], [numTrainExamples, 4]); // IRIS_NUM_CLASSES\r\n        const yTest = ys.slice([0, 0], [numTestExamples, 4]); // IRIS_NUM_CLASSES\r\n        return [xTrain, yTrain, xTest, yTest];\r\n    }\r\n\r\n    public static GetRandomNormal(num: number, mean: number = 0.0, stdDev: number = 0.55) {\r\n        return tf.randomNormal([num], mean, stdDev);\r\n    }\r\n    public static GetRandomNormalTensors(num: number = 1000) {\r\n\r\n        // let t0 = DataUtility.GetRandomNormal(num, 0.0, 0.55);\r\n        // let t1 = DataUtility.GetRandomNormal(num, 0.0, 0.03);\r\n        // t0.print();\r\n        // t1.print();\r\n\r\n    }\r\n\r\n    public static Shuffle(array: number[][]) {\r\n        var currentIndex = array.length, temp, randomIndex;\r\n\r\n        // While there remain elements to shuffle...\r\n        while (0 !== currentIndex) {\r\n            // Pick a remaining element...\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex -= 1;\r\n            // And swap it with the current element.\r\n            temp = array[currentIndex];\r\n            array[currentIndex] = array[randomIndex];\r\n            array[randomIndex] = temp;\r\n        }\r\n\r\n        return array;\r\n    }\r\n    // https://beta.observablehq.com/@tvirot/machine-learning-in-javascript-with-tensorflow-js#inputData\r\n    public static GetSyntheticDataTensor(totalNumData: number = 200, aCo: number = 0, bCo: number = 0, cCo: number = 0, dCo: number = 0, std: number = 0.2, needYNormal: boolean = false) {\r\n\r\n        return tf.tidy(() => {\r\n            const NUM_POINTS = totalNumData;\r\n            // const [a, b, c, d] = coeff.map(i => tf.scalar(i)); // a = tf.scalar(coeff[0]), and so on\r\n            const a = tf.scalar(aCo);\r\n            const b = tf.scalar(bCo);\r\n            const c = tf.scalar(cCo);\r\n            const d = tf.scalar(dCo);\r\n\r\n            const x = tf.randomUniform([NUM_POINTS], -1, 1);\r\n            const y = a.mul(x.pow(tf.scalar(3))).add(b.mul(x.square())).add(c.mul(x)).add(d).add(tf.randomNormal([NUM_POINTS], 0, std));\r\n\r\n            if (needYNormal) {\r\n                const ymin = y.min();\r\n                const ymax = y.max();\r\n                const theRange = ymax.sub(ymin);\r\n                const yNomalized = y.sub(ymin).div(theRange);\r\n                return { x, yNomalized };\r\n            }\r\n\r\n            return [x, y];\r\n        });\r\n    }\r\n    public static GetSyntheticData(totalNumData: number = 200, aCo: number = -0.2, bCo: number = -0.66, cCo: number = -0.1, dCo: number = 2.8, std: number = 0.2, needYNormal: boolean = false) {\r\n        return tf.tidy(() => {\r\n            const result = this.GetSyntheticDataTensor(totalNumData, aCo, bCo, cCo, dCo, std, needYNormal);\r\n            const xx = result[0].dataSync();\r\n            const yy = result[1].dataSync();\r\n            return { xx, yy };\r\n        });\r\n    }\r\n    public static GetIrisData() {\r\n        return [\r\n            [5.1, 3.5, 1.4, 0.2, 0], [4.9, 3.0, 1.4, 0.2, 0], [4.7, 3.2, 1.3, 0.2, 0],\r\n            [4.6, 3.1, 1.5, 0.2, 0], [5.0, 3.6, 1.4, 0.2, 0], [5.4, 3.9, 1.7, 0.4, 0],\r\n            [4.6, 3.4, 1.4, 0.3, 0], [5.0, 3.4, 1.5, 0.2, 0], [4.4, 2.9, 1.4, 0.2, 0],\r\n            [4.9, 3.1, 1.5, 0.1, 0], [5.4, 3.7, 1.5, 0.2, 0], [4.8, 3.4, 1.6, 0.2, 0],\r\n            [4.8, 3.0, 1.4, 0.1, 0], [4.3, 3.0, 1.1, 0.1, 0], [5.8, 4.0, 1.2, 0.2, 0],\r\n            [5.7, 4.4, 1.5, 0.4, 0], [5.4, 3.9, 1.3, 0.4, 0], [5.1, 3.5, 1.4, 0.3, 0],\r\n            [5.7, 3.8, 1.7, 0.3, 0], [5.1, 3.8, 1.5, 0.3, 0], [5.4, 3.4, 1.7, 0.2, 0],\r\n            [5.1, 3.7, 1.5, 0.4, 0], [4.6, 3.6, 1.0, 0.2, 0], [5.1, 3.3, 1.7, 0.5, 0],\r\n            [4.8, 3.4, 1.9, 0.2, 0], [5.0, 3.0, 1.6, 0.2, 0], [5.0, 3.4, 1.6, 0.4, 0],\r\n            [5.2, 3.5, 1.5, 0.2, 0], [5.2, 3.4, 1.4, 0.2, 0], [4.7, 3.2, 1.6, 0.2, 0],\r\n            [4.8, 3.1, 1.6, 0.2, 0], [5.4, 3.4, 1.5, 0.4, 0], [5.2, 4.1, 1.5, 0.1, 0],\r\n            [5.5, 4.2, 1.4, 0.2, 0], [4.9, 3.1, 1.5, 0.1, 0], [5.0, 3.2, 1.2, 0.2, 0],\r\n            [5.5, 3.5, 1.3, 0.2, 0], [4.9, 3.1, 1.5, 0.1, 0], [4.4, 3.0, 1.3, 0.2, 0],\r\n            [5.1, 3.4, 1.5, 0.2, 0], [5.0, 3.5, 1.3, 0.3, 0], [4.5, 2.3, 1.3, 0.3, 0],\r\n            [4.4, 3.2, 1.3, 0.2, 0], [5.0, 3.5, 1.6, 0.6, 0], [5.1, 3.8, 1.9, 0.4, 0],\r\n            [4.8, 3.0, 1.4, 0.3, 0], [5.1, 3.8, 1.6, 0.2, 0], [4.6, 3.2, 1.4, 0.2, 0],\r\n            [5.3, 3.7, 1.5, 0.2, 0], [5.0, 3.3, 1.4, 0.2, 0], [7.0, 3.2, 4.7, 1.4, 1],\r\n            [6.4, 3.2, 4.5, 1.5, 1], [6.9, 3.1, 4.9, 1.5, 1], [5.5, 2.3, 4.0, 1.3, 1],\r\n            [6.5, 2.8, 4.6, 1.5, 1], [5.7, 2.8, 4.5, 1.3, 1], [6.3, 3.3, 4.7, 1.6, 1],\r\n            [4.9, 2.4, 3.3, 1.0, 1], [6.6, 2.9, 4.6, 1.3, 1], [5.2, 2.7, 3.9, 1.4, 1],\r\n            [5.0, 2.0, 3.5, 1.0, 1], [5.9, 3.0, 4.2, 1.5, 1], [6.0, 2.2, 4.0, 1.0, 1],\r\n            [6.1, 2.9, 4.7, 1.4, 1], [5.6, 2.9, 3.6, 1.3, 1], [6.7, 3.1, 4.4, 1.4, 1],\r\n            [5.6, 3.0, 4.5, 1.5, 1], [5.8, 2.7, 4.1, 1.0, 1], [6.2, 2.2, 4.5, 1.5, 1],\r\n            [5.6, 2.5, 3.9, 1.1, 1], [5.9, 3.2, 4.8, 1.8, 1], [6.1, 2.8, 4.0, 1.3, 1],\r\n            [6.3, 2.5, 4.9, 1.5, 1], [6.1, 2.8, 4.7, 1.2, 1], [6.4, 2.9, 4.3, 1.3, 1],\r\n            [6.6, 3.0, 4.4, 1.4, 1], [6.8, 2.8, 4.8, 1.4, 1], [6.7, 3.0, 5.0, 1.7, 1],\r\n            [6.0, 2.9, 4.5, 1.5, 1], [5.7, 2.6, 3.5, 1.0, 1], [5.5, 2.4, 3.8, 1.1, 1],\r\n            [5.5, 2.4, 3.7, 1.0, 1], [5.8, 2.7, 3.9, 1.2, 1], [6.0, 2.7, 5.1, 1.6, 1],\r\n            [5.4, 3.0, 4.5, 1.5, 1], [6.0, 3.4, 4.5, 1.6, 1], [6.7, 3.1, 4.7, 1.5, 1],\r\n            [6.3, 2.3, 4.4, 1.3, 1], [5.6, 3.0, 4.1, 1.3, 1], [5.5, 2.5, 4.0, 1.3, 1],\r\n            [5.5, 2.6, 4.4, 1.2, 1], [6.1, 3.0, 4.6, 1.4, 1], [5.8, 2.6, 4.0, 1.2, 1],\r\n            [5.0, 2.3, 3.3, 1.0, 1], [5.6, 2.7, 4.2, 1.3, 1], [5.7, 3.0, 4.2, 1.2, 1],\r\n            [5.7, 2.9, 4.2, 1.3, 1], [6.2, 2.9, 4.3, 1.3, 1], [5.1, 2.5, 3.0, 1.1, 1],\r\n            [5.7, 2.8, 4.1, 1.3, 1], [6.3, 3.3, 6.0, 2.5, 2], [5.8, 2.7, 5.1, 1.9, 2],\r\n            [7.1, 3.0, 5.9, 2.1, 2], [6.3, 2.9, 5.6, 1.8, 2], [6.5, 3.0, 5.8, 2.2, 2],\r\n            [7.6, 3.0, 6.6, 2.1, 2], [4.9, 2.5, 4.5, 1.7, 2], [7.3, 2.9, 6.3, 1.8, 2],\r\n            [6.7, 2.5, 5.8, 1.8, 2], [7.2, 3.6, 6.1, 2.5, 2], [6.5, 3.2, 5.1, 2.0, 2],\r\n            [6.4, 2.7, 5.3, 1.9, 2], [6.8, 3.0, 5.5, 2.1, 2], [5.7, 2.5, 5.0, 2.0, 2],\r\n            [5.8, 2.8, 5.1, 2.4, 2], [6.4, 3.2, 5.3, 2.3, 2], [6.5, 3.0, 5.5, 1.8, 2],\r\n            [7.7, 3.8, 6.7, 2.2, 2], [7.7, 2.6, 6.9, 2.3, 2], [6.0, 2.2, 5.0, 1.5, 2],\r\n            [6.9, 3.2, 5.7, 2.3, 2], [5.6, 2.8, 4.9, 2.0, 2], [7.7, 2.8, 6.7, 2.0, 2],\r\n            [6.3, 2.7, 4.9, 1.8, 2], [6.7, 3.3, 5.7, 2.1, 2], [7.2, 3.2, 6.0, 1.8, 2],\r\n            [6.2, 2.8, 4.8, 1.8, 2], [6.1, 3.0, 4.9, 1.8, 2], [6.4, 2.8, 5.6, 2.1, 2],\r\n            [7.2, 3.0, 5.8, 1.6, 2], [7.4, 2.8, 6.1, 1.9, 2], [7.9, 3.8, 6.4, 2.0, 2],\r\n            [6.4, 2.8, 5.6, 2.2, 2], [6.3, 2.8, 5.1, 1.5, 2], [6.1, 2.6, 5.6, 1.4, 2],\r\n            [7.7, 3.0, 6.1, 2.3, 2], [6.3, 3.4, 5.6, 2.4, 2], [6.4, 3.1, 5.5, 1.8, 2],\r\n            [6.0, 3.0, 4.8, 1.8, 2], [6.9, 3.1, 5.4, 2.1, 2], [6.7, 3.1, 5.6, 2.4, 2],\r\n            [6.9, 3.1, 5.1, 2.3, 2], [5.8, 2.7, 5.1, 1.9, 2], [6.8, 3.2, 5.9, 2.3, 2],\r\n            [6.7, 3.3, 5.7, 2.5, 2], [6.7, 3.0, 5.2, 2.3, 2], [6.3, 2.5, 5.0, 1.9, 2],\r\n            [6.5, 3.0, 5.2, 2.0, 2], [6.2, 3.4, 5.4, 2.3, 2], [5.9, 3.0, 5.1, 1.8, 2],\r\n        ];\r\n    }\r\n    constructor() {\r\n        /* */\r\n    }\r\n}","import { CLICK_TYPE } from '../../../lib';\r\n\r\nimport { MouseEventData } from '../../../Model/AppCoreWrapper/IOWrapper/EventInteraction/MouseInteraction';\r\n\r\nimport { TFProject } from '..';\r\n\r\nexport class ActiveCommandController {\r\n    scene: TFProject;\r\n\r\n    constructor(scene: TFProject) {\r\n        this.scene = scene;\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n\r\n        if (e.CLICK_TYPE === CLICK_TYPE.LEFT) {\r\n            this.MouseLeftClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MIDDLE) {\r\n            this.MouseMiddleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN_RIGHT) {\r\n            this.MouseRightClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOUBLE) {\r\n            this.MouseDoubleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MOVE) {\r\n            this.MouseMovePre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DRAG) {\r\n            this.MouseDragPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN) {\r\n            this.MouseDownPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.WHEEL) {\r\n            this.MouseWheelPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.UP) { this.MouseUpPre(e); return; }\r\n    }\r\n\r\n    // .......................................................\r\n    MouseDown(e: MouseEventData) {/* */ }\r\n    MouseDownPre(e: MouseEventData) {\r\n        this.scene.MouseDown(e.x, e.y);\r\n        this.MouseDown(e);\r\n    }\r\n    MouseLeftClick(e: MouseEventData) {/* */ }\r\n    MouseLeftClickPre(e: MouseEventData) {\r\n        this.scene.MouseLeftClick(e.x, e.y);\r\n        this.MouseLeftClick(e);\r\n    }\r\n    MouseMiddleClick(e: MouseEventData) {/* */ }\r\n    MouseMiddleClickPre(e: MouseEventData) {\r\n        this.scene.MouseMiddleClick(e.x, e.y);\r\n        this.MouseMiddleClick(e);\r\n    }\r\n    MouseRightClick(e: MouseEventData) { /* */ }\r\n    MouseRightClickPre(e: MouseEventData) {\r\n        this.scene.MouseRightClick(e.x, e.y);\r\n        this.MouseRightClick(e);\r\n    }\r\n    MouseUp(e: MouseEventData) { /* */ }\r\n    MouseUpPre(e: MouseEventData) {\r\n        this.scene.MouseUp(e.x, e.y);\r\n        this.MouseUp(e);\r\n\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {/* */ }\r\n    MouseDoubleClickPre(e: MouseEventData) {\r\n        this.scene.MouseDoubleClick(e.x, e.y);\r\n        this.MouseDoubleClick(e);\r\n    }\r\n    MouseMove(e: MouseEventData) {/* */ }\r\n    MouseMovePre(e: MouseEventData) {\r\n        this.scene.MouseMove(e.x, e.y);\r\n        this.MouseMove(e);\r\n    }\r\n    MouseDrag(e: MouseEventData) {/* */ }\r\n    MouseDragPre(e: MouseEventData) {\r\n        this.scene.MouseDrag(e.x, e.y);\r\n        this.MouseDrag(e);\r\n    }\r\n    MouseWheel(e: MouseEventData) {/* */ }\r\n    MouseWheelPre(e: MouseEventData) {\r\n        this.scene.MouseWheel(e.x, e.y, e.wheel);\r\n        // console.log(\"drag\");\r\n        this.MouseWheel(e);\r\n    }\r\n}","import { IndependentPanelCanvas } from '../../../../../../lib/NJSCore/App/NUI/WrapperIndependentPanel/Panel/Common/IndependentPanelCanvas';\r\n\r\nimport { TFProject } from '..';\r\nexport class DefinitionIndeCanvasCore {\r\n    scene: TFProject;\r\n    indeCanvas: IndependentPanelCanvas;\r\n    mOffX = -12;\r\n    mOffY = -12;\r\n    constructor(scene: TFProject, width: number = 650, height: number = 350) {\r\n        this.scene = scene;\r\n        this.scene.definitions.push(this);\r\n        this.InitIndeCanvas(width, height);\r\n    }\r\n    InitIndeCanvas(width: number = 650, height: number = 350) {\r\n        if (this.scene.implementation.app.needUI) {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.nUIWrapper.nui.independentPanelWrapper, 50, 50, width, height, true);\r\n        } else {\r\n            this.indeCanvas = new IndependentPanelCanvas(this.scene.implementation.app.viewController.nUIWrapper.nui.independentPanelWrapper, 1, -25, width, height, true);\r\n        }\r\n        this.indeCanvas.title = 'TF Env';\r\n        this.indeCanvas.btnHam.isHidden = true;\r\n        this.indeCanvas.btnMini.isHidden = true;\r\n        this.indeCanvas.RenderIndependentCanvas = (ctx: CanvasRenderingContext2D) => (this.RenderIndependentCanvas(ctx));\r\n    }\r\n    get width() {\r\n        return this.indeCanvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.indeCanvas.canvas.height;\r\n    }\r\n    Init(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        //\r\n    }\r\n    MouseMove(x: number, y: number) { /* */ }\r\n    MouseMovePre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMove(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDown(x: number, y: number) { /* */ }\r\n    MouseDownPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDown(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseUp(x: number, y: number) { /* */ }\r\n    MouseUpPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseUp(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDrag(x: number, y: number) { /* */ }\r\n    MouseDragPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDrag(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseLeftClick(x: number, y: number) { /* */ }\r\n    MouseLeftClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseLeftClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseMiddleClick(x: number, y: number) { /* */ }\r\n    MouseMiddleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseMiddleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseRightClick(x: number, y: number) { /* */ }\r\n    MouseRightClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseRightClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseDoubleClick(x: number, y: number) { /* */ }\r\n    MouseDoubleClickPre(x: number, y: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseDoubleClick(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY);\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) { /* */ }\r\n    MouseWheelPre(x: number, y: number, v: number) {\r\n        if (!this.indeCanvas.IsMouseInsidePanel(x, y)) { return; }\r\n        this.MouseWheel(x - this.indeCanvas.vec.x + this.mOffX, y - this.indeCanvas.vec.y - this.indeCanvas.HeadHeight + this.mOffY, v);\r\n    }\r\n\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { TFProject } from '..';\r\n\r\n// import * as tf from '@tensorflow/tfjs';\r\nimport { NVector3, MathUtility } from '../../../lib';\r\nexport class JSLinearRegression01 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n\r\n    a: number = 1;\r\n    bias: number = 0;\r\n\r\n    constructor(tfProjct: TFProject) {\r\n        super(tfProjct);\r\n        this.indeCanvas.title = 'LinearRegression';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, 0, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, 0);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.LinearRegression();\r\n        this.RenderLine(ctx);\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(MathUtility.Remap(this.vs[i].x, 0, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, 0, 1, this.height, 0), 5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        let x0 = 0;\r\n        let y0 = this.a * x0 + this.bias;\r\n\r\n        let x1 = 1;\r\n        let y1 = this.a * x1 + this.bias;\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(x0, 0, 1, 0, this.width), MathUtility.Remap(y0, 0, 1, this.height, 0));\r\n        ctx.lineTo(MathUtility.Remap(x1, 0, 1, 0, this.width), MathUtility.Remap(y1, 0, 1, this.height, 0));\r\n        ctx.stroke();\r\n    }\r\n    public LinearRegression() {\r\n        let xSum = 0;\r\n        let ySum = 0;\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            xSum += this.vs[i].x;\r\n            ySum += this.vs[i].y;\r\n        }\r\n        let xMean = xSum / this.vs.length;\r\n        let yMean = ySum / this.vs.length;\r\n\r\n        let num = 0;\r\n        let den = 0;\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            num += (this.vs[i].x - xMean) * (this.vs[i].y - yMean);\r\n            den += (this.vs[i].x - xMean) * (this.vs[i].x - xMean);\r\n        }\r\n        this.a = num / den;\r\n        this.bias = yMean - this.a * xMean;\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { TFProject } from '..';\r\n\r\n// import * as tf from '@tensorflow/tfjs';\r\nimport { NVector3, MathUtility } from '../../../lib';\r\nexport class JSLinearRegressionGradientDescent02 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n\r\n    weight: number = 1;\r\n    bias: number = 0;\r\n\r\n    constructor(tfProjct: TFProject) {\r\n        super(tfProjct);\r\n        this.indeCanvas.title = 'LinearRegression';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, 0, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, 0);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(MathUtility.Remap(this.vs[i].x, 0, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, 0, 1, this.height, 0), 5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        let x0 = 0;\r\n        let y0 = this.weight * x0 + this.bias;\r\n\r\n        let x1 = 1;\r\n        let y1 = this.weight * x1 + this.bias;\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(x0, 0, 1, 0, this.width), MathUtility.Remap(y0, 0, 1, this.height, 0));\r\n        ctx.lineTo(MathUtility.Remap(x1, 0, 1, 0, this.width), MathUtility.Remap(y1, 0, 1, this.height, 0));\r\n        ctx.stroke();\r\n    }\r\n    public GradientDescent() {\r\n        let learningRate = 0.1;\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let x = this.vs[i].x;\r\n            let y = this.vs[i].y;\r\n            let hypothesis = this.weight * x + this.bias;\r\n            let error = y - hypothesis;\r\n\r\n            this.weight = this.weight + (error * x) * learningRate;\r\n            this.bias = this.bias + (error) * learningRate;\r\n            // console.log(error);\r\n        }\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\n// import { TFUtility } from '../../../../../../NJSCore/ML/NMacineLearning';\r\nimport { TFDataUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n\r\nexport class TFLinearRegressionGradientDescent01 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    vsTemp: NVector3[] = [];\r\n\r\n    tfLinearRegression: TFLinearRegression;\r\n    t: number = 0.0;\r\n    constructor(tfProjct: TFProject) {\r\n        super(tfProjct);\r\n        this.indeCanvas.title = 'TF LinearRegression GradientDescent 01';\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n\r\n        this.tfLinearRegression = new TFLinearRegression();\r\n\r\n        this.InitData();\r\n        this.InitUI();\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '400px';\r\n        div.style.color = '#ffffff';\r\n\r\n        const t = document.createElement('p');\r\n        t.textContent = 'click on this screen to add data';\r\n        div.append(t);\r\n\r\n        const divHost = document.getElementById('indePanel');\r\n        if (divHost) {\r\n            divHost.append(div);\r\n        }\r\n        // this.scene.canvas.canvas.\r\n    }\r\n    InitData() {\r\n        TFDataUtility.getData().then((d: any) => {\r\n            let xMin = Number.MAX_SAFE_INTEGER;\r\n            let xMax = Number.MIN_SAFE_INTEGER;\r\n            let yMin = Number.MAX_SAFE_INTEGER;\r\n            let yMax = Number.MIN_SAFE_INTEGER;\r\n\r\n            d.forEach((data: any) => {\r\n                let x = (data['horsepower']);\r\n                if (x > xMax) { xMax = x; }\r\n                if (x < xMin) { xMin = x; }\r\n\r\n                let y = (data['mpg']);\r\n                if (y > yMax) { yMax = y; }\r\n                if (y < yMin) { yMin = y; }\r\n            });\r\n\r\n            for (let data of d) {\r\n                let x = (data['horsepower']);\r\n                let y = (data['mpg']);\r\n                this.vsTemp.push(new NVector3(\r\n                    MathUtility.Remap(x, xMin, xMax, 0.1, 0.9),\r\n                    MathUtility.Remap(y, yMin, yMax, 0.1, 0.9)));\r\n            }\r\n        });\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, 0, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, 0);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        if ((this.t & 2) === 0) {\r\n            const v = this.vsTemp.pop();\r\n            if (v) {\r\n                this.vs.push(v);\r\n            }\r\n        }\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n\r\n            // ............................ train\r\n            this.tfLinearRegression.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(MathUtility.Remap(this.vs[i].x, 0, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, 0, 1, this.height, 0), 5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        this.t += 0.3;\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        const lineX = [0, 1];\r\n\r\n        // ............................ predict\r\n        const ys = tf.tidy(() => {\r\n            return this.tfLinearRegression.predict(tf.tensor1d(lineX));\r\n        });\r\n\r\n        let lineY = ys.dataSync();\r\n        ys.dispose();\r\n        // ............................ end predict\r\n\r\n        let x0 = 0;\r\n        let y0 = lineY[0];\r\n\r\n        let x1 = 1;\r\n        let y1 = lineY[1];\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(x0, 0, 1, 0, this.width), MathUtility.Remap(y0, 0, 1, this.height, 0));\r\n        ctx.lineTo(MathUtility.Remap(x1, 0, 1, 0, this.width), MathUtility.Remap(y1, 0, 1, this.height, 0));\r\n        ctx.stroke();\r\n\r\n    }\r\n}\r\nclass TFLinearRegression {\r\n    weight: tf.Variable;\r\n    bias: tf.Variable;\r\n\r\n    leraningRate: number = 0.5;\r\n    optimizer: tf.Optimizer;\r\n    constructor() {\r\n        this.weight = tf.variable(tf.scalar(Math.random()));\r\n        this.bias = tf.variable(tf.scalar(Math.random()));\r\n\r\n        this.optimizer = tf.train.sgd(this.leraningRate);\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return x.mul(this.weight).add(this.bias);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\nimport { TFDataUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n\r\n// import { TFUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFPolynomialRegressionGradientDescent02 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    vsTemp: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    tfLinearRegression: PolynomialRegression;\r\n    t: number = 0.0;\r\n    constructor(tfProjct: TFProject) {\r\n        super(tfProjct);\r\n        this.indeCanvas.title = 'TF LinearRegression GradientDescent 01';\r\n        this.Init();\r\n        this.InitData();\r\n        this.InitUI();\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '400px';\r\n        div.style.color = '#ffffff';\r\n\r\n        const t = document.createElement('p');\r\n        t.textContent = 'click on this screen to add data';\r\n        div.append(t);\r\n\r\n\r\n        const divHost = document.getElementById('indePanel');\r\n        if (divHost) {\r\n            divHost.append(div);\r\n\r\n            const b = document.createElement('button');\r\n            b.textContent = 'run';\r\n            b.style.position = 'absolute';\r\n            b.style.left = '650px';\r\n            b.onclick = () => {\r\n            //     console.log(this);\r\n            };\r\n            this.scene.implementation.app.model.modelViewCoreWrapper.viewWrapper.div.append(b);\r\n        }\r\n        // this.scene.canvas.canvas.\r\n    }\r\n    InitData() {\r\n        TFDataUtility.getData().then((d: any) => {\r\n            let xMin = Number.MAX_SAFE_INTEGER;\r\n            let xMax = Number.MIN_SAFE_INTEGER;\r\n            let yMin = Number.MAX_SAFE_INTEGER;\r\n            let yMax = Number.MIN_SAFE_INTEGER;\r\n\r\n            d.forEach((data: any) => {\r\n                let x = (data['horsepower']);\r\n                if (x > xMax) { xMax = x; }\r\n                if (x < xMin) { xMin = x; }\r\n\r\n                let y = (data['mpg']);\r\n                if (y > yMax) { yMax = y; }\r\n                if (y < yMin) { yMin = y; }\r\n            });\r\n\r\n            for (let data of d) {\r\n                let x = (data['horsepower']);\r\n                let y = (data['mpg']);\r\n                this.vsTemp.push(new NVector3(\r\n                    MathUtility.Remap(x, xMin, xMax, -0.9, 0.9),\r\n                    MathUtility.Remap(y, yMin, yMax, -0.9, 0.9)));\r\n            }\r\n        });\r\n    }\r\n    Init() {\r\n    //     console.log(tf.version);\r\n\r\n        this.tfLinearRegression = new PolynomialRegression();\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    Grid(ctx: CanvasRenderingContext2D) {\r\n        // for (let i = -10; i < 10; ++i) {\r\n        //     for (let j = -10; j < 10; ++j) {\r\n        //         ctx.beginPath();\r\n        //         ctx.fillStyle = 'rgba(255, 0, 0, 0.9)';\r\n        //         ctx.arc(i, j, 0.05, 0, Math.PI * 2);\r\n        //         ctx.closePath();\r\n        //         ctx.fill();\r\n        //     }\r\n        // }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.Grid(ctx);\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        if ((this.t & 2) === 0) {\r\n            const v = this.vsTemp.pop();\r\n            if (v) {\r\n                this.vs.push(v);\r\n            }\r\n        }\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n            // console.log(xx);\r\n            // console.log(yy);\r\n            // ............................ train\r\n            this.tfLinearRegression.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n        this.t += 0.3;\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        const curveX: number[] = [];\r\n        for (let x = -1; x <= 1; x += 0.05) {\r\n            curveX.push(x);\r\n        }\r\n\r\n        // ............................ predict\r\n        const ys = tf.tidy(() => {\r\n            // return this.tfLinearRegression.predict(tf.tensor1d(curveX));\r\n            return this.tfLinearRegression.predict2d(tf.tensor1d(curveX));\r\n        });\r\n\r\n        let curveY = ys.dataSync();\r\n        ys.dispose();\r\n        // ............................ end predict\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n        for (let i = 1; i < curveX.length; ++i) {\r\n            ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n        }\r\n        ctx.stroke();\r\n\r\n    }\r\n}\r\nclass PolynomialRegression {\r\n    weights: tf.Variable[] = [];\r\n    bias: tf.Variable;\r\n\r\n    dim: number = 1;\r\n    leraningRate: number = 0.2;\r\n    optimizer: tf.AdamOptimizer;\r\n    constructor() {\r\n        for (let i = 0; i < 5; ++i) {\r\n            const weight = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n            weight.print();\r\n            this.weights.push(weight);\r\n        }\r\n\r\n        this.bias = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n        this.optimizer = tf.train.adam(this.leraningRate);\r\n    }\r\n\r\n    public predict1d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.mul(this.weights[0])\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict2d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.square().mul(this.weights[1])\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict3d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(3)).mul(this.weights[2])\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict4d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(4)).mul(this.weights[3])\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict5d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(5)).mul(this.weights[4])\r\n            .add(x.pow(tf.scalar(4)).mul(this.weights[3]))\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        if (this.dim === 5) { return this.predict5d(x); }\r\n        if (this.dim === 4) { return this.predict4d(x); }\r\n        if (this.dim === 3) { return this.predict3d(x); }\r\n        if (this.dim === 2) { return this.predict2d(x); }\r\n\r\n        return this.predict1d(x);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n    //     console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFPolynomialRegressionGradientDescent03Interaction extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    tfLinearRegression: PolynomialRegression;\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF LinearRegression GradientDescent 01';\r\n        this.Init();\r\n\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n\r\n        this.tfLinearRegression = new PolynomialRegression();\r\n\r\n        this.indeCanvas.canvas.style.zIndex = '-1';\r\n        // this.indeCanvas.bodyDiv.divHost.style.pointerEvents = 'auto';\r\n        // this.indeCanvas.bodyDiv.div.style.pointerEvents = 'auto';\r\n\r\n        // const div = document.createElement('div');\r\n        // div.style.background = '#ff0000';\r\n        // div.style.width = '100px';\r\n        // div.style.height = '100px';\r\n        // div.style.position = 'absolute';\r\n        // div.style.zIndex = '1';\r\n        // div.onclick = (e: MouseEvent) => {\r\n        // //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.preventDefault();\r\n        // };\r\n        // console.log(this.indeCanvas);\r\n\r\n        // let input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        // //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        // //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // input = document.createElement('input');\r\n        // input.type = 'radio';\r\n\r\n        // input.onclick = (e: MouseEvent) => {\r\n        // //     console.log(e);\r\n        //     // e.cancelBubble = true;\r\n        //     // e.stopPropagation();\r\n        // };\r\n        // div.append(input);\r\n\r\n        // this.indeCanvas.bodyDiv.div.append(div);\r\n\r\n        TFDataUtility.getData().then((d: any) => {\r\n            // console.log(d);\r\n        });\r\n\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n            // console.log(xx);\r\n            // console.log(yy);\r\n            // ............................ train\r\n            this.tfLinearRegression.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        const curveX: number[] = [];\r\n        for (let x = -1; x <= 1; x += 0.05) {\r\n            curveX.push(x);\r\n        }\r\n\r\n        // ............................ predict\r\n        const ys = tf.tidy(() => {\r\n            return this.tfLinearRegression.predict(tf.tensor1d(curveX));\r\n        });\r\n\r\n        let curveY = ys.dataSync();\r\n        ys.dispose();\r\n        // ............................ end predict\r\n\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = '#00fff0';\r\n        ctx.beginPath();\r\n        ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n        for (let i = 1; i < curveX.length; ++i) {\r\n            ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n        }\r\n        ctx.stroke();\r\n\r\n    }\r\n}\r\nclass PolynomialRegression {\r\n    weights: tf.Variable[] = [];\r\n    bias: tf.Variable;\r\n\r\n    dim: number = 3;\r\n    leraningRate: number = 0.2;\r\n    optimizer: tf.AdamOptimizer;\r\n    constructor() {\r\n        for (let i = 0; i < 5; ++i) {\r\n            const weight = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n            weight.print();\r\n            this.weights.push(weight);\r\n        }\r\n\r\n        this.bias = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n        this.optimizer = tf.train.adam(this.leraningRate);\r\n    }\r\n\r\n    public predict1d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.mul(this.weights[0])\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict2d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.square().mul(this.weights[1])\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict3d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(3)).mul(this.weights[2])\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict4d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(4)).mul(this.weights[3])\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict5d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(5)).mul(this.weights[4])\r\n            .add(x.pow(tf.scalar(4)).mul(this.weights[3]))\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        if (this.dim === 5) { return this.predict5d(x); }\r\n        if (this.dim === 4) { return this.predict4d(x); }\r\n        if (this.dim === 3) { return this.predict3d(x); }\r\n        if (this.dim === 2) { return this.predict2d(x); }\r\n\r\n        return this.predict1d(x);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n// import { LayersModel } from '@tensorflow/tfjs-layers';\r\nimport { ModelCompileArgs, ModelFitArgs } from '@tensorflow/tfjs';\r\n\r\n// import { TFDataUtility } from '../../../../../../NJSCore/ML/NMacineLearning';\r\n\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\n\r\nexport class TFModel01 extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    tfModel: TFModel;\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Horsepower and Miles Per Gallon';\r\n        this.Init();\r\n\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n        this.tfModel = new TFModel();\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n            // console.log(xx);\r\n            // console.log(yy);\r\n            // ............................ train\r\n            // this.tfModel.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n\r\n\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        // const curveX: number[] = [];\r\n        // for (let x = -1; x <= 1; x += 0.05) {\r\n        //     curveX.push(x);\r\n        // }\r\n\r\n        // // ............................ predict\r\n        // const ys = tf.tidy(() => {\r\n        //     return this.tfModel.predict(tf.tensor1d(curveX));\r\n        // });\r\n\r\n        // let curveY = ys.dataSync();\r\n        // ys.dispose();\r\n        // // ............................ end predict\r\n\r\n        // ctx.lineWidth = 3;\r\n        // ctx.strokeStyle = '#00fff0';\r\n        // ctx.beginPath();\r\n        // ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n        // for (let i = 1; i < curveX.length; ++i) {\r\n        //     ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n        // }\r\n        // ctx.stroke();\r\n\r\n    }\r\n}\r\nclass TFModel {\r\n    model: tf.Sequential;\r\n    constructor() {\r\n        this.model = tf.sequential();\r\n\r\n        const hidden = tf.layers.dense({\r\n            inputShape: [2],\r\n            units: 4,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            units: 1,\r\n            activation: 'sigmoid',\r\n\r\n        });\r\n\r\n        this.model.add(hidden);\r\n        this.model.add(output);\r\n\r\n        const compileArgs: ModelCompileArgs = {\r\n            optimizer: tf.train.sgd(0.1),\r\n            loss: tf.losses.meanSquaredError,\r\n        };\r\n\r\n        this.model.compile(compileArgs);\r\n\r\n        // const data = tf.tensor2d([\r\n        //     [0.25, 0.92]\r\n        // ]);\r\n        this.train1().then(() => {\r\n            const x = tf.tensor2d([\r\n                [0, 0],\r\n                [0.5, 0.5],\r\n                [1, 1],\r\n            ]);\r\n            const result = this.model.predict(x);\r\n            (result as tf.Tensor).print();\r\n        });\r\n    }\r\n    train0() {\r\n        const x = tf.tensor2d([\r\n            [0, 0],\r\n            [0.5, 0.5],\r\n            [1, 1],\r\n            // [0.1, 0.22],\r\n        ]);\r\n        const y = tf.tensor2d([\r\n            [1],\r\n            [0.5],\r\n            [0],\r\n        ]);\r\n        const config = {\r\n            epochs: 10\r\n        };\r\n        this.model.fit(x, y, config).then((response) => console.log(response.history));\r\n        const outResult: tf.Tensor<tf.Rank> | tf.Tensor<tf.Rank>[] = this.model.predict(x);\r\n        // console.log(outResult);\r\n        (outResult as tf.Tensor).print();\r\n    }\r\n    async train1() {\r\n        const xTrain = tf.tensor2d([\r\n            [0, 0],\r\n            [0.5, 0.5],\r\n            [1, 1],\r\n            // [0.1, 0.22],\r\n        ]);\r\n        const yTrain = tf.tensor2d([\r\n            [1],\r\n            [0.5],\r\n            [0],\r\n        ]);\r\n        const config: ModelFitArgs = {\r\n            epochs: 10,\r\n            shuffle: true,\r\n        };\r\n\r\n        for (let i = 0; i < 500; ++i) {\r\n            const response = await this.model.fit(xTrain, yTrain, config);\r\n            // response;\r\n        //     console.log(i, response.history.loss);\r\n        }\r\n\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\n// import { TFDataUtility } from '../../../../../../NJSCore/ML/NMacineLearning';\r\n\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\n\r\nexport class TFModel02XOR extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    tfModel: TFModel;\r\n    xPredict: any; // tf.Tensor<tf.Rank>;\r\n    inputs: number[] = [];\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF XOR';\r\n        this.Init();\r\n        this.InitUI();\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '10px';\r\n        div.style.color = '#ffffff';\r\n\r\n        const t = document.createElement('p');\r\n        t.textContent = 'ref: Coding Challenge #106: XOR Problem with TensorFlow.js by The Cording Train';\r\n        t.style.fontSize = '11px';\r\n        div.append(t);\r\n\r\n        const divHost = document.getElementById('indePanel');\r\n        if (divHost) {\r\n            divHost.append(div);\r\n        }\r\n        // this.scene.canvas.canvas.\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n        this.tfModel = new TFModel();\r\n\r\n        let inputs = [];\r\n        for (let i = 0; i <= 10; ++i) {\r\n            for (let j = 0; j <= 10; ++j) {\r\n                // let x1 = i / 10;\r\n                // let x2 = j / 10;\r\n                inputs.push([j * 0.1, i * 0.1]);\r\n            }\r\n        }\r\n        // console.log(inputs);\r\n        // console.log(;)\r\n        this.xPredict = tf.tensor2d(inputs);\r\n        // console.log(xPredict);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // let ys = this.tfModel.model.predict(this.xPredict);\r\n\r\n        // (ys as tf.Tensor<tf.Rank.R2>).print();\r\n        // let y_values = ys.dataSync();\r\n\r\n        tf.tidy(() => {\r\n            const d = this.tfModel.model.predict(this.xPredict);\r\n            const result = (d as tf.Tensor2D).dataSync();\r\n\r\n\r\n            // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n            ctx.fillStyle = '#000000';\r\n            ctx.beginPath();\r\n            ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n\r\n\r\n\r\n            let index = 0;\r\n            for (let i = 0; i <= 10; i++) {\r\n                for (let j = 0; j <= 10; j++) {\r\n                    this.inputs.push(i);\r\n                    let offset = 42;\r\n                    let x = i * offset;\r\n                    let y = j * offset;\r\n                    const out = result[index];\r\n\r\n                    ctx.fillStyle = `rgba(${out * 255},${0},${0},1)`;\r\n                    // console.log(out);\r\n                    ctx.beginPath();\r\n                    ctx.rect(x, y, offset, offset);\r\n                    ctx.closePath();\r\n                    ctx.fill();\r\n\r\n                    index++;\r\n                }\r\n            }\r\n            // console.log(index);\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n    }\r\n}\r\nclass TFModel {\r\n    model: tf.Sequential;\r\n    xTrain = tf.tensor2d([\r\n        [0.0, 0.0],\r\n        [1.0, 0.0],\r\n        [0.0, 1.0],\r\n        [1.0, 1.0]\r\n    ]);\r\n    yTrain = tf.tensor2d([\r\n        [0.0],\r\n        [1.0],\r\n        [1.0],\r\n        [0.0]\r\n    ]);\r\n    constructor() {\r\n        this.model = tf.sequential();\r\n\r\n        const hidden = tf.layers.dense({\r\n            inputShape: [2],\r\n            units: 16,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            units: 1,\r\n            activation: 'sigmoid',\r\n        });\r\n        this.model.add(hidden);\r\n        this.model.add(output);\r\n        this.model.compile({\r\n            optimizer: tf.train.adam(0.05),\r\n            loss: tf.losses.meanSquaredError,\r\n        });\r\n        this.trainLoop();\r\n    }\r\n    public trainLoop() {\r\n        this.train().then((result: any) => {\r\n            // console.log(result.history.loss[0]);\r\n            setTimeout(() => this.trainLoop(), 1);\r\n        });\r\n    }\r\n    public async train() {\r\n        return await this.model.fit(this.xTrain, this.yTrain, {\r\n            epochs: 10,\r\n            shuffle: true,\r\n        });\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\n// import * as tfvis from '@tensorflow/tfjs-vis';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\n// import { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\n\r\nexport class TFModel03Iris extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    // vs: NVector3[] = [];\r\n    // selVec: NVector3 | undefined = undefined;\r\n\r\n    tfModel: TFModel;\r\n    xPredict: any; // tf.Tensor<tf.Rank>;\r\n    inputs: number[] = [];\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Horsepower and Miles Per Gallon';\r\n        this.Init();\r\n\r\n    }\r\n    Init() {\r\n        this.tfModel = new TFModel();\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n\r\n        tf.tidy(() => {\r\n            //\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n    }\r\n}\r\nclass TFModel {\r\n    model: tf.Sequential;\r\n    inputsTensor: tf.Tensor<tf.Rank.R2>;\r\n    labelsTensor: tf.Tensor<tf.Rank.R2>;\r\n\r\n    // xTrain = tf.tensor2d([\r\n    //     [0.0, 0.0],\r\n    //     [1.0, 0.0],\r\n    //     [0.0, 1.0],\r\n    //     [1.0, 1.0]\r\n    // ]);\r\n    // yTrain = tf.tensor2d([\r\n    //     [0.0],\r\n    //     [1.0],\r\n    //     [1.0],\r\n    //     [0.0]\r\n    // ]);\r\n    constructor() {\r\n        const d = TFDataUtility.GetIrisData();\r\n        tf.util.shuffle(d);\r\n        // console.log(d);\r\n\r\n        const inputs = [];\r\n        for (let i = 0; i < d.length; ++i) {\r\n            let row = [];\r\n            for (let j = 0; j < d[i].length - 1; ++j) {\r\n                row.push(d[i][j]);\r\n            }\r\n            inputs.push(row);\r\n        }\r\n\r\n        const labels = []; //  d.map((d: number[]) => [d[d.length - 1]]);\r\n        for (let i = 0; i < d.length; ++i) {\r\n            if (d[i][d[i].length - 1] === 0) {\r\n                labels.push([1, 0, 0]);\r\n            } else if (d[i][d[i].length - 1] === 1) {\r\n                labels.push([0, 1, 0]);\r\n            } else if (d[i][d[i].length - 1] === 2) {\r\n                labels.push([0, 0, 1]);\r\n            }\r\n\r\n        }\r\n\r\n        // console.log(inputs);\r\n        // console.log(labels);\r\n\r\n        // console.log('tensor......................');\r\n        this.inputsTensor = tf.tensor2d(inputs);\r\n        this.labelsTensor = tf.tensor2d(labels);\r\n        // console.log(this.inputsTensor);\r\n        // console.log(this.labelsTensor);\r\n        this.inputsTensor.print();\r\n        this.labelsTensor.print();\r\n\r\n        this.model = tf.sequential();\r\n\r\n        // console.log(this.inputsTensor.shape[1]);\r\n\r\n        const hidden = tf.layers.dense({\r\n            inputShape: [this.inputsTensor.shape[1]],\r\n            units: 10,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            // inputShape: [10],\r\n            units: 3,\r\n            activation: 'softmax',\r\n        });\r\n        this.model.add(hidden);\r\n        this.model.add(output);\r\n        this.model.compile({\r\n            optimizer: tf.train.adam(),\r\n            // loss: tf.losses.meanSquaredError,\r\n            // metrics: ['mse'],\r\n            loss: tf.losses.softmaxCrossEntropy,  // 'categoricalCrossentropy',\r\n            metrics: ['accuracy'],\r\n        });\r\n        this.model.summary();\r\n        // tfvis.show.modelSummary({ name: 'Model Summary' }, this.model);\r\n\r\n        this.trainLoop();\r\n    }\r\n    public async trainLoop() {\r\n        await this.model.save('downloads://my-model');\r\n        const saveResults = await this.model.save('localstorage://ml/my-model-1');\r\n    //     console.log(saveResults);\r\n        this.train().then((result: any) => {\r\n        //     console.log(result.history.loss[0]);\r\n            setTimeout(() => this.trainLoop(), 1);\r\n        });\r\n    }\r\n    public async train() {\r\n        return await this.model.fit(this.inputsTensor, this.labelsTensor, {\r\n            // batchSize: 100,\r\n            epochs: 50,\r\n            shuffle: true,\r\n            validationData: [this.inputsTensor, this.labelsTensor],\r\n        });\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\n// import * as tfvis from '@tensorflow/tfjs-vis';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\n// import { NVector3, MathUtility } from '../../../lib';\r\n\r\n// import { csv } from './smartDrawingTrainData.csv';\r\n\r\n// import { TFDataUtility } from '../../../../../../NJSCore/ML/NMacineLearning';\r\n\r\n// const csv = require('./smartDrawingTrainData.csv');\r\n\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\n\r\nexport class TFModel03SmartDrawing extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    // vs: NVector3[] = [];\r\n    // selVec: NVector3 | undefined = undefined;\r\n\r\n    tfModel: TFModel;\r\n    xPredict: any; // tf.Tensor<tf.Rank>;\r\n    inputs: number[] = [];\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Horsepower and Miles Per Gallon';\r\n        this.Init();\r\n\r\n    }\r\n    async Init() {\r\n        const d = new DataProcess();\r\n        await d.Init().then(() => {\r\n            this.tfModel = new TFModel('model1', d.inputsTensor, d.labelsTensor);\r\n            this.tfModel.CreateModel01();\r\n\r\n            this.tfModel = new TFModel('model2', d.inputsTensor, d.labelsTensor);\r\n            this.tfModel.CreateModel02();\r\n\r\n        });\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n\r\n        tf.tidy(() => {\r\n            //\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n    }\r\n}\r\n\r\nclass DataProcess {\r\n    raw: any;\r\n    inputsTensor: tf.Tensor<tf.Rank.R2>;\r\n    labelsTensor: tf.Tensor<tf.Rank.R2>;\r\n    constructor() {\r\n        //\r\n    }\r\n    async Init() {\r\n        const d = await this.OpenCSV();\r\n        if (d) {\r\n            this.raw = this.processData(d);\r\n            tf.util.shuffle(this.raw);\r\n            // console.log(this.raw);\r\n\r\n            const inputs = [];\r\n            const labelsTemp = [];\r\n            for (let i = 0; i < this.raw.length; ++i) {\r\n                let row = [];\r\n                for (let j = 0; j < this.raw[i].length - 1; ++j) { row.push(this.raw[i][j]); }\r\n                inputs.push(row);\r\n                labelsTemp.push(this.raw[i][this.raw[i].length - 1]);\r\n            }\r\n        //     console.log(inputs);\r\n        //     console.log(labelsTemp);\r\n            const max = tf.max(labelsTemp);\r\n            const maxNum = max.dataSync();\r\n\r\n            const labels = [];\r\n            for (let i = 0; i < labelsTemp.length; ++i) {\r\n                const label = [];\r\n                for (let j = 0; j <= maxNum[0]; ++j) {\r\n                    if (j === labelsTemp[i]) {\r\n                        label.push(1);\r\n                    } else {\r\n                        label.push(0);\r\n                    }\r\n                }\r\n                labels.push(label);\r\n            }\r\n        //     console.log(labels);\r\n\r\n            this.inputsTensor = tf.tensor2d(inputs);\r\n            this.labelsTensor = tf.tensor2d(labels);\r\n\r\n            this.inputsTensor.print();\r\n            this.labelsTensor.print();\r\n        }\r\n    }\r\n    private processData(allText: any) {\r\n        const allTextLines = allText.split(/\\r\\n|\\n/);\r\n        const headers = allTextLines[0].split(',');\r\n        const lines = [];\r\n\r\n        for (let i = 1; i < allTextLines.length; i++) {\r\n            const data = allTextLines[i].split(',');\r\n            if (data.length === headers.length) {\r\n\r\n                const tarr = [];\r\n                for (let j = 0; j < headers.length; j++) {\r\n                    const dataTemp = +data[j];\r\n                    if (isNaN(dataTemp)) {\r\n                        tarr.push(data[j]);\r\n                    } else {\r\n                        tarr.push(dataTemp);\r\n                    }\r\n                }\r\n                lines.push(tarr);\r\n            }\r\n        }\r\n        return lines;\r\n    }\r\n    public async OpenCSV() {\r\n        // if (njslabSandboxStatic.app) { if (njslabSandboxStatic.app.isProduction) { return; } }\r\n        let file = 'smartDrawingTrainData.csv';\r\n        // console.log(location.host);\r\n        return fetch(`njslabSandboxStatic/ML/SmartDrawing/${file}`)\r\n            .then((response: Response) => {\r\n            //     console.log(response);\r\n                return response.text();\r\n            })\r\n            .catch((err: Error) => {\r\n            //     console.log(err);\r\n            });\r\n    }\r\n}\r\n\r\nclass TFModel {\r\n    t0: number;\r\n    t1: number;\r\n    name: string;\r\n    model: tf.Sequential;\r\n    inputsTensor: tf.Tensor<tf.Rank.R2>;\r\n    labelsTensor: tf.Tensor<tf.Rank.R2>;\r\n    constructor(name: string, inputsTensor: tf.Tensor<tf.Rank.R2>, labelsTensor: tf.Tensor<tf.Rank.R2>) {\r\n        this.name = name;\r\n        this.inputsTensor = inputsTensor;\r\n        this.labelsTensor = labelsTensor;\r\n    }\r\n    CreateModel01() {\r\n        this.model = tf.sequential();\r\n        const hidden01 = tf.layers.dense({\r\n            inputShape: [this.inputsTensor.shape[1]],\r\n            units: 20,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            // inputShape: [10],\r\n            units: this.labelsTensor.shape[1],\r\n            activation: 'softmax',\r\n        });\r\n        this.model.add(hidden01);\r\n        this.model.add(output);\r\n        this.Compile();\r\n    }\r\n    CreateModel02() {\r\n        this.model = tf.sequential();\r\n        const hidden01 = tf.layers.dense({\r\n            inputShape: [this.inputsTensor.shape[1]],\r\n            units: 20,\r\n            activation: 'sigmoid',\r\n        });\r\n        const hidden02 = tf.layers.dense({\r\n            // inputShape: [this.inputsTensor.shape[1]],\r\n            units: 15,\r\n            activation: 'sigmoid',\r\n        });\r\n        const output = tf.layers.dense({\r\n            // inputShape: [10],\r\n            units: this.labelsTensor.shape[1],\r\n            activation: 'softmax',\r\n        });\r\n        this.model.add(hidden01);\r\n        this.model.add(hidden02);\r\n        this.model.add(output);\r\n        this.Compile();\r\n    }\r\n    Compile() {\r\n        this.model.compile({\r\n            optimizer: tf.train.adam(),\r\n            // loss: tf.losses.meanSquaredError,\r\n            // metrics: ['mse'],\r\n            loss: tf.losses.softmaxCrossEntropy,  // 'categoricalCrossentropy',\r\n            metrics: ['accuracy'],\r\n        });\r\n        this.model.summary();\r\n        // tfvis.show.modelSummary({ name: 'Model Summary' }, this.model);\r\n\r\n        this.trainLoop();\r\n    }\r\n    public async trainLoop() {\r\n        this.t0 = performance.now();\r\n\r\n        await this.model.save('downloads://my-model');\r\n        // const saveResults = await this.model.save('localstorage://ml/my-model-1');\r\n        // console.log(saveResults);\r\n        this.train().then((result: any) => {\r\n            this.t1 = performance.now();\r\n        //     console.log(`${this.name}: ${result.history.loss[0]}, ${this.t1 - this.t0} `);\r\n            setTimeout(() => this.trainLoop(), 1);\r\n        });\r\n    }\r\n    public async train() {\r\n        // return await this.model.fit(this.inputsTensor, this.labelsTensor, {\r\n        //     batchSize: 100,\r\n        //     epochs: 10,\r\n        //     shuffle: true,\r\n        //     validationData: [this.inputsTensor, this.labelsTensor],\r\n        // });\r\n    }\r\n}","import * as tf from '@tensorflow/tfjs';\r\nimport * as tfvis from '@tensorflow/tfjs-vis';\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n// // https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFModel01HorsepowerAndMilesPerGallon extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    // tfModel: ModelForHorsepowerGallon;\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF Horsepower and Miles Per Gallon';\r\n        this.Init();\r\n\r\n    }\r\n    Init() {\r\n        // console.log(tf.version);\r\n\r\n        TFDataUtility.getData().then((d: any) => {\r\n            // this.tfModel = new ModelForHorsepowerGallon();\r\n            // this.train(d);\r\n            this.train(d);\r\n\r\n\r\n        });\r\n\r\n    }\r\n    async train(d: any) {\r\n        const tensorData = convertToTensor(d);\r\n        // console.log(tensorData);\r\n        const { inputs, labels } = tensorData;\r\n        // console.log(inputs, labels);\r\n        const model = createModel();\r\n\r\n        tfvis.show.modelSummary({ name: 'Model Summary' }, model);\r\n        // Train the model\r\n        await trainModel(model, inputs, labels);\r\n        // console.log('Done Training');\r\n        testModel(model, d, tensorData);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n            const xx = [], yy = [];\r\n            for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n            // console.log(xx);\r\n            // console.log(yy);\r\n            // ............................ train\r\n            // this.tfModel.train(xx, yy);\r\n            // ............................ end train\r\n\r\n            this.RenderLine(ctx);\r\n        }\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        const curveX: number[] = [];\r\n        for (let x = -1; x <= 1; x += 0.05) {\r\n            curveX.push(x);\r\n        }\r\n    }\r\n}\r\n\r\nfunction testModel(model: tf.Sequential, inputData: any, normalizationData: any) {\r\n    const { inputMax, inputMin, labelMin, labelMax } = normalizationData;\r\n\r\n    // Generate predictions for a uniform range of numbers between 0 and 1;\r\n    // We un-normalize the data by doing the inverse of the min-max scaling\r\n    // that we did earlier.\r\n    const [xs, preds] = tf.tidy(() => {\r\n\r\n        const xs = tf.linspace(0, 1, 100);\r\n        const preds = model.predict(xs.reshape([100, 1])) as any;\r\n\r\n        const unNormXs = xs\r\n            .mul(inputMax.sub(inputMin))\r\n            .add(inputMin);\r\n\r\n        const unNormPreds = preds.mul(labelMax.sub(labelMin))\r\n            .add(labelMin);\r\n\r\n        // Un-normalize the data\r\n        return [unNormXs.dataSync(), unNormPreds.dataSync()];\r\n    });\r\n\r\n\r\n    const predictedPoints = Array.from(xs).map((val, i) => {\r\n        return { x: val, y: preds[i] };\r\n    });\r\n\r\n    const originalPoints = inputData.map((d: any) => ({\r\n        x: d.horsepower, y: d.mpg,\r\n    }));\r\n\r\n    tfvis.render.scatterplot(\r\n        { name: 'Model Predictions vs Original Data' },\r\n        { values: [originalPoints, predictedPoints], series: ['original', 'predicted'] },\r\n        {\r\n            xLabel: 'Horsepower',\r\n            yLabel: 'MPG',\r\n            height: 300\r\n        }\r\n    );\r\n}\r\n\r\n\r\nasync function trainModel(model: tf.Sequential, inputs: tf.Tensor<tf.Rank>, labels: tf.Tensor<tf.Rank>) {\r\n    // Prepare the model for training.\r\n    model.compile({\r\n        optimizer: tf.train.adam(),\r\n        loss: tf.losses.meanSquaredError,\r\n        metrics: ['mse'],\r\n    });\r\n\r\n    const batchSize = 32;\r\n    const epochs = 50;\r\n\r\n    return await model.fit(inputs, labels, {\r\n        batchSize,\r\n        epochs,\r\n        shuffle: true,\r\n        callbacks: tfvis.show.fitCallbacks(\r\n            { name: 'Training Performance' },\r\n            ['loss', 'mse'],\r\n            { height: 200, callbacks: ['onEpochEnd'] }\r\n        )\r\n    });\r\n}\r\n\r\n\r\nexport const createModel = () => {\r\n    // Create a sequential model\r\n    const model = tf.sequential();\r\n    // Add a single hidden layer\r\n    model.add(tf.layers.dense({\r\n        inputShape: [1],\r\n        units: 16,\r\n        useBias: true\r\n    }));\r\n    // Add an output layer\r\n    model.add(tf.layers.dense({\r\n        units: 1,\r\n        useBias: true\r\n    }));\r\n    return model;\r\n};\r\nexport const convertToTensor = (data: any) => {\r\n    // Wrapping these calculations in a tidy will dispose any\r\n    // intermediate tensors.\r\n\r\n    return tf.tidy(() => {\r\n        // Step 1. Shuffle the data\r\n        tf.util.shuffle(data);\r\n\r\n        // Step 2. Convert data to Tensor\r\n        const inputs = data.map((d: any) => d.horsepower);\r\n        const labels = data.map((d: any) => d.mpg);\r\n\r\n        const inputTensor = tf.tensor2d(inputs, [inputs.length, 1]);\r\n        const labelTensor = tf.tensor2d(labels, [labels.length, 1]);\r\n\r\n        // Step 3. Normalize the data to the range 0 - 1 using min-max scaling\r\n        const inputMax = inputTensor.max();\r\n        const inputMin = inputTensor.min();\r\n        const labelMax = labelTensor.max();\r\n        const labelMin = labelTensor.min();\r\n\r\n        const normalizedInputs = inputTensor.sub(inputMin).div(inputMax.sub(inputMin));\r\n        const normalizedLabels = labelTensor.sub(labelMin).div(labelMax.sub(labelMin));\r\n\r\n        return {\r\n            inputs: normalizedInputs,\r\n            labels: normalizedLabels,\r\n            // Return the min/max bounds so we can use them later.\r\n            inputMax,\r\n            inputMin,\r\n            labelMax,\r\n            labelMin,\r\n        };\r\n    });\r\n};","import * as tf from '@tensorflow/tfjs';\r\n\r\nimport { TFProject } from '..';\r\nimport { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { NVector3, MathUtility } from '../../../lib';\r\n\r\nimport { TFDataUtility } from '../../../../../../lib/NJSCore/ML/NMacineLearning';\r\n// https://editor.p5js.org/codingtrain/sketches/UdXRZxF7e\r\nexport class TFMnist extends DefinitionIndeCanvasCore {\r\n\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: NVector3[] = [];\r\n    selVec: NVector3 | undefined = undefined;\r\n\r\n    col: string[] = ['#ff0000', '#00ff00', '#0000ff', '#00fff0', '#ff0000', '#fff000', '#0fff00'];\r\n\r\n    tfLinearRegression: PolynomialRegression[] = [];\r\n\r\n    constructor(tfProjct: TFProject, width: number = 650, height: number = 350) {\r\n        super(tfProjct, width, height);\r\n        this.indeCanvas.title = 'TF MNist ';\r\n        this.Init();\r\n        this.InitUI();\r\n    }\r\n    Init() {\r\n        this.tfLinearRegression.push(new PolynomialRegression(1));\r\n        this.tfLinearRegression.push(new PolynomialRegression(2));\r\n        this.tfLinearRegression.push(new PolynomialRegression(3));\r\n        this.tfLinearRegression.push(new PolynomialRegression(4));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(2));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(3));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(4));\r\n        // this.tfLinearRegression.push(new PolynomialRegression(5));\r\n\r\n        this.indeCanvas.canvas.style.zIndex = '-1';\r\n\r\n        TFDataUtility.getData().then((d: any) => {\r\n            // console.log(d);\r\n        });\r\n\r\n        // tfData.\r\n\r\n        const data = new MnistData();\r\n    //     console.log(data.getTrainData());\r\n\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '40px';\r\n        div.style.color = '#ffffff';\r\n\r\n        let t = document.createElement('p');\r\n        t.textContent = 'click on this screen to add data';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.textContent = 'LinearRegression';\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[0];\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[1];\r\n        t.textContent = 'Degree of polynomial - 2';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[2];\r\n        t.textContent = 'Degree of polynomial - 3';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[3];\r\n        t.textContent = 'Degree of polynomial - 4';\r\n        div.append(t);\r\n\r\n        const divHost = document.getElementById('indePanel');\r\n        if (divHost) {\r\n            divHost.append(div);\r\n\r\n            //     const b = document.createElement('button');\r\n            //     b.textContent = 'run';\r\n            //     b.style.position = 'absolute';\r\n            //     b.style.left = '650px';\r\n            //     b.onclick = () => {\r\n            //     //     console.log(this);\r\n            //     };\r\n            //     this.scene.implementation.app.model.modelViewCoreWrapper.viewWrapper.div.append(b);\r\n        }\r\n        // this.scene.canvas.canvas.\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (NVector3.Distance(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new NVector3(this.MapX(x), this.MapY(y)));\r\n        // console.log(this.vs);\r\n    }\r\n    MouseDoubleClick() {\r\n        // console.log(this.tfLinearRegression.dim);\r\n        // this.tfLinearRegression.dim++;\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        let selVec: undefined | NVector3 = undefined;\r\n        const m = new NVector3(this.MapX(x), this.MapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = NVector3.Distance(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.MapX(x);\r\n            this.selVec.y = this.MapY(y);\r\n        }\r\n    }\r\n    MouseUp() {\r\n        this.selVec = undefined;\r\n    }\r\n    MapX(v: number) {\r\n        return MathUtility.Remap(v, 0, this.width, -1, 1);\r\n    }\r\n    MapY(v: number) {\r\n        return MathUtility.Remap(v, 0, this.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.width / 20 - 1;\r\n        const yInterval = this.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#000000';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        // this.GradientDescent();\r\n        if (this.vs.length > 1) {\r\n\r\n            for (let m = 0; m < this.tfLinearRegression.length; ++m) {\r\n                const xx = [], yy = [];\r\n                for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n                // console.log(xx);\r\n                // console.log(yy);\r\n                // ............................ train\r\n                this.tfLinearRegression[m].train(xx, yy);\r\n                // ............................ end train\r\n\r\n                this.RenderLine(ctx);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                MathUtility.Remap(this.vs[i].x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.vs[i].y, -1, 1, this.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                MathUtility.Remap(this.selVec.x, -1, 1, 0, this.width),\r\n                MathUtility.Remap(this.selVec.y, -1, 1, this.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        for (let m = 0; m < this.tfLinearRegression.length; ++m) {\r\n            const curveX: number[] = [];\r\n            for (let x = -1; x <= 1; x += 0.08) {\r\n                curveX.push(x);\r\n            }\r\n\r\n            // ............................ predict\r\n            const ys = tf.tidy(() => {\r\n                return this.tfLinearRegression[m].predict(tf.tensor1d(curveX));\r\n            });\r\n\r\n            let curveY = ys.dataSync();\r\n            ys.dispose();\r\n            // ............................ end predict\r\n\r\n            ctx.lineWidth = 1;\r\n            ctx.strokeStyle = this.col[m]; // '#00fff0';\r\n            ctx.beginPath();\r\n            ctx.moveTo(MathUtility.Remap(curveX[0], -1, 1, 0, this.width), MathUtility.Remap(curveY[0], -1, 1, this.height, 0));\r\n\r\n            for (let i = 1; i < curveX.length; ++i) {\r\n                ctx.lineTo(MathUtility.Remap(curveX[i], -1, 1, 0, this.width), MathUtility.Remap(curveY[i], -1, 1, this.height, 0));\r\n            }\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}\r\nclass PolynomialRegression {\r\n    weights: tf.Variable[] = [];\r\n    bias: tf.Variable;\r\n\r\n    dim: number = 3;\r\n    leraningRate: number = 0.2;\r\n    optimizer: tf.AdamOptimizer;\r\n    constructor(dim: number = 0) {\r\n        this.dim = dim;\r\n        for (let i = 0; i < 5; ++i) {\r\n            const weight = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n            weight.print();\r\n            this.weights.push(weight);\r\n        }\r\n\r\n        this.bias = tf.variable(tf.scalar((Math.random() * 2) - 1));\r\n        this.optimizer = tf.train.adam(this.leraningRate);\r\n\r\n    }\r\n\r\n    public predict1d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.mul(this.weights[0])\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict2d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.square().mul(this.weights[1])\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict3d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(3)).mul(this.weights[2])\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict4d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(4)).mul(this.weights[3])\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict5d(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        // y = ax^3 + bx^2 + cx + d\r\n        const ys = x.pow(tf.scalar(5)).mul(this.weights[4])\r\n            .add(x.pow(tf.scalar(4)).mul(this.weights[3]))\r\n            .add(x.pow(tf.scalar(3)).mul(this.weights[2]))\r\n            .add(x.square().mul(this.weights[1]))\r\n            .add(x.mul(this.weights[0]))\r\n            .add(this.bias);\r\n        return ys;\r\n    }\r\n    public predict(x: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        if (this.dim === 5) { return this.predict5d(x); }\r\n        if (this.dim === 4) { return this.predict4d(x); }\r\n        if (this.dim === 3) { return this.predict3d(x); }\r\n        if (this.dim === 2) { return this.predict2d(x); }\r\n        if (this.dim === 1) { return this.predict1d(x); }\r\n        return this.predict1d(x);\r\n    }\r\n    public loss(pred: tf.Tensor<tf.Rank>, label: tf.Tensor<tf.Rank>): tf.Tensor<tf.Rank> {\r\n        return pred.sub(label).square().mean();\r\n    }\r\n    public train(xVal: number[], yVal: number[]) {\r\n\r\n        tf.tidy(() => {\r\n            const xs = tf.tensor1d(xVal);\r\n            const ys = tf.tensor1d(yVal);\r\n            this.optimizer.minimize((): any => this.loss(this.predict(xs), ys));\r\n        });\r\n        // console.log(tf.memory().numTensors);\r\n        // console.log('b:', this.bias, ', w:', this.weight);\r\n        // this.bias.print();\r\n        // this.weight.print();\r\n    }\r\n    // public train(x: tf.Tensor, y: tf.Tensor) {\r\n    //     tf.tidy((): any => {\r\n    //         return this.optimizer.minimize((): any => {\r\n    //             return this.loss(this.predict(x), y);\r\n    //         });\r\n    //     });\r\n    // }\r\n}\r\n\r\n\r\n// ..............................................................................................................................\r\n\r\nexport const IMAGE_H = 28;\r\nexport const IMAGE_W = 28;\r\nconst IMAGE_SIZE = IMAGE_H * IMAGE_W;\r\nconst NUM_CLASSES = 10;\r\nconst NUM_DATASET_ELEMENTS = 65000;\r\n\r\nconst NUM_TRAIN_ELEMENTS = 55000;\r\n// const NUM_TEST_ELEMENTS = NUM_DATASET_ELEMENTS - NUM_TRAIN_ELEMENTS;\r\n\r\nconst MNIST_IMAGES_SPRITE_PATH =\r\n    'https://storage.googleapis.com/learnjs-data/model-builder/mnist_images.png';\r\nconst MNIST_LABELS_PATH =\r\n    'https://storage.googleapis.com/learnjs-data/model-builder/mnist_labels_uint8';\r\n\r\n/**\r\n * A class that fetches the sprited MNIST dataset and provide data as\r\n * tf.Tensors.\r\n */\r\nexport class MnistData {\r\n    testLabels: Uint8Array;\r\n    trainLabels: Uint8Array;\r\n    testImages: Float32Array;\r\n    trainImages: Float32Array;\r\n    datasetImages: Float32Array;\r\n    datasetLabels: Uint8Array;\r\n    constructor() { }\r\n\r\n    async load() {\r\n        // Make a request for the MNIST sprited image.\r\n        const img = new Image();\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        const imgRequest = new Promise((resolve, reject) => {\r\n            img.crossOrigin = '';\r\n            img.onload = () => {\r\n                img.width = img.naturalWidth;\r\n                img.height = img.naturalHeight;\r\n\r\n                const datasetBytesBuffer =\r\n                    new ArrayBuffer(NUM_DATASET_ELEMENTS * IMAGE_SIZE * 4);\r\n\r\n                const chunkSize = 5000;\r\n                canvas.width = img.width;\r\n                canvas.height = chunkSize;\r\n\r\n                for (let i = 0; i < NUM_DATASET_ELEMENTS / chunkSize; i++) {\r\n                    const datasetBytesView = new Float32Array(\r\n                        datasetBytesBuffer, i * IMAGE_SIZE * chunkSize * 4,\r\n                        IMAGE_SIZE * chunkSize);\r\n                    ctx.drawImage(\r\n                        img, 0, i * chunkSize, img.width, chunkSize, 0, 0, img.width,\r\n                        chunkSize);\r\n\r\n                    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n                    for (let j = 0; j < imageData.data.length / 4; j++) {\r\n                        // All channels hold an equal value since the image is grayscale, so\r\n                        // just read the red channel.\r\n                        datasetBytesView[j] = imageData.data[j * 4] / 255;\r\n                    }\r\n                }\r\n                this.datasetImages = new Float32Array(datasetBytesBuffer);\r\n\r\n                // resolve();\r\n            };\r\n            img.src = MNIST_IMAGES_SPRITE_PATH;\r\n        });\r\n\r\n        const labelsRequest = fetch(MNIST_LABELS_PATH);\r\n        // const [imgResponse, labelsResponse] = await Promise.all([imgRequest, labelsRequest]);\r\n        const result = await Promise.all([imgRequest, labelsRequest]);\r\n        const labelsResponse: any = result[1];\r\n        this.datasetLabels = new Uint8Array(await labelsResponse.arrayBuffer());\r\n\r\n        // Slice the the images and labels into train and test sets.\r\n        this.trainImages = this.datasetImages.slice(0, IMAGE_SIZE * NUM_TRAIN_ELEMENTS);\r\n        this.testImages = this.datasetImages.slice(IMAGE_SIZE * NUM_TRAIN_ELEMENTS);\r\n        this.trainLabels = this.datasetLabels.slice(0, NUM_CLASSES * NUM_TRAIN_ELEMENTS);\r\n        this.testLabels = this.datasetLabels.slice(NUM_CLASSES * NUM_TRAIN_ELEMENTS);\r\n    }\r\n\r\n    /**\r\n     * Get all training data as a data tensor and a labels tensor.\r\n     *\r\n     * @returns\r\n     *   xs: The data tensor, of shape `[numTrainExamples, 28, 28, 1]`.\r\n     *   labels: The one-hot encoded labels tensor, of shape\r\n     *     `[numTrainExamples, 10]`.\r\n     */\r\n    getTrainData() {\r\n        const xs = tf.tensor4d(\r\n            this.trainImages,\r\n            [this.trainImages.length / IMAGE_SIZE, IMAGE_H, IMAGE_W, 1]);\r\n        const labels = tf.tensor2d(\r\n            this.trainLabels, [this.trainLabels.length / NUM_CLASSES, NUM_CLASSES]);\r\n        return { xs, labels };\r\n    }\r\n\r\n    /**\r\n     * Get all test data as a data tensor a a labels tensor.\r\n     *\r\n     * @param {number} numExamples Optional number of examples to get. If not\r\n     *     provided,\r\n     *   all test examples will be returned.\r\n     * @returns\r\n     *   xs: The data tensor, of shape `[numTestExamples, 28, 28, 1]`.\r\n     *   labels: The one-hot encoded labels tensor, of shape\r\n     *     `[numTestExamples, 10]`.\r\n     */\r\n    getTestData(numExamples: any) {\r\n        let xs = tf.tensor4d(\r\n            this.testImages,\r\n            [this.testImages.length / IMAGE_SIZE, IMAGE_H, IMAGE_W, 1]);\r\n        let labels = tf.tensor2d(\r\n            this.testLabels, [this.testLabels.length / NUM_CLASSES, NUM_CLASSES]);\r\n\r\n        if (numExamples != null) {\r\n            xs = xs.slice([0, 0, 0, 0], [numExamples, IMAGE_H, IMAGE_W, 1]);\r\n            labels = labels.slice([0, 0], [numExamples, NUM_CLASSES]);\r\n        }\r\n        return { xs, labels };\r\n    }\r\n}","import { DefinitionIndeCanvasCore } from '../Core/DefinitionIndeCanvasCore';\r\n\r\nimport { TFProject } from '..';\r\nimport * as tf from '@tensorflow/tfjs';\r\nexport class Blank extends DefinitionIndeCanvasCore {\r\n    p: number[] = [0, 0];\r\n    constructor(tfProject: TFProject) {\r\n        super(tfProject);\r\n\r\n        this.Init();\r\n    }\r\n    Init() {\r\n    //     console.log(tf.version);\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.beginPath();\r\n        ctx.arc(this.p[0], this.p[1], 5, 0, 3.14 * 2);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.p = [x, y];\r\n    }\r\n}","import { Canvas } from '../../Model/GraphicsCoreWrapper/CanvasWrapper/Canvas/Canvas';\r\nimport { ActiveCommandController } from './Core/ActiveCommandController';\r\n\r\nimport { DefinitionIndeCanvasCore } from './Core/DefinitionIndeCanvasCore';\r\nimport { JSLinearRegression01 } from './Definition/JSLinearRegression01';\r\nimport { JSLinearRegressionGradientDescent02 } from './Definition/JSLinearRegressionGradientDescent02';\r\n\r\nimport { TFLinearRegressionGradientDescent01 } from './Definition/TFLinearRegressionGradientDescent01';\r\nimport { TFPolynomialRegressionGradientDescent02 } from './Definition/TFPolynomialRegressionGradientDescent02';\r\nimport { TFPolynomialRegressionGradientDescent03Interaction } from './Definition/TFPolynomialRegressionGradientDescent03Interaction';\r\nimport { TFModel01 } from './Definition/TFModel01';\r\nimport { TFModel02XOR } from './Definition/TFModel02XOR';\r\nimport { TFModel03Iris } from './Definition/TFModel03Iris';\r\nimport { TFModel03SmartDrawing } from './Definition/TFModel03SmartDrawing';\r\n\r\nimport { TFModel01HorsepowerAndMilesPerGallon } from './Definition/TFModel01HorsepowerAndMilesPerGallon';\r\nimport { TFMnist } from './Definition/TFMnist';\r\n\r\nimport { Blank } from './Definition/Blank';\r\nimport { Implementation } from '..';\r\nexport class TFProject {\r\n    implementation: Implementation;\r\n    canvas: Canvas;\r\n    activeCommandController: ActiveCommandController;\r\n\r\n    definitions: DefinitionIndeCanvasCore[] = [];\r\n\r\n    constructor(implementation: Implementation) {\r\n\r\n        // console.log('==================')\r\n        \r\n        this.implementation = implementation;\r\n        this.canvas = implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas;\r\n\r\n        this.activeCommandController = new ActiveCommandController(this);\r\n        this.Init();\r\n        this.InitDefinition();\r\n        this.InitDefault();\r\n        this.initPullDown();\r\n    }\r\n    public Init() {\r\n        this.definitions = [];\r\n    }\r\n    get width() {\r\n        return this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.canvas.width;\r\n    }\r\n    get height() {\r\n        return this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.canvas.height;\r\n    }\r\n    InitDefinition() {\r\n        for (let d of this.definitions) { d.Init(this.implementation.app.model.graphicsCoreWrapper.canvasWrapper.canvas.ctx); }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        // for (let d of this.definitions) {d.Render(ctx); }\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseMovePre(x, y); }\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseLeftClickPre(x, y); }\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDownPre(x, y); }\r\n    }\r\n    MouseUp(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseUpPre(x, y); }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDragPre(x, y); }\r\n    }\r\n    MouseMiddleClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseMiddleClickPre(x, y); }\r\n    }\r\n    MouseRightClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseRightClickPre(x, y); }\r\n    }\r\n    MouseDoubleClick(x: number, y: number) {\r\n        for (let d of this.definitions) { d.MouseDoubleClickPre(x, y); }\r\n    }\r\n    MouseWheel(x: number, y: number, v: number) {\r\n        for (let d of this.definitions) { d.MouseWheelPre(x, y, v); }\r\n    }\r\n    Dispose() {\r\n        this.definitions = [];\r\n    }\r\n    InitDefault() {\r\n        // new TFModel03SmartDrawing(this);\r\n\r\n    }\r\n    LoadDefinition(v: string) {\r\n        // console.log('project code', v);\r\n        if (v === 'blank') { new Blank(this); }\r\n\r\n        // ...............................................................................\r\n\r\n        if (v === 'TFModel02XOR') { new TFModel02XOR(this, 480, 500); }\r\n        if (v === 'TFModel03Iris') { new TFModel03Iris(this, 480, 500); }\r\n        if (v === 'TFModel03SmartDrawing') { new TFModel03SmartDrawing(this, 480, 500); }\r\n\r\n        if (v === 'TFModel01HorsepowerAndMilesPerGallon') { new TFModel01HorsepowerAndMilesPerGallon(this, 500, 500); }\r\n\r\n        // ...............................................................................\r\n        if (v === 'TFModel01') { new TFModel01(this, 500, 500); }\r\n\r\n        if (v === 'JSLinearRegression') { new JSLinearRegression01(this); }\r\n        if (v === 'JSLinearRegressionGD') { new JSLinearRegressionGradientDescent02(this); }\r\n        if (v === 'TFLinearRegressionGD') { new TFLinearRegressionGradientDescent01(this); }\r\n\r\n        if (v === 'TFPolynomialRegression GD') { new TFPolynomialRegressionGradientDescent02(this); }\r\n        if (v === 'TFPolyRegress Interaction') { new TFPolynomialRegressionGradientDescent03Interaction(this, 500, 500); }\r\n\r\n        if (v === 'TFMnist') { new TFMnist(this, 500, 500); }\r\n\r\n    //     console.log(v);\r\n        // ...............................................................................\r\n    }\r\n    public initPullDown() {\r\n        this.implementation.app.viewController.nUIWrapper.initPullDown();\r\n    }\r\n}"],"names":["TFUtility","d","tf","print","d2","d3","data","Float32Array","i","data2","d1","mul","add","div","d4","d5","sub","matMul","mathScore","historyScore","abs","push","Math","random","shape","dataTensor","constructor","TFDataUtility","static","carsDataReq","fetch","json","map","car","mpg","Miles_per_Gallon","horsepower","Horsepower","filter","csv","dataByClass","targetsByClass","targetLength","example","slice","length","target","toInt","xs","ys","testSplit","numTestExamples","round","numTrainExamples","xTrain","xTest","targets","numExamples","Error","xDims","num","mean","stdDev","array","temp","randomIndex","currentIndex","floor","totalNumData","aCo","bCo","cCo","dCo","std","needYNormal","NUM_POINTS","a","b","c","x","y","pow","square","ymin","min","theRange","max","yNomalized","result","this","GetSyntheticDataTensor","xx","dataSync","yy","ActiveCommandController","scene","MouseEventController","e","CLICK_TYPE","MouseUpPre","MouseWheelPre","MouseDownPre","MouseDragPre","MouseMovePre","MouseDoubleClickPre","MouseRightClickPre","MouseMiddleClickPre","MouseLeftClickPre","MouseDown","MouseLeftClick","MouseMiddleClick","MouseRightClick","MouseUp","MouseDoubleClick","MouseMove","MouseDrag","MouseWheel","wheel","DefinitionIndeCanvasCore","width","height","indeCanvas","mOffX","mOffY","definitions","InitIndeCanvas","implementation","app","needUI","IndependentPanelCanvas","viewController","nUIWrapper","nui","independentPanelWrapper","title","btnHam","isHidden","btnMini","RenderIndependentCanvas","ctx","canvas","Init","IsMouseInsidePanel","vec","HeadHeight","v","JSLinearRegression01","tfProjct","super","xpos","ypos","xspeed","yspeed","xdirection","ydirection","rad","vs","bias","NVector3","MapX","MapY","MathUtility","fillStyle","beginPath","rect","closePath","fill","LinearRegression","RenderLine","arc","PI","y0","y1","lineWidth","strokeStyle","moveTo","lineTo","stroke","xSum","ySum","xMean","yMean","den","JSLinearRegressionGradientDescent02","weight","GradientDescent","error","TFLinearRegressionGradientDescent01","vsTemp","tfLinearRegression","t","TFLinearRegression","InitData","InitUI","document","createElement","style","position","left","color","textContent","append","divHost","getElementById","then","xMin","Number","MAX_SAFE_INTEGER","xMax","MIN_SAFE_INTEGER","yMin","yMax","forEach","pop","train","lineX","predict","lineY","dispose","leraningRate","optimizer","loss","pred","label","xVal","yVal","minimize","TFPolynomialRegressionGradientDescent02","selVec","undefined","onclick","model","modelViewCoreWrapper","viewWrapper","PolynomialRegression","Grid","curveX","predict2d","curveY","weights","dim","predict1d","predict3d","predict4d","predict5d","TFPolynomialRegressionGradientDescent03Interaction","zIndex","m","GridLine","xInterval","yInterval","x0","x1","font","textAlign","fillText","toFixed","TFModel01","tfModel","TFModel","hidden","inputShape","units","activation","output","compileArgs","compile","train1","train0","fit","epochs","response","console","log","history","async","yTrain","config","shuffle","TFModel02XOR","xPredict","inputs","fontSize","j","index","offset","out","trainLoop","setTimeout","TFModel03Iris","inputsTensor","labelsTensor","row","labels","metrics","summary","save","validationData","TFModel03SmartDrawing","DataProcess","CreateModel01","CreateModel02","raw","OpenCSV","processData","labelsTemp","maxNum","allText","allTextLines","split","headers","lines","tarr","dataTemp","isNaN","text","catch","err","name","t0","t1","hidden01","Compile","hidden02","performance","now","TFModel01HorsepowerAndMilesPerGallon","tensorData","convertToTensor","createModel","tfvis","batchSize","callbacks","trainModel","inputData","normalizationData","inputMax","inputMin","labelMin","labelMax","preds","reshape","unNormXs","unNormPreds","predictedPoints","Array","from","val","originalPoints","values","series","xLabel","yLabel","testModel","useBias","inputTensor","labelTensor","TFMnist","col","MnistData","marginTop","marginBottom","IMAGE_SIZE","IMAGE_H","NUM_CLASSES","testLabels","trainLabels","testImages","trainImages","datasetImages","datasetLabels","img","Image","getContext","imgRequest","Promise","resolve","reject","crossOrigin","onload","naturalWidth","naturalHeight","datasetBytesBuffer","ArrayBuffer","NUM_DATASET_ELEMENTS","chunkSize","datasetBytesView","drawImage","imageData","getImageData","src","labelsRequest","labelsResponse","all","Uint8Array","arrayBuffer","getTrainData","getTestData","Blank","tfProject","p","TFProject","activeCommandController","graphicsCoreWrapper","canvasWrapper","InitDefinition","InitDefault","initPullDown","Render","Dispose","LoadDefinition"],"sourceRoot":""}