{"version":3,"file":"static/js/51211.af2b4b0d.chunk.js","mappings":"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","sources":["../node_modules/d3-geo/src/projection/mercator.js","../node_modules/d3-geo/src/projection/equirectangular.js","../node_modules/d3-geo/src/projection/conicEquidistant.js","../node_modules/d3-geo/src/projection/equalEarth.js","../node_modules/d3-geo/src/projection/azimuthal.js","../node_modules/d3-geo/src/projection/gnomonic.js","../node_modules/d3-geo/src/projection/conicConformal.js","../node_modules/d3-geo/src/projection/stereographic.js","../node_modules/d3-geo/src/projection/orthographic.js","njslab/Tools/D3WorldMapProjection/Implementation/WorldMapProjection/index.ts","njslab/Tools/D3WorldMapProjection/Implementation/index.ts","njslab/Tools/D3WorldMapProjection/index.ts"],"sourcesContent":["import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {equirectangularRaw} from \"./equirectangular.js\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {mercatorRaw} from \"./mercator.js\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {\r\n    geoPath,\r\n    geoGraticule,\r\n    GeoProjection,\r\n    // geoDistance,\r\n    geoOrthographic,\r\n    geoMercator,\r\n    geoConicEqualArea,\r\n    geoConicEquidistant,\r\n    geoEqualEarth,\r\n    geoEquirectangular,\r\n    geoGnomonic,\r\n    geoConicConformal,\r\n    geoStereographic,\r\n} from 'd3-geo';\r\nimport { PROJECTION_TYPE } from '../../lib';\r\nimport { Implementation } from '..';\r\nconst worldMap = require('./worldMap110mLand.json');\r\nexport class WorldMapProjection {\r\n    Implementation: Implementation;\r\n    divHost: HTMLElement;\r\n\r\n    // private listHashColor: HashColorInterface = {};\r\n    public listShapes: Object;\r\n    // public implmentation: Implmentation;\r\n    width = 1000;\r\n    height = 1000;\r\n    mp: number[] = [0, 0];\r\n    // tslint:disable-next-line:no-any\r\n    geoGenerator: any;\r\n    // tslint:disable-next-line:no-any\r\n    projection: GeoProjection;\r\n    yaw: number = 0;\r\n    roll: number = -21;\r\n    ctx: CanvasRenderingContext2D;\r\n    options = {\r\n        MERCATOR: geoMercator(),\r\n        // ORTHOGRAPHIC: geoOrthographic(),\r\n        CONIC_EQUAL_AREA: geoConicEqualArea(),\r\n        CONIC_EQUI_DISTANT: geoConicEquidistant(),\r\n        EQUAL_EARTH: geoEqualEarth(),\r\n        EQUI_RECTANGULAR: geoEquirectangular(),\r\n        GNOMONIC: geoGnomonic(),\r\n        CONIC_CONFORMAL: geoConicConformal(),\r\n        STEREO_GRAPHIC: geoStereographic(),\r\n        ORTHOGRAPHIC: geoOrthographic()\r\n            .scale(300)\r\n            .translate([487.5, 350]),\r\n    };\r\n    // tslint:disable-next-line:no-any\r\n    geojson: any;\r\n    data: any;\r\n    clickNum = 0;\r\n    prevent: boolean;\r\n    delay: number = 250;\r\n    timer: NodeJS.Timer | number;\r\n    press: boolean = false;\r\n    mousePre: number[] = [0, 0];\r\n    constructor(Implementation: Implementation) {\r\n        this.Implementation = Implementation;\r\n        this.listShapes = {};\r\n        this.InitUI();\r\n        this.InitCanvas();\r\n        this.Init();\r\n    }\r\n    public InitUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.left = '40px';\r\n        // div.style.color = '#ffffff';\r\n\r\n        let t = document.createElement('p');\r\n        t.textContent = 'World Map Projection';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.textContent = '* drag to pan';\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        // t.style.color = this.col[0];\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        // t.style.color = this.col[1];\r\n        t.textContent = '* double click to shfit the projection';\r\n        div.append(t);\r\n        this.Implementation.divHost.append(div);\r\n    }\r\n    private InitCanvas() {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = 1000; // this.implmentation.implementation.div.style.width;\r\n        canvas.height = 1000; // this.implmentation.implementation.div.style.height;\r\n        this.Implementation.divHost.append(canvas);\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            this.ctx = ctx;\r\n            this.AppendEvent(canvas);\r\n        }\r\n    }\r\n    public AppendEvent(ele: HTMLElement) {\r\n        ele.onclick = (e: MouseEvent) => {\r\n            this.prevent = false;\r\n            this.timer = setTimeout(\r\n                () => {\r\n                    if (!this.prevent) {\r\n                        // this.MouseClick(e);\r\n                    }\r\n                    this.prevent = false;\r\n                },\r\n                this.delay);\r\n        };\r\n        ele.ondblclick = (e: MouseEvent) => {\r\n            clearTimeout(this.timer as number);\r\n            this.prevent = true;\r\n            this.MouseDoubleClick();\r\n        };\r\n        ele.onmousedown = (e: MouseEvent) => { this.press = true; };\r\n        ele.onmouseup = (e: MouseEvent) => { this.press = false; };\r\n        ele.onmousemove = (e: MouseEvent) => { this.MouseMove(e.x, e.y); };\r\n        // ele.addEventListener('wheel', (e: WheelEvent) => this.MouseWheel(e, e.deltaY));\r\n    }\r\n    public MouseMove(x: number, y: number) {\r\n        if (this.press) {\r\n            this.MouseDrag(x, y);\r\n            // return;\r\n        }\r\n        this.mp[0] = x;\r\n        this.mp[1] = y;\r\n        this.mousePre[0] = x;\r\n        this.mousePre[1] = y;\r\n    }\r\n    public MouseDrag(x: number, y: number) {\r\n        this.yaw += (x - this.mousePre[0]) * 0.53;\r\n        this.roll -= (y - this.mousePre[1]) * 0.53;\r\n        // this.mousePre[0] = x;\r\n        // this.mousePre[1] = y;\r\n    }\r\n    public MouseDoubleClick() {\r\n        this.clickNum++;\r\n        if (this.clickNum % 6 === 0) {\r\n            this.projection = geoMercator();\r\n        } else if (this.clickNum % 6 === 1) {\r\n            this.projection = geoConicEquidistant();\r\n        } else if (this.clickNum % 6 === 2) {\r\n            this.projection = geoConicEqualArea();\r\n        } else if (this.clickNum % 6 === 3) {\r\n            this.projection = geoConicConformal();\r\n        } else if (this.clickNum % 6 === 4) {\r\n            this.projection = geoStereographic();\r\n        } else if (this.clickNum % 6 === 5) {\r\n            this.projection = geoOrthographic()\r\n                .scale(300)\r\n                .translate([487.5, 350]);\r\n        }\r\n        // geoEquirectangular\r\n        this.geoGenerator = geoPath()\r\n            .projection(this.projection)\r\n            .pointRadius(4)\r\n            .context(this.ctx);\r\n    }\r\n    async Init() {\r\n        this.geojson = worldMap;\r\n        // https://blockbuilder.org/macsj200/0e8584f0e6b95d5924bd79fcc1163a6c\r\n        // this.projection: GeoConicProjection = geoAlbers()\r\n        // .translate([this.width / 2, this.height / 2]) // translate to center of screen\r\n        // .scale(1000); // scale things down so see entire US\r\n        // this.projection = geoOrthographic().scale(300).translate([487.5, 350]);\r\n        // this.projection = geoAlbersUsa().scale(1300).translate([487.5, 305]);\r\n        // Define path generator // path generator that will convert GeoJSON to SVG paths\r\n        // let path = geoPath().projection(this.projection); // tell path generator to use albersUsa projection\r\n        // console.log(path);\r\n        this.projection = this.options[PROJECTION_TYPE.EQUAL_EARTH];\r\n        this.geoGenerator = geoPath()\r\n            .projection(this.projection)\r\n            .pointRadius(4)\r\n            .context(this.ctx);\r\n        this.Update();\r\n    }\r\n    public Dispose() {\r\n        // this.isRemoved = true;\r\n        // this.definition.expressMapping.implementation.div.childNodes.forEach((e: HTMLElement) => {\r\n        //     this.definition.expressMapping.implementation.div.removeChild(e);\r\n        // });\r\n    }\r\n    public Update() {\r\n        requestAnimationFrame(() => {\r\n            // if (this.isRemoved) {return; }\r\n            this.Update();\r\n        });\r\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        // Graticule\r\n        let graticule = geoGraticule();\r\n        this.ctx.beginPath();\r\n        this.ctx.strokeStyle = '#eee';\r\n        this.geoGenerator(graticule());\r\n        this.ctx.strokeStyle = '#bbbbbb';\r\n        this.ctx.stroke();\r\n        this.projection.rotate([this.yaw, this.roll]); // -45\r\n        this.ctx.lineWidth = 0.5;\r\n        this.ctx.strokeStyle = '#333';\r\n        this.ctx.beginPath();\r\n        this.geoGenerator({ type: 'FeatureCollection', features: this.geojson.features });\r\n        // this.geoGenerator({type: 'GeometryCollection', features: this.topo.objects.states});\r\n        // for (let i = 0; i < this.topo.objects.states.geometries.length; ++i) {\r\n        // for (let j = 0 ; j < this.topo.objects.states.geometries[i].arcs.length; ++j) {\r\n        // console.log(this.topo.objects.states.geometries[i].arcs[j]);\r\n        // }\r\n        // }\r\n        this.ctx.stroke();\r\n        const p = this.projection([this.mp[0], this.mp[1]]);\r\n        // console.log(p);\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(this.mp[0], this.mp[1], 10, 0, 3.14 * 2);\r\n        this.ctx.closePath();\r\n        this.ctx.fillStyle = '#ff0000';\r\n        this.ctx.fill();\r\n        if (p) {\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(p[0], p[1], 10, 0, 3.14 * 2);\r\n            this.ctx.closePath();\r\n            this.ctx.fillStyle = '#00ff00';\r\n            this.ctx.fill();\r\n        }\r\n        // this.VisData();\r\n        // this.yaw -= 0.2;\r\n        // console.log(this.yaw);\r\n    }\r\n    public UpdateProjection() {\r\n        this.geoGenerator = geoPath()\r\n            .projection(this.projection)\r\n            .pointRadius(4)\r\n            .context(this.ctx);\r\n    }\r\n    // GetPro() {\r\n    // λ *= 180 / Math.PI, φ *= 180 / Math.PI;\r\n    // var p0 = projection0([λ, φ]), p1 = projection1([λ, φ]);\r\n    // return [(1 - t) * p0[0] + t * p1[0], (1 - t) * -p0[1] + t * -p1[1]];\r\n    // }\r\n    // }\r\n    // MouseEventController(e: MouseEventData): void {\r\n    // this.\r\n    // // TODO\r\n    // }\r\n}\r\n\r\n// geoConicEqualArea\r\n// {name: 'Aitoff', projection: aitoff()},\r\n// {name: 'Albers', projection: albers().scale(145).parallels([20, 50])},\r\n// {name: 'August', projection: august().scale(60)},\r\n// {name: 'Baker', projection: baker().scale(100)},\r\n// {name: 'Boggs', projection: boggs()},\r\n// {name: 'Bonne', projection: bonne().scale(120)},\r\n// {name: 'Bromley', projection: bromley()},\r\n// {name: 'Collignon', projection: collignon().scale(93)},\r\n// {name: 'Craster Parabolic', projection: craster()},\r\n// {name: 'Eckert I', projection: eckert1().scale(165)},\r\n// {name: 'Eckert II', projection: eckert2().scale(165)},\r\n// {name: 'Eckert III', projection: eckert3().scale(180)},\r\n// {name: 'Eckert IV', projection: eckert4().scale(180)},\r\n// {name: 'Eckert V', projection: eckert5().scale(170)},\r\n// {name: 'Eckert VI', projection: eckert6().scale(170)},\r\n// {name: 'Eisenlohr', projection: eisenlohr().scale(60)},\r\n// {name: 'Equirectangular (Plate Carrée)', projection: equirectangular()},\r\n// {name: 'Hammer', projection: hammer().scale(165)},\r\n// {name: 'Hill', projection: hill()},\r\n// {name: 'Goode Homolosine', projection: homolosine()},\r\n// {name: 'Kavrayskiy VII', projection: kavrayskiy7()},\r\n// {name: 'Lambert cylindrical equal-area', projection: cylindricalEqualArea()},\r\n// {name: 'Lagrange', projection: lagrange().scale(120)},\r\n// {name: 'Larrivée', projection: larrivee().scale(95)},\r\n// {name: 'Laskowski', projection: laskowski().scale(120)},\r\n// {name: 'Loximuthal', projection: loximuthal()},\r\n// // {name: 'Mercator', projection: mercator().scale(490 / 2 / Math.PI)},\r\n// {name: 'Miller', projection: miller().scale(100)},\r\n// {name: 'McBryde–Thomas Flat-Polar Parabolic', projection: mtFlatPolarParabolic()},\r\n// {name: 'McBryde–Thomas Flat-Polar Quartic', projection: mtFlatPolarQuartic()},\r\n// {name: 'McBryde–Thomas Flat-Polar Sinusoidal', projection: mtFlatPolarSinusoidal()},\r\n// {name: 'Mollweide', projection: mollweide().scale(165)},\r\n// {name: 'Natural Earth', projection: naturalEarth()},\r\n// {name: 'Nell–Hammer', projection: nellHammer()},\r\n// {name: 'Polyconic', projection: polyconic().scale(100)},\r\n// {name: 'Robinson', projection: robinson()},\r\n// {name: 'Sinusoidal', projection: sinusoidal()},\r\n// {name: 'Sinu-Mollweide', projection: sinuMollweide()},\r\n// {name: 'van der Grinten', projection: vanDerGrinten().scale(75)},\r\n// {name: 'van der Grinten IV', projection: vanDerGrinten4().scale(120)},\r\n// {name: 'Wagner IV', projection: wagner4()},\r\n// {name: 'Wagner VI', projection: wagner6()},\r\n// {name: 'Wagner VII', projection: wagner7()},\r\n// {name: 'Winkel Tripel', projection: winkel3()}\r\n// ];","import { WorldMapProjection } from './WorldMapProjection';\r\nexport class Implementation {\r\n    WorldMapProjection: WorldMapProjection;\r\n    divHost: HTMLElement;\r\n    constructor(id: string) {\r\n        const divHost = document.getElementById(id);\r\n        if (divHost) {\r\n            this.divHost = divHost;\r\n            this.InitApp();\r\n        }\r\n\r\n    }\r\n    public InitApp() {\r\n        // console.log('ddsdd');\r\n        this.WorldMapProjection = new WorldMapProjection(this);\r\n\r\n        // document.body.style.overflow = 'auto';\r\n    }\r\n}","import { Implementation } from './Implementation';\r\nexport class Demo22AppD3WorldMapProjection {\r\n    implementation: Implementation;\r\n    static Init(id: string) {\r\n        const n = new Demo22AppD3WorldMapProjection(id);\r\n        n.Dummy();\r\n    }\r\n    constructor(id: string = 'SandBox') {\r\n        this.implementation = new Implementation(id);\r\n    }\r\n    public Dummy() {\r\n        //\r\n    }\r\n}\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n\r\n    constructor(id: string ) {\r\n        this.divHost = document.getElementById(id);\r\n\r\n        Demo22AppD3WorldMapProjection.Init(id)\r\n    }\r\n    public destroy() {\r\n        if (this.divHost) {\r\n            try {\r\n                while (this.divHost.firstChild) {\r\n                    this.divHost.removeChild(this.divHost.firstChild);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error in destroy method:', error);\r\n            }\r\n        } else {\r\n            console.warn('divHost is undefined in destroy method');\r\n        }\r\n    }\r\n}"],"names":["mercatorRaw","lambda","phi","log","tan","halfPi","project","y0","x1","y1","m","projection","center","scale","translate","clipExtent","x0","reclip","k","pi","t","rotation","rotate","invert","Math","max","min","_","arguments","length","mercatorProjection","tau","x","y","atan","exp","equirectangularRaw","conicEquidistantRaw","cy0","cos","n","sin","g","abs","epsilon","gy","nx","atan2","sign","sqrt","conicProjection","A1","A2","A3","A4","M","equalEarthRaw","l","asin","l2","l6","azimuthalInvert","angle","z","c","sc","cc","gnomonicRaw","cy","tany","conicConformalRaw","f","pow","r","fy","parallels","stereographicRaw","clipAngle","orthographicRaw","delta","i","epsilon2","worldMap","require","WorldMapProjection","constructor","Implementation","divHost","listShapes","width","height","mp","geoGenerator","yaw","roll","ctx","options","MERCATOR","geoMercator","CONIC_EQUAL_AREA","geoConicEqualArea","CONIC_EQUI_DISTANT","geoConicEquidistant","EQUAL_EARTH","EQUI_RECTANGULAR","GNOMONIC","CONIC_CONFORMAL","geoConicConformal","STEREO_GRAPHIC","geoStereographic","ORTHOGRAPHIC","geoOrthographic","geojson","data","clickNum","prevent","delay","timer","press","mousePre","this","InitUI","InitCanvas","Init","div","document","createElement","style","position","left","textContent","append","marginTop","marginBottom","canvas","getContext","AppendEvent","ele","onclick","e","setTimeout","ondblclick","clearTimeout","MouseDoubleClick","onmousedown","onmouseup","onmousemove","MouseMove","MouseDrag","geoPath","pointRadius","context","async","PROJECTION_TYPE","Update","Dispose","requestAnimationFrame","clearRect","graticule","geoGraticule","beginPath","strokeStyle","stroke","lineWidth","type","features","p","arc","closePath","fillStyle","fill","UpdateProjection","id","getElementById","InitApp","Demo22AppD3WorldMapProjection","static","Dummy","implementation","Solution","destroy","firstChild","removeChild","error","console","warn"],"sourceRoot":""}