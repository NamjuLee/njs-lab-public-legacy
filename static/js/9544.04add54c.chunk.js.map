{"version":3,"file":"static/js/9544.04add54c.chunk.js","mappings":"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","sources":["njslab/Env/RhinoViewer/Asset/index.ts","njslab/Env/RhinoViewer/ViewWrapper/index.ts","njslab/Env/RhinoViewer/GraphicsCoreWrapper/CanvasWrapper/CanvasThree/CoreThree/CameraController.ts","njslab/Env/RhinoViewer/GraphicsCoreWrapper/CanvasWrapper/CanvasThree/CanvasThree.ts","njslab/Env/RhinoViewer/GraphicsCoreWrapper/CanvasWrapper/index.ts","njslab/Env/RhinoViewer/GraphicsCoreWrapper/ThemeWrapper/index.ts","njslab/Env/RhinoViewer/GraphicsCoreWrapper/index.ts","njslab/Env/RhinoViewer/SceneWrapper/ActiveCommand/ActiveCommandController.ts","njslab/Env/RhinoViewer/SceneWrapper/GeometryCommon/GeometryCommon.ts","njslab/Env/RhinoViewer/SceneWrapper/Light/LightingController.ts","njslab/Env/RhinoViewer/SceneWrapper/Definition/index.ts","njslab/Env/RhinoViewer/SceneWrapper/index.ts","njslab/Env/RhinoViewer/IO/Mouseinteraction/MouseInteraction.ts","njslab/Env/RhinoViewer/IO/index.ts","njslab/Env/RhinoViewer/index.ts"],"sourcesContent":["const urban = require('./obj/tt.json');\r\n\r\nexport class Asset {\r\n    // tslint:disable-next-line:no-any\r\n    urban: any;\r\n\r\n    constructor() {\r\n        this.urban = urban;\r\n    }\r\n}\r\n","import { RhinoViewer } from '..';\r\nexport class ViewWrapper {\r\n    implementation: RhinoViewer;\r\n    div: HTMLElement;\r\n    constructor(implementation: RhinoViewer) {\r\n        this.implementation = implementation;\r\n        // this.div.style.pointerEvents = 'auto';\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { OrbitControls } from 'three-orbitcontrols-ts';\r\nimport { MouseEventData, CLICK_TYPE } from '../../../../lib';\r\nimport { CanvasThree } from '../CanvasThree';\r\n\r\n// const DeviceOrientationControls = require('../../lib/DeviceOrientationControls');\r\n// const StereoEffect = require('../../lib/StereoEffect');\r\n\r\n// import { StereoEffect } from '../lib/StereoEffect';\r\n\r\nexport enum CAMERA_TYPE {\r\n    PERSPECTIVE = 'PERSPECTIVE',\r\n    ORTHOGRAPHIC = 'ORTHOGRAPHIC',\r\n    STEREO = 'STEREO'\r\n}\r\n\r\nexport class CameraControllerThree {\r\n\r\n    canvas: CanvasThree;\r\n    cameraP: THREE.PerspectiveCamera; // Camera;\r\n    cameraO: THREE.OrthographicCamera; // Camera;\r\n    controls: OrbitControls;\r\n\r\n    initX: number = 0;\r\n    initY: number = 0;\r\n    prevX: number = 0;\r\n    prevY: number = 0;\r\n\r\n    yRotRate: number;\r\n    xRotRate: number;\r\n    xPanRate: number;\r\n    yPanRate: number;\r\n    zPanRate: number;\r\n\r\n    rotateRate: number = 150; // 0.000000001; // 150;\r\n    panRate: number = 50; // 0.000000001; // 400;\r\n    zoomRate: number = 200; // 0.000000001; // 200;\r\n\r\n    zoomFactor: number = 1;\r\n\r\n    frustumSize: number = 0.001; // 500;\r\n\r\n    type: CAMERA_TYPE;\r\n    cameraShift: number = 0;\r\n\r\n    width: number;\r\n    height: number;\r\n    ableToMove: boolean = true;\r\n\r\n    // tslint:disable-next-line:no-any\r\n    stereoCamera: THREE.StereoCamera;\r\n\r\n    constructor(canvas: CanvasThree, width: number, height: number, type: CAMERA_TYPE = CAMERA_TYPE.PERSPECTIVE) {\r\n        this.canvas = canvas;\r\n        this.type = type;\r\n        this.width = width; this.height = height;\r\n        // this.aspect = width / height;\r\n\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            this.GetPerspective(0, 10, 15);\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            this.GetOrthographic();\r\n        } else if (this.type === CAMERA_TYPE.STEREO) {\r\n            this.GetStereo();\r\n        }\r\n        this.stereoCamera = new THREE.StereoCamera(); // (this.canvas.renderer);\r\n    }\r\n    GetStereo() {\r\n\r\n        // console.log(StereoEffect);\r\n        // console.log(DeviceOrientationControls);\r\n\r\n    }\r\n    set aspect(aspect: number) {\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            this.cameraP.aspect = aspect;\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            //\r\n        }\r\n    }\r\n    get aspect() {\r\n        return this.width / this.height;\r\n    }\r\n    get camera() {\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            return this.cameraP;\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            return this.cameraO;\r\n        } else {\r\n            return this.cameraP;\r\n        }\r\n    }\r\n    GetPerspective(x: number = 0, y: number = 2, z: number = 2) {\r\n        this.cameraP = new THREE.PerspectiveCamera(45, this.width / this.height, 0.01, 10000);\r\n        this.cameraP.position.set(x, y, z);\r\n        this.InitOrbitController();\r\n    }\r\n    GetOrthographic() {\r\n        this.cameraO = new THREE.OrthographicCamera(this.frustumSize * this.aspect / - 2, this.frustumSize * this.aspect / 2, this.frustumSize / 2, this.frustumSize / - 2, 0.01, 50000);\r\n        this.cameraO.position.set(0, 1, 0);\r\n        this.InitOrbitController();\r\n    }\r\n    InitOrbitController() {\r\n\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            this.controls = new OrbitControls(this.cameraP, this.canvas.renderer.domElement);\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            this.controls = new OrbitControls(this.cameraO, this.canvas.renderer.domElement);\r\n        }\r\n        // this.controls.panningMode = THREE.HorizontalPanning; // default is THREE.ScreenSpacePanning\r\n        this.controls.minDistance = 0.01;\r\n        this.controls.maxDistance = 500;\r\n        // this.controls.maxPolarAngle = Math.PI / 2;\r\n        this.controls.enablePan = true;\r\n        this.controls.enableZoom = true;\r\n\r\n        this.yRotRate = this.rotateRate / this.width * Math.PI / 90;\r\n        this.xRotRate = this.rotateRate / this.height * Math.PI / 180;\r\n        this.xPanRate = (this.panRate / this.width) * this.zoomFactor;\r\n        this.yPanRate = (this.panRate / this.height) * this.zoomFactor;\r\n        this.zPanRate = this.zoomRate / this.height;\r\n        // this.EnableDamping(true);\r\n\r\n        // this.controls.maxPolarAngle = 1.5; // ground\r\n    }\r\n    EnableDamping(v: boolean, factor: number = 0.35) {\r\n        this.controls.enableDamping = v; // an animation loop is required when either damping or auto-rotation are enabled\r\n        this.controls.dampingFactor = factor;\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.initX = this.prevX = x; // - this.offsetX;\r\n        this.initY = this.prevY = y; // - this.offsetY;\r\n    }\r\n    MouseMove(x: number, y: number, shift: boolean = false) {\r\n        if (!this.ableToMove) { return; }\r\n\r\n        // console.log(x,y)\r\n        const dx = x - this.prevX;\t\t// Difference since last mouse move\r\n        const dy = y - this.prevY;\r\n\r\n        // When shift is being helt down, we pan around else we rotate.\r\n        if (!shift) {\r\n            this.controls.rotateLeft(dx * this.xRotRate);\r\n            this.controls.rotateUp(dy * this.yRotRate);\r\n\r\n        } else {\r\n            // this.controls.pan(dx * this.xPanRate, dy * this.yPanRate);\r\n\r\n            this.controls.panLeft(dx * this.xPanRate, this.cameraP.matrix);\r\n            this.controls.panUp(dy * this.yPanRate, this.cameraP.matrix);\r\n\r\n            // this.camera.transform.position.x += -dx * this.xPanRate;\r\n            // this.camera.transform.position.y += dy * this.yPanRate;\r\n        }\r\n        // this.controls.panUp(0.001, this.camera.matrix);\r\n        this.prevX = x;\r\n        this.prevY = y;\r\n        // this.controls.update();\r\n    }\r\n    MouseWheel(v: number) {\r\n        // console.log(v);\r\n        this.controls.enableZoom = true;\r\n        v *= 0.1;\r\n\r\n        const dd = this.cameraP.position.length() * 100;\r\n\r\n        this.zoomFactor = dd;\r\n\r\n        if (v > 0) {\r\n            this.cameraP.position.x *= 0.9;\r\n            this.cameraP.position.y *= 0.9;\r\n            this.cameraP.position.z *= 0.9;\r\n        } else {\r\n            this.cameraP.position.x *= 1.1;\r\n            this.cameraP.position.y *= 1.1;\r\n            this.cameraP.position.z *= 1.1;\r\n        }\r\n\r\n    }\r\n    ShiftCamera() {\r\n        this.cameraShift++;\r\n        if (this.cameraShift === 2) { this.cameraShift = 0; }\r\n        if (this.cameraShift === 0) {\r\n            this.GetPerspective();\r\n        } else if (this.cameraShift === 1) {\r\n            this.GetOrthographic();\r\n        }\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        if (e.CLICK_TYPE === CLICK_TYPE.DOWN) { this.MouseDown(e.x, e.y); }\r\n        if (e.CLICK_TYPE === CLICK_TYPE.DRAG) { this.MouseMove(e.x, e.y, e.pressedShift); }\r\n        if (e.CLICK_TYPE === CLICK_TYPE.WHEEL) { this.MouseWheel(e.wheel); }\r\n\r\n    }\r\n}","import * as THREE from 'three';\r\n\r\nimport { CanvasWrapper } from '..';\r\nimport { CameraControllerThree } from './CoreThree/CameraController';\r\n// import * as WebVR from '../../../../../lib/WebVR/WebVR';\r\nexport class CanvasThree {\r\n    hostDiv: HTMLElement;\r\n    camera: CameraControllerThree;\r\n    scene: THREE.Scene;\r\n    renderer: THREE.WebGLRenderer;\r\n\r\n    canvasWrapper: CanvasWrapper;\r\n    vrBtn: HTMLElement;\r\n    bg: number = 0x000000;\r\n    isActive: boolean = true;\r\n\r\n    constructor(canvasWrapper: CanvasWrapper, hostDiv: HTMLElement) {\r\n        this.canvasWrapper = canvasWrapper;\r\n        this.hostDiv = hostDiv;\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        const width = this.hostDiv.clientWidth;\r\n        const height = this.hostDiv.clientHeight;\r\n\r\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n        this.renderer.setPixelRatio(width / height);\r\n\r\n        this.camera = new CameraControllerThree(this, width, height);\r\n        this.scene = new THREE.Scene();\r\n        // this.scene.background = this.bg;\r\n\r\n        this.renderer.domElement.id = 'THREE_WALLPAPER';\r\n        this.renderer.domElement.style.position = 'absolute';\r\n        this.renderer.domElement.style.pointerEvents = 'none';\r\n\r\n        this.renderer.setSize(width, height);\r\n        this.hostDiv.appendChild(this.renderer.domElement);\r\n        this.RenderLoop(this);\r\n    }\r\n    RenderLoop(canvas: CanvasThree) {\r\n        if (!this.isActive) { return; }\r\n        requestAnimationFrame(() => { this.RenderLoop(this); });\r\n        this.UpdateBinding();\r\n\r\n        this.camera.controls.update();\r\n        this.renderer.render(this.scene, this.camera.camera);\r\n    }\r\n    UpdateBinding() {\r\n        // console.log('implementation needed');\r\n    }\r\n    ResizeCanvas(width: number, height: number) {\r\n        this.camera.aspect = width / height;\r\n        this.camera.camera.updateProjectionMatrix(); // updateMatrix(); // updateProjectionMatrix();\r\n        this.renderer.setSize(width, height);\r\n    }\r\n    ResizeEffect(width: number, height: number) {\r\n        // this.camera.effect.setSize(width, height);\r\n    }\r\n    Remove() {\r\n        while (this.scene.children.length) {\r\n            this.scene.remove(this.scene.children[0]);\r\n        }\r\n        // this.scene.background = 0x000000;\r\n    }\r\n\r\n}","import { GraphicsCoreWrapper } from '..';\r\nimport { CanvasThree } from './CanvasThree/CanvasThree';\r\n\r\nexport class CanvasWrapper {\r\n    graphicsCoreWrapper: GraphicsCoreWrapper;\r\n    canvasThree: CanvasThree;\r\n\r\n    constructor(graphicsCoreWrapper: GraphicsCoreWrapper) {\r\n        this.graphicsCoreWrapper = graphicsCoreWrapper;\r\n\r\n        this.canvasThree = new CanvasThree(this, this.graphicsCoreWrapper.app.divHost);\r\n    }\r\n}","import { GraphicsCoreWrapper } from '..';\r\n\r\nexport class ThemeWrapper {\r\n    graphicsCoreWrapper: GraphicsCoreWrapper;\r\n    constructor(graphicsCoreWrapper: GraphicsCoreWrapper) {\r\n        this.graphicsCoreWrapper = graphicsCoreWrapper;\r\n    }\r\n}","\r\nimport { RhinoViewer } from '..';\r\n\r\nimport { CanvasWrapper } from './CanvasWrapper';\r\nimport { ThemeWrapper } from './ThemeWrapper';\r\n\r\nexport class GraphicsCoreWrapper {\r\n    app: RhinoViewer;\r\n    canvasWrapper: CanvasWrapper;\r\n    themeWrapper: ThemeWrapper;\r\n    constructor(app: RhinoViewer) {\r\n        this.app = app;\r\n        this.canvasWrapper = new CanvasWrapper(this);\r\n        this.themeWrapper = new ThemeWrapper(this);\r\n    }\r\n    Resize(width: number, height: number) {\r\n        this.canvasWrapper.canvasThree.ResizeCanvas(width, height);\r\n    }\r\n    Dispose() {\r\n        this.canvasWrapper.canvasThree.isActive = false;\r\n    }\r\n}","import { CLICK_TYPE, MouseEventData } from '../../lib';\r\n\r\nimport { SceneWrapper } from '..';\r\n\r\nexport class ActiveCommandController {\r\n    sceneWrapper: SceneWrapper;\r\n\r\n    constructor(sceneWrapper: SceneWrapper) {\r\n        this.sceneWrapper = sceneWrapper;\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        this.sceneWrapper.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.MouseEventController(e);\r\n\r\n        if (e.CLICK_TYPE === CLICK_TYPE.LEFT) {\r\n            this.MouseLeftClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MIDDLE) {\r\n            this.MouseMiddleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN_RIGHT) {\r\n            this.MouseRightClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOUBLE) {\r\n            this.MouseDoubleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MOVE) {\r\n            this.MouseMovePre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DRAG) {\r\n            this.MouseDragPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN) {\r\n            this.MouseDownPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.UP) { this.MouseUpPre(e); return; }\r\n    }\r\n\r\n    // .......................................................\r\n    MouseDown(e: MouseEventData) {/* */ }\r\n    MouseDownPre(e: MouseEventData) {\r\n        this.sceneWrapper.MouseDown(e.x, e.y);\r\n        this.MouseDown(e);\r\n    }\r\n    MouseLeftClick(e: MouseEventData) {/* */ }\r\n    MouseLeftClickPre(e: MouseEventData) {\r\n        this.sceneWrapper.MouseLeftClick(e.x, e.y);\r\n        this.MouseLeftClick(e);\r\n    }\r\n    MouseMiddleClick(e: MouseEventData) {/* */ }\r\n    MouseMiddleClickPre(e: MouseEventData) {\r\n\r\n        this.MouseMiddleClick(e);\r\n    }\r\n    MouseRightClick(e: MouseEventData) { /* */ }\r\n    MouseRightClickPre(e: MouseEventData) {\r\n\r\n        this.MouseRightClick(e);\r\n    }\r\n    MouseUp(e: MouseEventData) { /* */ }\r\n    MouseUpPre(e: MouseEventData) {\r\n        this.sceneWrapper.MouseUp(e.x, e.y);\r\n        this.MouseUp(e);\r\n\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {/* */ }\r\n    MouseDoubleClickPre(e: MouseEventData) {\r\n\r\n        this.MouseDoubleClick(e);\r\n    }\r\n    MouseMove(e: MouseEventData) {/* */ }\r\n    MouseMovePre(e: MouseEventData) {\r\n        this.sceneWrapper.MouseMove(e.x, e.y);\r\n        this.MouseMove(e);\r\n    }\r\n    MouseDrag(e: MouseEventData) {/* */ }\r\n    MouseDragPre(e: MouseEventData) {\r\n        this.sceneWrapper.MouseDrag(e.x, e.y);\r\n        this.MouseDrag(e);\r\n    }\r\n\r\n}","import { SceneWrapper } from '..';\r\nimport { NVector3 } from '../../lib';\r\nimport * as THREE from 'three';\r\nexport class PointInersection {\r\n    vec: NVector3;\r\n    data: THREE.Intersection;\r\n    constructor(x: number, y: number, z: number) {\r\n        this.vec = new NVector3(x, y, z);\r\n    }\r\n}\r\n\r\nexport class GeometryCommon {\r\n    scene: SceneWrapper;\r\n\r\n    // list: WallPaperBase[] = [];\r\n    listMesh: THREE.Object3D[] = [];\r\n\r\n    raycaster: THREE.Raycaster = new THREE.Raycaster();\r\n    m: THREE.Vector2 = new THREE.Vector2(0, 0);\r\n    m3: THREE.Vector3 = new THREE.Vector3(0, 0, 0);\r\n    point: PointInersection | undefined;\r\n\r\n    constructor(scene: SceneWrapper) {\r\n        this.scene = scene;\r\n        this.raycaster.params.Points = { threshold: 0.1 };\r\n\r\n    }\r\n\r\n    Raycast(x: number, y: number, listMesh: THREE.Object3D[]) {\r\n        this.m.x = (x / this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientWidth) * 2 - 1;\r\n        this.m.y = - (y / this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientHeight) * 2 + 1;\r\n\r\n        this.raycaster.setFromCamera(this.m, this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.camera);\r\n\r\n        // let i = this.list.length;\r\n        // while (i--) {\r\n        //     GeometryCommon.list[i].isHover = false;\r\n        // }\r\n\r\n        const intersects = this.raycaster.intersectObjects(listMesh);\r\n        if (intersects.length > 0) {\r\n            const d = intersects[0];\r\n            console.log(d.point);\r\n        }\r\n\r\n        /*\r\n        if (intersects.length > 0) {\r\n            this.point = new PointInersection(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z);\r\n            this.point.data = intersects[0];\r\n            // console.log(this.point);\r\n            // tslint:disable-next-line:no-string-literal\r\n            // let geo = intersects[0].object['geo'] as WallPaperBase;\r\n            // geo.isHover = true;\r\n            // this.Capture = geo;\r\n            // // helper.position.set(0, 0, 0);\r\n            // // helper.lookAt(intersects[0].face.normal);\r\n            // // helper.position.copy(intersects[0].point);\r\n            return intersects[0].object['geo'];\r\n        }\r\n        // }\r\n        this.point = undefined;\r\n        return undefined;\r\n        */\r\n    }\r\n    RaycastPoint(x: number, y: number, listMesh: THREE.Points[]) {\r\n        this.raycaster.params.Points = { threshold: 5 };\r\n        this.m.x = (x / this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientWidth) * 2 - 1;\r\n        this.m.y = - (y / this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientHeight) * 2 + 1;\r\n\r\n        this.raycaster.setFromCamera(this.m, this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.camera);\r\n\r\n        // let i = this.list.length;\r\n        // while (i--) {\r\n        //     GeometryCommon.list[i].isHover = false;\r\n        // }\r\n\r\n        const intersects = this.raycaster.intersectObjects(listMesh);\r\n        if (intersects.length > 0) {\r\n            const d = intersects[0];\r\n            return [d.point.x, d.point.y, d.point.z];\r\n        }\r\n\r\n        /*\r\n        if (intersects.length > 0) {\r\n            this.point = new PointInersection(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z);\r\n            this.point.data = intersects[0];\r\n            // console.log(this.point);\r\n            // tslint:disable-next-line:no-string-literal\r\n            // let geo = intersects[0].object['geo'] as WallPaperBase;\r\n            // geo.isHover = true;\r\n            // this.Capture = geo;\r\n            // // helper.position.set(0, 0, 0);\r\n            // // helper.lookAt(intersects[0].face.normal);\r\n            // // helper.position.copy(intersects[0].point);\r\n            return intersects[0].object['geo'];\r\n        }\r\n        // }\r\n        this.point = undefined;\r\n        return undefined;\r\n        */\r\n        return null;\r\n    }\r\n}","// import { LightUtility } from '../../../lib/NJSCore/GL/Libs/Three/Utility/LightUtility';\r\nimport * as THREE from 'three';\r\nimport { SceneWrapper } from '..';\r\nexport class LightingController {\r\n\r\n    sceneWrapper: SceneWrapper;\r\n\r\n    hemiLight: THREE.HemisphereLight;\r\n    dirLight: THREE.DirectionalLight;\r\n\r\n    constructor(sceneWrapper: SceneWrapper) {\r\n        this.sceneWrapper = sceneWrapper;\r\n        this.Init();\r\n        this.sceneWrapper.app.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.shadowMap.enabled = true;\r\n    }\r\n    Init() {\r\n        // this.scene.add( LightUtility.GetAmbientLight());\r\n        // this.scene.add( LightUtility.GetHemiLight());\r\n        // this.scene.scene.add( LightUtility.GetDirLight());\r\n\r\n        this.hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.03);\r\n        this.hemiLight.color.setHSL(0.6, 1, 0.6);\r\n        this.hemiLight.groundColor.setHSL(0.095, 1, 0.75);\r\n        this.hemiLight.position.set(0, 50, 0);\r\n        // hemiLight.shadow.mapSize.width = 2048 * 2;\r\n        // hemiLight.shadow.mapSize.height = 2048 * 2;\r\n        this.sceneWrapper.scene.add(this.hemiLight);\r\n\r\n        const hemiLightHelper = new THREE.HemisphereLightHelper(this.hemiLight, .01);\r\n        this.sceneWrapper.scene.add(hemiLightHelper);\r\n        //\r\n        this.dirLight = new THREE.DirectionalLight(0xffffff, 0.1);\r\n        this.dirLight.color.setHSL(0.1, 1, 0.95);\r\n        this.dirLight.position.set(- 1, 1.75, 1);\r\n        this.dirLight.position.multiplyScalar(30);\r\n        this.sceneWrapper.scene.add(this.dirLight);\r\n        this.dirLight.castShadow = true;\r\n\r\n        this.dirLight.castShadow = true;\r\n        this.dirLight.shadow.mapSize.width = 2048 * 4;\r\n        this.dirLight.shadow.mapSize.height = 2048 * 4;\r\n\r\n        var d = 50;\r\n        this.dirLight.shadow.camera.left = - d;\r\n        this.dirLight.shadow.camera.right = d;\r\n        this.dirLight.shadow.camera.top = d;\r\n        this.dirLight.shadow.camera.bottom = - d;\r\n\r\n        this.dirLight.shadow.bias = - 0.0000001;\r\n\r\n        this.dirLight.shadow.camera.near = 0.001;\r\n        this.dirLight.shadow.camera.far = 350;\r\n\r\n        const dirLightHeper = new THREE.DirectionalLightHelper(this.dirLight, 0.1);\r\n        this.sceneWrapper.scene.add(dirLightHeper);\r\n    }\r\n    Dispose() {\r\n        this.dirLight.visible = false;\r\n        this.hemiLight.visible = false;\r\n\r\n        this.sceneWrapper.scene.remove(this.dirLight);\r\n        this.sceneWrapper.scene.remove(this.hemiLight);\r\n    }\r\n}","import * as THREE from 'three';\r\n\r\ninterface JSONMeshData {\r\n    v: number[][];\r\n    f: number[][];\r\n    vc: number[][];\r\n}\r\n\r\nexport class NMeshWrapperFromJSON {\r\n    private geometry: THREE.BufferGeometry;\r\n    public mesh: THREE.Mesh;\r\n\r\n    constructor(json: JSONMeshData) {\r\n        this.geometry = new THREE.BufferGeometry();\r\n        this.initGeometry(json);\r\n        this.initMesh();\r\n    }\r\n\r\n    private initGeometry(json: JSONMeshData): void {\r\n        const vertices = new Float32Array(json.v.flat());\r\n        const faces = new Uint32Array(json.f.flat());\r\n        const colors = new Float32Array(json.vc.flat());\r\n\r\n        this.geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 3));\r\n        this.geometry.setIndex(new THREE.BufferAttribute(faces, 1));\r\n        this.geometry.setAttribute('color', new THREE.BufferAttribute(colors, 3));\r\n\r\n        this.geometry.applyMatrix4(new THREE.Matrix4().makeRotationX(-Math.PI / 2));\r\n        this.geometry.applyMatrix4(new THREE.Matrix4().makeScale(0.3, 0.3, 0.3));\r\n\r\n        this.geometry.computeVertexNormals();\r\n        this.geometry.computeBoundingBox();\r\n    }\r\n\r\n    private initMesh(): void {\r\n        const material = new THREE.MeshLambertMaterial({ \r\n            color: 0xff8888,\r\n            vertexColors: true\r\n        });\r\n\r\n        this.mesh = new THREE.Mesh(this.geometry, material);\r\n        this.mesh.castShadow = true;\r\n        this.mesh.receiveShadow = true;\r\n    }\r\n\r\n    public dispose(scene: THREE.Scene): void {\r\n        scene.remove(this.mesh);\r\n        this.geometry.dispose();\r\n        (this.mesh.material as THREE.Material).dispose();\r\n    }\r\n}","import * as THREE from 'three';\r\n\r\nimport { RhinoViewer } from '..';\r\n\r\nimport { ActiveCommandController } from './ActiveCommand/ActiveCommandController';\r\nimport { GeometryCommon } from './GeometryCommon/GeometryCommon';\r\nimport { LightingController } from './Light/LightingController';\r\n\r\nimport { NMeshWrapperFromJSON } from './Definition';\r\n\r\nexport class SceneWrapper {\r\n\r\n    app: RhinoViewer;\r\n    activeCommandController: ActiveCommandController;\r\n    geometryCommon: GeometryCommon;\r\n    lightingController: LightingController;\r\n\r\n    scene: THREE.Scene;\r\n    definition: NMeshWrapperFromJSON;\r\n\r\n    constructor(app: RhinoViewer) {\r\n        this.app = app;\r\n        this.activeCommandController = new ActiveCommandController(this);\r\n        this.scene = this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.scene;\r\n        this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.UpdateBinding = () => { this.Update(); };\r\n        this.lightingController = new LightingController(this);\r\n        this.geometryCommon = new GeometryCommon(this);\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.definition = new NMeshWrapperFromJSON(this.app.asset.urban);\r\n        this.scene.add(this.definition.mesh);\r\n    }\r\n    Update() {\r\n        //    this.nMeshWrapperFromJSON.Update();\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        //\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        // console.log(x, y);\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        // console.log('click');\r\n    }\r\n    MouseUp(x: number, y: number) {\r\n        //\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        //\r\n    }\r\n    Dispose() {\r\n        this.lightingController.Dispose();\r\n        this.definition.dispose(this.scene);\r\n    }\r\n}","import { CLICK_TYPE, ActiveCommandBase } from '../../lib';\r\n\r\n// import {IOWrapper} from '../'\r\nimport { RhinoViewer } from '../..';\r\n\r\nexport interface IMouseInteractionMenu {\r\n  MouseInteractionMenu: (mouseEventData: MouseEventData) => void;\r\n}\r\n\r\nexport class MouseEventData {\r\n  app: RhinoViewer;\r\n\r\n  x: number = -1; y: number = -1; z: number = -1;\r\n  preX: number = -1; preY: number = -1; preZ: number = -1;\r\n  yGLPicking: number;\r\n  command: ActiveCommandBase; // = new CActiveCommandNone(this.app.activeCommands);\r\n  CLICK_TYPE: CLICK_TYPE = CLICK_TYPE.MOVE;\r\n  isDown: boolean = false;\r\n  isDoubleClick: boolean = false;\r\n  isMove: boolean = false;\r\n  pressedShift: boolean = false;\r\n  pressedAlt: boolean = false;\r\n  pressedCtrl: boolean = false;\r\n  lat: number = -1;\r\n  long: number = -1;\r\n  wheel: number = 0;\r\n  preWheel: number = 0;\r\n  isActive: boolean = true;\r\n  // premEvent: MouseEventData;\r\n  native: MouseEvent;\r\n  constructor(app?: RhinoViewer) {\r\n    if (app !== null && app !== undefined) { this.app = app; }\r\n  }\r\n  DeepCopy() {\r\n    let mEvent = new MouseEventData(this.app);\r\n    mEvent.x = this.x; mEvent.y = this.y; mEvent.z = this.z; mEvent.preX = this.preX; mEvent.preY = this.preY; mEvent.preZ = this.preZ;\r\n    mEvent.pressedAlt = this.pressedAlt; mEvent.pressedShift = this.pressedShift; mEvent.pressedCtrl = this.pressedCtrl;\r\n    mEvent.isDoubleClick = this.isDoubleClick; mEvent.isDown = this.isDown; mEvent.isMove = this.isMove;\r\n    mEvent.lat = this.lat; mEvent.long = this.long; mEvent.wheel = this.wheel; mEvent.preWheel = this.preWheel;\r\n    mEvent.yGLPicking = this.yGLPicking;\r\n    mEvent.CLICK_TYPE = this.CLICK_TYPE;\r\n    mEvent.command = this.command;\r\n    mEvent.native = this.native;\r\n    return mEvent;\r\n  }\r\n}\r\n\r\nexport class MouseInteraction {\r\n  mouseInteractionUI: IMouseInteractionMenu;\r\n  mouseEventDataPre: MouseEventData = new MouseEventData();\r\n  app: RhinoViewer;\r\n  isEnable: boolean = true;\r\n  clickCount: number = 0;\r\n\r\n  click: boolean = false;\r\n  prevent: boolean = false;\r\n  delay: number = 250;\r\n  timer: NodeJS.Timer | number;\r\n  down: boolean = false;\r\n  e: MouseEventData;\r\n  private _stopPropagation: boolean = false;\r\n\r\n  constructor(app: RhinoViewer) {\r\n    this.app = app;\r\n    // this.mouseEventDataPre = new MouseEventData();\r\n\r\n  }\r\n  InitNativeMouseEvent(div: HTMLElement) {\r\n    div.onclick = (e: MouseEvent) => {\r\n      this.prevent = false;\r\n      this.timer = setTimeout(\r\n        () => {\r\n          if (!this.prevent) {\r\n            this.MouseClick(e);\r\n            e.stopPropagation();\r\n          }\r\n          this.prevent = false;\r\n        },\r\n        this.delay);\r\n    };\r\n    div.ondblclick = (e: MouseEvent) => {\r\n      clearTimeout(this.timer as number);\r\n      this.prevent = true;\r\n      this.MouseDoubleClick(e);\r\n    };\r\n    div.onmousedown = (e: MouseEvent) => { this.MouseDown(e); e.stopPropagation(); };\r\n    div.onmouseup = (e: MouseEvent) => { this.MouseUp(e); e.stopPropagation(); };\r\n    div.onmousemove = (e: MouseEvent) => { this.MouseMove(e); e.stopPropagation(); };\r\n    div.addEventListener('wheel', (e: WheelEvent) => { this.MouseWheel(e, e.deltaY); e.stopPropagation(); });\r\n  }\r\n\r\n  MouseDown(e: MouseEvent) {\r\n    this.click = true;\r\n    this.down = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DOWN;\r\n    mEvent.isDown = true;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseClick(e: MouseEvent) {\r\n    if (!this.click) { return; }\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    if (e.button === 0) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.LEFT;\r\n    } else if (e.button === 1) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.MIDDLE;\r\n    } else if (e.button === 2) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.RIGHT;\r\n    }\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseDoubleClick(e: MouseEvent) {\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DOUBLE;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseDrag(e: MouseEvent) {\r\n    this.click = false;\r\n    this.prevent = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DRAG;\r\n    mEvent.isDown = true;\r\n    if (e.buttons === 1) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG;\r\n    } else if (e.buttons === 4) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG_MIDDLE;\r\n    } else if (e.buttons === 2) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG_RIGHT;\r\n    }\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseMove(e: MouseEvent) {\r\n    if (this.down) { this.MouseDrag(e); return; }\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.MOVE;\r\n    mEvent.isDown = true;\r\n    this.prevent = true;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseUp(e: MouseEvent) {\r\n    this.down = false;\r\n    this.click = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.UP;\r\n    mEvent.isDown = false;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseWheel(e: MouseEvent, v: number) {\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.wheel = v;\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.WHEEL;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  CommonEventBuilder(e: MouseEvent): MouseEventData {\r\n    let mEvent: MouseEventData = new MouseEventData(this.app);\r\n    mEvent.preX = this.mouseEventDataPre.x;\r\n    mEvent.preY = this.mouseEventDataPre.y;\r\n    // mEvent.premEvent = this.mouseEventDataPre;\r\n\r\n    mEvent.pressedShift = e.shiftKey;\r\n    mEvent.pressedAlt = e.altKey;\r\n    mEvent.pressedCtrl = e.ctrlKey;\r\n\r\n    mEvent.x = e.offsetX;\r\n    mEvent.y = e.offsetY;\r\n    mEvent.preWheel = this.mouseEventDataPre.wheel;\r\n    mEvent.wheel = 0;\r\n    mEvent.native = e;\r\n    this.mouseEventDataPre = mEvent;\r\n    this.e = mEvent;\r\n    return mEvent;\r\n  }\r\n  get stopPropagation() {\r\n    return this._stopPropagation;\r\n  }\r\n  set stopPropagation(v: boolean) {\r\n    if (v) {\r\n      this._stopPropagation = v;\r\n    } else {\r\n      setTimeout(() => { this._stopPropagation = v; }, 500);\r\n      // this._stopPropagation = v;\r\n    }\r\n  }\r\n  MouseEvenEmitting(mouseEventData: MouseEventData) {\r\n    this.app.MouseEventController(mouseEventData);\r\n  }\r\n}","import { RhinoViewer } from '..';\r\nimport { MouseInteraction } from './Mouseinteraction/MouseInteraction';\r\nexport class IO {\r\n    app: RhinoViewer;\r\n    mouseInteraction: MouseInteraction;\r\n    constructor(app: RhinoViewer) {\r\n        this.app = app;\r\n        this.mouseInteraction = new MouseInteraction(this.app);\r\n    }\r\n    InitPost() {\r\n        this.mouseInteraction.InitNativeMouseEvent(this.app.divHost);\r\n    }\r\n}","import { MouseEventData } from './lib';\r\nimport { Asset } from './Asset';\r\nimport { ViewWrapper } from './ViewWrapper';\r\nimport { GraphicsCoreWrapper } from './GraphicsCoreWrapper';\r\nimport { SceneWrapper } from './SceneWrapper';\r\nimport { IO } from './IO';\r\n\r\nexport class RhinoViewer {\r\n    divHost: HTMLElement;\r\n    asset: Asset;\r\n    viewWrapper: ViewWrapper;\r\n    graphicsCoreWrapper: GraphicsCoreWrapper;\r\n    sceneWrapper: SceneWrapper;\r\n    io: IO;\r\n    public static Init(id: string) {\r\n        new RhinoViewer(id);\r\n    }\r\n    constructor(id: string) {\r\n        const div = document.getElementById(id);\r\n        if (div) { this.divHost = div; }\r\n        this.asset = new Asset();\r\n        this.viewWrapper = new ViewWrapper(this);\r\n        this.graphicsCoreWrapper = new GraphicsCoreWrapper(this);\r\n        this.sceneWrapper = new SceneWrapper(this);\r\n        this.io = new IO(this);\r\n        this.InitPost();\r\n    }\r\n    public InitPost() {\r\n        this.io.InitPost();\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        this.sceneWrapper.activeCommandController.MouseEventController(e);\r\n    }\r\n    Resize(width: number, height: number) {\r\n        this.graphicsCoreWrapper.Resize(width, height);\r\n    }\r\n    Dispose() {\r\n        this.graphicsCoreWrapper.Dispose();\r\n        this.sceneWrapper.Dispose();\r\n    }\r\n    Dummy() {/* */ }\r\n}\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n\r\n    constructor(id: string ) {\r\n        this.divHost = document.getElementById(id);\r\n\r\n        RhinoViewer.Init(id)\r\n    }\r\n    public destroy() {\r\n        if (this.divHost) {\r\n            try {\r\n                while (this.divHost.firstChild) {\r\n                    this.divHost.removeChild(this.divHost.firstChild);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error in destroy method:', error);\r\n            }\r\n        } else {\r\n            console.warn('divHost is undefined in destroy method');\r\n        }\r\n    }\r\n}"],"names":["urban","require","Asset","constructor","this","ViewWrapper","implementation","div","CAMERA_TYPE","CameraControllerThree","canvas","width","height","type","PERSPECTIVE","cameraP","cameraO","controls","initX","initY","prevX","prevY","yRotRate","xRotRate","xPanRate","yPanRate","zPanRate","rotateRate","panRate","zoomRate","zoomFactor","frustumSize","cameraShift","ableToMove","stereoCamera","GetPerspective","ORTHOGRAPHIC","GetOrthographic","STEREO","GetStereo","THREE","aspect","camera","x","y","z","position","set","InitOrbitController","OrbitControls","renderer","domElement","minDistance","maxDistance","enablePan","enableZoom","Math","PI","EnableDamping","v","factor","enableDamping","dampingFactor","MouseDown","MouseMove","shift","dx","dy","panLeft","matrix","panUp","rotateLeft","rotateUp","MouseWheel","dd","length","ShiftCamera","MouseEventController","e","CLICK_TYPE","pressedShift","wheel","CanvasThree","canvasWrapper","hostDiv","scene","vrBtn","bg","isActive","Init","clientWidth","clientHeight","antialias","alpha","setPixelRatio","id","style","pointerEvents","setSize","appendChild","RenderLoop","requestAnimationFrame","UpdateBinding","update","render","ResizeCanvas","updateProjectionMatrix","ResizeEffect","Remove","children","remove","CanvasWrapper","graphicsCoreWrapper","canvasThree","app","divHost","ThemeWrapper","GraphicsCoreWrapper","themeWrapper","Resize","Dispose","ActiveCommandController","sceneWrapper","MouseUpPre","MouseDownPre","MouseDragPre","MouseMovePre","MouseDoubleClickPre","MouseRightClickPre","MouseMiddleClickPre","MouseLeftClickPre","MouseLeftClick","MouseMiddleClick","MouseRightClick","MouseUp","MouseDoubleClick","MouseDrag","GeometryCommon","listMesh","raycaster","m","m3","point","params","Points","threshold","Raycast","setFromCamera","intersects","intersectObjects","d","console","log","RaycastPoint","LightingController","hemiLight","dirLight","shadowMap","enabled","color","setHSL","groundColor","add","hemiLightHelper","multiplyScalar","castShadow","shadow","mapSize","left","right","top","bottom","bias","near","far","dirLightHeper","visible","NMeshWrapperFromJSON","json","geometry","mesh","initGeometry","initMesh","vertices","Float32Array","flat","faces","Uint32Array","f","colors","vc","setAttribute","setIndex","applyMatrix4","makeRotationX","makeScale","computeVertexNormals","computeBoundingBox","material","vertexColors","receiveShadow","dispose","SceneWrapper","activeCommandController","geometryCommon","lightingController","definition","Update","asset","MouseEventData","preX","preY","preZ","yGLPicking","command","isDown","isDoubleClick","isMove","pressedAlt","pressedCtrl","lat","long","preWheel","native","undefined","DeepCopy","mEvent","MouseInteraction","mouseInteractionUI","mouseEventDataPre","isEnable","clickCount","click","prevent","delay","timer","down","_stopPropagation","InitNativeMouseEvent","onclick","setTimeout","MouseClick","stopPropagation","ondblclick","clearTimeout","onmousedown","onmouseup","onmousemove","addEventListener","deltaY","CommonEventBuilder","MouseEvenEmitting","button","buttons","shiftKey","altKey","ctrlKey","offsetX","offsetY","mouseEventData","IO","mouseInteraction","InitPost","RhinoViewer","viewWrapper","io","document","getElementById","Dummy","Solution","destroy","firstChild","removeChild","error","warn"],"sourceRoot":""}