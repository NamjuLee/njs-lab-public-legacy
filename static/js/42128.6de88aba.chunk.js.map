{"version":3,"file":"static/js/42128.6de88aba.chunk.js","mappings":"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","sources":["njslab/Project/LandBox/Asset/index.ts","njslab/Project/LandBox/ViewWrapper/index.ts","njslab/Project/LandBox/GraphicsCoreWrapper/CanvasWrapper/CanvasThree/CoreThree/CameraController.ts","njslab/Project/LandBox/GraphicsCoreWrapper/CanvasWrapper/CanvasThree/CanvasThree.ts","njslab/Project/LandBox/GraphicsCoreWrapper/CanvasWrapper/index.ts","njslab/Project/LandBox/GraphicsCoreWrapper/index.ts","njslab/Project/LandBox/SceneWrapper/ActiveCommand/ActiveCommandController.ts","njslab/Project/LandBox/SceneWrapper/GeometryCommon/GeometryCommon.ts","njslab/Project/LandBox/SceneWrapper/Light/LightingController.ts","njslab/Project/LandBox/SceneWrapper/Definition/index.ts","njslab/Project/LandBox/SceneWrapper/index.ts","njslab/Project/LandBox/IO/MouseInteraction/MouseInteraction.ts","njslab/Project/LandBox/IO/index.ts","njslab/Project/LandBox/index.ts"],"sourcesContent":["\r\nexport class Asset {\r\n    // tslint:disable-next-line:no-any\r\n    // rPoint: any;\r\n\r\n    constructor() {\r\n        //\r\n    }\r\n}","import { LandBox } from '..';\r\nexport class ViewWrapper {\r\n    app: LandBox;\r\n    constructor(app: LandBox) {\r\n        this.app = app;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { OrbitControls } from 'three-orbitcontrols-ts';\r\nimport { CLICK_TYPE } from '../../../../lib';\r\nimport { CanvasThree } from '../CanvasThree';\r\nimport { MouseEventData } from '../../../../IO/MouseInteraction/MouseInteraction';\r\n\r\n// const DeviceOrientationControls = require('../../lib/DeviceOrientationControls');\r\n// const StereoEffect = require('../../lib/StereoEffect');\r\n\r\n// import { StereoEffect } from '../lib/StereoEffect';\r\n\r\nexport enum CAMERA_TYPE {\r\n    PERSPECTIVE = 'PERSPECTIVE',\r\n    ORTHOGRAPHIC = 'ORTHOGRAPHIC',\r\n    STEREO = 'STEREO'\r\n}\r\n\r\nexport class CameraControllerThree {\r\n\r\n    canvas: CanvasThree;\r\n    cameraP: THREE.PerspectiveCamera; // Camera;\r\n    cameraO: THREE.OrthographicCamera; // Camera;\r\n    controls: OrbitControls;\r\n\r\n    initX: number = 0;\r\n    initY: number = 0;\r\n    prevX: number = 0;\r\n    prevY: number = 0;\r\n\r\n    yRotRate: number;\r\n    xRotRate: number;\r\n    xPanRate: number;\r\n    yPanRate: number;\r\n    zPanRate: number;\r\n\r\n    rotateRate: number = 150; // 0.000000001; // 150;\r\n    panRate: number = 50; // 0.000000001; // 400;\r\n    zoomRate: number = 200; // 0.000000001; // 200;\r\n\r\n    zoomFactor: number = 1;\r\n\r\n    frustumSize: number = 0.001; // 500;\r\n\r\n    type: CAMERA_TYPE;\r\n    cameraShift: number = 0;\r\n\r\n    width: number;\r\n    height: number;\r\n    ableToMove: boolean = true;\r\n\r\n    // tslint:disable-next-line:no-any\r\n    stereoCamera: THREE.StereoCamera;\r\n\r\n    constructor(canvas: CanvasThree, width: number, height: number, type: CAMERA_TYPE = CAMERA_TYPE.PERSPECTIVE) {\r\n        this.canvas = canvas;\r\n        this.type = type;\r\n        this.width = width; this.height = height;\r\n        // this.aspect = width / height;\r\n\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            this.GetPerspective(0, 10, 50);\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            this.GetOrthographic();\r\n        } else if (this.type === CAMERA_TYPE.STEREO) {\r\n            this.GetStereo();\r\n        }\r\n        this.stereoCamera = new THREE.StereoCamera(); // (this.canvas.renderer);\r\n    }\r\n    GetStereo() {\r\n\r\n        // console.log(StereoEffect);\r\n        // console.log(DeviceOrientationControls);\r\n\r\n    }\r\n    set aspect(aspect: number) {\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            this.cameraP.aspect = aspect;\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            //\r\n        }\r\n    }\r\n    get aspect() {\r\n        return this.width / this.height;\r\n    }\r\n    get camera() {\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            return this.cameraP;\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            return this.cameraO;\r\n        } else {\r\n            return this.cameraP;\r\n        }\r\n    }\r\n    GetPerspective(x: number = 0, y: number = 2, z: number = 2) {\r\n        this.cameraP = new THREE.PerspectiveCamera(45, this.width / this.height, 0.01, 10000);\r\n        this.cameraP.position.set(x, y, z);\r\n        this.InitOrbitController();\r\n    }\r\n    GetOrthographic() {\r\n        this.cameraO = new THREE.OrthographicCamera(this.frustumSize * this.aspect / - 2, this.frustumSize * this.aspect / 2, this.frustumSize / 2, this.frustumSize / - 2, 0.01, 50000);\r\n        this.cameraO.position.set(0, 1, 0);\r\n        this.InitOrbitController();\r\n    }\r\n    InitOrbitController() {\r\n\r\n        if (this.type === CAMERA_TYPE.PERSPECTIVE) {\r\n            this.controls = new OrbitControls(this.cameraP, this.canvas.renderer.domElement);\r\n        } else if (this.type === CAMERA_TYPE.ORTHOGRAPHIC) {\r\n            this.controls = new OrbitControls(this.cameraO, this.canvas.renderer.domElement);\r\n        }\r\n        // this.controls.panningMode = THREE.HorizontalPanning; // default is THREE.ScreenSpacePanning\r\n        this.controls.minDistance = 0.01;\r\n        this.controls.maxDistance = 500;\r\n        // this.controls.maxPolarAngle = Math.PI / 2;\r\n        this.controls.enablePan = true;\r\n        this.controls.enableZoom = true;\r\n\r\n        this.yRotRate = this.rotateRate / this.width * Math.PI / 90;\r\n        this.xRotRate = this.rotateRate / this.height * Math.PI / 180;\r\n        this.xPanRate = (this.panRate / this.width) * this.zoomFactor;\r\n        this.yPanRate = (this.panRate / this.height) * this.zoomFactor;\r\n        this.zPanRate = this.zoomRate / this.height;\r\n        // this.EnableDamping(true);\r\n\r\n        // this.controls.maxPolarAngle = 1.5; // ground\r\n    }\r\n    EnableDamping(v: boolean, factor: number = 0.35) {\r\n        this.controls.enableDamping = v; // an animation loop is required when either damping or auto-rotation are enabled\r\n        this.controls.dampingFactor = factor;\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.initX = this.prevX = x; // - this.offsetX;\r\n        this.initY = this.prevY = y; // - this.offsetY;\r\n    }\r\n    MouseMove(x: number, y: number, shift: boolean = false) {\r\n        if (!this.ableToMove) { return; }\r\n\r\n        // console.log(x,y)\r\n        const dx = x - this.prevX;\t\t// Difference since last mouse move\r\n        const dy = y - this.prevY;\r\n\r\n        // When shift is being helt down, we pan around else we rotate.\r\n        if (!shift) {\r\n            this.controls.rotateLeft(dx * this.xRotRate);\r\n            this.controls.rotateUp(dy * this.yRotRate);\r\n        } else {\r\n            // this.controls.pan(dx * this.xPanRate, dy * this.yPanRate);\r\n\r\n            this.controls.panLeft(dx * this.xPanRate, this.cameraP.matrix);\r\n            this.controls.panUp(dy * this.yPanRate, this.cameraP.matrix);\r\n\r\n            // this.camera.transform.position.x += -dx * this.xPanRate;\r\n            // this.camera.transform.position.y += dy * this.yPanRate;\r\n        }\r\n        // this.controls.panUp(0.001, this.camera.matrix);\r\n        this.prevX = x;\r\n        this.prevY = y;\r\n        // this.controls.update();\r\n    }\r\n    MouseWheel(v: number) {\r\n        // console.log(v);\r\n        this.controls.enableZoom = true;\r\n        v *= 0.1;\r\n\r\n        const dd = this.cameraP.position.length() * 100;\r\n\r\n        this.zoomFactor = dd;\r\n\r\n        if (v > 0) {\r\n            this.cameraP.position.x *= 0.9;\r\n            this.cameraP.position.y *= 0.9;\r\n            this.cameraP.position.z *= 0.9;\r\n        } else {\r\n            this.cameraP.position.x *= 1.1;\r\n            this.cameraP.position.y *= 1.1;\r\n            this.cameraP.position.z *= 1.1;\r\n        }\r\n\r\n    }\r\n    ShiftCamera() {\r\n        this.cameraShift++;\r\n        if (this.cameraShift === 2) { this.cameraShift = 0; }\r\n        if (this.cameraShift === 0) {\r\n            this.GetPerspective();\r\n        } else if (this.cameraShift === 1) {\r\n            this.GetOrthographic();\r\n        }\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        if (e.CLICK_TYPE === CLICK_TYPE.DOWN) { this.MouseDown(e.x, e.y); }\r\n        if (e.CLICK_TYPE === CLICK_TYPE.DRAG) { this.MouseMove(e.x, e.y, e.pressedShift); }\r\n        if (e.CLICK_TYPE === CLICK_TYPE.WHEEL) { this.MouseWheel(e.wheel); }\r\n\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { CanvasWrapper } from '..';\r\nimport { CameraControllerThree } from './CoreThree/CameraController';\r\nexport class CanvasThree {\r\n    hostDiv: HTMLElement;\r\n    camera: CameraControllerThree;\r\n    scene: THREE.Scene;\r\n    renderer: THREE.WebGLRenderer;\r\n\r\n    canvasWrapper: CanvasWrapper;\r\n    vrBtn: HTMLElement;\r\n    bg: number = 0x000000;\r\n    isActive: boolean = true;\r\n    constructor(canvasWrapper: CanvasWrapper, hostDiv: HTMLElement) {\r\n        this.canvasWrapper = canvasWrapper;\r\n        this.hostDiv = hostDiv;\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        const width = this.hostDiv.clientWidth;\r\n        const height = this.hostDiv.clientHeight;\r\n\r\n        this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n        this.renderer.setPixelRatio(width / height);\r\n\r\n        this.camera = new CameraControllerThree(this, width, height);\r\n        this.scene = new THREE.Scene();\r\n        // this.scene.background = this.bg;\r\n\r\n        this.renderer.domElement.id = 'dynamic-spring';\r\n        this.renderer.domElement.style.position = 'absolute';\r\n        this.renderer.domElement.style.pointerEvents = 'none';\r\n\r\n        this.renderer.setSize(width, height);\r\n        this.hostDiv.appendChild(this.renderer.domElement);\r\n        this.RenderLoop(this);\r\n    }\r\n    RenderLoop(canvas: CanvasThree) {\r\n        if (!this.isActive) { return; }\r\n        requestAnimationFrame(() => { this.RenderLoop(this); });\r\n        this.UpdateBinding();\r\n\r\n        this.camera.controls.update();\r\n        this.renderer.render(this.scene, this.camera.camera);\r\n    }\r\n    UpdateBinding() {\r\n        // console.log('implementation needed');\r\n    }\r\n    ResizeCanvas(width: number, height: number) {\r\n        this.camera.aspect = width / height;\r\n        this.camera.camera.updateProjectionMatrix(); // updateMatrix(); // updateProjectionMatrix();\r\n        this.renderer.setSize(width, height);\r\n    }\r\n    ResizeEffect(width: number, height: number) {\r\n        // this.camera.effect.setSize(width, height);\r\n    }\r\n    Remove() {\r\n        while (this.scene.children.length) {\r\n            this.scene.remove(this.scene.children[0]);\r\n        }\r\n        // this.scene.background = 0x000000;\r\n    }\r\n\r\n}","import { GraphicsCoreWrapper } from '..';\r\nimport { CanvasThree } from './CanvasThree/CanvasThree';\r\n\r\nexport class CanvasWrapper {\r\n    graphicsCoreWrapper: GraphicsCoreWrapper;\r\n    canvasThree: CanvasThree;\r\n\r\n    constructor(graphicsCoreWrapper: GraphicsCoreWrapper) {\r\n        this.graphicsCoreWrapper = graphicsCoreWrapper;\r\n\r\n        this.canvasThree = new CanvasThree(this, this.graphicsCoreWrapper.app.divHost);\r\n    }\r\n}","\r\nimport { LandBox } from '..';\r\nimport { CanvasWrapper } from './CanvasWrapper';\r\nexport class GraphicsCoreWrapper {\r\n    app: LandBox;\r\n    canvasWrapper: CanvasWrapper;\r\n    constructor(app: LandBox) {\r\n        this.app = app;\r\n        this.canvasWrapper = new CanvasWrapper(this);\r\n    }\r\n    Resize(width: number, height: number) {\r\n        this.canvasWrapper.canvasThree.ResizeCanvas(width, height);\r\n    }\r\n    Dispose() {\r\n        this.canvasWrapper.canvasThree.isActive = false;\r\n    }\r\n}","import { CLICK_TYPE } from '../../lib';\r\nimport { MouseEventData } from '../../IO/MouseInteraction/MouseInteraction';\r\nimport { SceneWrapper } from '..';\r\nexport class ActiveCommandController {\r\n    scene: SceneWrapper;\r\n    constructor(scene: SceneWrapper) {\r\n        this.scene = scene;\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.MouseEventController(e);\r\n        if (e.CLICK_TYPE === CLICK_TYPE.LEFT) {\r\n            this.MouseLeftClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MIDDLE) {\r\n            this.MouseMiddleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN_RIGHT) {\r\n            this.MouseRightClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOUBLE) {\r\n            this.MouseDoubleClickPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.MOVE) {\r\n            this.MouseMovePre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DRAG) {\r\n            this.MouseDragPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.DOWN) {\r\n            this.MouseDownPre(e); return;\r\n        } else if (e.CLICK_TYPE === CLICK_TYPE.UP) { this.MouseUpPre(e); return; }\r\n    }\r\n\r\n    // .......................................................\r\n    MouseDown(e: MouseEventData) {/* */ }\r\n    MouseDownPre(e: MouseEventData) {\r\n        this.scene.MouseDown(e.x, e.y);\r\n        this.MouseDown(e);\r\n    }\r\n    MouseLeftClick(e: MouseEventData) {/* */ }\r\n    MouseLeftClickPre(e: MouseEventData) {\r\n\r\n        this.MouseLeftClick(e);\r\n    }\r\n    MouseMiddleClick(e: MouseEventData) {/* */ }\r\n    MouseMiddleClickPre(e: MouseEventData) {\r\n\r\n        this.MouseMiddleClick(e);\r\n    }\r\n    MouseRightClick(e: MouseEventData) { /* */ }\r\n    MouseRightClickPre(e: MouseEventData) {\r\n\r\n        this.MouseRightClick(e);\r\n    }\r\n    MouseUp(e: MouseEventData) { /* */ }\r\n    MouseUpPre(e: MouseEventData) {\r\n        this.scene.MouseUp(e.x, e.y);\r\n        this.MouseUp(e);\r\n\r\n    }\r\n    MouseDoubleClick(e: MouseEventData) {/* */ }\r\n    MouseDoubleClickPre(e: MouseEventData) {\r\n\r\n        this.MouseDoubleClick(e);\r\n    }\r\n    MouseMove(e: MouseEventData) {/* */ }\r\n    MouseMovePre(e: MouseEventData) {\r\n        this.scene.MouseMove(e.x, e.y);\r\n        this.MouseMove(e);\r\n    }\r\n    MouseDrag(e: MouseEventData) {/* */ }\r\n    MouseDragPre(e: MouseEventData) {\r\n        this.scene.MouseDrag(e.x, e.y);\r\n        this.MouseDrag(e);\r\n    }\r\n}","import { SceneWrapper } from '..';\r\nimport { NVector3 } from '../../lib';\r\nimport * as THREE from 'three';\r\nexport class PointInersection {\r\n    vec: NVector3;\r\n    data: THREE.Intersection;\r\n    constructor(x: number, y: number, z: number) {\r\n        this.vec = new NVector3(x, y, z);\r\n    }\r\n}\r\nexport class GeometryCommon {\r\n    scene: SceneWrapper;\r\n\r\n    // list: WallPaperBase[] = [];\r\n    listMesh: THREE.Object3D[] = [];\r\n\r\n    raycaster: THREE.Raycaster = new THREE.Raycaster();\r\n    m: THREE.Vector2 = new THREE.Vector2(0, 0);\r\n    point: PointInersection | undefined;\r\n\r\n    constructor(scene: SceneWrapper) {\r\n        this.scene = scene;\r\n        this.raycaster.params.Points = { threshold: 0.1 };\r\n    }\r\n    Raycast(x: number, y: number, listMesh: THREE.Object3D[]) {\r\n        this.m.x = (x / this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientWidth) * 2 - 1;\r\n        this.m.y = - (y / this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientHeight) * 2 + 1;\r\n\r\n        this.raycaster.setFromCamera(this.m, this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.camera);\r\n\r\n        // let i = this.list.length;\r\n        // while (i--) {\r\n        //     GeometryCommon.list[i].isHover = false;\r\n        // }\r\n\r\n        const intersects = this.raycaster.intersectObjects(listMesh);\r\n        if (intersects.length > 0) {\r\n            const d = intersects[0];\r\n            console.log(d.point);\r\n        }\r\n\r\n        /*\r\n        if (intersects.length > 0) {\r\n            this.point = new PointInersection(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z);\r\n            this.point.data = intersects[0];\r\n            // console.log(this.point);\r\n            // tslint:disable-next-line:no-string-literal\r\n            // let geo = intersects[0].object['geo'] as WallPaperBase;\r\n            // geo.isHover = true;\r\n            // this.Capture = geo;\r\n            // // helper.position.set(0, 0, 0);\r\n            // // helper.lookAt(intersects[0].face.normal);\r\n            // // helper.position.copy(intersects[0].point);\r\n            return intersects[0].object['geo'];\r\n        }\r\n        // }\r\n        this.point = undefined;\r\n        return undefined;\r\n        */\r\n    }\r\n    RaycastPoint(x: number, y: number, listMesh: THREE.Points[]) {\r\n        this.raycaster.params.Points = { threshold: 5 };\r\n        this.m.x = (x / this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientWidth) * 2 - 1;\r\n        this.m.y = - (y / this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.renderer.domElement.clientHeight) * 2 + 1;\r\n\r\n        this.raycaster.setFromCamera(this.m, this.scene.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.camera);\r\n\r\n        // let i = this.list.length;\r\n        // while (i--) {\r\n        //     GeometryCommon.list[i].isHover = false;\r\n        // }\r\n\r\n        const intersects = this.raycaster.intersectObjects(listMesh);\r\n        if (intersects.length > 0) {\r\n            const d = intersects[0];\r\n            return [d.point.x, d.point.y, d.point.z];\r\n        }\r\n\r\n        /*\r\n        if (intersects.length > 0) {\r\n            this.point = new PointInersection(intersects[0].point.x, intersects[0].point.y, intersects[0].point.z);\r\n            this.point.data = intersects[0];\r\n            // console.log(this.point);\r\n            // tslint:disable-next-line:no-string-literal\r\n            // let geo = intersects[0].object['geo'] as WallPaperBase;\r\n            // geo.isHover = true;\r\n            // this.Capture = geo;\r\n            // // helper.position.set(0, 0, 0);\r\n            // // helper.lookAt(intersects[0].face.normal);\r\n            // // helper.position.copy(intersects[0].point);\r\n            return intersects[0].object['geo'];\r\n        }\r\n        // }\r\n        this.point = undefined;\r\n        return undefined;\r\n        */\r\n        return null;\r\n    }\r\n}","// import { LightUtility } from '../../../lib/NJSCore/GL/Libs/Three/Utility/LightUtility';\r\nimport * as THREE from 'three';\r\nimport { SceneWrapper } from '..';\r\nexport class LightingController {\r\n    sceneWrapper: SceneWrapper;\r\n    hemiLight: THREE.HemisphereLight;\r\n    dirLight: THREE.DirectionalLight;\r\n    constructor(sceneWrapper: SceneWrapper) {\r\n        this.sceneWrapper = sceneWrapper;\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        // this.scene.add( LightUtility.GetAmbientLight());\r\n        // this.scene.add( LightUtility.GetHemiLight());\r\n        // this.scene.scene.add( LightUtility.GetDirLight());\r\n\r\n        this.hemiLight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.6);\r\n        this.hemiLight.color.setHSL(0.6, 1, 0.6);\r\n        this.hemiLight.groundColor.setHSL(0.095, 1, 0.75);\r\n        this.hemiLight.position.set(0, 50, 0);\r\n        this.sceneWrapper.scene.add(this.hemiLight);\r\n\r\n        // const hemiLightHelper = new THREE.HemisphereLightHelper( this.hemiLight, 10 );\r\n        // this.scene.scene.add( hemiLightHelper );\r\n\r\n        this.dirLight = new THREE.DirectionalLight(0xffffff, 1);\r\n        this.dirLight.color.setHSL(0.1, 1, 0.95);\r\n        this.dirLight.position.set(- 1, 1.75, 1);\r\n        this.dirLight.position.multiplyScalar(30);\r\n\r\n        this.dirLight.castShadow = true;\r\n        this.dirLight.shadow.mapSize.width = 2048 * 2;\r\n        this.dirLight.shadow.mapSize.height = 2048 * 2;\r\n\r\n        var d = 50;\r\n        this.dirLight.shadow.camera.left = - d;\r\n        this.dirLight.shadow.camera.right = d;\r\n        this.dirLight.shadow.camera.top = d;\r\n        this.dirLight.shadow.camera.bottom = - d;\r\n\r\n        this.dirLight.shadow.bias = - 0.0001;\r\n\r\n        this.dirLight.shadow.camera.near = 0.001;\r\n        this.dirLight.shadow.camera.far = 350;\r\n\r\n        this.sceneWrapper.scene.add(this.dirLight);\r\n        // this.dirLightHeper = new THREE.DirectionalLightHelper( this.dirLight, 10 );\r\n        // this.scene.scene.add( dirLightHeper );\r\n    }\r\n    Dispose() {\r\n        this.dirLight.visible = false;\r\n        this.hemiLight.visible = false;\r\n\r\n        this.sceneWrapper.scene.remove(this.dirLight);\r\n        this.sceneWrapper.scene.remove(this.hemiLight);\r\n    }\r\n}","import * as THREE from 'three';\r\n\r\nimport { NVector3 } from '../../lib';\r\n\r\n// import { LandboxByImage } from './LandboxByImage';\r\n\r\nexport class Definition {\r\n    scene: THREE.Scene;\r\n\r\n    damping = 0.96;\r\n    gravity = -0.032;\r\n    timeStep = 0.316; // 0.18; // 0.26;\r\n    groundZ = -9.26;\r\n\r\n    _capture: Node | undefined;\r\n\r\n    m: NVector3 = new NVector3(0, 0, 0);\r\n    // landboxByImage: LandboxByImage;\r\n\r\n    constructor(scene: THREE.Scene) {\r\n        this.scene = scene;\r\n\r\n        var size = 10;\r\n        var divisions = 10;\r\n\r\n        var gridHelper = new THREE.GridHelper( size, divisions );\r\n        this.scene.add( gridHelper );\r\n\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        const path0 = 'https://upload.wikimedia.org/wikipedia/commons/5/57/Heightmap.png';\r\n\r\n        const img = new Image(); // Create new img element\r\n        img.src = path0;\r\n        img.crossOrigin = 'Anonymous';\r\n        img.onload = () => {\r\n            // this.landboxByImage = new LandboxByImage(this, img);\r\n            console.log('LandboxByImage');\r\n        };\r\n\r\n    }\r\n    get capture(): Node | undefined {\r\n        return this._capture;\r\n    }\r\n    set capture(v: Node | undefined) {\r\n\r\n        // if (v) {\r\n        //     v.isCapture = true;\r\n        // } else {\r\n        //     if (this._capture) { this._capture.isCapture = false; }\r\n\r\n        // }\r\n        // this._capture = v;\r\n    }\r\n    GetPointForRaycast(): undefined {\r\n        // let geo = [];\r\n        // for (let i = 0; i < this.point.length; ++i) {\r\n        //     geo.push(this.point[i].pointCloud);\r\n        // }\r\n        return undefined;\r\n    }\r\n    Update() {\r\n        // if (this.landboxByImage) {\r\n        //     this.landboxByImage.Update();\r\n        // }\r\n        // this.Graph.Move(new NVector3(100, 10, 10), this.damping, this.gravity, this.timeStep, this.groundZ, 1);\r\n\r\n    }\r\n    MouseMove(x: number, y: number, z: number) {\r\n        // console.log( 'move from dy',  x, y, z);\r\n        if (this.capture) {\r\n            console.log(this.capture);\r\n        }\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        // console.log( 'draggg from dy',  x, y);\r\n        if (this.capture) {\r\n            // console.log(x, y);\r\n            // console.log(this.capture);\r\n            // this.capture.p.x = x;\r\n            // this.capture.p.y = y;\r\n        }\r\n    }\r\n    MouseDown(x: number, y: number, z: number) {\r\n        // console.log( 'down from dy',  x, y, z);\r\n        // let node = this.Graph.FindNode(x, y, z);\r\n        // if (node) {\r\n        //     this.capture = node;\r\n        // } else {\r\n        //     this.capture = undefined;\r\n        // }\r\n\r\n    }\r\n    MouseUp() {\r\n        // console.log( 'up from dy' );\r\n        this.capture = undefined;\r\n    }\r\n    Dispose() {\r\n        //\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { LandBox } from '..';\r\nimport { ActiveCommandController } from './ActiveCommand/ActiveCommandController';\r\nimport { GeometryCommon } from './GeometryCommon/GeometryCommon';\r\nimport { LightingController } from './Light/LightingController';\r\nimport { Definition } from './Definition';\r\nexport class SceneWrapper {\r\n    app: LandBox;\r\n    activeCommandController: ActiveCommandController;\r\n    geometryCommon: GeometryCommon;\r\n    lightingController: LightingController;\r\n\r\n    scene: THREE.Scene;\r\n    definition: Definition;\r\n\r\n    constructor(app: LandBox) {\r\n        this.app = app;\r\n        this.activeCommandController = new ActiveCommandController(this);\r\n        this.scene = this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.scene;\r\n        this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.UpdateBinding = () => { this.Update(); };\r\n        this.lightingController = new LightingController(this);\r\n        this.geometryCommon = new GeometryCommon(this);\r\n        this.Init();\r\n    }\r\n    Init() {\r\n        this.definition = new Definition(this.scene);\r\n    }\r\n    Update() {\r\n        this.definition.Update();\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        // //    const pos =  this.geometryCommon.RaycastPoint(x, y, this.definition.points.pointCloud );\r\n        // const pos = this.geometryCommon.RaycastPoint(x, y, this.definition.GetPointForRaycast());\r\n        // if (pos) {\r\n        //     this.definition.MouseMove(pos[0], pos[1], pos[2]);\r\n        // }\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        // const pos = this.geometryCommon.RaycastPoint(x, y, this.definition.GetPointForRaycast());\r\n        // if (pos) {\r\n        //     this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.ableToMove = false;\r\n        //     this.definition.MouseDown(pos[0], pos[1], pos[2]);\r\n        // }\r\n    }\r\n    MouseUp(x: number, y: number) {\r\n        this.definition.MouseUp();\r\n        this.app.graphicsCoreWrapper.canvasWrapper.canvasThree.camera.ableToMove = true;\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        // const pos = this.geometryCommon.RaycastPoint(x, y, this.definition.GetPointForRaycast());\r\n        // if (pos) {\r\n        //     this.definition.MouseDrag(pos[0], pos[1]);\r\n        // }\r\n        // this.definition.MouseDrag(x, y);\r\n    }\r\n    Dispose() {\r\n        this.definition.Dispose();\r\n    }\r\n}","import { CLICK_TYPE } from '../../lib';\r\n\r\n// import {IOWrapper} from '../'\r\nimport { LandBox } from '../..';\r\n\r\nexport interface IMouseInteractionMenu {\r\n  MouseInteractionMenu: (mouseEventData: MouseEventData) => void;\r\n}\r\nexport class MouseEventData {\r\n  app: LandBox;\r\n  x: number = -1; y: number = -1; z: number = -1;\r\n  preX: number = -1; preY: number = -1; preZ: number = -1;\r\n  yGLPicking: number;\r\n  // command: ActiveCommandBase; // = new CActiveCommandNone(this.app.activeCommands);\r\n  CLICK_TYPE: CLICK_TYPE = CLICK_TYPE.MOVE;\r\n  isDown: boolean = false;\r\n  isDoubleClick: boolean = false;\r\n  isMove: boolean = false;\r\n  pressedShift: boolean = false;\r\n  pressedAlt: boolean = false;\r\n  pressedCtrl: boolean = false;\r\n\r\n  lat: number = -1;\r\n  long: number = -1;\r\n  wheel: number = 0;\r\n  preWheel: number = 0;\r\n  isActive: boolean = true;\r\n  // premEvent: MouseEventData;\r\n  native: MouseEvent;\r\n  constructor(app?: LandBox) {\r\n    if (app !== null && app !== undefined) { this.app = app; }\r\n  }\r\n  DeepCopy() {\r\n    let mEvent = new MouseEventData(this.app);\r\n    mEvent.x = this.x; mEvent.y = this.y; mEvent.z = this.z; mEvent.preX = this.preX; mEvent.preY = this.preY; mEvent.preZ = this.preZ;\r\n    mEvent.pressedAlt = this.pressedAlt; mEvent.pressedShift = this.pressedShift; mEvent.pressedCtrl = this.pressedCtrl;\r\n    mEvent.isDoubleClick = this.isDoubleClick; mEvent.isDown = this.isDown; mEvent.isMove = this.isMove;\r\n    mEvent.lat = this.lat; mEvent.long = this.long; mEvent.wheel = this.wheel; mEvent.preWheel = this.preWheel;\r\n    mEvent.yGLPicking = this.yGLPicking;\r\n    mEvent.CLICK_TYPE = this.CLICK_TYPE;\r\n    // mEvent.command = this.command;\r\n    mEvent.native = this.native;\r\n    return mEvent;\r\n  }\r\n}\r\n\r\nexport class MouseInteraction {\r\n  mouseInteractionUI: IMouseInteractionMenu;\r\n  mouseEventDataPre: MouseEventData = new MouseEventData();\r\n  app: LandBox;\r\n  isEnable: boolean = true;\r\n  clickCount: number = 0;\r\n\r\n  click: boolean = false;\r\n  prevent: boolean = false;\r\n  delay: number = 250;\r\n  timer: NodeJS.Timer | number;\r\n  down: boolean = false;\r\n  e: MouseEventData;\r\n  private _stopPropagation: boolean = false;\r\n\r\n  constructor(app: LandBox) {\r\n    this.app = app;\r\n    // this.mouseEventDataPre = new MouseEventData();\r\n\r\n  }\r\n  InitNativeMouseEvent(div: HTMLElement) {\r\n    div.onclick = (e: MouseEvent) => {\r\n      this.prevent = false;\r\n      this.timer = setTimeout(\r\n        () => {\r\n          if (!this.prevent) {\r\n            this.MouseClick(e);\r\n            e.stopPropagation();\r\n          }\r\n          this.prevent = false;\r\n        },\r\n        this.delay);\r\n    };\r\n    div.ondblclick = (e: MouseEvent) => {\r\n      clearTimeout(this.timer as number);\r\n      this.prevent = true;\r\n      this.MouseDoubleClick(e);\r\n    };\r\n    div.onmousedown = (e: MouseEvent) => { this.MouseDown(e); e.stopPropagation(); };\r\n    div.onmouseup = (e: MouseEvent) => { this.MouseUp(e); e.stopPropagation(); };\r\n    div.onmousemove = (e: MouseEvent) => { this.MouseMove(e); e.stopPropagation(); };\r\n    div.addEventListener('wheel', (e: WheelEvent) => { this.MouseWheel(e, e.deltaY); e.stopPropagation(); });\r\n  }\r\n\r\n  MouseDown(e: MouseEvent) {\r\n    this.click = true;\r\n    this.down = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DOWN;\r\n    mEvent.isDown = true;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseClick(e: MouseEvent) {\r\n    if (!this.click) { return; }\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    if (e.button === 0) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.LEFT;\r\n    } else if (e.button === 1) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.MIDDLE;\r\n    } else if (e.button === 2) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.RIGHT;\r\n    }\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseDoubleClick(e: MouseEvent) {\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DOUBLE;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseDrag(e: MouseEvent) {\r\n    this.click = false;\r\n    this.prevent = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.DRAG;\r\n    mEvent.isDown = true;\r\n    if (e.buttons === 1) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG;\r\n    } else if (e.buttons === 4) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG_MIDDLE;\r\n    } else if (e.buttons === 2) {\r\n      mEvent.CLICK_TYPE = CLICK_TYPE.DRAG_RIGHT;\r\n    }\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseMove(e: MouseEvent) {\r\n    if (this.down) { this.MouseDrag(e); return; }\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.MOVE;\r\n    mEvent.isDown = true;\r\n    this.prevent = true;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseUp(e: MouseEvent) {\r\n    this.down = false;\r\n    this.click = true;\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.UP;\r\n    mEvent.isDown = false;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  MouseWheel(e: MouseEvent, v: number) {\r\n    let mEvent = this.CommonEventBuilder(e);\r\n    mEvent.wheel = v;\r\n    mEvent.CLICK_TYPE = CLICK_TYPE.WHEEL;\r\n    this.MouseEvenEmitting(mEvent);\r\n  }\r\n  CommonEventBuilder(e: MouseEvent): MouseEventData {\r\n    let mEvent: MouseEventData = new MouseEventData(this.app);\r\n    mEvent.preX = this.mouseEventDataPre.x;\r\n    mEvent.preY = this.mouseEventDataPre.y;\r\n    // mEvent.premEvent = this.mouseEventDataPre;\r\n\r\n    mEvent.pressedShift = e.shiftKey;\r\n    mEvent.pressedAlt = e.altKey;\r\n    mEvent.pressedCtrl = e.ctrlKey;\r\n\r\n    mEvent.x = e.offsetX;\r\n    mEvent.y = e.offsetY;\r\n    mEvent.preWheel = this.mouseEventDataPre.wheel;\r\n    mEvent.wheel = 0;\r\n    mEvent.native = e;\r\n    this.mouseEventDataPre = mEvent;\r\n    this.e = mEvent;\r\n    return mEvent;\r\n  }\r\n  get stopPropagation() {\r\n    return this._stopPropagation;\r\n  }\r\n  set stopPropagation(v: boolean) {\r\n    if (v) {\r\n      this._stopPropagation = v;\r\n    } else {\r\n      setTimeout(() => { this._stopPropagation = v; }, 500);\r\n      // this._stopPropagation = v;\r\n    }\r\n  }\r\n  MouseEvenEmitting(mouseEventData: MouseEventData) {\r\n    this.app.MouseEventController(mouseEventData);\r\n  }\r\n}","import { LandBox } from '..';\r\nimport { MouseInteraction } from './MouseInteraction/MouseInteraction';\r\nexport class IO {\r\n    app: LandBox;\r\n    mouseInteraction: MouseInteraction;\r\n    constructor(app: LandBox) {\r\n        this.app = app;\r\n        this.mouseInteraction = new MouseInteraction(this.app);\r\n        this.mouseInteraction.InitNativeMouseEvent(this.app.divHost);\r\n    }\r\n}","import { MouseEventData } from './IO/MouseInteraction/MouseInteraction';\r\nimport { Asset } from './Asset';\r\nimport { ViewWrapper } from './ViewWrapper';\r\nimport { GraphicsCoreWrapper } from './GraphicsCoreWrapper';\r\nimport { SceneWrapper } from './SceneWrapper';\r\nimport { IO } from './IO';\r\n\r\nexport class LandBox {\r\n    divHost: HTMLElement;\r\n    asset: Asset;\r\n    viewWrapper: ViewWrapper;\r\n    graphicsCoreWrapper: GraphicsCoreWrapper;\r\n    sceneWrapper: SceneWrapper;\r\n    io: IO;\r\n    public static Init(id: string) {\r\n        new LandBox(id);\r\n    }\r\n    constructor(id: string) {\r\n        const div = document.getElementById(id);\r\n        if (div) { this.divHost = div; }\r\n\r\n        this.asset = new Asset();\r\n        this.viewWrapper = new ViewWrapper(this);\r\n        this.graphicsCoreWrapper = new GraphicsCoreWrapper(this);\r\n        this.sceneWrapper = new SceneWrapper(this);\r\n        this.io = new IO(this);\r\n    }\r\n    MouseEventController(e: MouseEventData) {\r\n        this.sceneWrapper.activeCommandController.MouseEventController(e);\r\n    }\r\n    Resize(width: number, height: number) {\r\n        this.graphicsCoreWrapper.Resize(width, height);\r\n    }\r\n    Dispose() {\r\n        this.graphicsCoreWrapper.Dispose();\r\n        this.sceneWrapper.Dispose();\r\n    }\r\n    Dummy() {/* */ }\r\n}\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n\r\n    constructor(id: string) {\r\n        this.divHost = document.getElementById(id);\r\n\r\n        LandBox.Init(id)\r\n    }\r\n    public destroy() {\r\n        if (this.divHost) {\r\n            try {\r\n                while (this.divHost.firstChild) {\r\n                    this.divHost.removeChild(this.divHost.firstChild);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error in destroy method:', error);\r\n            }\r\n        } else {\r\n            console.warn('divHost is undefined in destroy method');\r\n        }\r\n    }\r\n}"],"names":["Asset","constructor","ViewWrapper","app","this","CAMERA_TYPE","CameraControllerThree","canvas","width","height","type","PERSPECTIVE","cameraP","cameraO","controls","initX","initY","prevX","prevY","yRotRate","xRotRate","xPanRate","yPanRate","zPanRate","rotateRate","panRate","zoomRate","zoomFactor","frustumSize","cameraShift","ableToMove","stereoCamera","GetPerspective","ORTHOGRAPHIC","GetOrthographic","STEREO","GetStereo","THREE","aspect","camera","x","y","z","position","set","InitOrbitController","OrbitControls","renderer","domElement","minDistance","maxDistance","enablePan","enableZoom","Math","PI","EnableDamping","v","factor","enableDamping","dampingFactor","MouseDown","MouseMove","shift","dx","dy","panLeft","matrix","panUp","rotateLeft","rotateUp","MouseWheel","dd","length","ShiftCamera","MouseEventController","e","CLICK_TYPE","pressedShift","wheel","CanvasThree","canvasWrapper","hostDiv","scene","vrBtn","bg","isActive","Init","clientWidth","clientHeight","antialias","alpha","setPixelRatio","id","style","pointerEvents","setSize","appendChild","RenderLoop","requestAnimationFrame","UpdateBinding","update","render","ResizeCanvas","updateProjectionMatrix","ResizeEffect","Remove","children","remove","CanvasWrapper","graphicsCoreWrapper","canvasThree","divHost","GraphicsCoreWrapper","Resize","Dispose","ActiveCommandController","MouseUpPre","MouseDownPre","MouseDragPre","MouseMovePre","MouseDoubleClickPre","MouseRightClickPre","MouseMiddleClickPre","MouseLeftClickPre","MouseLeftClick","MouseMiddleClick","MouseRightClick","MouseUp","MouseDoubleClick","MouseDrag","GeometryCommon","listMesh","raycaster","m","point","params","Points","threshold","Raycast","setFromCamera","intersects","intersectObjects","d","console","log","RaycastPoint","LightingController","sceneWrapper","hemiLight","dirLight","color","setHSL","groundColor","add","multiplyScalar","castShadow","shadow","mapSize","left","right","top","bottom","bias","near","far","visible","Definition","damping","gravity","timeStep","groundZ","_capture","NVector3","gridHelper","img","Image","src","crossOrigin","onload","capture","GetPointForRaycast","Update","undefined","SceneWrapper","activeCommandController","geometryCommon","lightingController","definition","MouseEventData","preX","preY","preZ","yGLPicking","isDown","isDoubleClick","isMove","pressedAlt","pressedCtrl","lat","long","preWheel","native","DeepCopy","mEvent","MouseInteraction","mouseInteractionUI","mouseEventDataPre","isEnable","clickCount","click","prevent","delay","timer","down","_stopPropagation","InitNativeMouseEvent","div","onclick","setTimeout","MouseClick","stopPropagation","ondblclick","clearTimeout","onmousedown","onmouseup","onmousemove","addEventListener","deltaY","CommonEventBuilder","MouseEvenEmitting","button","buttons","shiftKey","altKey","ctrlKey","offsetX","offsetY","mouseEventData","IO","mouseInteraction","LandBox","asset","viewWrapper","io","document","getElementById","Dummy","Solution","destroy","firstChild","removeChild","error","warn"],"sourceRoot":""}