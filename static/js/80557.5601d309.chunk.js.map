{"version":3,"file":"static/js/80557.5601d309.chunk.js","mappings":"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","sources":["njslab/Raster/image-pixelated/PixelMap.ts","njslab/Raster/image-pixelated/ImageResizer.ts","njslab/Raster/image-pixelated/index.ts"],"sourcesContent":["\nexport class PixelMap {\n    public pixelList: Pixel[] = []\n    public minV: Vector3;\n    public maxV: Vector3;\n    public rx = 10;\n    public ry = 10;\n    public intervalX;\n    public intervalY;\n    constructor() {\n\n    }\n    public init(minV: Vector3, maxV: Vector3, imgData: ImageData){\n        this.minV = minV;\n        this.maxV = maxV;\n        \n        this.pixelList = []\n        const x = this.minV.x\n        const y = this.minV.y\n\n        this.intervalX = (this.maxV.x - this.minV.x) / (this.rx - 1)\n        this.intervalY = (this.maxV.y - this.minV.y) / (this.ry - 1)\n\n        const px = (x: number, y: number) => {\n            return x * 4 + y * imgData.width * 4;\n        };\n        \n        for(let j = 0 ; j < this.ry; j++) {\n            for(let i = 0 ; i < this.rx; i++) {\n                const xV = x + i * this.intervalX;\n                const yV = y + j * this.intervalY;\n\n                // let k = (i + j * this.rx) * 4;\n                let k = px(i, j)\n\n                const r = imgData.data[k]\n                const g = imgData.data[k+1]\n                const b = imgData.data[k+2]\n                const a = imgData.data[k+3]\n\n                let pix = new Pixel(this, xV , yV , 0);\n                pix.xi = i;\n                pix.yi = j;\n                pix.color= [r,g,b,a]\n                this.pixelList.push(pix);\n            }\n        }\n\n    }\n    private initGridNeighbor() {\n        for (let j = 0; j < this.ry; ++j) {\n            for (let i = 0; i < this.rx; ++i) {\n                let k = i + j * this.rx;\n                let px = this.pixelList[k];\n                if (i > 0) { px.nPix.push(this.pixelList[k - 1]); }\n                if (i < this.rx - 1) { px.nPix.push(this.pixelList[k + 1]); }\n                if (j > 0) { px.nPix.push(this.pixelList[k - this.rx]); }\n                if (j < this.ry - 1) { px.nPix.push(this.pixelList[k + this.rx]); }\n                if ((i > 0) && (j < this.ry - 1)) { px.nPix.push(this.pixelList[k + this.rx - 1]); }\n                if ((i > 0) && (j > 0)) { px.nPix.push(this.pixelList[k - this.rx - 1]); }\n                if ((i < this.rx - 1) && (j < this.ry - 1)) { px.nPix.push(this.pixelList[k + this.rx + 1]); }\n                if ((i < this.rx - 1) && (j > 0)) { px.nPix.push(this.pixelList[k - this.rx + 1]); }\n            }\n        }\n    }\n    public picking(x: number, y: number) {\n        const mv = new Vector3(x,y,0)\n        let dis = Number.MAX_VALUE;\n        let id = -1\n        for(let i = 0 ; i < this.pixelList.length; ++i) {\n           const theDis = distance(this.pixelList[i].vec, mv)\n           if (dis > theDis) {\n            dis = theDis\n            id = i;\n           }\n           this.pixelList[i].hover = false\n        }\n        if (id > -1) {\n            this.pixelList[id].hover = true\n        }\n    }\n    public render(ctx) {\n        this.pixelList.forEach((p: Pixel) => {\n            p.render(ctx);\n        })\n    }\n}\n\nclass Pixel {\n    public xi: number\n    public yi: number\n    public pMap: PixelMap;\n    public vec: Vector3;\n    public hover: boolean = false;\n    public nPix: Pixel[] = [];\n    public color: number[] = []\n    constructor(pMap: PixelMap, x: number, y: number, z: number) {\n        this.pMap = pMap;\n        this.vec = new Vector3(x,y,z);\n    }\n    public render(ctx: CanvasRenderingContext2D) {\n        const width = this.pMap.intervalX \n        const height = this.pMap.intervalY\n\n        ctx.beginPath()\n        ctx.rect(this.vec.x - width * 0.5, this.vec.y - height * 0.5, width, height)\n        ctx.closePath()\n        ctx.stroke()\n        // if (this.hover) {\n            ctx.fillStyle = `rgb(${this.color[0]}, ${this.color[1]}, ${this.color[2]})`;\n            ctx.fill()\n        // } \n\n        ctx.beginPath();\n        ctx.arc(this.vec.x, this.vec.y, this.vec.r, 0, Math.PI * 2.0);\n        ctx.closePath();\n        if (this.hover) {\n            ctx.fillStyle = '#999';\n        } else {\n            ctx.fillStyle = '#333';\n        }\n        ctx.fill();\n\n        if (this.hover) {\n            for(let i = 0 ; i < this.nPix.length; ++i) {\n                ctx.beginPath();\n                ctx.moveTo(this.vec.x, this.vec.y)\n                ctx.lineTo(this.nPix[i].vec.x, this.nPix[i].vec.y)\n                ctx.closePath();\n                ctx.stroke()\n            }\n\n            ctx.strokeText(`x: ${this.xi}, y: ${this.yi}` ,this.vec.x, this.vec.y)\n        }\n\n        \n    }\n}\n\nexport class Vector3 {\n    public x: number = 0.0;\n    public y: number = 0.0;\n    public z: number = 0.0;\n    public r: number = 1\n    constructor(x,y,z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n}\n\nconst distance = (v0: Vector3, v1: Vector3) => {\n    return Math.sqrt(distance2(v0, v1));\n}\nconst distance2 = (v0: Vector3, v1: Vector3) => {\n    return (v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z);\n}","\nclass ImageData {\n    img: HTMLImageElement;\n    width: number;\n    height: number;\n}\n\n\nexport class ImageResizer {\n\n    canvas = document.createElement('canvas');\n    canvasView = document.createElement('canvas');\n    imgData = new ImageData();\n    rx: number = 50;\n    ry: number = 50;\n    \n    constructor() {\n\n    }\n    public init(img: HTMLImageElement) {\n        this.imgData.img = img\n        this.imgData.width = img.width\n        this.imgData.height = img.height\n        // console.log(this.imgData)\n\n        this.canvasView.width = img.width;\n        this.canvasView.height = img.height;\n\n        this.canvas.width = this.rx // img.width;\n        this.canvas.height = this.ry //img.height;\n\n        return this.compute();\n    }\n    public updateRes(rx, ry) {\n        this.rx = rx;\n        this.ry = ry;\n        this.canvas.width = this.rx // img.width;\n        this.canvas.height = this.ry //img.height;\n        // console.log(this.rx, this.ry);\n        return this.compute();\n    } \n    public compute() {\n        const ctx = this.canvas.getContext(\"2d\");\n        const ctxView = this.canvasView.getContext(\"2d\");\n\n        ctx.drawImage(this.imgData.img, 0, 0, this.imgData.width, this.imgData.height, 0, 0, this.rx, this.ry);\n\n        const data = ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n        // console.log(data, data.data.length);\n\n        ctxView.drawImage(this.canvas, 0, 0, this.rx, this.ry, 0, 0, this.imgData.width, this.imgData.height)\n        return data\n    }\n}","import { RendererCanvas, getImgFromURL } from '../../../lib';\r\n\r\nimport { loadSVGFromHTTP } from '../../../lib/njscore-package/src';\r\n\r\nimport { PixelMap, Vector3 } from './PixelMap';\r\n\r\nimport { ImageResizer } from './ImageResizer';\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n    public renderer: Renderer;\r\n\r\n    constructor(id: string) {\r\n        this.divHost = document.getElementById(id)\r\n\r\n        // Center align\r\n        this.divHost.style.display = 'flex';\r\n        this.divHost.style.alignItems = 'center';\r\n        const div = document.createElement('div');\r\n        div.style.marginLeft = 'auto';\r\n        div.style.marginRight = 'auto';\r\n        div.style.backgroundColor = '#555';\r\n        div.style.margin = '50px';\r\n        div.style.background = 'rgba(0,0,0,0)';\r\n        this.divHost.appendChild(div);\r\n\r\n        this.renderer = new Renderer(div);\r\n    }\r\n    public destroy() {\r\n        this.renderer.destroy();\r\n        while (this.divHost.lastElementChild) {\r\n            this.divHost.removeChild(this.divHost.lastElementChild);\r\n        }\r\n    }\r\n};\r\nexport class Renderer extends RendererCanvas {\r\n    img: HTMLImageElement | undefined = undefined;\r\n    rotation = 0.0;\r\n    m: number[] = [0, 0];\r\n\r\n    switch = true;\r\n    isDithering = false;\r\n\r\n    imageResizer: ImageResizer; \r\n\r\n    rx: number = 10\r\n    ry: number = 10\r\n    \r\n    pixelMap: PixelMap;\r\n\r\n    canvasPixelated = document.createElement('canvas');\r\n    ctxPixelated: CanvasRenderingContext2D;\r\n\r\n    constructor(div: any) {\r\n        super(div);\r\n        this.ctx = this.canvas.getContext('2d', { willReadFrequently: true }) as CanvasRenderingContext2D;\r\n\r\n        this.isStatic = true;\r\n\r\n        this.canvas.style.position = 'relative';\r\n        this.canvas.style.width = '100%';\r\n        this.canvas.style.height = '100%';\r\n\r\n\r\n        let imgSVG = new Image(20, 20);\r\n        imgSVG.src = process.env.PUBLIC_URL + '/static/svg/moon.svg' ; // d as string;\r\n        div.appendChild(imgSVG);\r\n\r\n        this.imageResizer = new ImageResizer();\r\n        this.pixelMap = new PixelMap()\r\n\r\n        \r\n        \r\n        getImgFromURL('https://raw.githubusercontent.com/NamjuLee/data/master/img/bg/zoom-James-River-Kayaking.jpg').then((img: HTMLImageElement) => {\r\n            // getImgFromURL('https://upload.wikimedia.org/wikipedia/commons/f/ff/Mozilla_Firefox_logo_2013.png').then((img: HTMLImageElement) => {\r\n            this.img = img;\r\n            this.img.onload = (ev) => {\r\n                this.update(img);\r\n            };\r\n        });\r\n\r\n        const divInput = document.createElement('input');\r\n        divInput.value = 'https://raw.githubusercontent.com/NamjuLee/data/master/img/heightMap/Heightmap_01.png';\r\n        divInput.addEventListener('keydown', (e: KeyboardEvent) => {\r\n            if (e.code === 'Enter') {\r\n                getImgFromURL(divInput.value).then((img: HTMLImageElement) => {\r\n                    this.img = img;\r\n                    this.img.onload = (ev) => {\r\n                        this.update(img);\r\n                    };\r\n                });\r\n            }\r\n        });\r\n        this.divHost.appendChild(divInput);\r\n\r\n        const slType = getSlider('rx', 10, 200)\r\n        slType.slider.defaultValue = '10';\r\n        this.divHost.appendChild(slType.div);\r\n        slType.slider.oninput = () => {\r\n            const value = parseInt(slType.slider.value);\r\n            this.rx = value;\r\n            this.updatePixelatedImage();\r\n        };\r\n        const slType2 = getSlider('ry', 10, 200)\r\n        slType2.slider.defaultValue = '10';\r\n        this.divHost.appendChild(slType2.div);\r\n        slType2.slider.oninput = () => {\r\n            const value = parseInt(slType2.slider.value);\r\n            this.ry = value;\r\n            this.updatePixelatedImage();\r\n        };\r\n        // const slType3 = getSlider('contrast', 0, 20)\r\n        // slType3.slider.defaultValue = '10';\r\n        // this.divHost.appendChild(slType3.div);\r\n        // slType3.slider.oninput = () => {\r\n        //     const value = parseInt(slType3.slider.value) * .1;\r\n        //     // console.log(value);\r\n        //     this.params.contrast = value;\r\n        //     this.render(this.ctx);\r\n        // };\r\n        // const slType4 = getSlider('brightness', 0, 20)\r\n        // slType4.slider.defaultValue = '10';\r\n        // this.divHost.appendChild(slType4.div);\r\n        // slType4.slider.oninput = () => {\r\n        //     const value = parseInt(slType4.slider.value) * .1;\r\n        //     // console.log(value);\r\n        //     this.params.brightness = value;\r\n        //     this.render(this.ctx);\r\n        // };\r\n        // const slType5 = getSlider('sepia', 0, 100)\r\n        // slType5.slider.defaultValue = '0';\r\n        // this.divHost.appendChild(slType5.div);\r\n        // slType5.slider.oninput = () => {\r\n        //     const value = parseInt(slType5.slider.value) * .01;\r\n        //     // console.log(value);\r\n        //     this.params.sepia = value;\r\n        //     this.render(this.ctx);\r\n        // };\r\n\r\n        // const reset = document.createElement('button');\r\n        // this.divHost.appendChild(reset);\r\n        // reset.style.width = '50px';\r\n        // reset.style.height = '50px';\r\n        // reset.textContent = 'Reset';\r\n        // reset.onclick = () => {\r\n        //     this.resetParam();\r\n        //     this.render(this.ctx);\r\n        // }\r\n\r\n        // const preset = document.createElement('button');\r\n        // this.divHost.appendChild(preset);\r\n        // preset.style.width = '50px';\r\n        // preset.style.height = '50px';\r\n        // preset.textContent = 'preset';\r\n        // preset.onclick = () => {\r\n        //     this.renderWithPreset();\r\n        //     this.render(this.ctx);\r\n        // }\r\n\r\n        this.divHost.appendChild(this.imageResizer.canvasView)\r\n\r\n        this.ctxPixelated = this.canvasPixelated.getContext('2d');\r\n        this.divHost.appendChild(this.canvasPixelated)\r\n        this.divHost.appendChild(this.imageResizer.canvas)\r\n\r\n        this.start();\r\n    }\r\n    public updatePixelatedImage() {\r\n        const ctxData = this.imageResizer.updateRes(this.rx, this.ry);\r\n        // console.log(ctxData)\r\n\r\n        this.ctxPixelated.clearRect(0, 0, this.ctxPixelated.canvas.width, this.ctxPixelated.canvas.height);\r\n        this.pixelMap.rx = this.rx;\r\n        this.pixelMap.ry = this.ry;\r\n        this.pixelMap.init(new Vector3(0, 0, 0), new Vector3(this.img.width, this.img.height, 0), ctxData)\r\n        this.pixelMap.render(this.ctxPixelated);\r\n\r\n    }\r\n    public update(img: HTMLImageElement) {\r\n        this.img = img;\r\n        this.canvas.width = this.img.width;\r\n        this.canvas.height = this.img.height;\r\n\r\n        \r\n        this.canvasPixelated.width = this.img.width;\r\n        this.canvasPixelated.height = this.img.height;\r\n\r\n        this.imageResizer.init(img)\r\n\r\n        this.render(this.ctx);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        if (this.img === undefined) { return; }\r\n\r\n        // const params = this.params;\r\n        // this.cFilter.applyFilter(ctx, params)\r\n\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.drawImage(this.img, 0, 0);\r\n\r\n    }\r\n    public destroyPost() {\r\n        // this.cFilter.destroy();\r\n    }\r\n};\r\n\r\nconst getSlider = (title: string, min: number, max: number) => {\r\n    // <input type=\"range\" min=\"1\" max=\"100\" value=\"50\" class=\"slider\" id=\"myRange\">\r\n    const div = document.createElement('div');\r\n    div.style.display = 'flex';\r\n\r\n    const slider = document.createElement('input');\r\n    slider.type = 'range';\r\n    slider.min = `${min}`;\r\n    slider.max = `${max}`;\r\n\r\n    const text = document.createElement('div');\r\n    text.textContent = title;\r\n    text.style.color = '#aaa';\r\n    div.appendChild(slider);\r\n    div.appendChild(text);\r\n    return {\r\n        div, slider, text\r\n    }\r\n};"],"names":["PixelMap","constructor","pixelList","minV","maxV","rx","ry","intervalX","intervalY","init","imgData","this","x","y","px","width","j","i","xV","yV","k","r","data","g","b","a","pix","Pixel","xi","yi","color","push","initGridNeighbor","nPix","picking","mv","Vector3","dis","Number","MAX_VALUE","id","length","theDis","distance","vec","hover","render","ctx","forEach","p","pMap","z","height","beginPath","rect","closePath","stroke","fillStyle","fill","arc","Math","PI","moveTo","lineTo","strokeText","v0","v1","sqrt","distance2","ImageData","img","ImageResizer","canvas","document","createElement","canvasView","compute","updateRes","getContext","ctxView","drawImage","getImageData","Solution","divHost","renderer","getElementById","style","display","alignItems","div","marginLeft","marginRight","backgroundColor","margin","background","appendChild","Renderer","destroy","lastElementChild","removeChild","RendererCanvas","super","undefined","rotation","m","switch","isDithering","imageResizer","pixelMap","canvasPixelated","ctxPixelated","willReadFrequently","isStatic","position","imgSVG","Image","src","process","getImgFromURL","then","onload","ev","update","divInput","value","addEventListener","e","code","slType","getSlider","slider","defaultValue","oninput","parseInt","updatePixelatedImage","slType2","start","ctxData","clearRect","destroyPost","title","min","max","type","text","textContent"],"sourceRoot":""}