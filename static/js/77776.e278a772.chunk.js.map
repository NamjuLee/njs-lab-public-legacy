{"version":3,"file":"static/js/77776.e278a772.chunk.js","mappings":"uIACO,MAAMA,EAOTC,YAAYC,EAA8BC,GAAuB,KANjED,mBAAa,OACbC,aAAO,OAEPC,YAAM,OACNC,SAAG,EAGCC,KAAKJ,cAAgBA,EACrBI,KAAKH,QAAUA,EACfG,KAAKC,WAAWD,KAAKH,QACzB,CACQI,WAAWJ,GACfG,KAAKF,OAASI,SAASC,cAAc,UACrCH,KAAKF,OAAOM,MAAMC,SAAW,WAC7BL,KAAKF,OAAOM,MAAME,OAAS,IAC3BN,KAAKH,QAAUA,EACfG,KAAKH,QAAQU,YAAYP,KAAKF,QAC9BE,KAAKF,OAAOU,GAAK,iBACjBR,KAAKF,OAAOW,UAAY,kCACxBT,KAAKF,OAAOM,MAAMM,cAAgB,OAClCV,KAAKD,IAAMC,KAAKF,OAAOa,WAAW,MAElCX,KAAKF,OAAOc,MAAQZ,KAAKH,QAAQgB,YACjCb,KAAKF,OAAOgB,OAASd,KAAKH,QAAQkB,YACtC,CACAC,aAAaJ,EAAeE,GACxBd,KAAKF,OAAOc,MAAQA,EACpBZ,KAAKF,OAAOgB,OAASA,CACzB,E,qEC1BG,MAAMG,EAGTtB,YAAYuB,GAA2C,KAFvDA,yBAAmB,OACnBpB,YAAM,EAEFE,KAAKkB,oBAAsBA,EAC3BlB,KAAKF,OAAS,IAAIJ,EAAAA,OAAOM,KAAMA,KAAKkB,oBAAoBC,MAAMC,qBAAqBC,YAAYC,IACnG,E","sources":["njslab/Workshop/workshop-ml/AppTFEnv/Model/GraphicsCoreWrapper/CanvasWrapper/Canvas/Canvas.ts","njslab/Workshop/workshop-ml/AppTFEnv/Model/GraphicsCoreWrapper/CanvasWrapper/index.ts"],"sourcesContent":["import { CanvasWrapper } from '..';\r\nexport class Canvas {\r\n    canvasWrapper: CanvasWrapper;\r\n    hostDiv: HTMLElement;\r\n\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n\r\n    constructor(canvasWrapper: CanvasWrapper, hostDiv: HTMLElement) {\r\n        this.canvasWrapper = canvasWrapper;\r\n        this.hostDiv = hostDiv;\r\n        this.InitCanvas(this.hostDiv);\r\n    }\r\n    private InitCanvas(hostDiv: HTMLElement) {\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.style.position = 'absolute';\r\n        this.canvas.style.zIndex = '0';\r\n        this.hostDiv = hostDiv;\r\n        this.hostDiv.appendChild(this.canvas);\r\n        this.canvas.id = 'CanvasRenderer';\r\n        this.canvas.className = 'njslab-web-core-canvas-renderer';\r\n        this.canvas.style.pointerEvents = 'none';\r\n        this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n        this.canvas.width = this.hostDiv.clientWidth; // hostDivForSize.clientWidth;\r\n        this.canvas.height = this.hostDiv.clientHeight; // hostDivForSize.clientHeight;\r\n    }\r\n    ResizeCanvas(width: number, height: number) {\r\n        this.canvas.width = width;\r\n        this.canvas.height = height;\r\n    }\r\n}","import { GraphicsCoreWrapper } from '..';\r\n\r\nimport { Canvas } from './Canvas/Canvas';\r\n\r\nexport class CanvasWrapper {\r\n    graphicsCoreWrapper: GraphicsCoreWrapper;\r\n    canvas: Canvas;\r\n    constructor(graphicsCoreWrapper: GraphicsCoreWrapper) {\r\n        this.graphicsCoreWrapper = graphicsCoreWrapper;\r\n        this.canvas = new Canvas(this, this.graphicsCoreWrapper.model.modelViewCoreWrapper.viewWrapper.div);\r\n    }\r\n}"],"names":["Canvas","constructor","canvasWrapper","hostDiv","canvas","ctx","this","InitCanvas","document","createElement","style","position","zIndex","appendChild","id","className","pointerEvents","getContext","width","clientWidth","height","clientHeight","ResizeCanvas","CanvasWrapper","graphicsCoreWrapper","model","modelViewCoreWrapper","viewWrapper","div"],"sourceRoot":""}