{"version":3,"file":"static/js/61736.f3e4e3c0.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-ml/TSNE-Viz/Graph.ts","njslab/Workshop/workshop-ml/TSNE-Viz/index.ts","njslab/Workshop/workshop-ml/TSNE-Viz/ui.ts"],"sourcesContent":["import { NVector3 } from '../../../../lib/NJSCore';\r\n\r\nexport class Graph {\r\n\r\n    nodes: Node[] = [];\r\n    edges: Edge[] = [];\r\n    dt: number = 0.0;\r\n\r\n    mouse: NVector3 = new NVector3(0, 0);\r\n\r\n    damping = 0.96;\r\n    gravity = -0.032;\r\n    timeStep = 0.16; // 0.316; // 0.18; // 0.26;\r\n    groundZ = -9.26;\r\n\r\n    capture: Node | undefined = undefined;\r\n\r\n    constructor() {\r\n        // \r\n    }\r\n    Init(width: number, height: number) {\r\n        this.InitGridR(width, height);\r\n        this.nodes[0].fixed = true;\r\n        this.nodes[9].fixed = true;\r\n        this.nodes[this.nodes.length - 1].fixed = true;\r\n        this.nodes[this.nodes.length - 1 - 9].fixed = true;\r\n    }\r\n    updateOptionA(v: number) {\r\n        this.damping = v * 0.1;\r\n        console.log(this.damping, 'damping');\r\n    }\r\n    updateOptionB(v: number) {\r\n        this.timeStep = v * 0.05;\r\n        console.log(this.timeStep, 'timeStep');\r\n    }\r\n    updateOptionC(v: number) {\r\n        // this.gravity = v * 0.1;\r\n        // console.log(this.gravity, 'gravity');\r\n    }\r\n    shrinkage(id: number, v: number) {\r\n        this.nodes[id].fixed = true;\r\n        for (let i = 0; i < this.nodes[id].edge.length; ++i) {\r\n            this.nodes[id].edge[i].targetLengthShrinkage(v)\r\n        }\r\n    }\r\n    InitGridR(width: number, height: number, xNum: number = 10, yNum: number = 10) {\r\n        const xOff = 0;\r\n        const yOff = 0;\r\n        const xInterval = (width / xNum) + 1;\r\n        const yInterval = (height / yNum) + 1;\r\n        const nbase = this.nodes.length;\r\n        for (let i = 0; i < yNum; ++i) {\r\n            for (let j = 0; j < xNum; ++j) {\r\n                let x = xOff + xInterval * j - width * 0.5;\r\n                let y = yOff + yInterval * i - height * 0.5;\r\n                this.AddNode(x, 0, y, NVector3.Zero(), 1.0);\r\n                // this.nodes.push(new Node(new NVector3(x, y), new NVector3(0, 0), 1));\r\n            }\r\n        }\r\n        for (let j = 0; j < yNum; ++j) {\r\n            for (let i = 0; i < xNum; ++i) {\r\n                let k = j * xNum + i;\r\n\r\n                if (i !== 0) { this.AddEdge(this.nodes[nbase + k - 1], this.nodes[nbase + k]); }\r\n                if (j !== 0) { this.AddEdge(this.nodes[nbase + k - xNum], this.nodes[nbase + k]); }\r\n\r\n                // if (i !== 0 && j !== 0) {this.AddEdge(this.nodes[nbase + k - xNum - 1], this.nodes[nbase + k]); }\r\n\r\n                // if (i !== 0 && j !== yNum - 1) {this.AddEdge(this.nodes[nbase + k + xNum - 1], this.nodes[nbase + k]); }\r\n            }\r\n        }\r\n    }\r\n    public Clear() {\r\n        this.nodes = [];\r\n        this.edges = [];\r\n    }\r\n    public AddNode(x: number, y: number, z: number, _u0: NVector3 = new NVector3(0, 0, 0), _mass: number = 1): Node {\r\n        const n = new Node(new NVector3(x, y, z), _u0, _mass);\r\n        this.nodes.push(n);\r\n        n.id = this.nodes.length - 1;\r\n        return n;\r\n    }\r\n    public AddEdge(n0: Node, n1: Node): Edge {\r\n        const e = new Edge(n0, n1);\r\n        n0.edge.push(e);\r\n        n1.edge.push(e);\r\n        this.edges.push(e);\r\n        return e;\r\n    }\r\n    MouseMove(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        // console.log('move', x, y);\r\n    }\r\n    MouseDClick(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        const n = this.FindNode(this.mouse);\r\n        if (n) {\r\n            n.fixed = !n.fixed;\r\n        }\r\n        // console.log('click', x, y);\r\n    }\r\n    MouseDown(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        this.capture = this.FindNode(this.mouse);\r\n        if (this.capture) {\r\n            this.capture.fixed = true;\r\n            this.capture.isCapture = true;\r\n        }\r\n        console.log('down', x, y, this.capture);\r\n    }\r\n    MouseLeftClick(x: number, y: number) {\r\n        console.log('click', x, y, this.capture);\r\n    }\r\n    MouseUp(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        if (this.capture) {\r\n            this.capture.isCapture = false;\r\n            this.capture = undefined;\r\n        }\r\n        console.log('up', x, y);\r\n    }\r\n    MouseDrag(x: number, y: number) {\r\n        this.mouse.x = x;\r\n        this.mouse.y = y;\r\n        if (this.capture) {\r\n            this.capture.v.x = x;\r\n            this.capture.v.y = y;\r\n        }\r\n        console.log('drag', x, y);\r\n    }\r\n    Render(ctx?: CanvasRenderingContext2D) {\r\n\r\n        this.dt += 0.1;\r\n        this.Move(this.mouse.x, this.mouse.y, this.mouse.z, this.damping, 0, this.timeStep, this.groundZ, 1);\r\n\r\n        // for (let e of this.edges) { e.Render(ctx); }\r\n        // for (let n of this.nodes) { n.Render(ctx, this.mouse); }\r\n    }\r\n    FindNode(mv: NVector3) {\r\n        for (let n of this.nodes) {\r\n            if (n.v.Distance(mv) < n.m + 3) {\r\n                return n;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    public Move(x: number, y: number, z: number, damping: number, g: number = 0, dt: number = 0.01, groundZ: number = -10, step: number = 1) {\r\n        const atr = new NVector3(x, y, z);\r\n        for (let i = 0; i < step; ++i) {\r\n            for (const n of this.nodes) {\r\n\r\n                // const dv: NVector3 = atr - n.p;\r\n                //  L = dv.Length;\r\n                // dv.Unitize();\r\n                // n.f = dv * Math.Exp(-0.1 * L * L) * 0.1 + Vector3d.ZAxis * g;\r\n\r\n                const dv = NVector3.Sub(atr, n.v);\r\n                const L = dv.Length();\r\n                dv.Unitize();\r\n                n.f = NVector3.Add(NVector3.Scale(dv, Math.exp(-0.1 * L * L) * 0.1), (NVector3.Scale(NVector3.YAxis(), g)));\r\n            }\r\n            for (const e of this.edges) { e.ApplySpringForce(); }\r\n            for (const n of this.nodes) { n.Move(dt, damping, groundZ); }\r\n        }\r\n    }\r\n}\r\nexport class Edge {\r\n    n0: Node;\r\n    n1: Node;\r\n    public targetLength: number = 0.0;\r\n    public isModified = false;\r\n    public springConstant: number = 0.8; // 1; // 0.8;\r\n    private _targetLengthOriginal = 0;\r\n    constructor(n0: Node, n1: Node) {\r\n        this.n0 = n0;\r\n        this.n1 = n1;\r\n        this.targetLength = this.n0.v.Distance(this.n1.v) * 0.95;\r\n        this._targetLengthOriginal = this.targetLength;\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#ff0000';\r\n\r\n        if (NVector3.Distance(this.n0.v, this.n1.v) < this.targetLength * 2) {\r\n\r\n            ctx.strokeStyle = '#0000ff';\r\n            // this.n0.isShort = true;\r\n            // this.n1.isShort = true;\r\n        }\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.n0.v.x, this.n0.v.y);\r\n        ctx.lineTo(this.n1.v.x, this.n1.v.y);\r\n        ctx.closePath();\r\n        ctx.stroke();\r\n    }\r\n    targetLengthShrinkage(n: number) {\r\n        if (!this.isModified) {\r\n            this.isModified = true;\r\n            this.targetLength *= n;\r\n        }\r\n    }\r\n\r\n    public ApplySpringForce() {\r\n        // Vector3d dp = n1.p - n0.p;\r\n        // double dist = dp.Length;\r\n        // dp.Unitize();\r\n\r\n        // n0.f += dp * (dist - TargetLength) * SpringConstant;\r\n        // n1.f -= dp * (dist - TargetLength) * SpringConstant;\r\n\r\n        // const dp: NVector3 = NVector3.Sub(this.n1.p, this.n0.p);\r\n        // const dist:number = dp.Length();\r\n        // dp.Unitize();\r\n\r\n        let dp = NVector3.Sub(this.n1.v, this.n0.v);\r\n        let dist = dp.Length();\r\n        dp.Unitize();\r\n\r\n        const length = NVector3.Scale(dp, (dist - this.targetLength) * this.springConstant);\r\n        this.n0.f = NVector3.Add(this.n0.f, length);\r\n        this.n1.f = NVector3.Sub(this.n1.f, length);\r\n\r\n    }\r\n}\r\nexport class Node {\r\n    public id: number = -1;\r\n    public edge: Edge[] = [];\r\n    public nNodes: Node[] = [];\r\n    public v: NVector3 = NVector3.Origin();\r\n    public f: NVector3 = NVector3.Origin();\r\n    public u: NVector3 = NVector3.Origin();\r\n    public m: number = 0.0;\r\n\r\n    public fixed: boolean = false;\r\n    public isCapture: boolean = false;\r\n    constructor(_p0: NVector3, _u0: NVector3, _mass: number) {\r\n        this.v = new NVector3(_p0.x, _p0.y, _p0.z);\r\n        this.u = new NVector3(_u0.x, _u0.y, _u0.z);\r\n        this.m = _mass;\r\n    }\r\n    public Move(dt: number, damping: number, groundZ: number = 0.0) {\r\n        if (this.fixed || this.isCapture) { return; }\r\n\r\n        // u *= damping;\r\n        // u += f * (dt / m);\r\n        // p += u * dt;\r\n\r\n        // this.u = NVector3.Scale(this.u , damping );\r\n        // this.u = NVector3.Add( this.u,  NVector3.Scale(this.f, dt / this.m));\r\n        // this.p  = NVector3.Add(this.p, NVector3.Scale(this.u, dt));\r\n\r\n        this.u.Mult(damping);\r\n        this.u.Add(NVector3.Scale(this.f, dt / this.m));\r\n\r\n        const v = NVector3.Scale(this.u, dt);\r\n        // this.v.Add( );\r\n        this.v.x += v.x;\r\n        this.v.y += v.y;\r\n\r\n        // if (this.p.y < groundZ) {\r\n        //     this.p.y = groundZ;\r\n        //     if (this.u.y < 0.0) {this.u.y = -this.u.y; }\r\n        // }\r\n    }\r\n    Render(ctx: CanvasRenderingContext2D, m: NVector3) {\r\n        ctx.beginPath();\r\n\r\n        if (m.Distance(this.v) < this.m + 3) {\r\n            ctx.fillStyle = '#000000';\r\n            ctx.arc(this.v.x, this.v.y, this.m + 6, 0.0, Math.PI * 2);\r\n        } else {\r\n            ctx.fillStyle = '#f90000';\r\n            ctx.arc(this.v.x, this.v.y, this.m + 3, 0.0, Math.PI * 2);\r\n        }\r\n\r\n        if (this.fixed) {\r\n            ctx.fillStyle = '#000000';\r\n            ctx.arc(this.v.x, this.v.y, this.m + 7.5, 0.0, Math.PI * 2);\r\n        }\r\n\r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { RendererThree, getCSVFromURL, getJSONFromURL } from '../../../../lib';\r\nimport { NVector3, } from '../../../../lib/NJSCore';\r\nimport { UI } from './ui';\r\nimport { Graph } from './Graph';\r\n\r\nexport class Solution extends RendererThree {\r\n\r\n    pointLight: THREE.PointLight;\r\n    pointer = new THREE.Vector2();\r\n    raycaster = new THREE.Raycaster();\r\n    sphere: THREE.Mesh;\r\n\r\n    lines: THREE.LineSegments[] = [];\r\n    linesIndex: number[] = [];\r\n\r\n    mesh: THREE.Points;\r\n\r\n    lookupClass = [];\r\n    lookupTable = {};\r\n\r\n    graph: Graph;\r\n\r\n    needInterpolation: boolean = true;\r\n\r\n    preSelLine: THREE.LineSegments;\r\n\r\n    ui: UI;\r\n\r\n    idLookupTable;\r\n\r\n    cameraAni = new THREE.Vector3(0, 100, 100);\r\n\r\n    constructor(id: string = 'main') {\r\n        super(id)\r\n\r\n        this.ui = new UI(this);\r\n\r\n        this.camera.position.set(0, 500, 500);\r\n\r\n        const ambientLight = new THREE.AmbientLight(0xcccccc, 0.25);\r\n        this.scene.add(ambientLight);\r\n\r\n        this.pointLight = new THREE.PointLight(0xffffff, 0.75);\r\n        this.pointLight.position.x = 10;\r\n        this.pointLight.castShadow = true;\r\n        this.scene.add(this.pointLight);\r\n\r\n        this.raycaster = new THREE.Raycaster();\r\n        this.raycaster.params.Points.threshold = 0.4;\r\n        this.raycaster.far = 1000;\r\n\r\n        const sphereGeometry = new THREE.SphereGeometry(0.1, 32, 32);\r\n        const sphereMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff });\r\n        const sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);\r\n        this.sphere = sphere;\r\n        this.scene.add(sphere);\r\n\r\n        this.graph = new Graph();\r\n\r\n        getCSVFromURL(process.env.PUBLIC_URL + '/static/data/smDataViz.csv').then((d) => {\r\n            const line = d.split(/\\r\\n|\\r|\\n/g);\r\n\r\n            const vertices = [];\r\n            const color = [];\r\n\r\n\r\n            const lookupClass = []\r\n            const lookupTable = {}\r\n\r\n\r\n            for (let i = 0; i < line.length; ++i) {\r\n\r\n                const pos = line[i].split(',')\r\n\r\n\r\n                const x = +pos[0] * 0.1;\r\n                const y = +pos[1] * 0.1;\r\n                const z = +pos[2] * 0.1;\r\n                vertices.push(x, y, z);\r\n\r\n                this.graph.AddNode(x, y, z);\r\n\r\n                color.push(0.5, 0.5, 0.5);\r\n\r\n                const classN = pos[3];\r\n                lookupClass.push(classN)\r\n\r\n                const neighbor = {};\r\n                for (let j = 4; j < pos.length; j += 2) {\r\n                    const keyword = pos[j].split('(')[1].replaceAll(\"'\", \"\");\r\n                    const prob = +pos[j + 1].split(')')[0];\r\n                    // console.log(keyword, prob)\r\n                    neighbor[keyword] = prob;\r\n                }\r\n\r\n                lookupTable[classN] = {\r\n                    id: i,\r\n                    pos: [x, y, z],\r\n                    neighbor,\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n            for (let i = 0; i < lookupClass.length; ++i) {\r\n                const neighbors = lookupTable[lookupClass[i]].neighbor;\r\n                const n0 = this.graph.nodes[i];\r\n                for (let key in neighbors) {\r\n                    // console.log(key)\r\n                    const node = lookupTable[key]\r\n                    const n1 = this.graph.nodes[node.id];\r\n                    this.graph.AddEdge(n0, n1);\r\n                    // break;\r\n                }\r\n            }\r\n\r\n            // console.log(this.graph)\r\n\r\n            // console.log(lookupTable)\r\n            this.lookupClass = lookupClass;\r\n            this.lookupTable = lookupTable;\r\n\r\n\r\n\r\n\r\n            const geometry = new THREE.BufferGeometry();\r\n\r\n            geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\r\n            geometry.setAttribute('color', new THREE.Float32BufferAttribute(color, 3));\r\n            const material = new THREE.PointsMaterial({\r\n                // color: 0x00fff0 , \r\n                vertexColors: true,\r\n                size: 2,\r\n            });\r\n            const points = new THREE.Points(geometry, material);\r\n            geometry.computeBoundingSphere();\r\n            this.scene.add(points);\r\n            this.mesh = points;\r\n\r\n\r\n\r\n            for (let i = 0; i < this.graph.nodes.length; ++i) {\r\n                const e = this.graph.nodes[i].edge;\r\n\r\n                const geometryLine = new THREE.BufferGeometry();\r\n                // const materialLine = new THREE.LineBasicMaterial({  linewidth: 0.0001,  opacity: 0.01 });\r\n                const materialLine = new THREE.LineDashedMaterial({ color: 0x333333, dashSize: 0.071, gapSize: 0.5, opacity: 0.0001 });\r\n\r\n                const positions = [];\r\n                const colorLine = [0.2, 0.0, 0.2]\r\n\r\n                for (let j = 0; j < e.length; j++) {\r\n                    const n0 = e[j].n0;\r\n                    const n1 = e[j].n1;\r\n\r\n                    positions.push(n0.v.x, n0.v.y, n0.v.z)\r\n                    positions.push(n1.v.x, n1.v.y, n1.v.z)\r\n                }\r\n\r\n                // colors.push(colorLine[0], colorLine[1], colorLine[2]);\r\n                // colors.push(colorLine[0], colorLine[1], colorLine[2]);\r\n\r\n                geometryLine.setAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\r\n\r\n                geometryLine.computeBoundingSphere();\r\n\r\n                const ln = new THREE.LineSegments(geometryLine, materialLine);\r\n                ln.computeLineDistances();\r\n                this.scene.add(ln);\r\n                this.lines.push(ln)\r\n            }\r\n\r\n            getJSONFromURL(process.env.PUBLIC_URL + '/static/data/smIDLookUpTable.json').then((d2) => {\r\n                this.idLookupTable = JSON.parse(JSON.stringify(d2));\r\n\r\n                this.start();\r\n            });\r\n\r\n\r\n        });\r\n\r\n    }\r\n    public mouseMove(e: MouseEvent): void {\r\n        this.pointer.x = (e.offsetX / this.hostDiv.clientWidth) * 2 - 1;\r\n        this.pointer.y = - (e.offsetY / this.hostDiv.clientHeight) * 2 + 1;\r\n    }\r\n    public mouseDown(e: MouseEvent): void {\r\n        this.pointer.x = (e.offsetX / this.hostDiv.clientWidth) * 2 - 1;\r\n        this.pointer.y = - (e.offsetY / this.hostDiv.clientHeight) * 2 + 1;\r\n\r\n        // this.raycaster.setFromCamera(this.pointer, this.camera);\r\n        // const intersections = this.raycaster.intersectObjects([this.mesh], false);\r\n        // const intersection = (intersections.length) > 0 ? intersections[0] : null;\r\n\r\n        // if (intersection !== null) {\r\n        //     // console.log(intersection.index);\r\n        //     this.sphere.position.set(intersection.point.x, intersection.point.y + 1, intersection.point.z);\r\n        //     // this.mesh.geometry.attributes.position.setXYZ(intersection.index ,intersection.point.x, intersection.point.y + 1, intersection.point.z);\r\n        //     this.graph.shrinkage(intersection.index);\r\n            \r\n        //     const className = this.lookupClass[intersection.index];\r\n        //     this.ui.updateSubID(this.idLookupTable[className])\r\n        // }\r\n        // // this.mesh.geometry.attributes.position.needsUpdate = true;\r\n        // // this.mesh.geometry.attributes.color.needsUpdate = true;\r\n        // // this.mesh.geometry.computeVertexNormals();\r\n        // // console.log('click')\r\n\r\n    }\r\n    public mouseClick(e: MouseEvent): void {\r\n        this.pointer.x = (e.offsetX / this.hostDiv.clientWidth) * 2 - 1;\r\n        this.pointer.y = - (e.offsetY / this.hostDiv.clientHeight) * 2 + 1;\r\n\r\n        this.raycaster.setFromCamera(this.pointer, this.camera);\r\n        const intersections = this.raycaster.intersectObjects([this.mesh], false);\r\n        const intersection = (intersections.length) > 0 ? intersections[0] : null;\r\n\r\n        if (intersection !== null) {\r\n            // console.log(intersection.index);\r\n            this.sphere.position.set(intersection.point.x, intersection.point.y + 1, intersection.point.z);\r\n            // this.mesh.geometry.attributes.position.setXYZ(intersection.index ,intersection.point.x, intersection.point.y + 1, intersection.point.z);\r\n            \r\n            const className = this.lookupClass[intersection.index];\r\n            this.ui.updateSubID(this.idLookupTable[className])\r\n        }\r\n        // this.mesh.geometry.attributes.position.needsUpdate = true;\r\n        // this.mesh.geometry.attributes.color.needsUpdate = true;\r\n        // this.mesh.geometry.computeVertexNormals();\r\n        // console.log('click')\r\n    }\r\n    public update(scene: THREE.Scene) {\r\n        // this.graph.Move(this.sphere.position.x, this.sphere.position.y, this.sphere.position.z, 0.999, 0, 0.0001);\r\n        this.graph.Render();\r\n\r\n        let numVertices = this.mesh.geometry.attributes.position.count;\r\n        for (let i = 0; i < numVertices; i++) {\r\n            let o = this.mesh.geometry.attributes.position;\r\n            // let x = o.getX(i);\r\n            // let y = o.getY(i);\r\n            // let z = o.getZ(i)\r\n            let x = this.graph.nodes[i].v.x;\r\n            let y = this.graph.nodes[i].v.y;\r\n            let z = this.graph.nodes[i].v.z;\r\n\r\n            // y = Math.sin(9 * x * z + this.t * 5)\r\n            // y = y < 0 ? 0 : y;\r\n            // let p = new THREE.Vector3(x, y, z);\r\n\r\n            this.mesh.geometry.attributes.position.setXYZ(i, x, y, z);\r\n            // this.mesh.geometry.attributes.size.\r\n            this.mesh.geometry.attributes.color.setXYZ(i, 0.3, 0.3, 0.3);\r\n        }\r\n\r\n        this.raycaster.setFromCamera(this.pointer, this.camera);\r\n        const intersections = this.raycaster.intersectObjects([this.mesh], false);\r\n        const intersection = (intersections.length) > 0 ? intersections[0] : null;\r\n\r\n\r\n\r\n        if (intersection !== null) {\r\n            // console.log(intersection.index);\r\n            this.sphere.position.set(intersection.point.x, intersection.point.y, intersection.point.z);\r\n\r\n            const className = this.lookupClass[intersection.index];\r\n            const data = this.lookupTable[className];\r\n            // console.log(className, data);\r\n\r\n            this.ui.divTitle.textContent = 'Keyword: ' + className;\r\n            this.ui.updateSub(data.neighbor);\r\n            this.graph.shrinkage(intersection.index, 0.6);\r\n            this.mesh.geometry.attributes.color.setXYZ(intersection.index, 0, 1, 1);\r\n\r\n            for (let key in data.neighbor) {\r\n                const d = this.lookupTable[key]; \r\n                // console.log(d, key);\r\n                this.mesh.geometry.attributes.color.setXYZ(d.id, 1, 1, 0);\r\n            }\r\n\r\n        }\r\n        this.mesh.geometry.attributes.position.needsUpdate = true;\r\n        this.mesh.geometry.attributes.color.needsUpdate = true;\r\n        this.mesh.geometry.computeVertexNormals();\r\n\r\n\r\n\r\n\r\n\r\n        for (let i = 0; i < this.graph.nodes.length; ++i) {\r\n            const e = this.graph.nodes[i].edge;\r\n            const ln: THREE.LineSegments = this.lines[i];\r\n            const positions = [];\r\n            for (let j = 0; j < e.length; j++) {\r\n                const n0 = e[j].n0;\r\n                const n1 = e[j].n1;\r\n\r\n                positions.push(n0.v.x, n0.v.y, n0.v.z)\r\n                positions.push(n1.v.x, n1.v.y, n1.v.z)\r\n\r\n            }\r\n\r\n            let count = 0;\r\n            for (let j = 0; j < positions.length; j += 6) {\r\n\r\n                ln.geometry.attributes.position.setXYZ(count++, positions[j], positions[j + 1], positions[j + 2])\r\n                ln.geometry.attributes.position.setXYZ(count++, positions[j + 3], positions[j + 4], positions[j + 5]);\r\n            }\r\n            // colors.push(colorLine[0], colorLine[1], colorLine[2]);\r\n            // colors.push(colorLine[0], colorLine[1], colorLine[2]);\r\n            ln.geometry.attributes.position.needsUpdate = true;\r\n\r\n        }\r\n\r\n        if (intersection !== null) {\r\n            if (this.preSelLine !== undefined) {\r\n                const mat = this.preSelLine.material as THREE.LineDashedMaterial;\r\n                mat.color.setRGB(0.3, 0.3, 0.3);\r\n                this.preSelLine = undefined;\r\n            }\r\n\r\n            const id = intersection.index;\r\n            const mat = this.lines[id].material as THREE.LineDashedMaterial;\r\n            mat.linewidth = 1;\r\n            mat.dashSize = 0.3;\r\n            this.lines[id].computeLineDistances();\r\n            mat.color.setRGB(0, 1, 1);\r\n\r\n            this.preSelLine = this.lines[id];\r\n\r\n        } else {\r\n            if (this.preSelLine !== undefined) {\r\n                const mat = this.preSelLine.material as THREE.LineDashedMaterial;\r\n\r\n                mat.dashSize = 0.071\r\n                mat.linewidth = 0.1;\r\n                this.preSelLine.computeLineDistances();\r\n                mat.color.setRGB(0.3, 0.3, 0.3);\r\n                this.preSelLine = undefined;\r\n            }\r\n\r\n        }\r\n\r\n        this.CameraInterpolation();\r\n\r\n\r\n    }\r\n    CameraInterpolation() {\r\n        if (this.needInterpolation) {\r\n\r\n            const v = easingMotion(this.camera.position, this.cameraAni)\r\n            this.camera.position.set(v.x, v.y, v.z);\r\n\r\n            // const v2 = easingMotion(this.controls.target, this.cameraAni)\r\n            // this.controls.target.set(v2.x, v2.y, v2.z);\r\n\r\n            if (this.camera.position.distanceTo(this.cameraAni) < 1) {\r\n                this.needInterpolation = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const easingMotion = (v1: THREE.Vector3, v2: THREE.Vector3, speed: number = 0.15) => {\r\n    const v = new THREE.Vector3(v2.x - v1.x, v2.y - v1.y, v2.z - v1.z)\r\n    return new THREE.Vector3(\r\n        v1.x + v.x * speed,\r\n        v1.y + v.y * speed,\r\n        v1.z + v.z * speed,\r\n    );\r\n};","import { Solution } from '.';\r\n\r\nexport class UI {\r\n    solution: Solution;\r\n\r\n    divTitle: HTMLDivElement;\r\n    divSub: HTMLDivElement;\r\n    divSubs: HTMLDivElement[] = [];\r\n    \r\n    divSubID: HTMLDivElement;\r\n    divSubIDs: HTMLDivElement[] = [];\r\n    constructor(solution: Solution) {\r\n        this.solution = solution;\r\n        this.initUI();\r\n    }\r\n    public initUI() {\r\n\r\n        this.divTitle = document.createElement('div');\r\n        this.solution.hostDiv.insertBefore(this.divTitle, this.solution.renderer.domElement);\r\n        this.divTitle.textContent = 'Storymaps Metrics from Jan 24-2020';\r\n        this.divTitle.style.color = '#fff';\r\n        this.divTitle.style.fontSize = '64px';\r\n        this.divTitle.style.position = 'absolute';\r\n        \r\n        this.divTitle.style.padding = '20px'\r\n        this.divTitle.style.zIndex = '1';\r\n        this.divTitle.style.paddingBottom = '10px';\r\n\r\n\r\n        const div = document.createElement('div');\r\n        this.solution.hostDiv.appendChild(div);\r\n        div.style.position = 'absolute';\r\n        div.style.padding = '20px';\r\n        div.style.padding = '20px';\r\n        div.style.marginTop = '100px';\r\n\r\n        this.divTitle = document.createElement('div');\r\n        div.appendChild(this.divTitle);\r\n        this.divTitle.textContent = 'TSNE Visualization ';\r\n        this.divTitle.style.fontSize = '20px';\r\n        this.divTitle.style.pointerEvents = 'none';\r\n        this.divTitle.style.paddingBottom = '10px';\r\n\r\n        this.divTitle = document.createElement('div');\r\n        div.appendChild(this.divTitle);\r\n        this.divTitle.textContent = 'Keyword: ';\r\n        this.divTitle.style.color = '#0ff';\r\n        this.divTitle.style.fontSize = '38px';\r\n        this.divTitle.style.pointerEvents = 'none';\r\n        this.divTitle.style.paddingBottom = '10px';\r\n\r\n        this.divSub = document.createElement('div');\r\n        div.appendChild(this.divSub);\r\n        this.divSub.textContent = 'Neighbors:';\r\n        this.divSub.style.paddingTop = '5px';\r\n        this.divSub.style.paddingBottom = '18px';\r\n\r\n        for(let i = 0 ; i < 10; ++i) {\r\n            const subs = document.createElement('div');\r\n            subs.textContent = ''\r\n            subs.style.pointerEvents = 'none';\r\n            \r\n            subs.style.paddingTop = '5px';\r\n            subs.style.color = '#cc0';\r\n            this.divSubs.push(subs);\r\n            this.divSub.appendChild(subs);\r\n        }\r\n\r\n\r\n\r\n        this.divSubID = document.createElement('div');\r\n        div.appendChild(this.divSubID);\r\n        this.divSubID.textContent = 'Storymaps ID:';\r\n        this.divSubID.style.paddingTop = '8px';\r\n        this.divSubID.style.paddingBottom = '8px';\r\n\r\n        for(let i = 0 ; i < 10; ++i) {\r\n            const subs = document.createElement('div');\r\n            subs.textContent = ''\r\n              this.divSubIDs.push(subs);\r\n            this.divSubID.appendChild(subs);\r\n        }\r\n\r\n    }\r\n    public updateSub(data) {\r\n        // console.log(data);\r\n        let count = 0;\r\n        for (let key in data) {\r\n\r\n            this.divSubs[count++].textContent = key;\r\n            // console.log(d, key);\r\n            // this.mesh.geometry.attributes.color.setXYZ(d.id, 1, 0, 1);\r\n        }\r\n    }\r\n    public updateSubID(data) {\r\n        // console.log(data);\r\n        try {\r\n            let count = 0;\r\n            for (let i = 0; i < data.length; ++i) {\r\n                this.divSubIDs[count++].innerHTML = `<a href=\"https://storymaps.arcgis.com/stories/${data[i]}\" style=\"font-size: 14px;\" target=\"_blank\" > ID: ${data[i]}</a>`\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n}"],"names":["Graph","constructor","nodes","edges","dt","mouse","NVector3","damping","gravity","timeStep","groundZ","capture","undefined","Init","width","height","this","InitGridR","fixed","length","updateOptionA","v","console","log","updateOptionB","updateOptionC","shrinkage","id","i","edge","targetLengthShrinkage","xNum","yNum","xInterval","yInterval","nbase","j","x","y","AddNode","k","AddEdge","Clear","z","_u0","_mass","n","Node","push","n0","n1","e","Edge","MouseMove","MouseDClick","FindNode","MouseDown","isCapture","MouseLeftClick","MouseUp","MouseDrag","Render","ctx","Move","mv","Distance","m","g","step","atr","dv","L","Length","Unitize","f","Math","exp","ApplySpringForce","targetLength","isModified","springConstant","_targetLengthOriginal","strokeStyle","beginPath","moveTo","lineTo","closePath","stroke","dp","dist","_p0","nNodes","u","Mult","Add","fillStyle","arc","PI","fill","Solution","RendererThree","super","pointLight","pointer","THREE","raycaster","sphere","lines","linesIndex","mesh","lookupClass","lookupTable","graph","needInterpolation","preSelLine","ui","idLookupTable","cameraAni","UI","camera","position","set","ambientLight","scene","add","castShadow","params","Points","threshold","far","sphereGeometry","sphereMaterial","color","getCSVFromURL","process","then","d","line","split","vertices","pos","classN","neighbor","keyword","replaceAll","prob","neighbors","key","node","geometry","setAttribute","material","vertexColors","size","points","computeBoundingSphere","geometryLine","materialLine","dashSize","gapSize","opacity","positions","ln","computeLineDistances","getJSONFromURL","d2","JSON","parse","stringify","start","mouseMove","offsetX","hostDiv","clientWidth","offsetY","clientHeight","mouseDown","mouseClick","setFromCamera","intersections","intersectObjects","intersection","point","className","index","updateSubID","update","numVertices","attributes","count","setXYZ","data","divTitle","textContent","updateSub","needsUpdate","computeVertexNormals","setRGB","mat","linewidth","CameraInterpolation","easingMotion","distanceTo","v1","v2","speed","solution","divSub","divSubs","divSubID","divSubIDs","initUI","document","createElement","insertBefore","renderer","domElement","style","fontSize","padding","zIndex","paddingBottom","div","appendChild","marginTop","pointerEvents","paddingTop","subs","innerHTML","error"],"sourceRoot":""}