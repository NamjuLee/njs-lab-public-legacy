{"version":3,"file":"static/js/90271.edd4dbbd.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-graph/04_Graph-wrapper/index.ts"],"sourcesContent":["import { RendererCanvas } from '../../../../lib';\r\n\r\nexport class Solution extends RendererCanvas {\r\n\r\n    graph: Graph;\r\n    m = new Vector3(0,0,0)\r\n    \r\n    needPopulate = false\r\n    constructor(id: string) {\r\n        super(document.getElementById(id) as HTMLDivElement);\r\n        this.canvas.style.position = 'absolute'\r\n        \r\n        const divBtn = document.createElement('button');\r\n        divBtn.textContent = 'run'\r\n        divBtn.style.position = 'absolute'\r\n        divBtn.onclick = () => {\r\n            this.needPopulate = !this.needPopulate;\r\n        }\r\n        this.divHost.appendChild(divBtn);\r\n\r\n        const divText = document.createElement('div');\r\n        divText.style.top = '25px';\r\n        divText.style.position = 'absolute'\r\n        divText.innerHTML = '1 Graph Object <br> 2 populate nodes <br> 3 Edge by closest nodes';\r\n        this.divHost.appendChild(divText);\r\n\r\n        // const btn = doc\r\n        this.init();\r\n    }\r\n    public init() {\r\n        // TODO\r\n        this.graph = new Graph();\r\n        this.mouseClick(100, 100);\r\n        \r\n        this.start()\r\n    }\r\n    public populate() {\r\n        const x = Math.random() * this.canvas.width\r\n        const y = Math.random() * this.canvas.height\r\n        this.mouseClick(x, y);\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        if(this.needPopulate) {\r\n            this.populate()\r\n        }\r\n\r\n        this.graph.render(ctx);\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(this.m.x, this.m.y, 2, 0, 3.14 * 2)\r\n        ctx.closePath();\r\n        ctx.fillStyle = '#888';\r\n        ctx.fill();\r\n\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n        this.graph.addNode(x, y, 0);\r\n    }\r\n    public mouseMove(x: number, y: number): void {\r\n        this.m.x = x;\r\n        this.m.y = y;\r\n    }\r\n}\r\n\r\n\r\nclass Graph {\r\n    edges = []\r\n    nodes = []\r\n    constructor() {\r\n\r\n    }\r\n    public addNode(x: number, y: number, z: number) {\r\n        const node = new Node(x, y, 0);\r\n        this.nodes.push(node);\r\n\r\n        this.computeEdge();\r\n    }\r\n    public addEdge(n0: Node, n1: Node) {\r\n        const node = new Edge(n0, n1);\r\n        this.edges.push(node);\r\n    }\r\n    public computeEdge() {\r\n        this.edges = [];\r\n\r\n        for(let j = 0 ; j < this.nodes.length; ++j) {\r\n            let dis = Number.MAX_VALUE;\r\n            let n0 = this.nodes[j];\r\n            let n1 = undefined;\r\n            for(let i = 0 ; i < this.nodes.length; ++i) {\r\n                let node = this.nodes[i];\r\n                if (n0 !== node) {\r\n                    let theDis = distance(n0.vec, node.vec);\r\n                    if (dis > theDis) {\r\n                        dis = theDis;\r\n                        n1 = node;\r\n                    }\r\n                }\r\n            }\r\n            this.addEdge(n0, n1);\r\n        }\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        this.edges.forEach((e: Edge)=> {e.render(ctx);}) \r\n        this.nodes.forEach((n: Node) => {n.render(ctx);})\r\n    }\r\n}\r\n\r\nclass Edge {\r\n    public n0: Node;\r\n    public n1: Node;\r\n    constructor(n0: Node, n1: Node) {\r\n        this.n0 = n0;\r\n        this.n1 = n1;\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        if (this.n0 === undefined || this.n1 === undefined) { return; }\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(this.n0.vec.x, this.n0.vec.y);\r\n        ctx.lineTo(this.n1.vec.x, this.n1.vec.y);\r\n        ctx.strokeStyle = '#0f0';\r\n        ctx.stroke();\r\n    }\r\n\r\n}\r\nclass Node {\r\n    public vec: Vector3;\r\n    public r: number = 5;\r\n    constructor(x: number, y: number, z:number = 0) {\r\n        this.vec = new Vector3(x, y, z)\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D) {\r\n        ctx.beginPath();\r\n        ctx.arc(this.vec.x, this.vec.y, this.r, 0, 3.14 * 2)\r\n        ctx.closePath();\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.fill();\r\n    }\r\n}\r\nclass Vector3 {\r\n    public x: number;\r\n    public y: number;\r\n    public z: number;\r\n    constructor(x: number, y: number, z:number = 0){\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z\r\n    }\r\n}\r\n\r\nconst distance = (v0: Vector3, v1: Vector3) => {\r\n    return Math.sqrt(distance2(v0, v1));\r\n}\r\nconst distance2 = (v0: Vector3, v1: Vector3) => {\r\n    return (v0.x - v1.x) * (v0.x - v1.x) + (v0.y - v1.y) * (v0.y - v1.y) + (v0.z - v1.z) * (v0.z - v1.z);\r\n}"],"names":["Solution","RendererCanvas","constructor","id","super","document","getElementById","graph","m","Vector3","needPopulate","this","canvas","style","position","divBtn","createElement","textContent","onclick","divHost","appendChild","divText","top","innerHTML","init","Graph","mouseClick","start","populate","x","Math","random","width","y","height","render","ctx","beginPath","arc","closePath","fillStyle","fill","addNode","mouseMove","edges","nodes","z","node","Node","push","computeEdge","addEdge","n0","n1","Edge","j","length","dis","Number","MAX_VALUE","i","theDis","distance","vec","forEach","e","n","undefined","moveTo","lineTo","strokeStyle","stroke","r","v0","v1","sqrt","distance2"],"sourceRoot":""}