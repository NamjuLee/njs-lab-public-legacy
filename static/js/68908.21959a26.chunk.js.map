{"version":3,"file":"static/js/68908.21959a26.chunk.js","mappings":"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","sources":["njslab/LabStarter/AppNGL3d/NGL3dApp_06/Geometry/Core/Base.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_06/Geometry/Primatives/PointScreen.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_06/Utility/GLShaderCommon.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_06/Utility/Matrix4.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_06/Utility/Vector3.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_06/WebGL/AttribLocations.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_06/WebGL/Modal.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_06/WebGL/Shader.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_06/WebGL/Transform.ts","njslab/LabStarter/AppNGL3d/NGL3dApp_06/WebGL/VAO.ts"],"sourcesContent":["import { Scene } from '../../Core/Scene';\r\n\r\nexport class GeometryBase {\r\n    scene: Scene;\r\n    constructor(scene: Scene) {\r\n        this.scene = scene;\r\n\r\n        this.scene.add(this);\r\n    }\r\n    render(gl: WebGL2RenderingContext) {\r\n        //\r\n    }\r\n}","import { RTN, VAO } from '../../WebGL/VAO';\r\nimport { Modal } from '../../WebGL/Modal';\r\n\r\nimport { NGL3dApp } from '../..';\r\nimport { GeometryBase } from '../Core/Base';\r\n\r\nimport { Shader } from '../../WebGL/Shader';\r\n\r\nclass PointShader extends Shader {\r\n\r\n    constructor(gl: WebGL2RenderingContext, vertSrc: string, fragSrc: string) {\r\n        super(gl, vertSrc, fragSrc);\t// Call the base class constructor which will setup most of what we need\r\n\r\n        // Our shader uses custom uniforms, this is the time to get its location for future use.\r\n        if (this.program) {\r\n            this.uniformLoc.uPointSize = gl.getUniformLocation(this.program, 'uPointSize');\r\n            this.uniformLoc.uAngle = gl.getUniformLocation(this.program, 'uAngle');\r\n        }\r\n        gl.useProgram(null); // Done setting up shader\r\n    }\r\n\r\n    // Simple function that passes in Angle and Pointsize uniform data to the shader program.\r\n    set(size: number, angle: number) {\r\n        this.gl.uniform1f(this.uniformLoc.uPointSize, size);\r\n        this.gl.uniform1f(this.uniformLoc.uAngle, angle);\r\n        return this;\r\n    }\r\n\r\n}\r\n\r\nexport class PointScreen extends GeometryBase {\r\n    vOld = `#version 300 es\r\n        in vec3 a_position;\r\n\r\n        uniform float uPointSize;\r\n\r\n        void main(void) {\r\n            gl_PointSize = uPointSize;\r\n            gl_Position = vec4(a_position, 1.0);\r\n        }\r\n    `;\r\n    fOld = `#version 300 es\r\n        precision mediump float;\r\n\r\n        out vec4 finalColor;\r\n\r\n        void main(void) {\r\n            finalColor = vec4(1.0, 0.0, 0.0, 1.0);\r\n        }\r\n    `;\r\n    v = `#version 300 es\r\n\r\n        in vec3 a_position;\r\n\r\n        uniform mediump float uPointSize;\r\n        uniform float uAngle;\r\n\r\n        void main(void) {\r\n            gl_PointSize = uPointSize;\r\n            gl_Position = vec4(cos(uAngle) * 0.8 + a_position.x, sin(uAngle) * 0.8 + a_position.y, a_position.z, 1.0);\r\n        }\r\n    `;\r\n    f = `#version 300 es\r\n        precision mediump float;\r\n\r\n        uniform float uPointSize;\r\n\r\n        out vec4 finalColor;\r\n\r\n        void main(void) {\r\n            float c = (40. - uPointSize ) / 20.;\r\n            finalColor = vec4(c, c, c, 1.0);\r\n        }\r\n    `;\r\n\r\n    app: NGL3dApp;\r\n    gl: WebGL2RenderingContext;\r\n\r\n    mesh: RTN;\r\n    modal: Modal;\r\n    shader: PointShader;\r\n\r\n    size: number = 2.5;\r\n    rotation: number = 0.0;\r\n\r\n    constructor(app: NGL3dApp) {\r\n        super(app.scene);\r\n        this.app = app;\r\n        this.gl = app.canvas.gl;\r\n        this.initShader(this.gl);\r\n    }\r\n    initShader(gl: WebGL2RenderingContext) {\r\n        this.shader = new PointShader(gl, this.v, this.f);\r\n\r\n        this.mesh = VAO.createMeshVAO(gl, 'dots', [0, 0, 0, 0.1, 0.1, 0, 0.1, -0.1, 0, -0.1, -0.1, 0, -0.1, 0.1, 0]);\r\n        this.mesh.drawMode = gl.POINTS; // Most often the draw mode will be triangles, but in this instance we need Points\r\n\r\n        this.modal = new Modal(this.mesh);\r\n    }\r\n    render(gl: WebGL2RenderingContext) {\r\n        // console.log(gl);\r\n        this.size += 0.01;\r\n        let size = (Math.sin(this.size) * 10.0) + 30.0;\r\n        // gl.uniform1f(this.uPointSizeLoc, size);\r\n\r\n        // gl.uniform1f(this.uAngle, this.size);\r\n        // gl.drawArrays(gl.POINTS, 0, this.gVertCnt);\r\n        this.rotation += 0.02;\r\n\r\n        this.shader.activate();\r\n        this.shader.set(size, this.rotation);\r\n        this.shader.renderModal(this.modal);\r\n    }\r\n}","\r\nexport class GLShaderCommon {\r\n\r\n    static getShaderProgram(gl: WebGL2RenderingContext, vertexShader: string, fragmentShader: string, needValidate: boolean = true) {\r\n        let vShader = GLShaderCommon.createShader(gl, gl.VERTEX_SHADER as unknown as WebGLShader, vertexShader);\r\n        let fShader = GLShaderCommon.createShader(gl, gl.FRAGMENT_SHADER as unknown as WebGLShader, fragmentShader);\r\n        if (vShader && fShader) {\r\n            let program = GLShaderCommon.createProgram(gl, vShader, fShader, needValidate);\r\n\r\n            if (program) {\r\n                return program;\r\n\r\n            } else {\r\n                console.error('vertex fragment shader error'); return null;\r\n            }\r\n        } else {\r\n            console.error('vertex fragment shader error'); return null;\r\n        }\r\n    }\r\n    static getShader(gl: WebGL2RenderingContext, type: number, source: string) {\r\n        const shader = gl.createShader(type);\r\n        if (shader === null) { return null; }\r\n        gl.shaderSource(shader, source);\r\n        gl.compileShader(shader);\r\n\r\n        // Check if compiled successfully\r\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n            console.log('An error occurred compiling the shaders:' + gl.getShaderInfoLog(shader));\r\n            gl.deleteShader(shader);\r\n            return null;\r\n        }\r\n        // Set the attributes, varying, and uniform to shader\r\n        // shader.attributes = this.attributesFromSource(source);\r\n        // shader.varyings = this.varyingsFromSource(source);\r\n        // shader.uniforms = this.uniformsFromSource(source);\r\n        return shader;\r\n    }\r\n    static createProgram(gl: WebGL2RenderingContext, vertexShader: WebGLShader, fragmentShader: WebGLShader, needValidate: boolean = true): WebGLProgram | null {\r\n        const program = gl.createProgram();\r\n        if (program === null) { return null; }\r\n        gl.attachShader(program, vertexShader);\r\n        gl.attachShader(program, fragmentShader);\r\n        gl.linkProgram(program);\r\n\r\n        // Check that shader program was able to link to WebGL\r\n        if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n            const error = gl.getProgramInfoLog(program);\r\n            console.log('Failed to link program: ' + error);\r\n            gl.deleteProgram(program);\r\n            gl.deleteShader(fragmentShader);\r\n            gl.deleteShader(vertexShader);\r\n            return null;\r\n        }\r\n        if (needValidate) {\r\n            gl.validateProgram(program);\r\n            if (!gl.getProgramParameter(program, gl.VALIDATE_STATUS)) {\r\n                console.error('Failed to validate program', gl.getProgramInfoLog(program));\r\n                gl.deleteProgram(program);\r\n                gl.deleteShader(fragmentShader);\r\n                gl.deleteShader(vertexShader);\r\n                return null;\r\n            }\r\n        }\r\n        gl.deleteShader(fragmentShader);\r\n        gl.deleteShader(vertexShader);\r\n        return program;\r\n    }\r\n\r\n    // ...............................\r\n\r\n    // static CreateShader(gl: WebGL2RenderingContext, type: WebGLShader, shaderString: string) {\r\n    //     let shader = gl.createShader(type as number);\r\n    //     gl.shaderSource(shader, shaderString);\r\n    //     gl.compileShader(shader);\r\n    //     gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n    //     return shader as Webglsh;\r\n    //     // console.log(gl.getShaderInfoLog(shader));\r\n    //     // gl.deleteShader(shader);\r\n    //     // return null;\r\n    // }\r\n    static createShader(gl: WebGL2RenderingContext, type: WebGLShader, shaderString: string) {\r\n        // console.log(type);\r\n        const shader = gl.createShader(type as unknown as number);\r\n        if (shader === null) { return null; }\r\n        gl.shaderSource(shader, shaderString);\r\n        gl.compileShader(shader);\r\n        const suc = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n        if (suc) { return shader; }\r\n        console.log(gl.getShaderInfoLog(shader));\r\n        gl.deleteShader(shader);\r\n        return null;\r\n    }\r\n    static createShaderFromPath(gl: WebGL2RenderingContext, type: WebGLShader, url: string) {\r\n        const shader = gl.createShader(type as unknown as number);\r\n        if (shader === null) { return null; }\r\n        gl.shaderSource(shader, GLShaderCommon.getSourceSynch(url) as string);\r\n        gl.compileShader(shader);\r\n        const suc = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n        if (suc) { return shader; }\r\n        console.log(gl.getShaderInfoLog(shader));\r\n        gl.deleteShader(shader);\r\n        return null;\r\n    }\r\n\r\n    static getSourceSynch(url: string) {\r\n        const req = new XMLHttpRequest();\r\n        req.open('GET', url, false);\r\n        req.send(null);\r\n        return (req.status === 200) ? req.responseText : null;\r\n    }\r\n\r\n    // static LoadTextResource(url: string, callback:(data: any, d2:any) => void ) {\r\n    //     let request = new XMLHttpRequest();\r\n    //     request.open('GET', url + '?please-dont-cache=' + Math.random(), true);\r\n    //     request.onload = function () {\r\n    //         if (request.status < 200 || request.status > 299) {\r\n    //             callback('Error: HTTP Status ' + request.status + ' on resource ' + url);\r\n    //         } else {\r\n    //             callback(null, request.responseText);\r\n    //         }\r\n    //     };\r\n    //     request.send();\r\n    // }\r\n    // static LoadShader(url: string, callback:(data: null, callback:string) => void ) {\r\n    //     GLUtility.LoadTextResource(url, callback);\r\n    // }\r\n    static loadImage(url: string, callback: (data: null, image: HTMLElement) => void) {\r\n        const image = new Image();\r\n        image.onload = function () {\r\n            callback(null, image);\r\n        };\r\n        image.src = url;\r\n    }\r\n    // static LoadJSONResource(url: string, callback:(data: string, callback:string) => void ) {\r\n    //     GLUtility.LoadTextResource(url, function (err: Error, result) {\r\n    //         if (err) {\r\n    //             callback(err);\r\n    //         } else {\r\n    //             try {\r\n    //                 callback(null, JSON.parse(result));\r\n    //             } catch (e) {\r\n    //                 callback(e);\r\n    //             }\r\n    //         }\r\n    //     });\r\n    // }\r\n}\r\n","import { Vector3 } from './Vector3';\r\n\r\nexport class Matrix4 {\r\n    raw: Float32Array;\r\n    // ....................................................................\r\n    // Static Data Methods\r\n    static identity() {\r\n        let a = new Float32Array(16);\r\n        a[0] = a[5] = a[10] = a[15] = 1;\r\n        return a;\r\n    }\r\n\r\n    // from glMatrix\r\n    static perspective(out: Float32Array, fovy: number, aspect: number, near: number, far: number) {\r\n        let f = 1.0 / Math.tan(fovy / 2), nf = 1 / (near - far);\r\n        out[0] = f / aspect;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = f;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = (far + near) * nf;\r\n        out[11] = -1;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = (2 * far * near) * nf;\r\n        out[15] = 0;\r\n    }\r\n\r\n    static ortho(out: number[], left: number, right: number, bottom: number, top: number, near: number, far: number) {\r\n        let lr = 1 / (left - right),\r\n            bt = 1 / (bottom - top),\r\n            nf = 1 / (near - far);\r\n        out[0] = -2 * lr;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = -2 * bt;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = 2 * nf;\r\n        out[11] = 0;\r\n        out[12] = (left + right) * lr;\r\n        out[13] = (top + bottom) * bt;\r\n        out[14] = (far + near) * nf;\r\n        out[15] = 1;\r\n    }\r\n    // https:// github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js\r\n    // make the rows into the columns\r\n    static transpose(out: number[], a: number[]) {\r\n        // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n        if (out === a) {\r\n            let a01 = a[1], a02 = a[2], a03 = a[3], a12 = a[6], a13 = a[7], a23 = a[11];\r\n            out[1] = a[4];\r\n            out[2] = a[8];\r\n            out[3] = a[12];\r\n            out[4] = a01;\r\n            out[6] = a[9];\r\n            out[7] = a[13];\r\n            out[8] = a02;\r\n            out[9] = a12;\r\n            out[11] = a[14];\r\n            out[12] = a03;\r\n            out[13] = a13;\r\n            out[14] = a23;\r\n        } else {\r\n            out[0] = a[0];\r\n            out[1] = a[4];\r\n            out[2] = a[8];\r\n            out[3] = a[12];\r\n            out[4] = a[1];\r\n            out[5] = a[5];\r\n            out[6] = a[9];\r\n            out[7] = a[13];\r\n            out[8] = a[2];\r\n            out[9] = a[6];\r\n            out[10] = a[10];\r\n            out[11] = a[14];\r\n            out[12] = a[3];\r\n            out[13] = a[7];\r\n            out[14] = a[11];\r\n            out[15] = a[15];\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    // Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n    static normalMat3(out: Float32Array, a: Float32Array) {\r\n        let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n            a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n            a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n            a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\r\n\r\n            b00 = a00 * a11 - a01 * a10,\r\n            b01 = a00 * a12 - a02 * a10,\r\n            b02 = a00 * a13 - a03 * a10,\r\n            b03 = a01 * a12 - a02 * a11,\r\n            b04 = a01 * a13 - a03 * a11,\r\n            b05 = a02 * a13 - a03 * a12,\r\n            b06 = a20 * a31 - a21 * a30,\r\n            b07 = a20 * a32 - a22 * a30,\r\n            b08 = a20 * a33 - a23 * a30,\r\n            b09 = a21 * a32 - a22 * a31,\r\n            b10 = a21 * a33 - a23 * a31,\r\n            b11 = a22 * a33 - a23 * a32,\r\n\r\n            //  Calculate the determinant\r\n            det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) { return null; }\r\n\r\n        det = 1.0 / det;\r\n\r\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n        out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n        out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        return out;\r\n    }\r\n\r\n    // ....................................................................\r\n    // Static Operation\r\n\r\n    // https:// github.com/gregtatum/mdn-model-view-projection/blob/master/shared/matrices.js\r\n    static multiplyVector(mat4: Matrix4, v: number[]) {\r\n        let x = v[0], y = v[1], z = v[2], w = v[3];\r\n        let c1r1 = mat4[0], c2r1 = mat4[1], c3r1 = mat4[2], c4r1 = mat4[3],\r\n            c1r2 = mat4[4], c2r2 = mat4[5], c3r2 = mat4[6], c4r2 = mat4[7],\r\n            c1r3 = mat4[8], c2r3 = mat4[9], c3r3 = mat4[10], c4r3 = mat4[11],\r\n            c1r4 = mat4[12], c2r4 = mat4[13], c3r4 = mat4[14], c4r4 = mat4[15];\r\n\r\n        return [\r\n            x * c1r1 + y * c1r2 + z * c1r3 + w * c1r4,\r\n            x * c2r1 + y * c2r2 + z * c2r3 + w * c2r4,\r\n            x * c3r1 + y * c3r2 + z * c3r3 + w * c3r4,\r\n            x * c4r1 + y * c4r2 + z * c4r3 + w * c4r4\r\n        ];\r\n    }\r\n\r\n    // https:// github.com/toji/gl-matrix/blob/master/src/gl-matrix/vec4.js, vec4.transformMat4\r\n    static transformVec4(out: Float32Array, v: number[], m: Float32Array) {\r\n        out[0] = m[0] * v[0] + m[4] * v[1] + m[8] * v[2] + m[12] * v[3];\r\n        out[1] = m[1] * v[0] + m[5] * v[1] + m[9] * v[2] + m[13] * v[3];\r\n        out[2] = m[2] * v[0] + m[6] * v[1] + m[10] * v[2] + m[14] * v[3];\r\n        out[3] = m[3] * v[0] + m[7] * v[1] + m[11] * v[2] + m[15] * v[3];\r\n        return out;\r\n    }\r\n\r\n    // From glMatrix\r\n    // Multiple two mat4 together\r\n    static mult(out: Float32Array, a: Float32Array, b: Float32Array) {\r\n        let a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n            a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n            a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n            a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n        //  Cache only the current line of the second matrix\r\n        let b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\r\n        out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\r\n        out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\r\n        out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\r\n        out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        return out;\r\n    }\r\n\r\n    // ....................................................................\r\n    // Static Transformation\r\n    static scale(out: Float32Array, x: number, y: number, z: number) {\r\n        out[0] *= x;\r\n        out[1] *= x;\r\n        out[2] *= x;\r\n        out[3] *= x;\r\n        out[4] *= y;\r\n        out[5] *= y;\r\n        out[6] *= y;\r\n        out[7] *= y;\r\n        out[8] *= z;\r\n        out[9] *= z;\r\n        out[10] *= z;\r\n        out[11] *= z;\r\n        return out;\r\n    }\r\n\r\n    static rotateY(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a00 = out[0],\r\n            a01 = out[1],\r\n            a02 = out[2],\r\n            a03 = out[3],\r\n            a20 = out[8],\r\n            a21 = out[9],\r\n            a22 = out[10],\r\n            a23 = out[11];\r\n\r\n        //  Perform axis-specific matrix multiplication\r\n        out[0] = a00 * c - a20 * s;\r\n        out[1] = a01 * c - a21 * s;\r\n        out[2] = a02 * c - a22 * s;\r\n        out[3] = a03 * c - a23 * s;\r\n        out[8] = a00 * s + a20 * c;\r\n        out[9] = a01 * s + a21 * c;\r\n        out[10] = a02 * s + a22 * c;\r\n        out[11] = a03 * s + a23 * c;\r\n        return out;\r\n    }\r\n\r\n    static rotateX(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a10 = out[4],\r\n            a11 = out[5],\r\n            a12 = out[6],\r\n            a13 = out[7],\r\n            a20 = out[8],\r\n            a21 = out[9],\r\n            a22 = out[10],\r\n            a23 = out[11];\r\n\r\n        //  Perform axis-specific matrix multiplication\r\n        out[4] = a10 * c + a20 * s;\r\n        out[5] = a11 * c + a21 * s;\r\n        out[6] = a12 * c + a22 * s;\r\n        out[7] = a13 * c + a23 * s;\r\n        out[8] = a20 * c - a10 * s;\r\n        out[9] = a21 * c - a11 * s;\r\n        out[10] = a22 * c - a12 * s;\r\n        out[11] = a23 * c - a13 * s;\r\n        return out;\r\n    }\r\n\r\n    static rotateZ(out: Float32Array, rad: number) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a00 = out[0],\r\n            a01 = out[1],\r\n            a02 = out[2],\r\n            a03 = out[3],\r\n            a10 = out[4],\r\n            a11 = out[5],\r\n            a12 = out[6],\r\n            a13 = out[7];\r\n\r\n        //  Perform axis-specific matrix multiplication\r\n        out[0] = a00 * c + a10 * s;\r\n        out[1] = a01 * c + a11 * s;\r\n        out[2] = a02 * c + a12 * s;\r\n        out[3] = a03 * c + a13 * s;\r\n        out[4] = a10 * c - a00 * s;\r\n        out[5] = a11 * c - a01 * s;\r\n        out[6] = a12 * c - a02 * s;\r\n        out[7] = a13 * c - a03 * s;\r\n        return out;\r\n    }\r\n\r\n    static rotate(out: Float32Array, rad: number, axis: number) {\r\n        let x = axis[0], y = axis[1], z = axis[2],\r\n            len = Math.sqrt(x * x + y * y + z * z),\r\n            s, c, t,\r\n            a00, a01, a02, a03,\r\n            a10, a11, a12, a13,\r\n            a20, a21, a22, a23,\r\n            b00, b01, b02,\r\n            b10, b11, b12,\r\n            b20, b21, b22;\r\n\r\n        if (Math.abs(len) < 0.000001) { return null; }\r\n\r\n        len = 1 / len;\r\n        x *= len;\r\n        y *= len;\r\n        z *= len;\r\n\r\n        s = Math.sin(rad);\r\n        c = Math.cos(rad);\r\n        t = 1 - c;\r\n\r\n        a00 = out[0]; a01 = out[1]; a02 = out[2]; a03 = out[3];\r\n        a10 = out[4]; a11 = out[5]; a12 = out[6]; a13 = out[7];\r\n        a20 = out[8]; a21 = out[9]; a22 = out[10]; a23 = out[11];\r\n\r\n        //  Construct the elements of the rotation matrix\r\n        b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\r\n        b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\r\n        b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\r\n\r\n        //  Perform rotation-specific matrix multiplication\r\n        out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n        out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n        out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n        out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n        out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n        out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n        out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n        out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n        out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n        out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n        out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n        out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n        return out;\r\n    }\r\n\r\n    static invert(out: Float32Array, mat?: Float32Array) {\r\n        if (mat === undefined) { mat = out; }// If input isn't sent, then output is also input\r\n\r\n        let a00 = mat[0], a01 = mat[1], a02 = mat[2], a03 = mat[3],\r\n            a10 = mat[4], a11 = mat[5], a12 = mat[6], a13 = mat[7],\r\n            a20 = mat[8], a21 = mat[9], a22 = mat[10], a23 = mat[11],\r\n            a30 = mat[12], a31 = mat[13], a32 = mat[14], a33 = mat[15],\r\n\r\n            b00 = a00 * a11 - a01 * a10,\r\n            b01 = a00 * a12 - a02 * a10,\r\n            b02 = a00 * a13 - a03 * a10,\r\n            b03 = a01 * a12 - a02 * a11,\r\n            b04 = a01 * a13 - a03 * a11,\r\n            b05 = a02 * a13 - a03 * a12,\r\n            b06 = a20 * a31 - a21 * a30,\r\n            b07 = a20 * a32 - a22 * a30,\r\n            b08 = a20 * a33 - a23 * a30,\r\n            b09 = a21 * a32 - a22 * a31,\r\n            b10 = a21 * a33 - a23 * a31,\r\n            b11 = a22 * a33 - a23 * a32,\r\n\r\n            //  Calculate the determinant\r\n            det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) { return false; }\r\n        det = 1.0 / det;\r\n\r\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n        out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n        out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n        out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n        out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n        out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n        out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n        return true;\r\n    }\r\n\r\n    // https:// github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js  mat4.scalar.translate = function (out, a, v) {\r\n    static translate(out: Float32Array, x: number, y: number, z: number) {\r\n        out[12] = out[0] * x + out[4] * y + out[8] * z + out[12];\r\n        out[13] = out[1] * x + out[5] * y + out[9] * z + out[13];\r\n        out[14] = out[2] * x + out[6] * y + out[10] * z + out[14];\r\n        out[15] = out[3] * x + out[7] * y + out[11] * z + out[15];\r\n    }\r\n    constructor() {\r\n        this.raw = Matrix4.identity();\r\n    }\r\n    // ....................................................................\r\n    // Transformations Methods\r\n    vtranslate(v: Vector3) {\r\n        Matrix4.translate(this.raw, v.x, v.y, v.z);\r\n        return this;\r\n    }\r\n    translate(x: number, y: number, z: number) {\r\n        Matrix4.translate(this.raw, x, y, z);\r\n        return this;\r\n    }\r\n    rotateY(rad: number) { Matrix4.rotateY(this.raw, rad); return this; }\r\n    rotateX(rad: number) { Matrix4.rotateX(this.raw, rad); return this; }\r\n    rotateZ(rad: number) { Matrix4.rotateZ(this.raw, rad); return this; }\r\n\r\n    vscale(vec3: Vector3) { Matrix4.scale(this.raw, vec3.x, vec3.y, vec3.z); return this; }\r\n    scale(x: number, y: number, z: number) {\r\n        Matrix4.scale(this.raw, x, y, z);\r\n        return this;\r\n    }\r\n\r\n    invert() {\r\n        Matrix4.invert(this.raw);\r\n        return this;\r\n    }\r\n\r\n    // ....................................................................\r\n    // Methods\r\n    // Bring is back to identity without changing the transform values.\r\n    resetRotation() {\r\n        for (let i = 0; i < this.raw.length; i++) {\r\n            if (i >= 12 && i <= 14) { continue; }\r\n            this.raw[i] = (i % 5 === 0) ? 1 : 0;  // only positions 0,5,10,15 need to be 1 else 0.\r\n        }\r\n        return this;\r\n    }\r\n\r\n    // reset data back to identity.\r\n    reset() {\r\n        for (let i = 0; i < this.raw.length; i++) { this.raw[i] = (i % 5 === 0) ? 1 : 0; } // only positions 0,5,10,15 need to be 1 else 0.\r\n        return this;\r\n    }\r\n}","\r\nexport class Vector3 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n    magnitude(v?: Vector3) {\r\n        if (v === undefined) { return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z); }\r\n        let x = v.x - this.x, y = v.y - this.y, z = v.y - this.z;\r\n        return Math.sqrt(x * x + y * y + z * z);\r\n    }\r\n\r\n    normalize() {\r\n        let mag = this.magnitude();\r\n        this.x /= mag; this.y /= mag; this.z /= mag;\r\n        return this;\r\n    }\r\n    set(x: number, y: number, z: number) {\r\n        this.x = x; this.y = y; this.z = z;\r\n        return this;\r\n    }\r\n    multiScalar(v: number) {\r\n        this.x *= v; this.y *= v; this.z *= v; return this;\r\n    }\r\n    getArray() {\r\n        return [this.x, this.y, this.z];\r\n    }\r\n    getFloatArray() {\r\n        return new Float32Array([this.x, this.y, this.z]);\r\n    }\r\n    clone() {\r\n        return new Vector3(this.x, this.y, this.z);\r\n    }\r\n}","export enum ATTR {\r\n    ATTR_POSITION_NAME = 'a_position',\r\n    ATTR_POSITION_LOC = 0,\r\n    ATTR_NORMAL_NAME = 'a_norm',\r\n    ATTR_NORMAL_LOC = 1,\r\n    ATTR_UV_NAME = 'a_uv',\r\n    ATTR_UV_LOC = 2,\r\n\r\n    ATTR_COLOR_LOC = 4,\r\n    ATTR_COLOR_NAME = 'a_color',\r\n}\r\n\r\nexport class AttribLocations {\r\n\r\n    position: number;\r\n    normal: number;\r\n    uv: number;\r\n\r\n    constructor(gl: WebGL2RenderingContext, program: WebGLProgram) {\r\n        this.position = gl.getAttribLocation(program, ATTR.ATTR_NORMAL_NAME);\r\n        this.normal = gl.getAttribLocation(program, ATTR.ATTR_NORMAL_NAME);\r\n        this.uv = gl.getAttribLocation(program, ATTR.ATTR_UV_NAME);\r\n    }\r\n}\r\n\r\nexport class UniformLocations {\r\n\r\n    uPointSize: WebGLUniformLocation | null;\r\n    uAngle: WebGLUniformLocation | null;\r\n\r\n    perspective: WebGLUniformLocation | null;\r\n    modalMatrix: WebGLUniformLocation | null;\r\n    cameraMatrix: WebGLUniformLocation | null;\r\n    mainTexture: WebGLUniformLocation | null;\r\n\r\n    constructor(gl: WebGL2RenderingContext, program: WebGLProgram) {\r\n        this.perspective = gl.getUniformLocation(program, 'uPMatrix');\r\n        this.modalMatrix = gl.getUniformLocation(program, 'uMVMatrix');\r\n        this.cameraMatrix = gl.getUniformLocation(program, 'uCameraMatrix');\r\n        this.mainTexture = gl.getUniformLocation(program, 'uMainTex');\r\n    }\r\n}","import { RTN } from './VAO';\r\nimport { Transform } from './Transform';\r\n\r\nexport class Modal {\r\n    mesh: RTN;\r\n    transform: Transform;\r\n    constructor(meshData: RTN) {\r\n        this.transform = new Transform();\r\n        this.mesh = meshData;\r\n    }\r\n\r\n    setScale(x: number, y: number, z: number) {\r\n        this.transform.scale.set(x, y, z);\r\n        return this;\r\n    }\r\n    setPosition(x: number, y: number, z: number) {\r\n        this.transform.position.set(x, y, z);\r\n        return this;\r\n    }\r\n    setRotation(x: number, y: number, z: number) {\r\n        this.transform.rotation.set(x, y, z);\r\n        return this;\r\n    }\r\n\r\n    addScale(x: number, y: number, z: number) {\r\n        this.transform.scale.x += x; this.transform.scale.y += y; this.transform.scale.y += y;\r\n        return this;\r\n    }\r\n    addPosition(x: number, y: number, z: number) {\r\n        this.transform.position.x += x; this.transform.position.y += y; this.transform.position.z += z;\r\n        return this;\r\n    }\r\n    addRotation(x: number, y: number, z: number) {\r\n        this.transform.rotation.x += x; this.transform.rotation.y += y; this.transform.rotation.z += z;\r\n        return this;\r\n    }\r\n\r\n    preRender() {\r\n        this.transform.updateMatrix();\r\n        return this;\r\n    }\r\n}","import { GLShaderCommon } from '../Utility/GLShaderCommon';\r\nimport { AttribLocations, UniformLocations } from './AttribLocations';\r\nimport { Modal } from './Modal';\r\n\r\nexport class Shader {\r\n\r\n    gl: WebGL2RenderingContext;\r\n    program: WebGLProgram | null;\r\n\r\n    attribLoc: AttribLocations;\r\n    uniformLoc: UniformLocations;\r\n\r\n    constructor(gl: WebGL2RenderingContext, vertShaderSrc: string, fragShaderSrc: string) {\r\n        this.gl = gl;\r\n        this.program = GLShaderCommon.getShaderProgram(gl, vertShaderSrc, fragShaderSrc, true);\r\n\r\n        if (this.program !== null) {\r\n            gl.useProgram(this.program);\r\n            this.attribLoc = new AttribLocations(gl, this.program);\r\n            this.uniformLoc = new UniformLocations(gl, this.program);\r\n            // gl.useProgram(null);\r\n            // this.uniformLoc = {};\t// TODO : Replace in later lessons with get standardUniformLocations.\r\n        }\r\n\r\n        // Note :: Extended shaders should deactivate shader when done calling super and setting up custom parts in the constructor.\r\n    }\r\n\r\n    // ...................................................\r\n    // Methods\r\n    activate() {\r\n        this.gl.useProgram(this.program); return this;\r\n    }\r\n    deactivate() {\r\n        this.gl.useProgram(null); return this;\r\n    }\r\n\r\n    // function helps clean up resources when shader is no longer needed.\r\n    dispose() {\r\n        // unbind the program if its currently active\r\n        if (this.gl.getParameter(this.gl.CURRENT_PROGRAM) === this.program) { this.gl.useProgram(null); }\r\n        this.gl.deleteProgram(this.program);\r\n    }\r\n    setPerspective(matData: Float32Array) {\r\n        this.gl.uniformMatrix4fv(this.uniformLoc.perspective, false, matData);\r\n        return this;\r\n    }\r\n    setModalMatrix(matData: Float32Array) {\r\n        this.gl.uniformMatrix4fv(this.uniformLoc.modalMatrix, false, matData);\r\n        return this;\r\n    }\r\n    setCameraMatrix(matData: Float32Array) {\r\n        this.gl.uniformMatrix4fv(this.uniformLoc.cameraMatrix, false, matData);\r\n        return this;\r\n    }\r\n    // ...................................................\r\n    // RENDER RELATED METHODS\r\n\r\n    // Setup custom properties\r\n    preRender() {\r\n        //\r\n    }\r\n    // Handle rendering a modal\r\n    renderModal(modal: Modal) {\r\n        this.setModalMatrix(modal.transform.getViewMatrix());\t// Set the transform, so the shader knows where the modal exists in 3d space\r\n        this.gl.bindVertexArray(modal.mesh.vao);\t// Enable VAO, this will set all the predefined attributes for the shader\r\n\r\n        if (modal.mesh.indexCount) {\r\n            this.gl.drawElements(modal.mesh.drawMode, modal.mesh.indexCount, this.gl.UNSIGNED_SHORT, 0);\r\n        } else {\r\n            this.gl.drawArrays(modal.mesh.drawMode, 0, modal.mesh.vertexCount);\r\n        }\r\n\r\n        this.gl.bindVertexArray(null);\r\n\r\n        return this;\r\n    }\r\n}","import { Vector3 } from '../Utility/Vector3';\r\nimport { Matrix4 } from '../Utility/Matrix4';\r\n\r\nexport class Transform {\r\n    static deg2Rad = Math.PI / 180; // Cache result, one less operation to do for each update.\r\n\r\n    position: Vector3;\r\n    scale: Vector3;\r\n    rotation: Vector3;\r\n    matView: Matrix4;\r\n    matNormal: Float32Array;\r\n\r\n    forward: Float32Array;\r\n    up: Float32Array;\r\n    right: Float32Array;\r\n\r\n    constructor() {\r\n        this.position = new Vector3(0, 0, 0);\t// Traditional X,Y,Z 3d position\r\n        this.scale = new Vector3(1, 1, 1);\t// How much to scale a mesh. Having a 1 means no scaling is done.\r\n        this.rotation = new Vector3(0, 0, 0);\t// Hold rotation values based on degrees, Object will translate it to radians\r\n        this.matView = new Matrix4();\t\t// Cache the results when calling updateMatrix\r\n        this.matNormal = new Float32Array(9);\t// This is a Mat3, raw array to hold the values is enough for what its used for\r\n\r\n        // Direction Vectors\r\n        this.forward = new Float32Array(4);\t// When rotating, keep track of what the forward direction is\r\n        this.up = new Float32Array(4);\t// what the up direction is, invert to get bottom\r\n        this.right = new Float32Array(4);\t// what the right direction is, invert to get left\r\n    }\r\n    updateMatrix() {\r\n        this.matView.reset() // Order is very important!!\r\n            .vtranslate(this.position)\r\n            .rotateX(this.rotation.x * Transform.deg2Rad)\r\n            .rotateZ(this.rotation.z * Transform.deg2Rad)\r\n            .rotateY(this.rotation.y * Transform.deg2Rad)\r\n            .vscale(this.scale);\r\n\r\n        // Calcuate the Normal Matrix which doesn't need translate, then transpose and inverses the mat4 to mat3\r\n        Matrix4.normalMat3(this.matNormal, this.matView.raw);\r\n\r\n        // Determine Direction after all the transformations.\r\n        Matrix4.transformVec4(this.forward, [0, 0, 1, 0], this.matView.raw); // Z\r\n        Matrix4.transformVec4(this.up, [0, 1, 0, 0], this.matView.raw); // Y\r\n        Matrix4.transformVec4(this.right, [1, 0, 0, 0], this.matView.raw); // X\r\n\r\n        return this.matView.raw;\r\n    }\r\n\r\n    updateDirection() {\r\n        Matrix4.transformVec4(this.forward, [0, 0, 1, 0], this.matView.raw);\r\n        Matrix4.transformVec4(this.up, [0, 1, 0, 0], this.matView.raw);\r\n        Matrix4.transformVec4(this.right, [1, 0, 0, 0], this.matView.raw);\r\n        return this;\r\n    }\r\n\r\n    getViewMatrix() { return this.matView.raw; }\r\n    getNormalMatrix() { return this.matNormal; }\r\n\r\n    reset() {\r\n        this.position.set(0, 0, 0);\r\n        this.scale.set(1, 1, 1);\r\n        this.rotation.set(0, 0, 0);\r\n    }\r\n}\r\n","import { ATTR } from './AttribLocations';\r\n\r\nexport enum DRAW_MODE {\r\n    //\r\n}\r\n\r\nexport class RTN {\r\n    name: string;\r\n\r\n    vao: WebGLVertexArrayObject | null;\r\n    bufVertices: WebGLBuffer | null;\r\n    bufNormals: WebGLBuffer | null;\r\n    bufUV: WebGLBuffer | null;\r\n    bufIndex: WebGLBuffer | null;\r\n\r\n    vertexComponentLen: number;\r\n    vertexCount: number;\r\n    indexCount: number;\r\n    drawMode: number;\r\n\r\n    constructor() {\r\n        //\r\n    }\r\n}\r\n\r\nexport class VAO {\r\n\r\n    static createMeshVAO(gl: WebGL2RenderingContext, name: string, aryVert: number[], aryInd?: number[], aryNorm?: number[], aryUV?: number[]) {\r\n        let rtn = new RTN();\r\n        rtn.name = name;\r\n        rtn.drawMode = gl.TRIANGLES;\r\n\r\n        rtn.vao = gl.createVertexArray();\r\n        gl.bindVertexArray(rtn.vao);\t//  Bind it so all the calls to vertexAttribPointer/enableVertexAttribArray is saved to the vao.\r\n\r\n        // .......................................................\r\n        // Set up vertices\r\n        if (aryVert !== undefined && aryVert != null) {\r\n            rtn.bufVertices = gl.createBuffer();\t\t\t\t\t\t\t\t\t\t\t\t\t// Create buffer...\r\n            rtn.vertexComponentLen = 3;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// How many floats make up a vertex\r\n            rtn.vertexCount = aryVert.length / rtn.vertexComponentLen;\t\t\t\t\t\t\t\t// How many vertices in the array\r\n\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, rtn.bufVertices);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(aryVert), gl.STATIC_DRAW);\t\t// then push array into it.\r\n            gl.enableVertexAttribArray(ATTR.ATTR_POSITION_LOC);\t\t\t\t\t\t\t\t\t\t// Enable Attribute location\r\n            gl.vertexAttribPointer(ATTR.ATTR_POSITION_LOC, 3, gl.FLOAT, false, 0, 0);\t\t\t\t\t\t// Put buffer at location of the vao\r\n        }\r\n\r\n        // .......................................................\r\n        // Setup normals\r\n        if (aryNorm !== undefined && aryNorm != null) {\r\n            rtn.bufNormals = gl.createBuffer();\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, rtn.bufNormals);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(aryNorm), gl.STATIC_DRAW);\r\n            gl.enableVertexAttribArray(ATTR.ATTR_NORMAL_LOC);\r\n            gl.vertexAttribPointer(ATTR.ATTR_NORMAL_LOC, 3, gl.FLOAT, false, 0, 0);\r\n        }\r\n\r\n        // .......................................................\r\n        // Setup UV\r\n        if (aryUV !== undefined && aryUV != null) {\r\n            rtn.bufUV = gl.createBuffer();\r\n            gl.bindBuffer(gl.ARRAY_BUFFER, rtn.bufUV);\r\n            gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(aryUV), gl.STATIC_DRAW);\r\n            gl.enableVertexAttribArray(ATTR.ATTR_UV_LOC);\r\n            gl.vertexAttribPointer(ATTR.ATTR_UV_LOC, 2, gl.FLOAT, false, 0, 0);\t// UV only has two floats per component\r\n        }\r\n\r\n        // .......................................................\r\n        // Setup Index.\r\n        if (aryInd !== undefined && aryInd != null) {\r\n            rtn.bufIndex = gl.createBuffer();\r\n            rtn.indexCount = aryInd.length;\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, rtn.bufIndex);\r\n            gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(aryInd), gl.STATIC_DRAW);\r\n            gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\r\n        }\r\n\r\n        // Clean up\r\n        gl.bindVertexArray(null);\t\t\t\t\t// Unbind the VAO, very Important. always unbind when your done using one.\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\t// Unbind any buffers that might be set\r\n\r\n        // this.mMeshCache[name] = rtn;\r\n        return rtn;\r\n    }\r\n    constructor() {\r\n        //\r\n    }\r\n}"],"names":["GeometryBase","constructor","scene","this","add","render","gl","PointShader","Shader","vertSrc","fragSrc","super","program","uniformLoc","uPointSize","getUniformLocation","uAngle","useProgram","set","size","angle","uniform1f","PointScreen","app","vOld","fOld","v","f","mesh","modal","shader","rotation","canvas","initShader","VAO","drawMode","POINTS","Modal","Math","sin","activate","renderModal","GLShaderCommon","static","vertexShader","fragmentShader","needValidate","vShader","createShader","VERTEX_SHADER","fShader","FRAGMENT_SHADER","createProgram","console","error","type","source","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","deleteShader","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","validateProgram","VALIDATE_STATUS","shaderString","url","getSourceSynch","req","XMLHttpRequest","open","send","status","responseText","callback","image","Image","onload","src","Matrix4","a","Float32Array","out","fovy","aspect","near","far","tan","nf","left","right","bottom","top","lr","bt","a01","a02","a03","a12","a13","a23","a00","a10","a11","a20","a21","a22","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","mat4","x","y","z","w","c1r1","c2r1","c3r1","c4r1","c1r2","c2r2","c3r2","c4r2","c1r3","c2r3","c3r3","c4r3","m","b","b0","b1","b2","b3","rad","s","c","cos","axis","t","b12","b20","b21","b22","len","sqrt","abs","mat","undefined","raw","identity","vtranslate","translate","rotateY","rotateX","rotateZ","vscale","vec3","scale","invert","resetRotation","i","length","reset","Vector3","magnitude","normalize","mag","multiScalar","getArray","getFloatArray","clone","ATTR","AttribLocations","position","normal","uv","getAttribLocation","ATTR_NORMAL_NAME","ATTR_UV_NAME","UniformLocations","perspective","modalMatrix","cameraMatrix","mainTexture","meshData","transform","Transform","setScale","setPosition","setRotation","addScale","addPosition","addRotation","preRender","updateMatrix","vertShaderSrc","fragShaderSrc","attribLoc","deactivate","dispose","getParameter","CURRENT_PROGRAM","setPerspective","matData","uniformMatrix4fv","setModalMatrix","setCameraMatrix","getViewMatrix","bindVertexArray","vao","indexCount","drawElements","UNSIGNED_SHORT","drawArrays","vertexCount","matView","matNormal","forward","up","deg2Rad","updateDirection","getNormalMatrix","PI","DRAW_MODE","RTN","name","bufVertices","bufNormals","bufUV","bufIndex","vertexComponentLen","aryVert","aryInd","aryNorm","aryUV","rtn","TRIANGLES","createVertexArray","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","ELEMENT_ARRAY_BUFFER","Uint16Array"],"sourceRoot":""}