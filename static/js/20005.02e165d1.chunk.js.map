{"version":3,"file":"static/js/20005.02e165d1.chunk.js","mappings":"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","sources":["njslab/Workshop/workshop-ml/04_PolynomialRegression/index.ts"],"sourcesContent":["import * as tf from '@tensorflow/tfjs'\r\nimport '@tensorflow/tfjs-backend-webgl';\r\n\r\nimport { RendererCanvas, Vector3, remap, PolynomialRegression } from '../../../../lib';\r\n\r\nexport class Solution extends RendererCanvas {\r\n    t = 0.0;\r\n    xpos: number = 100;\r\n    ypos: number = 100;\r\n\r\n    xspeed: number = 10;\r\n    yspeed: number = 10;\r\n\r\n    xdirection: number = 1;\r\n    ydirection: number = 1;\r\n\r\n    rad: number = 50;\r\n    vs: Vector3[] = [];\r\n    selVec: Vector3 | undefined = undefined;\r\n\r\n    col: string[] = ['#ff0000', '#00ff00', '#0000ff', '#00fff0', '#ff0000', '#fff000', '#0fff00'];\r\n\r\n    tfLinearRegression: PolynomialRegression[] = [];\r\n\r\n    container: HTMLDivElement;\r\n\r\n    constructor(id: string) {\r\n        const divHost = document.getElementById(id);\r\n    \r\n        const container = document.createElement('div');\r\n        super(container);\r\n\r\n        divHost.appendChild(container);\r\n        container.id = 'container-lab'\r\n        container.style.alignItems = 'center';\r\n        container.style.marginTop = '50px';\r\n        container.style.marginLeft = 'auto';\r\n        container.style.marginRight = 'auto';\r\n        container.style.width = '600px';\r\n        container.style.height = '600px';\r\n        this.container = container;\r\n        this.canvas.width = 600;\r\n        this.canvas.height = 600;\r\n\r\n\r\n        // TODO\r\n        // You code goes here for one time operation\r\n\r\n        this.tfLinearRegression.push(new PolynomialRegression(1));\r\n        this.tfLinearRegression.push(new PolynomialRegression(2));\r\n        this.tfLinearRegression.push(new PolynomialRegression(3));\r\n        this.tfLinearRegression.push(new PolynomialRegression(4));\r\n\r\n        getData().then((d: any) => {\r\n            let xMin = Number.MAX_SAFE_INTEGER;\r\n            let xMax = Number.MIN_SAFE_INTEGER;\r\n            let yMin = Number.MAX_SAFE_INTEGER;\r\n            let yMax = Number.MIN_SAFE_INTEGER;\r\n\r\n            d.map((data: any) => {\r\n                let x = (data['horsepower']);\r\n                if (x > xMax) { xMax = x; }\r\n                if (x < xMin) { xMin = x; }\r\n\r\n                let y = (data['mpg']);\r\n                if (y > yMax) { yMax = y; }\r\n                if (y < yMin) { yMin = y; }\r\n                return undefined\r\n            });\r\n\r\n            for (let data of d) {\r\n                let x = (data['horsepower']);\r\n                let y = (data['mpg']);\r\n                this.vs.push(new Vector3(\r\n                    remap(x, xMin, xMax, -0.9, 0.9),\r\n                    remap(y, yMin, yMax, -0.9, 0.9)));\r\n            }\r\n        });\r\n        this.initUI();\r\n        // !! you should execute it for rendering\r\n        this.start();\r\n    }\r\n    public destroy(): void {\r\n    //     console.log('???');\r\n        this.isStatic = true;\r\n        try {\r\n            while (this.container.parentElement) {\r\n                this.container.parentElement.removeChild(this.container);\r\n            }\r\n            while (this.divHost !== undefined && this.divHost.lastElementChild !== undefined) {\r\n                this.divHost.removeChild(this.divHost.lastElementChild);\r\n            }\r\n        } catch (error) { }\r\n    }\r\n    public render(ctx: CanvasRenderingContext2D): void {\r\n        // TODO\r\n        // You code goes here for the rending loop\r\n\r\n        this.RenderIndependentCanvas(ctx);\r\n\r\n        // !! can stop render after this frame.\r\n        // this.isStatic = true;\r\n    }\r\n    public mouseDown(x: number, y: number): void {\r\n        const m = new Vector3(this.mapX(x), this.mapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            if (Vector3.distanceTo(m, this.vs[i]) < 0.05) {\r\n                this.selVec = this.vs[i];\r\n                return;\r\n            }\r\n        }\r\n        this.vs.push(new Vector3(this.mapX(x), this.mapY(y)));\r\n    }\r\n    public mouseUp(x: number, y: number): void {\r\n        // TODO\r\n    }\r\n    public mouseDrag(x: number, y: number): void {\r\n        if (this.selVec) {\r\n            this.selVec.x = this.mapX(x);\r\n            this.selVec.y = this.mapY(y);\r\n        }\r\n    }\r\n    public mouseClick(x: number, y: number): void {\r\n        const m = new Vector3(this.mapX(x), this.mapY(y));\r\n        this.vs.push(new Vector3(m.x, m.y))\r\n    }\r\n    public mouseMove(x: number, y: number) {\r\n        let selVec: undefined | Vector3 = undefined;\r\n        const m = new Vector3(this.mapX(x), this.mapY(y));\r\n        for (let i = 0; i < this.vs.length; ++i) {\r\n            let theDis = Vector3.distanceTo(m, this.vs[i]);\r\n            if (theDis < 0.05) {\r\n                selVec = this.vs[i];\r\n            }\r\n        }\r\n        if (selVec) {\r\n            this.selVec = selVec;\r\n        } else {\r\n            this.selVec = undefined;\r\n        }\r\n    }\r\n    public keyDown(k: KeyboardEvent): void {\r\n        // TODO\r\n    }\r\n    mapX(v: number) {\r\n        return remap(v, 0, this.canvas.width, -1, 1);\r\n    }\r\n    mapY(v: number) {\r\n        return remap(v, 0, this.canvas.height, 1, -1);\r\n    }\r\n    GridLine(ctx: CanvasRenderingContext2D) {\r\n        ctx.strokeStyle = '#555555';\r\n        const xInterval = this.canvas.width / 20 - 1;\r\n        const yInterval = this.canvas.height / 20 - 1;\r\n        for (let i = 0; i < 20; i += 1) {\r\n            if (i === 10) {\r\n                ctx.lineWidth = 3;\r\n            } else {\r\n                ctx.lineWidth = 1;\r\n            }\r\n            let x0 = xInterval * i;\r\n            let y0 = 0;\r\n            let x1 = x0;\r\n            let y1 = this.canvas.height;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n\r\n            x0 = 0;\r\n            y0 = yInterval * i;\r\n            x1 = this.canvas.width;\r\n            y1 = y0;\r\n            ctx.beginPath();\r\n            ctx.moveTo(x0, y0);\r\n            ctx.lineTo(x1, y1);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n    RenderIndependentCanvas(ctx: CanvasRenderingContext2D) {\r\n        this.t += 5\r\n    //     console.log(this.t)\r\n        const len = Math.floor(this.t) < this.vs.length ? Math.floor(this.t) : this.vs.length;\r\n\r\n        // ctx.translate(ctx.canvas.width * 0.5, ctx.canvas.height * 0.5);\r\n\r\n        ctx.fillStyle = '#222';\r\n        ctx.beginPath();\r\n        ctx.rect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n        this.GridLine(ctx);\r\n\r\n        if (this.vs.length > 1) {\r\n\r\n            for (let m = 0; m < this.tfLinearRegression.length; ++m) {\r\n                const xx = [], yy = [];\r\n                for (let i = 0; i < this.vs.length; ++i) { xx.push(this.vs[i].x); yy.push(this.vs[i].y); }\r\n                // ............................ train\r\n                this.tfLinearRegression[m].train(xx, yy);\r\n                // ............................ end train\r\n\r\n                this.RenderLine(ctx);\r\n            }\r\n        }\r\n\r\n\r\n        ctx.fillStyle = '#00ff00';\r\n        for (let i = 0; i < len; ++i) {\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                remap(this.vs[i].x, -1, 1, 0, this.canvas.width),\r\n                remap(this.vs[i].y, -1, 1, this.canvas.height, 0),\r\n                5, 0, Math.PI * 2);\r\n            ctx.closePath();\r\n            ctx.fill();\r\n        }\r\n\r\n        if (this.selVec) {\r\n            ctx.fillStyle = '#ffffff';\r\n            ctx.font = '15px Arial';\r\n            ctx.textAlign = 'center';\r\n            ctx.fillText(`x:${this.selVec.x.toFixed(3)}, y${this.selVec.y.toFixed(3)}`,\r\n                remap(this.selVec.x, -1, 1, 0, this.canvas.width),\r\n                remap(this.selVec.y, -1, 1, this.canvas.height, 0) - 9,\r\n            );\r\n        }\r\n\r\n    }\r\n    public RenderLine(ctx: CanvasRenderingContext2D) {\r\n        for (let m = 0; m < this.tfLinearRegression.length; ++m) {\r\n            const curveX: number[] = [];\r\n            for (let x = -1; x <= 1; x += 0.08) {\r\n                curveX.push(x);\r\n            }\r\n\r\n            // ............................ predict\r\n            const ys = tf.tidy(() => {\r\n                return this.tfLinearRegression[m].predict(tf.tensor1d(curveX));\r\n            });\r\n\r\n            let curveY = ys.dataSync();\r\n            ys.dispose();\r\n            // ............................ end predict\r\n\r\n            ctx.lineWidth = 1;\r\n            ctx.strokeStyle = this.col[m]; // '#00fff0';\r\n            ctx.beginPath();\r\n            ctx.moveTo(remap(curveX[0], -1, 1, 0, this.canvas.width), remap(curveY[0], -1, 1, this.canvas.height, 0));\r\n\r\n            for (let i = 1; i < curveX.length; ++i) {\r\n                ctx.lineTo(remap(curveX[i], -1, 1, 0, this.canvas.width), remap(curveY[i], -1, 1, this.canvas.height, 0));\r\n            }\r\n            ctx.stroke();\r\n        }\r\n\r\n    }\r\n    public initUI() {\r\n        const div = document.createElement('div');\r\n        // div.style.background = '#dddddd';\r\n        div.style.position = 'absolute';\r\n        div.style.marginTop = '600px';\r\n        // div.style.left = '40px';\r\n        div.style.color = '#ffffff';\r\n        // div.style.background = '#000';\r\n\r\n        let t = document.createElement('p');\r\n        t.textContent = 'click on this screen to add data';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.textContent = 'LinearRegression';\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[0];\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[1];\r\n        t.textContent = 'Degree of polynomial - 2';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[2];\r\n        t.textContent = 'Degree of polynomial - 3';\r\n        div.append(t);\r\n\r\n        t = document.createElement('p');\r\n        t.style.marginTop = '0px';\r\n        t.style.marginBottom = '0px';\r\n        t.style.color = this.col[3];\r\n        t.textContent = 'Degree of polynomial - 4';\r\n        div.append(t);\r\n\r\n        this.divHost.append(div);\r\n    }\r\n}\r\n\r\nconst getData = async () => {\r\n    const carsDataResponse = await fetch('https://storage.googleapis.com/tfjs-tutorials/carsData.json');\r\n    const carsData = await carsDataResponse.json();\r\n    const cleaned = carsData.map(car => ({\r\n      mpg: car.Miles_per_Gallon,\r\n      horsepower: car.Horsepower,\r\n    }))\r\n    .filter(car => (car.mpg != null && car.horsepower != null));\r\n  \r\n    return cleaned;\r\n};"],"names":["Solution","RendererCanvas","constructor","id","divHost","document","getElementById","container","createElement","super","t","xpos","ypos","xspeed","yspeed","xdirection","ydirection","rad","vs","selVec","undefined","col","tfLinearRegression","appendChild","style","alignItems","marginTop","marginLeft","marginRight","width","height","this","canvas","push","PolynomialRegression","getData","then","d","xMin","Number","MAX_SAFE_INTEGER","xMax","MIN_SAFE_INTEGER","yMin","yMax","map","data","x","y","Vector3","remap","initUI","start","destroy","isStatic","parentElement","removeChild","lastElementChild","error","render","ctx","RenderIndependentCanvas","mouseDown","m","mapX","mapY","i","length","mouseUp","mouseDrag","mouseClick","mouseMove","keyDown","k","v","GridLine","strokeStyle","xInterval","yInterval","lineWidth","x0","y0","x1","y1","beginPath","moveTo","lineTo","stroke","len","Math","floor","fillStyle","rect","closePath","fill","xx","yy","train","RenderLine","arc","PI","font","textAlign","fillText","toFixed","curveX","ys","tf","predict","curveY","dataSync","dispose","div","position","color","textContent","append","marginBottom","async","carsDataResponse","fetch","json","car","mpg","Miles_per_Gallon","horsepower","Horsepower","filter"],"sourceRoot":""}