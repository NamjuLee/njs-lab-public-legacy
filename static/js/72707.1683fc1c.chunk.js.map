{"version":3,"file":"static/js/72707.1683fc1c.chunk.js","mappings":"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","sources":["lib/NJSCore/IO/FirebaseWrapper.ts","njslab/Workshop/workshop-ml/SmartDrawingApp/Core/CanvasSD.ts","njslab/Workshop/workshop-ml/SmartDrawingApp/Implementation/SmartDrawing/index.ts","njslab/Workshop/workshop-ml/SmartDrawingApp/Implementation/index.ts","njslab/Workshop/workshop-ml/SmartDrawingApp/index.ts"],"sourcesContent":["\r\n// import firebase from 'firebase';\r\n\r\nexport class FirebaseWrapper {\r\n    firebaseConfig = {\r\n        apiKey: 'AIzaSyA1yKg85WGZoshbk8xR23cXr3SwpqXVgIc',\r\n        authDomain: 'njs-data.firebaseapp.com',\r\n        projectId: 'njs-data',\r\n        storageBucket: 'njs-data.appspot.com',\r\n        messagingSenderId: '635991152770',\r\n        appId: '1:635991152770:web:722f5356e0d14cea50fc9b'\r\n      };\r\n\r\n    // ref: firebase.database.Reference;\r\n    // db: firebase.database.Database;\r\n    // appDatabase: firebase.app.App;\r\n    constructor(type: string, callBack: (d: any) => any) {\r\n        // this.appDatabase = firebase.initializeApp(this.firebaseConfig);\r\n        // this.db = this.appDatabase.database();\r\n        // this.ref = this.db.ref(type);\r\n        // this.ref.on('value', callBack, this.getError);\r\n    }\r\n    public sendData(data: {}) {\r\n        // let result = this.ref.push(data);\r\n        // console.log(result.key);\r\n    }\r\n\r\n    public getData = (d: any) => {\r\n        let data = d.val();\r\n    //     console.log('get data', data);\r\n\r\n        for (let i in data) {\r\n        //     console.log(i, data[i]);\r\n        }\r\n    }\r\n    public getError = (d: any) => {\r\n        console.error(d);\r\n    }\r\n}","import { AppML } from '..';\r\n// import { NVector3 } from '../Lib/NVector3';\r\n\r\n// import { DouglasPeucker } from '../Lib/DouglasPeucker';\r\n// import { tf } from '@tensorflow/tfjs';\r\n// import { NODE_ENVS } from '@tensorflow/tfjs-core/dist/test_util';\r\nexport class CanvasSD {\r\n    app: AppML;\r\n    ctx: CanvasRenderingContext2D;\r\n    canvas: HTMLCanvasElement;\r\n    vs: number[][] = [];\r\n    isDown: boolean = false;\r\n    radius: number = 3;\r\n    div: HTMLElement;\r\n    constructor(app: AppML) {\r\n        this.app = app;\r\n\r\n        const div = document.getElementById('classText');\r\n        if (div) { this.div = div; }\r\n        this.canvas = document.createElement('canvas');\r\n        if (this.app.host) {\r\n            this.app.host.appendChild(this.canvas);\r\n            this.canvas.width = 300; // this.app.host.clientWidth;\r\n            this.canvas.height = 300; // this.app.host.clientHeight;\r\n        }\r\n        this.canvas.style.background = '#ffffff';\r\n        this.canvas.style.margin = '20px';\r\n        this.canvas.style.zIndex = '1';\r\n\r\n        const ctx = this.canvas.getContext('2d');\r\n        if (ctx !== null) { this.ctx = ctx; }\r\n        this.app.Init(this.ctx);\r\n        this.InitEvent();\r\n        this.Loop();\r\n    }\r\n    InitEvent() {\r\n        this.canvas.onmousedown = (ev: MouseEvent) => {\r\n            // console.log('dn');\r\n            this.isDown = true;\r\n            this.vs = [];\r\n        };\r\n        this.canvas.onmouseup = (ev: MouseEvent) => {\r\n            // console.log('dn');\r\n            this.isDown = false;\r\n            const result = this.app.implementation.smartDrawing.Predict(this.vs);\r\n            this.div.innerHTML = 'class: ' + result;\r\n            // console.debug(`pridiction:%c ${result} from MC model`, 'background: #4e2c7e; color: white');\r\n        };\r\n        this.canvas.onmousemove = (ev: MouseEvent) => {\r\n            if (!this.isDown) { return; }\r\n            this.vs.push([ev.offsetX, ev.offsetY]);\r\n            this.Loop();\r\n        };\r\n\r\n    }\r\n    // DotProductProcess(vs: number[][]) {\r\n\r\n    //     const nvs: NVector3[] = []\r\n    //     for (let i = 0; i < vs.length; ++i) {\r\n    //         nvs.push(new NVector3(vs[i][0], vs[i][1]))\r\n    //     }\r\n    //     console.log(nvs);\r\n\r\n    //     const length = 500;\r\n    //     const vsBySimplifyPath = DouglasPeucker.SimplifyPath(nvs, 5);\r\n\r\n    //     const nvsArray:number[][] = []\r\n    //     for (let i = 0 ; i < vsBySimplifyPath.length; ++i) {\r\n    //         nvsArray.push([vsBySimplifyPath[i].x, vsBySimplifyPath[i].y])\r\n    //     }\r\n    //     console.log(nvsArray);\r\n\r\n    //     console.log('vec len:', vsBySimplifyPath.length * 0.1);\r\n    //     let dotValue = NVector3.ComputeDotProducts(nvsArray);\r\n    //     dotValue = this.GetInterpolatedArray(dotValue, length);\r\n    //     dotValue.push(vsBySimplifyPath.length * 0.1);\r\n    //     // AFreehandSmartDrawing.dotArrayForTrainSimplify.push(dotValue);\r\n\r\n    //     let vArray = [];\r\n    //     for (let i = 0; i < vsBySimplifyPath.length; ++i) { vArray.push(vsBySimplifyPath[i].x, vsBySimplifyPath[i].y); }\r\n    //     // AFreehandSmartDrawing.dotVecArrayForTrainSimplify.push(vArray);\r\n\r\n    //     dotValue = NVector3.ComputeDotProducts(vs);\r\n    //     dotValue = this.GetInterpolatedArray(dotValue, length);\r\n    //     dotValue.push(vsBySimplifyPath.length * 0.1);\r\n    //     // AFreehandSmartDrawing.dotArrayForTrainOrigin.push(dotValue);\r\n\r\n    //     vArray = [];\r\n    //     for (let i = 0; i < vs.length; ++i) { vArray.push(vs[i][0], vs[i][1]); }\r\n    //     // AFreehandSmartDrawing.dotVecArrayForTrainOrigin.push(vArray);\r\n\r\n    //     // const resizeData = MathUtility.GetInterpolatedArray(dotValue, 500);\r\n    //     // console.log(resizeData);\r\n    //     // AFreehandSmartDrawing.dotVecArrayForTrain.push(resizeData);\r\n    // }\r\n\r\n    Loop() {\r\n        this.UpdateBG();\r\n\r\n        if (this.vs.length === 0) { return; }\r\n        // this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.lineWidth = 2;\r\n        this.ctx.fillStyle = 'rgba(250, 50, 15, 0.2)';\r\n        this.ctx.strokeStyle = 'rgba(250, 50, 15, 0.5)';\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(this.vs[0][0], this.vs[0][1]);\r\n        for (let i = 1; i < this.vs.length; ++i) {\r\n            this.ctx.lineTo(this.vs[i][0], this.vs[i][1]);\r\n        }\r\n        this.ctx.stroke();\r\n        for (let i of this.vs) {\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(i[0], i[1], this.radius, 0, 3.14 * 2);\r\n            this.ctx.closePath();\r\n            this.ctx.fill();\r\n        }\r\n    }\r\n    public Clear() {\r\n        this.vs = [];\r\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.UpdateBG();\r\n    }\r\n    public UpdateBG() {\r\n        this.ctx.beginPath();\r\n        this.ctx.rect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n        this.ctx.closePath();\r\n        this.ctx.fillStyle = '#ddaadd';\r\n        this.ctx.fill();\r\n    }\r\n}","import { tensor2d, tidy, Tensor2D } from '@tensorflow/tfjs';\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport { NVector3 } from '../../Lib/NVector3';\r\n\r\nimport { FirebaseWrapper } from '../../Lib';\r\n\r\nexport class SmartDrawing {\r\n    static CLASS_TYPE = {\r\n        0: 'CIRCLE',\r\n        1: 'TRI-GON',\r\n        2: 'ARROW_SINGLE',\r\n        3: 'ARROW_DOUBLE',\r\n        4: 'RECTANGLE',\r\n        5: 'TEXT',\r\n        6: 'CURVE',\r\n        7: 'HEART',\r\n        8: 'CLOUD'\r\n    };\r\n    // tslint:disable-next-line:no-any\r\n    modelLogisticRegression: any;\r\n    modelMultiClassification: tf.LayersModel;\r\n    divText: HTMLElement;\r\n\r\n    firebaseWrapper: FirebaseWrapper;\r\n    constructor() {\r\n        // tf.model;\r\n        this.AppendDiv();\r\n        // this.activeCommandController = new ActiveCommandController(this);\r\n        // this.LoadModelFromJsons();\r\n        this.LoadModelFromPublic();\r\n        console.log(tf.version);\r\n\r\n        this.firebaseWrapper = new FirebaseWrapper('smartDrawing', this.callback);\r\n    }\r\n    callback(d: any) {\r\n        let data = d.val();\r\n        console.log('callback -------- get data', data);\r\n\r\n        for (let i in data) {\r\n            console.log(i, data[i]);\r\n        }\r\n    }\r\n    AppendDiv() {\r\n        const div = document.getElementById('main');\r\n        const divText = document.createElement('div');\r\n        if (div && divText) {\r\n            this.divText = divText;\r\n            div.insertBefore(this.divText, null);\r\n            // this.divText.style.backgroundColor = '#ff0000';\r\n            this.divText.style.marginLeft = '20px';\r\n            // this.divText.style.width = '500px';\r\n            // this.divText.style.height = '500px';\r\n\r\n        }\r\n    }\r\n    async LoadModelFromJsons() {\r\n        // localStorage.setItem('model', modelMultiClassificationJsonTopo);\r\n\r\n        // // const modeltopo = modelMultiClassificationJson.modelTopology;\r\n        // console.log(modelMultiClassificationJsonTopo);\r\n        // console.log(localStorage);\r\n        // console.log(await io.listModels());\r\n        // // console.log(JSON.parse(JSON.stringify(modelMultiClassificationJson)));\r\n\r\n        // const model = await loadModel(io.browserFiles([modelMultiClassificationJsonTopo, modelMultiClassificationJson]));\r\n        // console.log(model);\r\n        // // this.modelLogisticRegression = await loadFrozenModel(modelMultiClassificationJsonTopo, modelMultiClassificationJson);\r\n        // console.log(this.modelLogisticRegression);\r\n        // // // this.modelMultiClassification = await loadModel(modelMultiClassificationJson);\r\n        // // this.modelMultiClassification = await loadModel('./model/modelMultiClassification/model.json');\r\n\r\n        // console.log(this.modelLogisticRegression);\r\n        // console.log(this.modelMultiClassification);\r\n    }\r\n    async LoadModelFromPublic() {\r\n        // http://www.njstudio.co.kr/ml/sm/modelLogisticRegression0/model.json\r\n        // let file = 'ML/SmartDrawing/modelLogisticRegression0/model.json';\r\n        let file = `https://raw.githubusercontent.com/NamjuLee/data/master/smart-drawing/model/modelLogisticRegression0/model.json`;\r\n        // let file = 'ML/SmartDrawing/new/model.json';\r\n        this.modelLogisticRegression = await this.LoadModelFromPath(file);\r\n\r\n        file = `https://raw.githubusercontent.com/NamjuLee/data/master/smart-drawing/model/modelMultiClassification0/model.json`;\r\n        this.modelMultiClassification = await this.LoadModelFromPath(file);\r\n    }\r\n    async LoadModelFromPath(file: string) {\r\n        // return await tf.loadLayersModel(thePath);\r\n        // console.log(thePath);\r\n        const model = await tf.loadLayersModel(file);\r\n        // console.log(model.summary());\r\n        return model;\r\n    }\r\n\r\n    PredictByLogisticRegression(data: number[]) {\r\n        if (this.modelLogisticRegression === undefined) { console.error('no model loaded'); return; }\r\n        // console.log('==============================');\r\n        return tidy(() => {\r\n\r\n            const d = tensor2d([data]);\r\n            const predictOut = this.modelLogisticRegression.predict(d) as Tensor2D;\r\n            const score = predictOut.dataSync();\r\n            return this.PredictionPostProcessingLogisticRegression(score[0]);\r\n        });\r\n    }\r\n    PredictByMultiClassification(data: number[]) {\r\n        if (this.modelMultiClassification === undefined) { console.error('no model loaded'); return; }\r\n        return tidy(() => {\r\n            // console.log(data);\r\n            const d = tf.tensor2d([data]);\r\n            // console.log(d.toFloat());\r\n            const predictOut = this.modelMultiClassification.predict(d) as Tensor2D;\r\n            // console.log(predictOut);\r\n            // console.log(predictOut.toString());\r\n            // console.log('lllllllllllllllll');\r\n            const rankings = true;\r\n            if (rankings) {\r\n                const logits = Array.from(predictOut.dataSync());\r\n                const rankingIndex = this.GetIndexBySortDescending(logits as number[]);\r\n                // console.log(logits);\r\n                // console.log(rankingIndex);\r\n                // console.log('#####################');\r\n                const outText: string[] = [];\r\n                for (let i of rankingIndex) {\r\n                    const probability: number = logits[i] as number;\r\n                    const text = 'class:' + SmartDrawing.CLASS_TYPE[i] + ', probability:' + probability.toFixed(5);\r\n                    console.log(text);\r\n                    outText.push(text);\r\n                }\r\n                this.UpdateDivWithText(outText);\r\n            }\r\n\r\n            const winner = predictOut.argMax(-1).dataSync()[0];\r\n            return SmartDrawing.CLASS_TYPE[winner];\r\n            // console.log(this.classStringsMultiClassification[winner]);\r\n            // return this.PredictionPostProcessingLogisticRegression(scoreArray[0]);\r\n        });\r\n    }\r\n    private UpdateDivWithText(outText: string[]) {\r\n        let text = `<p>*** FROM DEEP LEARNING MODEL B *** </p>`;\r\n        for (let i = 0; i < outText.length; ++i) {\r\n            text += `<p> ${outText[i]}</p>`;\r\n        }\r\n        this.divText.innerHTML = text;\r\n    }\r\n    private PredictionPostProcessingLogisticRegression(d: number) {\r\n        const result = Math.floor(d + 0.5);\r\n        return SmartDrawing.CLASS_TYPE[result];\r\n    }\r\n    private GetIndexBySortDescending(d: number[]) {\r\n        let len = d.length;\r\n        let indices = new Array(len);\r\n        for (var i = 0; i < len; ++i) { indices[i] = i; }\r\n        indices.sort((a, b) => { return d[a] > d[b] ? -1 : d[a] < d[b] ? 1 : 0; });\r\n        return indices;\r\n    }\r\n    public Remove() {\r\n        // console.log('revmoe smart');\r\n    }\r\n    public Predict(d: number[][]) {\r\n\r\n        const vs = [];\r\n        for (let i of d) { vs.push(new NVector3(i[0], i[1], 0)); }\r\n        // console.log(vs);\r\n        const dotPrediction = NVector3.ComputeDotProducts(vs);\r\n        // console.log(dotPrediction);\r\n        const dotValueInterpolated = this.GetInterpolatedArray(dotPrediction, 501);\r\n        // console.log(dotValueInterpolated);\r\n        // const dotValueInterpolated = dotPrediction\r\n        // console.log(this.GetInterpolatedArray(dotPrediction, 10));\r\n        // console.log(this.scene.annotationInstance.implementation.app.model.appAnnotation.addon.smartDrawing);\r\n        console.log('*** FROM DEEP LEARNING MODELS ***');\r\n        // const predictionLosisticR = this.smartDrawing.PredictByLogisticRegression(dotValueInterpolated);\r\n        // console.debug(`pridiction:%c ${predictionLosisticR} from LR Model`, 'background: #ddb137; color: black');\r\n        const predictionMultiC = this.PredictByMultiClassification(dotValueInterpolated);\r\n        console.debug(`pridiction:%c ${predictionMultiC} from MC model`, 'background: #4e2c7e; color: white');\r\n\r\n        // console.log(d, predictionMultiC);\r\n        this.firebaseWrapper.sendData({\r\n            class: predictionMultiC,\r\n            vec: d\r\n        });\r\n\r\n        return predictionMultiC;\r\n\r\n        // console.log(prediction);\r\n        // this.GetShapeFromPrediction(prediction, vs);\r\n    }\r\n    public LinearInterpolate(before: number, after: number, atPoint: number) {\r\n        return before + (after - before) * atPoint;\r\n\r\n        // const d = new Float32Array(10);\r\n        // d[5];\r\n    }\r\n    public GetInterpolatedArray(data: number[], fitCount: number) {\r\n        let newData = {};\r\n        let springFactor = (data.length - 1) / (fitCount - 1);\r\n        newData[0] = data[0]; // for new allocation\r\n        for (let i = 1; i < fitCount - 1; i++) {\r\n            let tmp: number = i * springFactor;\r\n            let before: number = +(Math.floor(tmp)).toFixed();\r\n            let after: number = +(Math.ceil(tmp)).toFixed();\r\n            let atPoint: number = tmp - before;\r\n            newData[i] = this.LinearInterpolate(data[before], data[after], atPoint);\r\n        }\r\n        newData[fitCount - 1] = data[data.length - 1]; // for new allocation\r\n        return newData;\r\n    }\r\n}\r\n\r\n","import { SmartDrawing } from './SmartDrawing';\r\nimport { AppML } from '..';\r\nexport class Implementation {\r\n    app: AppML;\r\n    smartDrawing: SmartDrawing;\r\n    constructor(app: AppML) {\r\n        this.app = app;\r\n        this.smartDrawing = new SmartDrawing();\r\n    }\r\n}","import { CanvasSD } from './Core/CanvasSD';\r\nimport { Implementation } from './Implementation';\r\n// import { Application } from '../';\r\nexport class AppML {\r\n    // app: Application;\r\n    canvasSD: CanvasSD;\r\n    implementation: Implementation;\r\n    host: HTMLElement;\r\n    divText: HTMLElement;\r\n    public static Init(id: string) {\r\n        new AppML(id);\r\n    }\r\n    constructor(id: string = 'main') {\r\n        // this.app = app;\r\n        console.log('id: ' + id + ', App Init!!!!!');\r\n        const host = document.getElementById(id);\r\n        if (host) { this.host = host; }\r\n        this.InitHTML();\r\n        // this.threeCore = new ThreeCore();\r\n        // this.tfCore = new TFCore();\r\n        this.canvasSD = new CanvasSD(this);\r\n        this.implementation = new Implementation(this);\r\n    }\r\n    InitHTML() {\r\n        const btn0 = document.createElement('button');\r\n        btn0.style.width = '100px';\r\n        btn0.style.height = '20px';\r\n        btn0.style.marginLeft = '20px';\r\n        btn0.style.zIndex = '5';\r\n        // btn0.style.left = '20px';\r\n        // btn0.style.top = '20px';\r\n        // btn0.style.position = 'absolute';\r\n        btn0.name = 'Clear';\r\n        btn0.innerText = 'Clear';\r\n        btn0.value = 'Clear';\r\n        btn0.onclick = () => { console.log(this); this.canvasSD.Clear(); };\r\n\r\n        this.host.appendChild(btn0);\r\n        this.divText = document.createElement('div');\r\n        this.divText.id = 'classText';\r\n        this.divText.style.zIndex = '5';\r\n        // this.divText.style.left = '150px';\r\n        // this.divText.style.top = '20px';\r\n        // this.divText.style.position = 'absolute';\r\n        this.divText.innerText = 'class: ';\r\n        this.divText.style.marginLeft = '20px';\r\n        this.host.appendChild(this.divText);\r\n    }\r\n    Init(ctx: CanvasRenderingContext2D) {\r\n        console.log('this is init...');\r\n    }\r\n    Clear() {\r\n        this.canvasSD.Clear();\r\n    }\r\n}\r\n\r\nexport class Solution {\r\n    public divHost: HTMLElement;\r\n\r\n    constructor(id: string ) {\r\n        this.divHost = document.getElementById(id);\r\n\r\n        AppML.Init(id)\r\n    }\r\n    public destroy() {\r\n        if (this.divHost) {\r\n            try {\r\n                while (this.divHost.firstChild) {\r\n                    this.divHost.removeChild(this.divHost.firstChild);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error in destroy method:', error);\r\n            }\r\n        } else {\r\n            console.warn('divHost is undefined in destroy method');\r\n        }\r\n    }\r\n}"],"names":["FirebaseWrapper","constructor","type","callBack","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getData","d","data","val","i","getError","console","error","sendData","CanvasSD","app","ctx","canvas","vs","isDown","radius","div","this","document","getElementById","createElement","host","appendChild","width","height","style","background","margin","zIndex","getContext","Init","InitEvent","Loop","onmousedown","ev","onmouseup","result","implementation","smartDrawing","Predict","innerHTML","onmousemove","push","offsetX","offsetY","UpdateBG","length","lineWidth","fillStyle","strokeStyle","beginPath","moveTo","lineTo","stroke","arc","closePath","fill","Clear","clearRect","rect","SmartDrawing","modelLogisticRegression","modelMultiClassification","divText","firebaseWrapper","AppendDiv","LoadModelFromPublic","log","tf","callback","insertBefore","marginLeft","async","file","LoadModelFromPath","PredictByLogisticRegression","undefined","tidy","tensor2d","score","predict","dataSync","PredictionPostProcessingLogisticRegression","PredictByMultiClassification","predictOut","logits","Array","from","rankingIndex","GetIndexBySortDescending","outText","probability","text","CLASS_TYPE","toFixed","UpdateDivWithText","winner","argMax","Math","floor","len","indices","sort","a","b","Remove","NVector3","dotPrediction","dotValueInterpolated","GetInterpolatedArray","predictionMultiC","debug","class","vec","LinearInterpolate","before","after","atPoint","fitCount","newData","springFactor","tmp","ceil","Implementation","AppML","id","canvasSD","InitHTML","btn0","name","innerText","value","onclick","Solution","divHost","destroy","firstChild","removeChild","warn"],"sourceRoot":""}