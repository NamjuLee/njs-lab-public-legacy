"use strict";(self.webpackChunkNJS_Lab=self.webpackChunkNJS_Lab||[]).push([[92362],{92362:(t,o,e)=>{e.r(o),e.d(o,{Edge:()=>c,Node:()=>l,Solution:()=>s});var i=e(17760),n=e(55913);class s extends n.TF{constructor(){super(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"main"),this.pointLight=void 0,this.camera.position.set(0,50,50);const t=new i.Mig(13421772,.25);this.scene.add(t),this.pointLight=new i.cek(16777215,.75),this.pointLight.position.x=10,this.pointLight.castShadow=!0,this.scene.add(this.pointLight);const o=a();console.log(o);const[e,n,s]=r(o),l=new i.TlE(new Float32Array(e),3),c=new i.TlE(new Float32Array(n),4),v=new i.TlE(new Float32Array(s),1),u=(new i.ZAu,new i.u9r);u.setAttribute("position",l),u.setAttribute("customColor",c),u.setAttribute("size",v);let m="njslabSandboxStatic/img/".concat("dotTexture.png");m="https://raw.githubusercontent.com/NamjuLee/data/master/img/brush/dotTexture.png";const p=(new i.dpR).load(m);console.log(m);let g=new i.jyz({uniforms:{color:{value:new i.Ilk(16777215)},texture:{value:p}},vertexShader:h,fragmentShader:d,alphaTest:.9});g.transparent=!0;const w=new i.Kj0(u,g);this.scene.add(w),this.start()}update(t){var o=new i.yGw;o.makeRotationY(.011*Math.PI),this.pointLight.position.applyMatrix4(o)}}const a=()=>{const t=n.P8.m3.GetSpherecVecs3dRandomWithThicknessOffset(500,15,.15),o=[];for(let e=0;e<t.length;++e)o.push(new i.Pa4(t[e].x,t[e].y,t[e].z));return o},r=t=>{let o=n.P8.mK.GetRandomHex(),e=[],i=[],s=[],a=[];for(let r=0;r<t.length;++r){e.push(t[r].x,t[r].y,t[r].z);let h=n.P8.mK.GetRandomColorByLightness(o,.2+.7*Math.random());i.push(h[0]/255,h[1]/255,h[2]/255,Math.random()),console.log(h[0]/255,h[1]/255,h[2]/255,Math.random());let d=1e-4*r;s.push(d);const c=new l(r,t[r],h,d);a.push(c)}return[e,i,s]},h="\n    attribute float size;\n    attribute vec4 customColor;\n    varying vec4 vColor;\n\n    void main() {\n        // vColor = vec4(vColor.xyz, distance(vec3(customColor.xyz), position));\n        vColor = customColor;\n        vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n        gl_PointSize = size * ( 30.0 / -mvPosition.z );\n        gl_Position = projectionMatrix * mvPosition;\n    }\n    ",d="\n    uniform vec3 color;\n    uniform sampler2D texture;\n    varying vec4 vColor;\n\n\tvoid main() {\n        gl_FragColor = vColor; // vec4(color * vColor, 1.0);\n        // gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n        // if (gl_FragColor.a < 0.5) discard;\n    }\n    ";class l{constructor(t,o,e,i){this.v=void 0,this.col=void 0,this.theta=void 0,this.phi=void 0,this.size=void 0,this.id=void 0,this.edges=void 0,this.seedRandom=void 0,this.t=void 0,this.tForR=void 0,this.needUpdate=void 0,this.t=0,this.v=o,this.id=t,this.col=e,this.size=i,this.tForR=0,this.seedRandom=Math.random()}Translate(t,o,e){}Scale(t){}ScalebyValue(t){}SetScale(t){}Update(t){}}class c{constructor(t,o,e,i){this.n0=void 0,this.n1=void 0,this.size=void 0,this.id=void 0,this.seedRandom=void 0,this.id=t,this.n0=o,this.n1=e,this.size=i,this.seedRandom=Math.random()}Update(t){}}}}]);
//# sourceMappingURL=92362.fa1801fe.chunk.js.map