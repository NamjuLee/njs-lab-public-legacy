"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[27745,3536,57143,34673],{3536:function(t,s,i){i.r(s),i.d(s,{Canvas:function(){return e}});class e{loop(){this.clear(this.gl),requestAnimationFrame(()=>{this.loop()}),this.app.renderer.render()}clear(t){t.cullFace(t.BACK),t.frontFace(t.CCW),t.enable(t.DEPTH_TEST),t.enable(t.CULL_FACE),t.depthFunc(t.LEQUAL),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA),t.clearColor(1,1,1,1)}constructor(t){this.app=t,this.canvas=document.createElement("canvas"),this.app.host&&(this.app.host.appendChild(this.canvas),this.canvas.width=this.app.host.clientWidth,this.canvas.height=this.app.host.clientHeight);let s=this.canvas.getContext("webgl2");null!==s&&(this.gl=s,this.gl.cullFace(s.BACK),this.gl.frontFace(s.CCW),this.gl.enable(s.DEPTH_TEST),this.gl.enable(s.CULL_FACE),this.gl.depthFunc(s.LEQUAL),this.gl.blendFunc(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA)),this.loop()}}},57143:function(t,s,i){i.r(s),i.d(s,{Renderer:function(){return e}});class e{render(){this.app.camera&&this.app.camera.updateViewMatrix(),this.app.scene.geometries.forEach(t=>{t.render()})}constructor(t){this.app=t}}},34673:function(t,s,i){i.r(s),i.d(s,{Scene:function(){return e}});class e{add(t){this.geometries.push(t)}constructor(t){this.geometries=[],this.NGL3dApp=t}}},98052:function(t,s,i){i.r(s),i.d(s,{GridAxis:function(){return h}});var e=i(19214),r=i(44010),a=i(26180),n=i(61236);class o extends a.Shader{renderModel(t){return this.setModelMatrix(t.transform.getViewMatrix()),this.gl.bindVertexArray(t.vao.vao),t.vao.indexCount?this.gl.drawElements(t.vao.drawMode,t.vao.indexCount,this.gl.UNSIGNED_SHORT,0):this.gl.drawArrays(t.vao.drawMode,0,t.vao.vertexCount),this.gl.bindVertexArray(null),this}constructor(t,s,i,e,r){if(super(t,s,i),this.program){this.setPerspective(r),t.useProgram(this.program);let s=t.getUniformLocation(this.program,"uColor");t.uniform3fv(s,e)}}}class h extends n.GeometryBase{GetVAO(){let t,s=!(arguments.length>0)||void 0===arguments[0]||arguments[0],i=[];for(let s=0;s<=10;s++)t=-.9+.18*s,i.push(t),i.push(0),i.push(.9),i.push(0),i.push(t),i.push(0),i.push(-.9),i.push(0),t=.9-.18*s,i.push(-.9),i.push(0),i.push(t),i.push(0),i.push(.9),i.push(0),i.push(t),i.push(0);s&&(i.push(-1.1),i.push(0),i.push(0),i.push(1),i.push(1.1),i.push(0),i.push(0),i.push(1),i.push(0),i.push(-1.1),i.push(0),i.push(2),i.push(0),i.push(1.1),i.push(0),i.push(2),i.push(0),i.push(0),i.push(-1.1),i.push(3),i.push(0),i.push(0),i.push(1.1),i.push(3)),this.vao=new e.VAO(this.gl,"grid",i),this.vao.drawMode=this.gl.LINES,this.vao.vao=this.gl.createVertexArray(),this.vao.vertexComponentLen=4,this.vao.vertexCount=i.length/this.vao.vertexComponentLen;let r=Float32Array.BYTES_PER_ELEMENT*this.vao.vertexComponentLen;return this.vao.bufVertices=this.gl.createBuffer(),this.gl.bindVertexArray(this.vao.vao),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.vao.bufVertices),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(i),this.gl.STATIC_DRAW),this.gl.enableVertexAttribArray(a.ATTR.ATTR_POSITION_LOC),this.gl.enableVertexAttribArray(a.ATTR.ATTR_COLOR_LOC),this.gl.vertexAttribPointer(a.ATTR.ATTR_POSITION_LOC,3,this.gl.FLOAT,!1,r,0),this.gl.vertexAttribPointer(a.ATTR.ATTR_COLOR_LOC,1,this.gl.FLOAT,!1,r,3*Float32Array.BYTES_PER_ELEMENT),this.gl.bindVertexArray(null),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,null),this.vao}initShader(t){this.shader=new o(t,this.v,this.f,[.8,.8,.8,1,0,0,0,1,0,0,0,1],this.app.camera.projectionMatrix),this.vao=this.GetVAO(),this.model=new r.Model(this.vao)}render(){this.shader.activate().setCameraMatrix(this.app.camera.viewMatrix).renderModel(this.model.preRender()),this.t=.01}constructor(t){super(t.scene),this.v="#version 300 es\n    in vec3 a_position;	//Standard position data.\n    layout(location=4) in float a_color;	//Will hold the 4th custom position of the custom position buffer.\n\n    uniform mat4 uPMatrix;\n    uniform mat4 uMVMatrix;\n    uniform mat4 uCameraMatrix;\n\n    uniform vec3 uColor[4];	//Color Array\n\n    out lowp vec4 color;	//Color to send to fragment shader.\n\n    void main(void) {\n        color = vec4(uColor[ int(a_color) ],1.0); //Using the 4th float as a color index.\n        gl_Position = uPMatrix * uCameraMatrix * uMVMatrix * vec4(a_position, 1.0);\n    }\n    ",this.f="#version 300 es\n    precision mediump float;\n\n    in vec4 color;\n    out vec4 finalColor;\n\n    void main(void) { finalColor = color; }\n    ",this.ro=0,this.t=0,this.app=t,this.gl=t.canvas.gl,this.initShader(this.gl)}}},76041:function(t,s,i){i.r(s),i.d(s,{Quad:function(){return u}});var e=i(74433),r=i(19214),a=i(44010),n=i(26180),o=i(61236);class h extends n.Shader{set(t,s){return this}constructor(t,s,i,e){if(super(t,s,i),this.pMatrix=e,this.program){t.useProgram(this.program),this.setPerspective(e);let s=t.getUniformLocation(this.program,"uColor");t.uniform3fv(s,new Float32Array([.8,.8,.8,1,0,0,0,1,0,0,0,1])),t.useProgram(null)}}}class u extends o.GeometryBase{render(){this.model.transform.position=new e.Vector3(0,0,this.model.transform.position.z+-.005),this.shader.activate(),this.shader.setPerspective(this.shader.pMatrix),this.shader.setCameraMatrix(this.app.camera.viewMatrix),this.shader.renderModel(this.model.preRender())}constructor(t){super(t.scene),this.v="#version 300 es\n\n        in vec3 a_position;	// Standard position data.\n        in vec2 a_uv;\n\n        layout(location=4) in float a_color;\n\n        uniform mat4 uPMatrix;\n        uniform mat4 uMVMatrix;\n        uniform mat4 uCameraMatrix;\n\n        uniform vec3 uColor[4];\n\n        out vec2 uv;\n        out lowp vec4 color;\n\n        void main(void) {\n            uv = a_uv;\n            // uv = vec2(0.5, 1);\n\n            color = vec4(uColor[ int(a_color) ], 1.0);\n\n            gl_Position = uPMatrix * uCameraMatrix * uMVMatrix * vec4(a_position, 1.0);\n        }\n    ",this.f="#version 300 es\n\n    precision mediump float;\n\n    in vec2 uv;\n    in vec4 color;\n\n    out vec4 finalColor;\n\n    void main(void) {\n\n        //Square Border\n        float c = (uv.x <= 0.1 || uv.x >=0.9 || uv.y <= 0.1 || uv.y >= 0.9)? 0.0 : 1.0;\n\n        // finalColor = vec4(1.0, uv.x, uv.y ,1.0-c);\n        // finalColor = vec4(color.xyz, 1.0 -c);\n\n        // //Circle\n        // //  /*\n        vec2 delta = uv - vec2(0.5,0.5); //delta position from center;\n        float dist = 0.5 - sqrt(delta.x*delta.x + delta.y*delta.y);\n\n        float border = 0.01;\n        float a = 0.0;\n        if(dist > border) a = 1.0;\n        else if(dist > 0.0) a = dist / border;\n\n        finalColor = vec4(0.0,0.0,0.0, a);\n        // //  */\n    }\n    ",this.size=20.5,this.rotation=0,this.app=t,this.shader=new h(this.app.canvas.gl,this.v,this.f,this.app.camera.projectionMatrix),this.vao=new r.VAO(t.canvas.gl,"Quad",[-.5,.5,0,-.5,-.5,0,.5,-.5,0,.5,.5,0],[0,1,2,2,3,0],void 0,[0,0,0,1,1,1,1,0]),this.vao.noCulling=!0,this.vao.doBlending=!0,this.model=new a.Model(this.vao)}}},32869:function(t,s,i){i.r(s),i.d(s,{CAMERA_MODE:function(){return r},Camera:function(){return o},CameraController:function(){return h}});var e,r,a=i(52120),n=i(32163);(e=r||(r={}))[e.FREE=0]="FREE",e[e.ORBIT=1]="ORBIT";class o{panX(t){1!==this.mode&&(this.updateViewMatrix(),this.transform.position.x+=this.transform.right[0]*t,this.transform.position.y+=this.transform.right[1]*t,this.transform.position.z+=this.transform.right[2]*t)}panY(t){this.updateViewMatrix(),this.transform.position.y+=this.transform.up[1]*t,1!==this.mode&&(this.transform.position.x+=this.transform.up[0]*t,this.transform.position.z+=this.transform.up[2]*t)}panZ(t){this.updateViewMatrix(),1===this.mode?this.transform.position.z+=t:(this.transform.position.x+=this.transform.forward[0]*t,this.transform.position.y+=this.transform.forward[1]*t,this.transform.position.z+=this.transform.forward[2]*t)}updateViewMatrix(){return 0===this.mode?this.transform.matView.reset().vtranslate(this.transform.position).rotateX(this.transform.rotation.x*n.Transform.deg2Rad).rotateY(this.transform.rotation.y*n.Transform.deg2Rad):this.transform.matView.reset().rotateX(this.transform.rotation.x*n.Transform.deg2Rad).rotateY(this.transform.rotation.y*n.Transform.deg2Rad).vtranslate(this.transform.position),this.transform.updateDirection(),a.Matrix4.invert(this.viewMatrix,this.transform.matView.raw),this.viewMatrix}constructor(t,s=45,i=.1,e=100){this.projectionMatrix=new Float32Array(16);var r=t.canvas.width/t.canvas.height;a.Matrix4.perspective(this.projectionMatrix,s||45,r,i||.1,e||100),this.transform=new n.Transform,this.viewMatrix=new Float32Array(16),this.mode=1}}class h{getMouseVec2(t){return{x:t.pageX-this.offsetX,y:t.pageY-this.offsetY}}onMouseDown(t){this.initX=this.prevX=t.pageX-this.offsetX,this.initY=this.prevY=t.pageY-this.offsetY,this.canvas.addEventListener("mouseup",this.onUpHandler),this.canvas.addEventListener("mousemove",this.onMoveHandler)}onMouseUp(t){this.canvas.removeEventListener("mouseup",this.onUpHandler),this.canvas.removeEventListener("mousemove",this.onMoveHandler)}onMouseWheel(t){var s=Math.max(-1,Math.min(1,t.wheelDelta||-t.detail));this.camera.panZ(this.zoomRate/this.canvas.height*s)}onMouseMove(t){var s=t.pageX-this.offsetX,i=t.pageY-this.offsetY,e=s-this.prevX,r=i-this.prevY;t.shiftKey?(this.camera.panX(-(this.panRate/this.canvas.width*e)),this.camera.panY(this.panRate/this.canvas.height*r)):(this.camera.transform.rotation.y+=this.rotateRate/this.canvas.width*e,this.camera.transform.rotation.x+=this.rotateRate/this.canvas.height*r),this.prevX=s,this.prevY=i}constructor(t,s){this.canvas=t.canvas,this.camera=s,this.rotateRate=-300,this.panRate=5,this.zoomRate=200,this.offsetX=10,this.offsetY=10,this.initX=0,this.initY=0,this.prevX=0,this.prevY=0,this.onUpHandler=t=>this.onMouseUp(t),this.onMoveHandler=t=>{this.onMouseMove(t)},this.canvas.addEventListener("mousedown",t=>{this.onMouseDown(t)}),this.canvas.addEventListener("mousewheel",t=>{this.onMouseWheel(t)})}}},27745:function(t,s,i){i.r(s),i.d(s,{NGL3dApp:function(){return l}});var e=i(3536),r=i(57143),a=i(34673),n=i(32869),o=i(98052),h=i(76041),u=i(91195);class l{constructor(t){console.log("id: "+t+", NGL3dApp 07-1 Init!!!!!");let s=document.getElementById(t);s&&(this.host=s),this.scene=new a.Scene(this),this.renderer=new r.Renderer(this),this.canvas=new e.Canvas(this),this.camera=new n.Camera(this.canvas.gl),this.camera.transform.position.set(0,1,3),this.cameraCtrl=new n.CameraController(this.canvas.gl,this.camera),new o.GridAxis(this),new h.Quad(this),new u.MulitQuad(this)}}}}]);