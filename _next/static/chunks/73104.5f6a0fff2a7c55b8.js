"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[73104],{73104:function(n,e,t){let r;t.r(e),t.d(e,{buffer:function(){return z},changeDefaultSpatialReferenceTolerance:function(){return X},clearDefaultSpatialReferenceTolerance:function(){return Y},clip:function(){return w},contains:function(){return m},convexHull:function(){return E},crosses:function(){return g},cut:function(){return d},densify:function(){return G},difference:function(){return k},disjoint:function(){return N},distance:function(){return h},equals:function(){return S},extendedSpatialReferenceInfo:function(){return y},flipHorizontal:function(){return j},flipVertical:function(){return q},generalize:function(){return B},geodesicArea:function(){return M},geodesicBuffer:function(){return C},geodesicDensify:function(){return W},geodesicLength:function(){return Q},intersect:function(){return L},intersectLinesToPoints:function(){return U},intersects:function(){return A},isSimple:function(){return J},nearestCoordinate:function(){return H},nearestVertex:function(){return _},nearestVertices:function(){return I},offset:function(){return V},overlaps:function(){return O},planarArea:function(){return F},planarLength:function(){return K},relate:function(){return D},rotate:function(){return Z},simplify:function(){return b},symmetricDifference:function(){return v},touches:function(){return R},union:function(){return T},within:function(){return x}}),t(55066);var i=t(28707),u=t(33876),c=t(5005);function a(n){return Array.isArray(n)?n[0]?.spatialReference:n?.spatialReference}function o(n){return n?Array.isArray(n)?n.map(o):n.toJSON?n.toJSON():n:n}function f(n){return Array.isArray(n)?n.map(n=>(0,c.im)(n)):(0,c.im)(n)}async function s(){return r||(r=(0,i.bA)("geometryEngineWorker",{strategy:"distributed"})),r}async function l(n,e){return(await s()).invoke("executeGEOperation",{operation:n,parameters:o(e)})}async function p(n,e){return Promise.all((await s()).broadcast("executeGEOperation",{operation:n,parameters:o(e)}))}function y(n){return l("extendedSpatialReferenceInfo",[n])}async function w(n,e){return f(await l("clip",[a(n),n,e]))}async function d(n,e){return f(await l("cut",[a(n),n,e]))}function m(n,e){return l("contains",[a(n),n,e])}function g(n,e){return l("crosses",[a(n),n,e])}function h(n,e,t){return l("distance",[a(n),n,e,t])}function S(n,e){return l("equals",[a(n),n,e])}function A(n,e){return l("intersects",[a(n),n,e])}function R(n,e){return l("touches",[a(n),n,e])}function x(n,e){return l("within",[a(n),n,e])}function N(n,e){return l("disjoint",[a(n),n,e])}function O(n,e){return l("overlaps",[a(n),n,e])}function D(n,e,t){return l("relate",[a(n),n,e,t])}function J(n){return l("isSimple",[a(n),n])}async function b(n){return f(await l("simplify",[a(n),n]))}async function E(n,e=!1){return f(await l("convexHull",[a(n),n,e]))}async function k(n,e){return f(await l("difference",[a(n),n,e]))}async function v(n,e){return f(await l("symmetricDifference",[a(n),n,e]))}async function L(n,e){return f(await l("intersect",[a(n),n,e]))}async function T(n,e=null){let t;let r=(Array.isArray(n)?t=n:((t=[]).push(n),null!=e&&t.push(e)),t);return f(await l("union",[a(r),r]))}async function V(n,e,t,r,i,u){return f(await l("offset",[a(n),n,e,t,r,i,u]))}async function z(n,e,t,r=!1){let i=[a(n),n,e,t,r];return f(await l("buffer",i))}async function C(n,e,t,r,i,u){let c=[a(n),n,e,t,r,i,u];return f(await l("geodesicBuffer",c))}async function H(n,e,t=!0){let r=await l("nearestCoordinate",[a(n),n,e,t]);return{...r,coordinate:u.Z.fromJSON(r.coordinate)}}async function _(n,e){let t=await l("nearestVertex",[a(n),n,e]);return{...t,coordinate:u.Z.fromJSON(t.coordinate)}}async function I(n,e,t,r){return(await l("nearestVertices",[a(n),n,e,t,r])).map(n=>({...n,coordinate:u.Z.fromJSON(n.coordinate)}))}function P(n){return"xmin"in n?n.center:"x"in n?n:n.extent?.center}async function Z(n,e,t){if(null==n)throw new $;let r=n.spatialReference;if(null==(t=t??P(n)))throw new $;let i=n.constructor.fromJSON(await l("rotate",[r,n,e,t]));return i.spatialReference=r,i}async function j(n,e){if(null==n)throw new $;let t=n.spatialReference;if(null==(e=e??P(n)))throw new $;let r=n.constructor.fromJSON(await l("flipHorizontal",[t,n,e]));return r.spatialReference=t,r}async function q(n,e){if(null==n)throw new $;let t=n.spatialReference;if(null==(e=e??P(n)))throw new $;let r=n.constructor.fromJSON(await l("flipVertical",[t,n,e]));return r.spatialReference=t,r}async function B(n,e,t,r){return f(await l("generalize",[a(n),n,e,t,r]))}async function G(n,e,t){return f(await l("densify",[a(n),n,e,t]))}async function W(n,e,t,r=0){return f(await l("geodesicDensify",[a(n),n,e,t,r]))}function F(n,e){return l("planarArea",[a(n),n,e])}function K(n,e){return l("planarLength",[a(n),n,e])}function M(n,e,t){return l("geodesicArea",[a(n),n,e,t])}function Q(n,e,t){return l("geodesicLength",[a(n),n,e,t])}async function U(n,e){return f(await l("intersectLinesToPoints",[a(n),n,e]))}async function X(n,e){await p("changeDefaultSpatialReferenceTolerance",[n,e])}async function Y(n){await p("clearDefaultSpatialReferenceTolerance",[n])}class $ extends Error{constructor(){super("Illegal Argument Exception")}}}}]);