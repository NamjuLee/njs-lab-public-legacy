(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[62977],{75410:function(){},48628:function(){},31601:function(){},67792:function(){},34977:function(){},75042:function(){},44393:function(t,e,i){"use strict";i.r(e),i.d(e,{SmartDrawing:function(){return s}});var o=i(88405);class s{predictByLogisticRegression(t){if(void 0===this.modelLogisticRegression){console.error("no model loaded");return}return(0,o.tidy)(()=>{let e=(0,o.tensor2d)([t]),i=this.modelLogisticRegression.predict(e).dataSync();return this.PredictionPostProcessingLogisticRegression(i[0])})}PredictionPostProcessingLogisticRegression(t){return s.CLASS_TYPE[Math.floor(t+.5)]}predictByMultiClassification(t){if(void 0===this.modelMultiClassification){console.error("no model loaded");return}return(0,o.tidy)(()=>{let e=o.tensor2d([t]),i=this.modelMultiClassification.predict(e),r=[];{let t=Array.from(i.dataSync());for(let e of n(t)){let i=t[e],o="class:"+s.CLASS_TYPE[e]+", probability:"+i.toFixed(5);r.push(o)}}let a=i.argMax(-1).dataSync()[0];return[s.CLASS_TYPE[a],r]})}constructor(){this.isLoaded=!1,r().then(t=>{[this.modelLogisticRegression,this.modelMultiClassification]=t,this.isLoaded=!0})}}s.CLASS_TYPE={0:"CIRCLE",1:"TRI-GON",2:"ARROW_SINGLE",3:"ARROW_DOUBLE",4:"RECTANGLE",5:"TEXT",6:"CURVE",7:"HEART",8:"CLOUD"};let r=async()=>{let t="https://raw.githubusercontent.com/NamjuLee/data/master/smart-drawing/model/modelLogisticRegression0/model.json",e=await (0,o.loadLayersModel)(t);return t="https://raw.githubusercontent.com/NamjuLee/data/master/smart-drawing/model/modelMultiClassification0/model.json",[e,await (0,o.loadLayersModel)(t)]},n=t=>{let e=Array(t.length);for(let i=0;i<t.length;++i)e[i]=i;return e.sort((e,i)=>t[e]>t[i]?-1:t[e]<t[i]?1:0),e}}}]);