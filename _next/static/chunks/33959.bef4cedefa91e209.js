"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[33959],{33959:function(e,t,s){s.r(t),s.d(t,{default:function(){return y}});var r=s(86641),n=s(94605),i=s(1662),a=s(20128),o=s(89312);s(37180),s(65223),s(3457);var u=s(64186),l=s(9158),h=s(18964),c=s(1147),d=s(8282);let p=e=>{let t=class extends e{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...e){super(...e),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&"connected"===this._streamConnectionStatus?"paused":this._streamConnectionStatus}_onSuspendedChange(e){e?this._doPause():this._isUserPaused||this._doResume()}};return(0,r._)([(0,o.Cb)()],t.prototype,"_isUserPaused",void 0),(0,r._)([(0,o.Cb)({readOnly:!0})],t.prototype,"connectionStatus",null),(0,r._)([(0,o.Cb)({type:d.Z})],t.prototype,"filter",void 0),t=(0,r._)([(0,u.j)("esri.views.layers.StreamLayerView")],t)},_=class extends p(h.default){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([(0,a.YP)(()=>this.layer.customParameters,async e=>{(await this.getWorker()).streamMessenger.updateCustomParameters(e)}),this.layer.on("send-message-to-socket",async e=>{(await this.getWorker()).streamMessenger.sendMessageToSocket(e)}),this.layer.on("send-message-to-client",async e=>{(await this.getWorker()).streamMessenger.sendMessageToClient(e),this._isUserPaused&&"type"in e&&"clear"===e.type&&this.incrementSourceRefreshVersion()}),(0,a.YP)(()=>this.layer.purgeOptions,()=>this._update()),(0,a.YP)(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new n.Z("stream-controller",this.pipelineErrorString):null}on(e,t){if(Array.isArray(e))return(0,i.AL)(e.map(e=>this.on(e,t)));let s=["data-received","message-received"].includes(e);s&&this.getWorker().then(t=>t.streamMessenger.enableEvent(e,!0));let r=super.on(e,t),n=this;return(0,i.kB)(()=>{r.remove(),s&&(n._workerProxy.closed||n.hasEventListener(e)||n.getWorker().then(t=>t.streamMessenger.enableEvent(e,!1)))})}async queryLatestObservations(e,t){if(!(this.layer.timeInfo?.endField||this.layer.timeInfo?.startField||this.layer.timeInfo?.trackIdField))throw new n.Z("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");let s=await this.getWorker();return(0,c.Y)(s.features.executeQueryForLatestObservations(this._cleanUpQuery(e),t).then(e=>{let t=l.Z.fromJSON(e);return t.features.forEach(e=>{e.layer=this.layer,e.sourceLayer=this.layer}),t}),new l.Z({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){null!=this._refreshInterval&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval)}_doDisconnect(){this.getWorker().then(e=>e.streamMessenger.disconnect()),this._doPause()}_doConnect(){this.getWorker().then(e=>e.streamMessenger.connect()),this.resume()}_doClear(){this.getWorker().then(e=>e.streamMessenger.clear()),null==this._refreshInterval&&this.incrementSourceRefreshVersion()}_createClientOptions(){let e=super._createClientOptions(),t=this;return{...e,get container(){return t.featureContainer},setProperty:e=>{this.set(e.propertyName,e.value)}}}};(0,r._)([(0,o.Cb)()],_.prototype,"pipelineConnectionStatus",void 0),(0,r._)([(0,o.Cb)()],_.prototype,"pipelineErrorString",void 0),(0,r._)([(0,o.Cb)({readOnly:!0})],_.prototype,"connectionError",null),(0,r._)([(0,o.Cb)({readOnly:!0})],_.prototype,"_streamConnectionStatus",null);let y=_=(0,r._)([(0,u.j)("esri.views.2d.layers.StreamLayerView2D")],_)}}]);