"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[35298],{35298:function(t,e,r){r.r(e),r.d(e,{Solution:function(){return s},vertex:function(){return n},vertexCount:function(){return a}});let i=function(t,e){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,i=t.createBuffer({size:e.byteLength,usage:r,mappedAtCreation:!0});return new Float32Array(i.getMappedRange()).set(e),i.unmap(),i},n=new Float32Array([0,.5,0,-.5,-.5,0,.5,-.5,0]),a=3,o="\n// vertext shader\n\nstruct Output {\n    @builtin(position) Position : vec4<f32>,\n    @location(0) vColor : vec4<f32>,\n};\n\n@vertex\nfn vs_main(@location(0) pos: vec4<f32>, @location(1) color: vec4<f32>) -> Output {\n    var output: Output;\n    output.Position = pos;\n    output.vColor = color;\n    return output;\n}\n\n// fragment shader\n\n@fragment\nfn fs_main(@location(0) vColor: vec4<f32>) -> @location(0) vec4<f32> {\n    return vColor;\n}\n";class s{async initWebGPU(){if(!navigator.gpu)throw Error("Not Support WebGPU");let t=await navigator.gpu.requestAdapter({powerPreference:"high-performance"});if(!t)throw Error("No Adapter Found");let e=await t.requestDevice();this.ctx=this.canvas.getContext("webgpu");let r=navigator.gpu.getPreferredCanvasFormat?navigator.gpu.getPreferredCanvasFormat():this.ctx.getPreferredFormat(t);window.devicePixelRatio,this.canvas.width=this.divHost.clientWidth,this.canvas.height=this.divHost.clientHeight,this.ctx.configure({device:e,format:r,alphaMode:"opaque"}),this.size={width:this.canvas.width,height:this.canvas.height},this.device=e,this.format=r,this.initPipeline(this.device,this.format)}async initPipeline(t,e){arguments.length>2&&void 0!==arguments[2]&&arguments[2];let r=new Float32Array([-.5,-.5,.5,-.5,-.5,.5,-.5,.5,.5,-.5,.5,.5]),n=new Float32Array([1,0,0,0,1,0,1,1,0,1,1,0,0,1,0,0,0,1]),a=i(t,r),s=i(t,n),u=t.createRenderPipeline({layout:"auto",vertex:{module:t.createShaderModule({code:o}),entryPoint:"vs_main",buffers:[{arrayStride:8,attributes:[{shaderLocation:0,format:"float32x2",offset:0}]},{arrayStride:12,attributes:[{shaderLocation:1,format:"float32x3",offset:0}]}]},fragment:{module:t.createShaderModule({code:o}),entryPoint:"fs_main",targets:[{format:this.format}]},primitive:{topology:"triangle-list"}}),c=t.createCommandEncoder(),h=this.ctx.getCurrentTexture().createView(),l=c.beginRenderPass({colorAttachments:[{view:h,clearValue:{r:0,g:0,b:0,a:1},loadOp:"clear",storeOp:"store"}]});l.setPipeline(u),l.setVertexBuffer(0,a),l.setVertexBuffer(1,s),l.draw(6),l.end(),t.queue.submit([c.finish()])}destroy(){for(this.device.destroy();this.divHost.lastElementChild;)this.divHost.removeChild(this.divHost.lastElementChild)}constructor(t){this.divHost=document.getElementById(t),this.canvas=document.createElement("canvas"),this.divHost.appendChild(this.canvas),this.initWebGPU()}}}}]);