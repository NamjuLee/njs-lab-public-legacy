"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2731],{49443:function(e,t,i){var r,a;i.d(t,{Y:function(){return r}}),(a=r||(r={}))[a.KILOBYTES=1024]="KILOBYTES",a[a.MEGABYTES=1048576]="MEGABYTES",a[a.GIGABYTES=1073741824]="GIGABYTES"},2731:function(e,t,i){i.r(t),i.d(t,{default:function(){return tr}});var r=i(86641),a=i(23504),n=i(23427),s=i(94605),l=i(65223),o=i(28541),u=i(31124),h=i(20128),c=i(89312),f=i(61733);i(3457);var m=i(37180),d=i(28305),p=i(64186),y=i(37109),g=i(53002),x=i(14066),w=i(12261);i(55066);var b=i(24018),v=i(54748),I=i(70631),_=i(37647),R=i(62329),S=i(96922),T=i(78298),C=i(35047),k=i(27497),M=i(98179),F=i(65758),O=i(62903),P=i(54001),D=i(689),B=i(31534),N=i(96902),E=i(30002),Z=i(12949),J=i(56239),A=i(6470),z=i(356),L=i(92477),H=i(40845),W=i(70813),G=i(19979),q=i(9377),j=i(33876),U=i(36502);let $=0,V=class extends(0,B.v)(D.wq){constructor(){super(...arguments),this._tileFetchQueue=new G.e({concurrency:32,process:(e,t)=>this._fetchRawTile(e.pyramidLevel,e.row,e.col,{...e.options,signal:t})}),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){let e=(0,H.zD)();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e?.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:O.Z.create(),...e.ioConfig}}),e}get _isGlobalWrappableSource(){let{rasterInfo:e}=this,t=(0,H.ut)(e.spatialReference);return null!=t&&e.extent.width>=t/2}get _hasNoneOrGCSShiftTransform(){let{transform:e}=this.rasterInfo;return null==e||"gcs-shift"===e.type}set rasterJobHandler(e){this._set("rasterJobHandler",e),"Function"===this.datasetFormat&&this.primaryRasters?.rasters?.forEach(t=>t.rasterJobHandler=e)}get rasterId(){return this.url||"rasterId-"+$++}set url(e){this._set("url",(0,S.Nm)(e,l.Z.getLogger(this)))}async open(e){throw new s.Z("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,t,i,r={}){let a=r.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(e,t,i,a);return r={noClip:!0,...r},this.fetchPixels(n,a.size[0],a.size[1],r)}async identify(e,t={}){e=(0,f.TJ)(j.Z,e).clone().normalize();let{multidimensionalDefinition:i,timeExtent:r}=t,{rasterInfo:a}=this,{hasMultidimensionalTranspose:n,multidimensionalInfo:s}=a,{transposedVariableName:l}=t,o=null!=s&&n&&(null!=r||(0,Z.WU)(i));o&&!l&&(l=null!=i&&i.length>0?i[0].variableName??void 0:s.variables[0].name,t={...t,transposedVariableName:l});let{spatialReference:u,extent:h}=a,{datumTransformation:c}=t=this._getRequestOptionsWithSliceId(t),m=(0,H.nF)(e,u,c);if(!h.intersects(m))return{location:m,value:null};if(null!=a.transform){let e=a.transform.inverseTransform(m);if(!a.nativeExtent.intersects(e))return{location:e,value:null};m=e}let d=0,p=null!=l&&null!=s&&a.hasMultidimensionalTranspose;if("Function"===this.datasetFormat){let e;let r=this.primaryRasters.rasters[0];if(p)return r.identify(m,t);let{pixelSize:n}=a,s=3*n.x/2,l=3*n.y/2,o=new q.Z({xmin:m.x-s,xmax:m.x+s,ymin:m.y-l,ymax:m.y+l,spatialReference:u}),h={interpolation:"nearest",multidimensionalDefinition:i,sliceId:t.sliceId},{pixelBlock:c}=await r.fetchPixels(o,3,3,h),{pixelBlock:f}=await this.fetchPixels(o,3,3,h);if(null==c)return{location:m,value:null};let d=Math.floor(4.5),y=!c.mask||c.mask[d]?c.pixels.map(e=>e[d]):null;return null!=f&&(e=!f.mask||f.mask[d]?f.pixels.map(e=>e[d]):void 0),{location:m,value:y,processedValue:e,pyramidLevel:0}}if(!p){if(t.srcResolution)d=(0,H.kr)(t.srcResolution,a,this.ioConfig.sampling).pyramidLevel;else if(null==(d=await this.computeBestPyramidLevelForLocation(e,t)))return{location:m,value:null}}let y=this.identifyPixelLocation(m,d,null,p);if(null===y)return{location:m,value:null};let{row:g,col:x,rowOffset:w,colOffset:b,blockWidth:v}=y,I=l??t.sliceId,_=(0,J.Rq)(this.rasterId,I),R=`${d}/${g}/${x}`,S=(0,J.Qg)(_,null,R);null==S&&(S=this.fetchRawTile(d,g,x,t),(0,J.gX)(_,null,R,S));let T=await S;return T?.pixels?.length?this._processIdentifyResult(T,{srcLocation:m,position:w*v+b,pyramidLevel:d,useTransposedTile:!!p,requestSomeSlices:o,identifyOptions:t}):{location:m,value:null}}async fetchPixels(e,t,i,r={}){e=(0,H.Fi)(e);let{_hasNoneOrGCSShiftTransform:a}=this;if((r=this._getRequestOptionsWithSliceId(r)).requestRawData&&a)return this._fetchPixels(e,t,i,r);let n=(0,H.ut)(e.spatialReference),s=(0,H.Hq)(e);if(null==n||0===s||1===s&&this._isGlobalWrappableSource&&a)return this._fetchPixels(e,t,i,r);if(s>=3)return{extent:e,pixelBlock:null};let l=[],{xmin:o,xmax:u}=e,h=Math.round(n/(u-o)*t),c=h-Math.round((n/2-o)/(u-o)*t),f=0,m=[];for(let a=0;a<=s;a++){let d=new q.Z({xmin:0===a?o:-n/2,xmax:a===s?u-n*a:n/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),p=0===a?h-c:a===s?t-f:h;f+=p,m.push(p);let y=r.disableWrapAround&&a>0?null:this._fetchPixels(d,p,i,r);l.push(y)}let d=(await Promise.all(l)).map(e=>e?.pixelBlock),p=null,y={width:t,height:i};return p=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:d,srcMosaicSize:y,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:m},r)).pixelBlock:(0,L.us)(d,y,{blockWidths:m}),{extent:e,srcExtent:(0,H.tB)(e,this.rasterInfo.spatialReference,r.datumTransformation),pixelBlock:p}}async fetchRawPixels(e,t,i,r={}){t={x:Math.floor(t.x),y:Math.floor(t.y)};let a=await this._fetchRawTiles(e,t,i,r),{nativeExtent:n,nativePixelSize:s,storageInfo:l}=this.rasterInfo,o=2**e,u=s.x*o,h=s.y*o,c=new q.Z({xmin:n.xmin+u*t.x,xmax:n.xmin+u*(t.x+i.width-1),ymin:n.ymax-h*(t.y+i.height-1),ymax:n.ymax-h*t.y,spatialReference:n.spatialReference});if(!a)return{extent:c,srcExtent:c,pixelBlock:null};let{pixelBlocks:f,mosaicSize:m}=a;if(1===f.length&&null!=f[0]&&f[0].width===i.width&&f[0].height===i.height)return{extent:c,srcExtent:c,pixelBlock:a.pixelBlocks[0]};let d=e>0?l.pyramidBlockWidth:l.blockWidth,p=e>0?l.pyramidBlockHeight:l.blockHeight,y={x:t.x%d,y:t.y%p};return{extent:c,srcExtent:c,pixelBlock:this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:f,srcMosaicSize:m,destDimension:i,clipOffset:y,clipSize:i,coefs:null,sampleSpacing:null,interpolation:r.interpolation,alignmentInfo:null,blockWidths:null},r)).pixelBlock:(0,L.us)(f,m,{clipOffset:y,clipSize:i})}}fetchRawTile(e,t,i,r){throw new s.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return(0,H.tB)(this.rasterInfo.extent,e)}decodePixelBlock(e,t){return!this.rasterJobHandler||t.useCanvas?(0,z.J)(e,t):this.rasterJobHandler.decode({data:e,options:t})}async request(e,t,i=0){let{customFetchParameters:r}=this.ioConfig,{range:a,query:n,headers:s}=t;i=i??t.retryCount??this.ioConfig.retryCount;let l=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return await (0,v.Z)(e,{...t,query:{...n,...r},headers:{...s,...l}})}catch(r){if(i>0)return i--,this.request(e,t,i);throw r}}getSliceIndex(e){let{multidimensionalInfo:t}=this.rasterInfo;return null==t||null==e||0===e.length?null:(0,Z.gk)(e,t)}getTileExtentFromTileInfo(e,t,i,r){let a=r.lodAt(e);return this.getTileExtent({x:a.resolution,y:a.resolution},t,i,r.origin,r.spatialReference,r.size)}updateTileInfo(){let{storageInfo:e,spatialReference:t,extent:i,pixelSize:r}=this.rasterInfo,{pyramidResolutions:a}=e;if(!e.tileInfo){let n=[],s=e.maximumPyramidLevel||0,l=(r.x+r.y)/2,o=1/.0254*96*l;for(let e=0;e<=s&&(n.unshift(new N.Z({level:s-e,resolution:l,scale:o})),e!==s);e++)if(a){let t=(a[e].x+a[e].y)/2;o*=t/l,l=t}else l*=2,o*=2;let u=new j.Z({x:i.xmin,y:i.ymax,spatialReference:t});e.tileInfo=new O.Z({origin:u,size:[e.blockWidth,e.blockHeight],spatialReference:t,lods:n}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,t=512,i=512,r){let{width:a,height:n,nativeExtent:s,pixelSize:l,spatialReference:o}=e,u=new j.Z({x:s.xmin,y:s.ymax,spatialReference:o});null==r&&(r=Math.max(0,Math.round(Math.log(Math.max(a,n))/Math.LN2-8)));let h=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[l],r);e.storageInfo=new E.Z({blockWidth:t,blockHeight:i,pyramidBlockWidth:t,pyramidBlockHeight:i,origin:u,firstPyramidLevel:1,maximumPyramidLevel:r,blockBoundary:h})}async computeBestPyramidLevelForLocation(e,t={}){return 0}computeBlockBoundary(e,t,i,r,a,n=0,s=2){if(1===a.length&&n>0){let{x:e,y:t}=(a=[...a])[0];for(let i=0;i<n;i++)e*=s,t*=s,a.push({x:e,y:t})}let l=[],{x:o,y:u}=r;for(let r=0;r<a.length;r++){let{x:n,y:s}=a[r];l.push({minCol:Math.floor((e.xmin-o+.1*n)/t/n),maxCol:Math.floor((e.xmax-o-.1*n)/t/n),minRow:Math.floor((u-e.ymax+.1*s)/i/s),maxRow:Math.floor((u-e.ymin-.1*s)/i/s)})}return l}getPyramidPixelSize(e){let{nativePixelSize:t}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:r}=this.rasterInfo.storageInfo;if(0===e)return t;if(null!=i&&i.length)return i[e-1];let a=r**e;return{x:t.x*a,y:t.y*a}}identifyPixelLocation(e,t,i,r){let{spatialReference:a,nativeExtent:n,storageInfo:s}=this.rasterInfo,{maximumPyramidLevel:l,origin:o,transposeInfo:u}=s,h=r&&null!=u?u.tileSize[0]:s.blockWidth,c=r&&null!=u?u.tileSize[1]:s.blockHeight,f=(0,H.nF)(e,a,i);if(!n.intersects(f)||t<0||t>l)return null;let{x:m,y:d}=this.getPyramidPixelSize(t),p=(o.y-f.y)/d/c,y=(f.x-o.x)/m/h;return{pyramidLevel:t,row:Math.floor(p),col:Math.floor(y),rowOffset:Math.min(c-1,Math.floor((p-Math.floor(p))*c)),colOffset:Math.min(h-1,Math.floor((y-Math.floor(y))*h)),blockWidth:h,srcLocation:f}}getTileExtent(e,t,i,r,a,n){let[s,l]=n,o=r.x+i*s*e.x,u=o+s*e.x,h=r.y-t*l*e.y,c=h-l*e.y;return new q.Z({xmin:o,xmax:u,ymin:c,ymax:h,spatialReference:a})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,t,i){let r=this.rasterInfo.storageInfo.blockBoundary[e];return!r||r.maxRow<t||r.maxCol<i||r.minRow>t||r.minCol>i}updateImageSpaceRasterInfo(e){let{extent:t,pixelSize:i}=e;if(-.5===t.xmin&&.5===t.ymax&&1===i.x&&1===i.y&&null==e.transform)return;let{width:r,height:a}=e,n=U.Z.WebMercator;e.spatialReference=n,e.extent=e.nativeExtent=new q.Z({xmin:-.5,ymax:.5,xmax:r-.5,ymin:.5-a,spatialReference:n}),e.isPseudoSpatialReference=!0,e.transform=null,e.pixelSize=new j.Z({x:1,y:1,spatialReference:n});let{extent:s,storageInfo:l}=e;if(l){l.origin=new j.Z({x:s.xmin,y:s.ymax,spatialReference:n});let{pyramidResolutions:t,tileInfo:r}=l;if(t&&t.forEach(e=>{e.x/=i.x,e.y/=i.y}),r){r.origin=l.origin;let t=(e.nativePixelSize.x+e.nativePixelSize.y)/2;r.lods.forEach((e,i)=>{e.resolution=t*2**i,e.scale=96*e.resolution/.0254})}}}async _fetchPixels(e,t,i,r={}){let a,n=(0,H.Hq)(e);if(n>=2)return{extent:e,pixelBlock:null};let s=this._getSourceDataInfo(e,t,i,r),{pyramidLevel:l,srcResolution:o,srcExtent:u,srcWidth:h,srcHeight:c,ul:f}=s;if(0===h||0===c)return{extent:e,srcExtent:u,pixelBlock:null};let{rasterInfo:m}=this,d=m.transform,p="gcs-shift"===d?.type,y=null!=(0,H.ut)(e.spatialReference);!p&&y||(n=(0,H.Hq)(s.srcExtent,p));let g=await this._fetchRawTiles(l,f,{width:h,height:c,wrapCount:n},r);if(!g)return{extent:e,srcExtent:u,pixelBlock:null};let x=m.storageInfo,w=l>0?x.pyramidBlockWidth:x.blockWidth,b=l>0?x.pyramidBlockHeight:x.blockHeight,{x:v,y:I}=m.pixelSize;if(l>0){let{pyramidResolutions:e,pyramidScalingFactor:t}=x;if(null!=e&&e[l-1])({x:v,y:I}=e[l-1]);else{let e=t**l;v*=e,I*=e}}let _=m.spatialReference,R=new j.Z({x:v,y:I,spatialReference:_}),S=w===h&&b===c&&f.x%w==0&&f.y%b==0,T=new j.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),C=!e.spatialReference.equals(_),k=_.isGeographic?1e-9:1e-4,{datumTransformation:M}=r;if(!C&&S&&1===g.pixelBlocks.length&&w===t&&b===i&&Math.abs(o.x-T.x)<k&&Math.abs(o.y-T.y)<k)return{extent:e,srcExtent:u,srcTilePixelSize:R,pixelBlock:g.pixelBlocks[0]};let F=y&&null!=(0,H.ut)(u.spatialReference)&&this._hasNoneOrGCSShiftTransform,O=r.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");O&&!this.rasterJobHandler&&await (0,H.zD)();let P=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:g.extent,pixelSize:T.toJSON(),datumTransformation:M,rasterTransform:d,hasWrapAround:n>0||F,isAdaptive:!1!==this.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:O},r):(0,H.Qp)({projectedExtent:e,srcBufferExtent:g.extent,pixelSize:T,datumTransformation:M,rasterTransform:d,hasWrapAround:n>0||F,isAdaptive:!1,includeGCSGrid:O}),D=!r.requestRawData,B={rows:P.spacing[0],cols:P.spacing[1]},N=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(l,g.extent.xmin):void 0,{pixelBlocks:E,mosaicSize:Z,isPartiallyFilled:J}=g,A=null;if(this.rasterJobHandler){let e=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:E,srcMosaicSize:Z,destDimension:D?{width:t,height:i}:null,coefs:D?P.coefficients:null,sampleSpacing:D?B:null,projectDirections:O,gcsGrid:O?P.gcsGrid:null,isUV:"vector-uv"===this.rasterInfo.dataType,interpolation:r.interpolation,alignmentInfo:N,blockWidths:null},r);({pixelBlock:a,localNorthDirections:A}=e)}else{let e=(0,L.us)(E,Z,{alignmentInfo:N});a=D?(0,L.Uk)(e,{width:t,height:i},P.coefficients,B,r.interpolation):e,O&&P.gcsGrid&&(A=(0,L.Qh)({width:t,height:i},P.gcsGrid),a=(0,W.xQ)(a,this.rasterInfo.dataType,A))}return r.requestRawData||O?{extent:e,srcExtent:u,srcTilePixelSize:R,pixelBlock:a,transformGrid:P,localNorthDirections:A,isPartiallyFilled:J}:{extent:e,srcExtent:u,srcTilePixelSize:R,pixelBlock:a}}async _fetchRawTiles(e,t,i,r){let{origin:a,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:s,blockHeight:l}=this.getBlockWidthHeight(e),{x:o,y:u}=t,{width:h,height:c,wrapCount:f}=i,m=this._getRasterTileAlignmentInfo(e,0);r.buffer&&(o-=r.buffer.cols,u-=r.buffer.rows,h+=2*r.buffer.cols,c+=2*r.buffer.rows);let d=0,p=0,y=0;f&&null!=m&&({worldColumnCountFromOrigin:p,originColumnOffset:y,rightPadding:d}=m,p*m.blockWidth-d>=o+h&&(d=0));let g=Math.floor(o/s),x=Math.floor(u/l),w=Math.floor((o+h+d-1)/s),b=Math.floor((u+c+d-1)/l),v=n[e];if(!v)return null;let{minRow:I,minCol:_,maxCol:R,maxRow:S}=v;if(0===f&&(b<I||w<_||x>S||g>R))return null;let T=[],C=!1,k=null==this.ioConfig.allowPartialFill?r.allowPartialFill:this.ioConfig.allowPartialFill;for(let t=x;t<=b;t++)for(let i=g;i<=w;i++){let a=i;if(!r.disableWrapAround&&f&&null!=m&&p<=i&&(a=i-p-y),t>=I&&a>=_&&S>=t&&R>=a){let i=this._tileFetchQueue.push({pyramidLevel:e,row:t,col:a,options:r},{signal:r.signal});k?T.push(new Promise(e=>{i.then(t=>e(t)).catch(()=>{C=!0,e(null)})})):T.push(i)}else T.push(Promise.resolve(null))}if(0===T.length)return null;let M=await Promise.all(T),{spatialReference:F}=this.rasterInfo,{x:O,y:P}=this.getPyramidPixelSize(e);return{extent:new q.Z({xmin:a.x+g*s*O,xmax:a.x+(w+1)*s*O,ymin:a.y-(b+1)*l*P,ymax:a.y-x*l*P,spatialReference:F}),pixelBlocks:M,mosaicSize:{height:(b-x+1)*l,width:(w-g+1)*s},isPartiallyFilled:C}}_fetchRawTile(e,t,i,r){let a=this.rasterInfo.storageInfo.blockBoundary[e];if(!a)return Promise.resolve(null);let{minRow:n,minCol:s,maxCol:l,maxRow:o}=a;if(t<n||i<s||t>o||i>l)return Promise.resolve(null);let h=(0,J.Rq)(this.rasterId,r.sliceId),c=`${e}/${t}/${i}`,f=(0,J.Qg)(h,r.registryId,c);if(null==f){let a=new AbortController;f=this.fetchRawTile(e,t,i,{...r,signal:a.signal}),(0,J.gX)(h,r.registryId,c,f,a),f.catch(()=>(0,J.Gc)(h,r.registryId,c))}return r.signal&&(0,u.fu)(r,()=>{(0,J.OE)(h,r.registryId,c)}),f}_computeMagDirValues(e){let{bandCount:t,dataType:i}=this.rasterInfo;if(!(2===t&&"vector-magdir"===i||"vector-uv"===i)||2!==e?.length||!e[0]?.length)return null;let r=e[0].length;if("vector-magdir"===i){let t=e[1].map(e=>(e+360)%360);return[e[0],t]}let[a,n]=e,s=[],l=[];for(let e=0;e<r;e++){let[t,i]=(0,W.Tg)([a[e],n[e]]);s.push(t),l.push(i)}return[s,l]}_getRasterTileAlignmentInfo(e,t){return null==this._rasterTileAlignmentInfo&&(this._rasterTileAlignmentInfo=(0,H.P_)(this.rasterInfo)),null==this._rasterTileAlignmentInfo.pyramidsInfo?null:{startX:t,halfWorldWidth:this._rasterTileAlignmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlignmentInfo.hasGCSSShiftTransform,...this._rasterTileAlignmentInfo.pyramidsInfo[e]}}_getSourceDataInfo(e,t,i,r={}){let a={datumTransformation:r.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};r.srcResolution&&(a.srcResolution=r.srcResolution,this._updateSourceDataInfo(e,a));let n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:s,srcHeight:l,pyramidLevel:o}=a,u=s/t,h=l/i,c=o<n&&u*h>=16,f=o===n&&this._requireTooManySrcTiles(s,l,t,i);if(c||f||0===s||0===l){let s=new j.Z({x:(e.xmax-e.xmin)/t,y:(e.ymax-e.ymin)/i,spatialReference:e.spatialReference}),l=(0,H.VO)(s,this.rasterInfo.spatialReference,e,a.datumTransformation),f=!l||r.srcResolution&&l.x+l.y<r.srcResolution.x+r.srcResolution.y;if(c&&r.srcResolution&&f){let e=Math.round(Math.log(Math.max(u,h))/Math.LN2)-1;if(n-o+3>=e){let t=2**e;l={x:r.srcResolution.x*t,y:r.srcResolution.y*t}}}l&&(a.srcResolution=l,this._updateSourceDataInfo(e,a))}return this._requireTooManySrcTiles(a.srcWidth,a.srcHeight,t,i)&&(a.srcWidth=0,a.srcHeight=0),a}_requireTooManySrcTiles(e,t,i,r){let{tileInfo:a}=this.rasterInfo.storageInfo;return Math.ceil(e/a.size[0])*Math.ceil(t/a.size[1])>=256*Math.max(1,(i+r)/1024)||e/i>8||t/r>8}_updateSourceDataInfo(e,t){t.srcWidth=0,t.srcHeight=0;let{rasterInfo:i}=this,r=i.spatialReference,{srcResolution:a,datumTransformation:n}=t,{pyramidLevel:s,pyramidResolution:l,excessiveReading:o}=(0,H.kr)(a,i,this.ioConfig.sampling);if(o)return;let u=t.srcExtent||(0,H.tB)(e,r,n);if(null==u)return;let h=i.transform;h&&(u=h.inverseTransform(u)),t.srcExtent=u;let{x:c,y:f}=i.storageInfo.origin,m=Math.floor((u.xmin-c)/l.x+.1),d=Math.floor((f-u.ymax)/l.y+.1),p=Math.floor((u.xmax-c)/l.x-.1),y=Math.floor((f-u.ymin)/l.y-.1),g=u.width<.1*l.x?0:p-m+1,x=u.height<.1*l.y?0:y-d+1;t.pyramidLevel=s,t.pyramidResolution=l,t.srcWidth=g,t.srcHeight=x,t.ul={x:m,y:d}}_getRequestOptionsWithSliceId(e){return null!=this.rasterInfo.multidimensionalInfo&&null==e.sliceId&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}_processIdentifyResult(e,t){let i;let{srcLocation:r,position:a,pyramidLevel:n,useTransposedTile:s}=t,l=e.pixels[0].length/e.width/e.height;if(!(!e.mask||e.mask[a]))return{location:r,value:null};let{multidimensionalInfo:o}=this.rasterInfo;if(null==o||!s){let t=e.pixels.map(e=>e[a]),i={location:r,value:t,pyramidLevel:n},s=this._computeMagDirValues(t.map(e=>[e]));return s?.length&&(i.magdirValue=s.map(e=>e[0])),i}let u=e.pixels.map(e=>e.slice(a*l,a*l+l)),h=this._computeMagDirValues(u),{requestSomeSlices:c,identifyOptions:f}=t,m=(0,Z.MO)(o,f.transposedVariableName);if(c){let e=(0,Z.Ur)(m,f.multidimensionalDefinition,f.timeExtent);u=u.map(t=>e.map(e=>t[e])),h=h?.map(t=>e.map(e=>t[e])),m=e.map(e=>m[e])}let d=e.noDataValues||this.rasterInfo.noDataValue,p={pixels:u,pixelType:e.pixelType};return null!=d&&((0,A.Ao)(p,d),i=p.mask),{location:r,value:null,dataSeries:m.map((e,t)=>{let r={value:0===i?.[t]?null:u.map(e=>e[t]),multidimensionalDefinition:e.multidimensionalDefinition.map(e=>new C.Z({...e,isSlice:!0}))};return h?.length&&(r.magdirValue=[h[0][t],h[1][t]]),r}),pyramidLevel:n}}};(0,r._)([(0,c.Cb)()],V.prototype,"_rasterTileAlignmentInfo",void 0),(0,r._)([(0,c.Cb)()],V.prototype,"_tileFetchQueue",void 0),(0,r._)([(0,c.Cb)({readOnly:!0})],V.prototype,"_isGlobalWrappableSource",null),(0,r._)([(0,c.Cb)({readOnly:!0})],V.prototype,"_hasNoneOrGCSShiftTransform",null),(0,r._)([(0,c.Cb)()],V.prototype,"rasterJobHandler",null),(0,r._)([(0,c.Cb)({readOnly:!0})],V.prototype,"rasterId",null),(0,r._)([(0,c.Cb)(T.HQ)],V.prototype,"url",null),(0,r._)([(0,c.Cb)({type:String,json:{write:!0}})],V.prototype,"datasetName",void 0),(0,r._)([(0,c.Cb)({type:String,json:{write:!0}})],V.prototype,"datasetFormat",void 0),(0,r._)([(0,c.Cb)()],V.prototype,"hasUniqueSourceStorageInfo",void 0),(0,r._)([(0,c.Cb)()],V.prototype,"rasterInfo",void 0),(0,r._)([(0,c.Cb)()],V.prototype,"ioConfig",void 0),(0,r._)([(0,c.Cb)()],V.prototype,"sourceJSON",void 0);let Y=V=(0,r._)([(0,p.j)("esri.layers.support.rasterDatasets.BaseRaster")],V);var X=i(9266),K=i(53568);async function Q(e,t,r){if("extent"===r.type)return function(e,t,i){let{width:r,height:a}=e,n=new Uint8Array(r*a),s=t.width/r,l=t.height/a;if(i.width/s<.5||i.height/l<.5)return new K.Z({pixelType:e.pixelType,width:r,height:a,mask:n,pixels:[...e.pixels]});let{xmin:o,xmax:u,ymin:h,ymax:c}=t,{xmin:f,xmax:m,ymin:d,ymax:p}=i,y=Math.max(o,f),g=Math.min(u,m),x=Math.max(h,d),w=Math.min(c,p),b=.5*s,v=.5*l;if(g-y<b||w-x<v||g<o+b||y>u-b||x>c-v||w<h+v)return new K.Z({pixelType:e.pixelType,width:r,height:a,mask:n,pixels:[...e.pixels]});let I=Math.max(0,(y-o)/s),_=Math.min(r,Math.max(0,(g-o)/s)),R=Math.max(0,(c-w)/l),S=Math.min(a,Math.max(0,(c-x)/l)),T=Math.round(I),C=Math.round(_)-1,k=Math.round(R),M=Math.round(S)-1;if(T===C&&I%1>.5&&_%1<.5||k===M&&R%1>.5&&S%1<.5)return new K.Z({pixelType:e.pixelType,width:r,height:a,mask:n,pixels:[...e.pixels]});if(0===T&&0===k&&C===r&&M===a)return e;let F=e.mask;for(let e=k;e<=M;e++)for(let t=T;t<=C;t++){let i=e*r+t;n[i]=F?F[i]:255}return new K.Z({pixelType:e.pixelType,width:r,height:a,mask:n,pixels:[...e.pixels]})}(e,t,r);let{width:a,height:n}=e,s=new Uint8Array(a*n),{contains:l,intersects:o}=await Promise.all([i.e(58379),i.e(5275)]).then(i.bind(i,5275));return o(t,r)?"polyline"===r.type?function(e,t,i){let{width:r,height:a}=e,n=new Uint8Array(r*a),s=t.width/r,l=t.height/a,{xmin:o,ymax:u}=t,{paths:h}=i,c=e.mask;for(let e=0;e<h.length;e++){let t=h[e];for(let e=0;e<t.length-1;e++){let[i,h]=t[e],[f,m]=t[e+1],d=Math.floor((u-h)/l),p=Math.floor((u-m)/l);if(p<d){let e=d;d=p,p=e}d=Math.max(0,d),p=Math.min(a-1,p);let y=(f-i)/(m-h);for(let e=d;e<=p;e++){let t=e===d?Math.max(h,m):(a+1-e)*l,u=e===p?Math.min(h,m):t-l,g=m===h?Math.floor((i-o)/s):Math.floor((y*(t-h)+i-o)/s),x=m===h?Math.floor((f-o)/s):Math.floor((y*(u-h)+i-o)/s);if(x<g){let e=g;g=x,x=e}let w=e*r;g=Math.max(0,g),x=Math.min(r-1,x);for(let e=w+g;e<=w+x;e++)n[e]=c?c[e]:255}}}return new K.Z({pixelType:e.pixelType,width:r,height:a,mask:n,pixels:[...e.pixels]})}(e,t,r):l(r,t)?e:function(e,t,i){let r;if(!e)return e;let{width:a,height:n}=e,s=t.width/a,l=t.height/n,{xmin:o,ymax:u}=t;if("extent"===i.type){let e=(i.xmin-o)/s,t=(i.xmax-o)/s,a=(u-i.ymax)/l,n=(u-i.ymin)/l;r=[[[e,a],[e,n],[t,n],[t,a],[e,a]]]}else r=i.rings.map(e=>e.map(([e,t])=>[(e-o)/s,(u-t)/l]));let h=document.createElement("canvas");h.width=a,h.height=n;let c=h.getContext("2d");c.fillStyle="#f00",c.beginPath(),r.forEach(e=>{c.moveTo(e[0][0],e[0][1]);for(let t=0;t<e.length;t++)c.lineTo(e[t][0],e[t][1]);c.closePath()}),c.fill();let f=c.getImageData(0,0,a,n).data,m=e.mask,d=a*n,p=new Uint8Array(d);for(let e=0;e<d;e++)m&&!m[e]||(p[e]=f[4*e+3]>127?255:0);return new K.Z({pixelType:e.pixelType,width:a,height:n,mask:p,maskIsAlpha:!1,pixels:[...e.pixels]})}(e,t,r):new K.Z({pixelType:e.pixelType,width:a,height:n,mask:s,maskIsAlpha:!1,pixels:[...e.pixels]})}var ee=i(9158);let et=class extends Y{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._clippingGeometry=new Map}async open(e){await this.init();let{rasterFunction:t}=this;this.primaryRasters?.rasters?.length?t.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=t.getPrimaryRasters(),this.rasterJobHandler&&this.primaryRasters.rasters?.forEach(e=>e.rasterJobHandler=this.rasterJobHandler));let{rasters:i,rasterIds:r}=this.primaryRasters,a=i.map(t=>t.rasterInfo?void 0:t.open(e));await Promise.all(a);let n=i.map(({rasterInfo:e})=>e),l=t.bind({rasterInfos:n,rasterIds:r});if(t.rawSourceRasterInfos=n,!l.success||0===n.length)throw new s.Z("raster-function:open",`cannot bind the function: ${l.error??""}`);let o="Table"===t.functionName?t:t.functionArguments?.raster;"Table"===o?.functionName&&(t.rasterInfo.attributeTable=ee.Z.fromJSON(o.functionArguments.attributeTableAsRecordSet)),await this.syncJobHandler();let u=n[0];this.hasUniqueSourceStorageInfo=1===n.length||n.slice(1).every(e=>(function(e,t){let{storageInfo:i,pixelSize:r,spatialReference:a,extent:n}=e,{storageInfo:s,pixelSize:l,spatialReference:o,extent:u}=t;return r.x===l.x&&r.y===l.y&&a.equals(o)&&n.equals(u)&&i.blockHeight===s.blockHeight&&i.blockWidth===s.blockWidth&&i.maximumPyramidLevel===s.maximumPyramidLevel})(e,u)),this.set("sourceJSON",i[0].sourceJSON),this.set("rasterInfo",t.rasterInfo),await this._updateClipGeometry()}async syncJobHandler(){return this.rasterJobHandler?.updateRasterFunction(this.rasterFunction)}async fetchPixels(e,t,i,r={}){let a;let{rasters:n,rasterIds:s}=this.primaryRasters,l=!1,{interpolation:o}=r,u=this.rasterFunction.flatWebGLFunctionChain?.hasFocalFunction;!r.requestRawData&&u&&(l=1===n.length&&!r.skipRasterFunction,r={...r,interpolation:"bilinear",requestRawData:l});let h=n.map(a=>a.fetchPixels(e,t,i,r)),c=await Promise.all(h),f=c.map(e=>e.pixelBlock),m=l||r.requestRawData?c.map(e=>e.srcTilePixelSize):null;if(r.skipRasterFunction||f.every(e=>null==e))return c[0];let d=c.find(e=>null!=e.pixelBlock)?.extent??e,p=this.rasterJobHandler?await this.rasterJobHandler.process({extent:d,primaryPixelBlocks:f,primaryPixelSizes:m,primaryRasterIds:s}):this.rasterFunction.process({extent:d,primaryPixelBlocks:f,primaryPixelSizes:m,primaryRasterIds:s}),{transformGrid:y}=c[0];if(!l||null==p||null==y){let e=r.noClip?null:this.getClippingGeometry(d.spatialReference);return r.noClip||r.requestRawData||null==p||!e||(p=await Q(p,d,e)),{...c[0],pixelBlock:p}}let g={rows:y.spacing[0],cols:y.spacing[1]};a=this.rasterJobHandler?(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[p],srcMosaicSize:{width:p.width,height:p.height},destDimension:{width:t,height:i},coefs:y.coefficients,sampleSpacing:g,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:o,alignmentInfo:void 0,blockWidths:null},r)).pixelBlock:(0,L.Uk)(p,{width:t,height:i},y.coefficients,g,o);let x=r.noClip?null:this.getClippingGeometry(e.spatialReference);return r.noClip||r.requestRawData||null==a||null==x||(a=await Q(a,e,x)),{extent:e,srcExtent:c[0].srcExtent,pixelBlock:a}}getClippingGeometry(e){let t=this._clippingGeometry.get("0");if(!e||!t)return t;let i=String(e.wkid??e.wkt??e.wkt2),r=this._clippingGeometry.get(i);return null!=r||(r=e.equals(t.spatialReference)?t:(0,H.Wt)(t,e),this._clippingGeometry.set(i,r)),r}async _updateClipGeometry(){let e=this.rasterFunction.getClippingGeometries()[0],t=e?.clippingGeometry;if(t&&"inside"===e.clippingType){let{extent:e}=this.rasterInfo,{difference:r,densify:a}=await Promise.all([i.e(58379),i.e(5275)]).then(i.bind(i,5275)),n=a(P.Z.fromExtent(e),2*(e.width+e.height)/40);t=r(n=(0,H.Wt)(n,t.spatialReference),t)}this._clippingGeometry.clear(),t&&this._clippingGeometry.set("0",t)}};(0,r._)([(0,c.Cb)({type:String,json:{write:!0}})],et.prototype,"datasetFormat",void 0),(0,r._)([(0,c.Cb)()],et.prototype,"tileType",void 0),(0,r._)([(0,c.Cb)()],et.prototype,"rasterFunction",void 0),(0,r._)([(0,c.Cb)()],et.prototype,"primaryRasters",void 0);let ei=et=(0,r._)([(0,p.j)("esri.layers.support.rasterDatasets.FunctionRaster")],et);var er=i(44159),ea=i(54292),en=i(51881),es=i(86448),el=i(55961),eo=i(24738);let eu=e=>{let t=class extends e{constructor(...e){super(...e),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster="Function"===e[0]?.raster?.datasetFormat}get fullExtent(){return this.serviceRasterInfo?.extent}set multidimensionalDefinition(e){this._set("multidimensionalDefinition",e),this.updateRenderer()}set rasterFunction(e){"none"===e?.functionName?.toLowerCase()&&(e=void 0),this._set("rasterFunction",e),this.updateRasterFunction()}get rasterInfo(){return(0,I.Mr)(l.Z.getLogger(this),"rasterInfo",{replacement:"serviceRasterInfo",version:"4.29",warnOnce:!0}),this._get("serviceRasterInfo")}set url(e){this._set("url",(0,S.Nm)(e,l.Z.getLogger(this)))}set renderer(e){null==e&&null==this.rasterFunction?this._configDefaultRenderer("override"):(this._set("renderer",e),this.updateRenderer())}readRenderer(e,t,i){let r=t?.layerDefinition?.drawingInfo?.renderer;return(0,b.ij)(r,i)||void 0}async convertVectorFieldData(e,t){let{serviceRasterInfo:i}=this;if(null==e||!i)return null;let r=this._rasterJobHandler.instance,a=i.dataType;return r?r.convertVectorFieldData({pixelBlock:e,dataType:a},t):(0,W.KC)(e,a)}async computeStatisticsHistograms(e,t){await this.load(t),e=(0,f.TJ)(el.Z,e).clone();let{serviceRasterInfo:i}=this;if(null==i)throw new s.Z("imagery-tile-mixin:compute-statistics-histograms","serviceRasterInfo must be specified");let{geometry:r}=e;if(null==r)throw new s.Z("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let a=r,{spatialReference:n}=i;r.spatialReference.equals(n)||(await (0,H.zD)(),a="extent"===r.type?(0,H.tB)(r,n):(0,H.Wt)(r,n));let l=e.pixelSize??new j.Z({x:i.pixelSize.x,y:i.pixelSize.y,spatialReference:n}),{extent:o,width:u,height:h}=function(e,t,i,r=!0){let a,n,s;let{spatialReference:l}=e,{x:o,y:u}=function(e,t){if(e.spatialReference.equals(t))return e;let i=(0,X.c9)(e.spatialReference),r=(0,X.c9)(t);if(i===r)return e;let a=i/r;return{x:e.x*a,y:e.y*a}}(i,l),{xmin:h,xmax:c,ymax:f,ymin:m}="extent"===t.type?t:t.extent,{xmin:d,ymax:p}=e.extent;return r?(h=d+(h>d?o*Math.round((h-d)/o):0),f=p-(f<p?u*Math.round((p-f)/u):0),c=d+(c>d?o*Math.round((c-d)/o):0),m=p-(m<p?u*Math.round((p-m)/u):0),n=Math.round((a=new q.Z({xmin:h,ymax:f,xmax:c,ymin:m,spatialReference:l})).width/o),s=Math.round(a.height/u)):(n=Math.floor((c-h)/o+.8),s=Math.floor((f-m)/u+.8),h=d+(h>d?o*Math.floor((h-d)/o+.1):0),f=p-(f<p?u*Math.floor((p-f)/u+.1):0),c=h+n*o,m=f-s*u,a=new q.Z({xmin:h,ymax:f,xmax:c,ymin:m,spatialReference:l})),{extent:a,width:n,height:s}}(i,a,l),c=await this.fetchPixels(o,u,h,{...t,interpolation:"nearest"});if(null==c.pixelBlock)throw new s.Z("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");let m=await Q(c.pixelBlock,o,a),d=this._rasterJobHandler.instance;return d?d.computeStatisticsHistograms({pixelBlock:m},t):(0,ea.js)(m)}async createFlowMesh(e,t){let i=this._rasterJobHandler.instance;return i?i.createFlowMesh(e,t):(0,eo.GE)(e.meshType,e.simulationSettings,e.flowData,null!=t.signal?t.signal:(new AbortController).signal)}normalizeRasterFetchOptions(e){let{multidimensionalInfo:t}=this.serviceRasterInfo??{};if(null==t)return e;let i=e.multidimensionalDefinition||this.multidimensionalDefinition;i?.length||(i=(0,Z.Tj)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));let r=e.timeExtent||this.timeExtent;if(null!=i&&null!=r&&(null!=r.start||null!=r.end)){i=i.map(e=>e.clone());let a=t.variables.find(({name:e})=>e===i[0].variableName)?.dimensions?.find(({name:e})=>"StdTime"===e),n=i.find(({dimensionName:e})=>"StdTime"===e);if(!a||!n)return{...e,multidimensionalDefinition:null};let{start:s,end:l}=r,o=null==s?null:s.getTime(),u=null==l?null:l.getTime(),h=o??u,c=u??o;if(null!=a.values){let e=a.values.filter(e=>{if(Array.isArray(e)){if(h===c)return e[0]<=h&&e[1]>=h;let t=e[0]<=h&&e[1]>h||e[0]<c&&e[1]>=c,i=e[0]>=h&&e[1]<=c||e[0]<h&&e[1]>c;return t||i}return h===c?e===h:e>=h&&e<=c});if(e.length){let t=e.sort((e,t)=>{let i=Array.isArray(e)?e[0]:e,r=Array.isArray(e)?e[1]:e,a=Array.isArray(t)?t[0]:t,n=Array.isArray(t)?t[1]:t;return h===c?i-a:Math.abs(r-c)-Math.abs(n-c)})[0];n.values=[t]}else i=null}else if(a.hasRegularIntervals&&a.extent){let[e,t]=a.extent;h>t||c<e?i=null:n.values=h===c?[h]:[Math.max(e,h),Math.min(t,c)]}}return null!=i&&(0,Z.nb)(i,this.multidimensionalSubset)?{...e,multidimensionalDefinition:null}:{...e,multidimensionalDefinition:i}}async updateRasterFunction(){if(!this.loaded||"imagery-tile"!==this.type||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&"Function"===this.raster.datasetFormat){let e=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&e&&this._set("rasterFunction",M.Z.fromJSON(e)),void(this._cachedRasterFunctionJson=this.rasterFunction?.toJSON())}let e,t=this.raster,i=!1;"Function"===t.datasetFormat?(t=(e=t.primaryRasters.rasters)[0],i=!0):e=[t];let{rasterFunction:r}=this;if(r){let i={raster:t};e.length>1&&e.forEach(e=>i[e.url]=e);let a=new ei({rasterFunction:(0,er.Ue)(r.functionDefinition?.toJSON()??r.toJSON(),i)});a.rasterJobHandler=this._rasterJobHandler.instance,await a.open(),this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this.raster=a}else this.raster=t,this._cachedRasterFunctionJson=null,await t.when();if(this._cachedRendererJson=null,!i&&!r)return;let{bandIds:a}=this,{bandCount:n}=this.raster.rasterInfo,s=a?.length?a.some(e=>e>=n):n>=3;a&&(s||this.renderer&&"raster-stretch"!==this.renderer.type)&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){let{loaded:e,symbolizer:t}=this;if(!e||!t||!this.renderer)return;let{rasterInfo:i}=this.raster,r=(0,Z.N3)(i,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),a=r?.name,n=(0,en.ol)({...this.renderer.toJSON(),variableName:a});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(n))return;let s=this._rasterJobHandler.instance;s&&(t.rasterInfo=(0,en.FI)(i,a),t.rendererJSON=n,t.bind(),await s.updateSymbolizer(t),this._cachedRendererJson=n)}async applyRenderer(e,t){let i=e?.pixelBlock;if(!(null!=i&&i.pixels&&i.pixels.length>0))return null;await this.updateRenderer();let r=this._rasterJobHandler.instance,a=this.bandIds??[];return r?await r.symbolize({...e,simpleStretchParams:t,bandIds:a}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:a})}getTileUrl(e,t,i){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${i}`:""}getCompatibleTileInfo(e,t,i=!1){if(!this.loaded||null==t)return null;if(i&&e.equals(this.spatialReference))return this.tileInfo;let r=(0,R.C5)(e);return O.Z.create({size:256,spatialReference:e,origin:r?{x:r.origin[0],y:r.origin[1]}:{x:t.xmin,y:t.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent?.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}async fetchTile(e,t,r,a={}){if(i(this),a.requestAsImageElement){let i=this.getTileUrl(e,t,r);return(0,v.Z)(i,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:a.signal}).then(e=>e.data)}let{serviceRasterInfo:n}=this;if(null!=n.multidimensionalInfo&&null==(a=this.normalizeRasterFetchOptions(a)).multidimensionalDefinition){let i=a.tileInfo||n.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,r,i),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),"raster-shaded-relief"===this.renderer?.type&&(a={...a,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,r,a)}async fetchPixels(e,t,i,r={}){return null!=this.serviceRasterInfo.multidimensionalInfo&&null==(r=this.normalizeRasterFetchOptions(r)).multidimensionalDefinition?{extent:e,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),t=Math.round(t),i=Math.round(i),this.raster.fetchPixels(e,t,i,r))}async identify(e,t={}){await this.load();let{raster:i,serviceRasterInfo:r}=this;if(null!=r?.multidimensionalInfo&&!(r.hasMultidimensionalTranspose&&((0,Z.WU)(t.multidimensionalDefinition)||t.transposedVariableName||t.timeExtent))&&null==(t=this.normalizeRasterFetchOptions(t)).multidimensionalDefinition)return{location:e,value:null};let a=this.multidimensionalSubset?.areaOfInterest;if(a&&!a.contains(e))throw new s.Z("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return i.identify(e,t)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){let e=this.serviceRasterInfo?.multidimensionalInfo;if(null==e||"standard-time"!==this.serviceRasterInfo?.dataType)return!1;let t=this.multidimensionalDefinition,i=t?.[0]?.variableName;return e.variables.some(e=>e.name===i&&(!t?.[0].dimensionName||e.dimensions.some(e=>"StdTime"===e.name)))}getStandardTimeValue(e){return new Date(24*(e-25569)*36e5).toString()}getMultidimensionalSubsetVariables(e){let t=e??this.serviceRasterInfo?.multidimensionalInfo;return(0,Z.jj)(this.multidimensionalSubset,t)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=(0,Z.Tj)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&"Function"===this.raster.datasetFormat&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;let e=new F.Z;return this._rasterJobHandler.connectionPromise=e.initialize().then(async()=>{i(this),this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,"Function"===this.raster.datasetFormat&&this.raster.syncJobHandler(),this.rasterFunction&&await this.updateRasterFunction().catch(()=>{}),this.renderer&&this.updateRenderer()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(null==this.interpolation){i(this);let{raster:e}=this,t=(0,en.In)(e.rasterInfo,e.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",t)}}_configDefaultRenderer(e="no"){i(this);let{rasterInfo:t}=this.raster;!this.bandIds&&t.bandCount>1&&(this.bandIds=(0,en.YD)(t));let r=(0,Z.N3)(t,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),a=r?.name,n=(0,en.Ko)(this.raster);if(!this.renderer||"override"===e){let e=(0,en.Ob)(t,{bandIds:this.bandIds,variableName:a,rasterFunctionColorRamp:n}),i=t.statistics,r=i&&i.length>0?i[0]:null,s=r?.max??0,l=r?.min??0;"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===e.type&&(s>1e24||l<-1e24)&&(e.dynamicRangeAdjustment=!0,e.statistics=null,"none"===e.stretchType&&(e.stretchType="min-max")),this.renderer=e}let s=(0,en.ol)({...this.renderer.toJSON(),variableName:a}),o=(0,en.FI)(t,a);this.symbolizer?(this.symbolizer.rendererJSON=s,this.symbolizer.rasterInfo=o):this.symbolizer=new es.Z({rendererJSON:s,rasterInfo:o});let u=this.symbolizer.bind();if(u.success){if("auto"===e){let{colormap:e}=this.raster.rasterInfo,t=this.renderer;if(null!=e&&"raster-colormap"===t.type)JSON.stringify((0,en.Ob)(this.raster.rasterInfo))!==JSON.stringify(t)&&this._configDefaultRenderer("override");else if("raster-stretch"===t.type){let e=this.bandIds?.length,i=t.statistics?.length;!t.dynamicRangeAdjustment&&i&&e&&i!==e&&this._configDefaultRenderer("override")}}}else l.Z.getLogger(this).warn("imagery-tile-mixin",u.error||"The given renderer is not supported by the layer."),"auto"===e&&this._configDefaultRenderer("override")}};function i(e){if(!e.raster||!e.serviceRasterInfo)throw new s.Z("imagery-tile","no raster")}return(0,r._)([(0,c.Cb)({clonable:!1})],t.prototype,"_cachedRendererJson",void 0),(0,r._)([(0,c.Cb)({clonable:!1})],t.prototype,"_cachedRasterFunctionJson",void 0),(0,r._)([(0,c.Cb)({clonable:!1})],t.prototype,"_compatibleFullExtent",void 0),(0,r._)([(0,c.Cb)({clonable:!1})],t.prototype,"_isConstructedFromFunctionRaster",void 0),(0,r._)([(0,c.Cb)({clonable:!1})],t.prototype,"_rasterJobHandler",void 0),(0,r._)([(0,c.Cb)()],t.prototype,"bandIds",void 0),(0,r._)([(0,c.Cb)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],t.prototype,"copyright",void 0),(0,r._)([(0,c.Cb)({json:{read:!1}})],t.prototype,"fullExtent",null),(0,r._)([(0,c.Cb)()],t.prototype,"interpolation",void 0),(0,r._)([(0,c.Cb)()],t.prototype,"ioConfig",void 0),(0,r._)([(0,c.Cb)({type:[C.Z],json:{write:!0}})],t.prototype,"multidimensionalDefinition",null),(0,r._)([(0,c.Cb)({type:k.Z,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),(0,r._)([(0,c.Cb)()],t.prototype,"raster",void 0),(0,r._)([(0,c.Cb)({type:M.Z,json:{name:"renderingRule",write:!0}})],t.prototype,"rasterFunction",null),(0,r._)([(0,c.Cb)({readOnly:!0})],t.prototype,"rasterInfo",null),(0,r._)([(0,c.Cb)()],t.prototype,"serviceRasterInfo",void 0),(0,r._)([(0,c.Cb)()],t.prototype,"sourceJSON",void 0),(0,r._)([(0,c.Cb)({readOnly:!0,type:U.Z,json:{read:!1}})],t.prototype,"spatialReference",void 0),(0,r._)([(0,c.Cb)({type:O.Z})],t.prototype,"tileInfo",void 0),(0,r._)([(0,c.Cb)(T.HQ)],t.prototype,"url",null),(0,r._)([(0,c.Cb)({types:b.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){let e="raster-stretch"===this.renderer?.type&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!e}}},origins:{"web-scene":{types:b.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],t.prototype,"renderer",null),(0,r._)([(0,_.r)("renderer")],t.prototype,"readRenderer",null),(0,r._)([(0,c.Cb)({clonable:!1})],t.prototype,"symbolizer",void 0),t=(0,r._)([(0,p.j)("esri.layers.mixins.ImageryTileMixin")],t)};var eh=i(59727),ec=i(15346),ef=i(3482),em=i(89973),ed=i(81124),ep=i(40041),ey=i(91089),eg=i(87585),ex=i(61210);function ew(e){return["x","e","east","long","longitude"].includes(e.toLowerCase())}function eb(e){return["y","n","west","lat","latitude"].includes(e.toLowerCase())}function ev(e){let t=(0,ex.G3)();return t?e[t]??Object.values(e)[0]:Object.values(e)[0]}function eI(){return Math.round(255*Math.random())}var e_=i(22147);let eR=class extends Y{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}async open(e){await this.init();let t=this.source,{pixelBlocks:i,attributeTable:r,statistics:a,histograms:n,name:s,nativeExtent:l,transform:o}=t,u=i[0],{width:h,height:c,pixelType:f}=u,m=t.extent??new q.Z({xmin:-.5,ymin:.5,xmax:h-.5,ymax:c-.5,spatialReference:new U.Z({wkid:3857})}),d=t.isPseudoSpatialReference??!t.extent,p={x:m.width/h,y:m.height/c},y={...t.keyProperties};r&&(y.DataType="Thematic");let g=new e_.Z({width:h,height:c,pixelType:f,extent:m,nativeExtent:l,attributeTable:r,transform:o,pixelSize:p,spatialReference:m.spatialReference,bandCount:u.pixels.length,keyProperties:y,multidimensionalInfo:t.multidimensionalInfo,statistics:a,isPseudoSpatialReference:d,histograms:n});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(g),this.createRemoteDatasetStorageInfo(g,512,512),this._set("rasterInfo",g),this.updateTileInfo(),g.multidimensionalInfo?await this._buildMDimStats(t.pixelBlocks,g.multidimensionalInfo):await this._buildInMemoryRaster(u,{width:512,height:512},e),g.multidimensionalInfo||(this.source=null),this.datasetName=s}fetchRawTile(e,t,i,r={}){if(!this._pixelBlockTiles){let{rasterInfo:a}=this,[n,s]=a.storageInfo.tileInfo.size,{sliceId:l}=r,{pixelBlocks:o}=this.source,u={pixelBlock:null==l?o[0]:o[l],useBilinear:"thematic"!==a.dataType,tileSize:{width:n,height:s},level:e,row:t,col:i};return Promise.resolve(this.rasterJobHandler?this.rasterJobHandler.clipTile(u,r):(0,L.Uu)(u))}return Promise.resolve(this._pixelBlockTiles.get(`${e}/${t}/${i}`))}async _buildInMemoryRaster(e,t,i){let{rasterInfo:r}=this,a=r.storageInfo.maximumPyramidLevel??0,n="thematic"!==r.dataType,l=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:t,maximumPyramidLevel:a,useBilinear:n},i):Promise.resolve((0,L.Vl)(e,t,a,n)),o=null!=r.statistics,h=null!=r.histograms,c=this.ioConfig.skipStatistics||o?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},i):Promise.resolve((0,ea.Hv)(e)),f=await (0,u.as)([l,c]);if(!f[0].value&&f[1].value)throw new s.Z("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=f[0].value,o||(r.statistics=f[1].value?.statistics),h||(r.histograms=f[1].value?.histograms)}async _buildMDimStats(e,t,i){for(let r=0;r<t.variables.length;r++){let a=t.variables[r];if(a.statistics)continue;let n=a.dimensions.map(e=>new C.Z({variableName:a.name,dimensionName:e.name,values:[e.values?.[0]??e.extent?.[0]],isSlice:!0})),s=(0,Z.gk)(n,t),l=null==s?null:e[s];if(null==l)continue;let o=this.rasterJobHandler?await this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:l},i):(0,ea.js)(l);a.statistics=o.statistics,a.histograms||(a.histograms=o.histograms)}}};(0,r._)([(0,c.Cb)({type:String,json:{write:!0}})],eR.prototype,"datasetFormat",void 0),(0,r._)([(0,c.Cb)()],eR.prototype,"source",void 0),(0,r._)([(0,c.Cb)()],eR.prototype,"url",null);let eS=eR=(0,r._)([(0,p.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],eR),eT=class extends Y{constructor(){super(...arguments),this.datasetFormat="CovJSON"}async open(e){await this.init();let{extent:t,pixelBlocks:i,multidimensionalInfo:r,attributeTable:a,bandNames:n}=await this._fetchData(e),{statistics:s,histograms:l}=(0,ea.js)(i[0]),o=n?.map(e=>({BandName:e})),u=new eS({source:{extent:t,pixelBlocks:i,attributeTable:a?ee.Z.fromJSON(a):null,multidimensionalInfo:r,statistics:s,histograms:l,keyProperties:{DataType:a?"Thematic":r?"Scientific":"Generic",BandProperties:o},isPseudoSpatialReference:!1}});await u.open(),this._inMemoryRaster=u;let h=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",h.slice(0,h.indexOf("."))),this._set("rasterInfo",u.rasterInfo)}fetchRawTile(e,t,i,r={}){return this._inMemoryRaster.fetchRawTile(e,t,i,r)}async _fetchData(e){let t=this.source??(await this.request(this.url,{signal:e?.signal})).data,i="imagery-tile-layer:open-coverage-json";if("coverage"!==t.type?.toLowerCase()||"grid"!==t.domain?.domainType?.toLowerCase())throw new s.Z(i,"Only coverage with Grid domain type is supported");if(!t.ranges)throw new s.Z(i,"Missing ranges in the grid coverage data");if(!t.domain.referencing?.length)throw new s.Z(i,"Missing domain referencing in the grid coverage data");let r=Object.values(t.ranges);for(let e=0;e<r.length;e++){let{axisNames:t,shape:a,type:n,values:l}=r[e];if(!("ndarray"===n.toLowerCase()&&l?.length&&t?.length&&a?.length))throw new s.Z(i,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!(ew(t[t.length-1])&&eb(t[t.length-2])))throw new s.Z(i,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return function(e){let{width:t,height:i,extent:r,dimensions:a}=function(e){let{axes:t}=e.domain,i=Object.keys(t),r=[],a=[],n=-1,s=-1,l=[];for(let e=0;e<i.length;e++){let o=i[e];ew(o)?n=e:eb(o)&&(s=e);let u=t[o],h=[];if("values"in u){u.values.forEach(e=>h.push("string"==typeof e?new Date(e).getTime():e));let e=h[1]-h[0];r.push([h[0]-.5*e,h[h.length-1]+.5*e]),a.push(e)}else{let{start:e,stop:t,num:i}=u,n=(t-e)/(i-1);r.push([e-.5*n,t+.5*n]),a.push(n);for(let t=0;t<i;t++)h.push(e+n*t)}l.push({name:o,values:h,extent:[h[0],h[h.length-1]]})}n>-1&&-1===s?s=0===n?1:0:s>-1&&-1===n?n=0===s?1:0:-1===s&&-1===n&&(n=0,s=1),l=l.filter((e,t)=>!(t===n||t===s));let{referencing:o}=e.domain,u=o.find(e=>e.coordinates.includes(i[n])).system.id,h=u?.slice(u.lastIndexOf("/")+1),c=null==h||"CRS84"===h?4326:Number(h),f=new U.Z({wkid:c}),[m,d]=r[n],[p,y]=r[s],g=new q.Z({xmin:m,xmax:d,ymin:p,ymax:y,spatialReference:f});return{width:Math.round(g.width/a[n]),height:Math.round(g.height/a[s]),extent:g,dimensions:l}}(e),{ranges:n}=e,s=Object.keys(n).sort((e,t)=>e<t?-1:1),l=[];for(let e=0;e<s.length;e++){let t=s[e];a?.length&&l.push({name:t,dimensions:a})}let o=function(e){let t={},{parameters:i}=e;if(!i)return t;for(let[e,r]of Object.entries(i)){let{type:i,description:a,unit:n,categoryEncoding:s,observedProperty:l}=r;if("Parameter"===i&&(t[e]={},a&&(t[e].description=ev(a)),n&&(t[e].unit=n.label?ev(n.label):null,t[e].symbol=n.symbol?.value),s)){let i=Object.entries(s).map((e,t)=>({OID:t,Value:Number(e[1]),ClassName:e[0].slice(e[0].lastIndexOf("/")+1),Count:1})),r=!1;l?.categories?.length&&(l.categories.forEach(e=>{if(!e.id)return;let t=e.id.slice(e.id.lastIndexOf("/")+1),a=i.find(e=>e.ClassName===t);if(!a)return;let n=e.label?ev(e.label):null;if(a.Label=n,e.preferredColor){let t=eg.Z.fromHex(e.preferredColor);t&&(r=!0,a.Red=t.r,a.Green=t.g,a.Blue=t.b)}}),r&&i.forEach(e=>{null==e.Red&&(e.Red=eI(),e.Green=eI(),e.Blue=eI())}));let a={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:i.map(e=>({attributes:e}))};r&&a.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),t[e].attributeTable=a}}return t}(e);l.forEach(e=>o[e.name]&&Object.assign(e,o[e.name]));let u=l.length?{variables:l}:void 0,h=[];for(let e=0;e<s.length;e++){let{values:r,dataType:l,axisNames:o,shape:u}=n[s[e]],c=u.length>2?e*u.slice(0,-2).reduce((e,t)=>e*t):0,f=o.slice(0,-2),m=u.slice(0,-2),d="float"===l?"f32":function(e){let t=Number.MAX_VALUE,i=-Number.MAX_VALUE;for(let r=0;r<e.length;r++){let a=e[r];null!=a&&(a<t&&(t=a),a>i&&(i=a))}return(0,A.JQ)(t,i)}(r),p=t*i,y=r.length/p;for(let n=0;n<y;n++){let s=K.Z.createEmptyBand(d,p),l=new Uint8Array(p).fill(255),o=!1,u=n*p;for(let e=0;e<p;e++){let t=r[u+e];null==t?(l[e]=0,o=!0):s[e]=t}if(0===e||a?.length){let e=new K.Z({width:t,height:i,mask:o?l:null,pixels:[s],pixelType:d});(e.updateStatistics(),a?.length)?h[function(e,t,i){var r;let a=e.map((e,i)=>({name:e,count:t[i]})).sort((e,t)=>e.name>t.name?-1:1),n=(r=1,e=>r*=e.count),s=[...a.slice(1),{name:"",count:1}].reverse().map(n).reverse(),l=0;for(let r=e.length-1;r>=0;r--)l+=s[a.findIndex(({name:t})=>t===e[r])]*(i%t[r]),i=Math.floor(i/t[r]);return l}(f,m,n)+c]=e:h.push(e)}else{let e=h[n];e.pixels.push(s),o?e.mask&&(e.mask=K.Z.combineBandMasks([e.mask,l])):e.mask=o?l:null}}}return{extent:r,pixelBlocks:h,multidimensionalInfo:u,attributeTable:Object.values(o).find(e=>e.attributeTable)?.attributeTable,bandNames:u?void 0:s}}(t)}};(0,r._)([(0,c.Cb)({type:String,json:{write:!0}})],eT.prototype,"datasetFormat",void 0),(0,r._)([(0,c.Cb)({constructOnly:!0})],eT.prototype,"source",void 0);let eC=eT=(0,r._)([(0,p.j)("esri.layers.support.rasterDatasets.CovJSONRaster")],eT);var ek=i(78628);function eM(e,t){if(!e||!t)return[];let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";let r=[];if(t){let a=eM(e,i);for(let e=0;e<a.length;e++)eM(a[e],t).forEach(e=>r.push(e));return r}let a=e.getElementsByTagNameNS("*",i);if(!a||0===a.length)return[];for(let e=0;e<a.length;e++)r.push(a[e]||a.item(e));return r}function eF(e,t){if(!e||!t)return null;let i=t;t.includes("/")?(i=t.slice(0,t.indexOf("/")),t=t.slice(t.indexOf("/")+1)):t="";let r=eM(e,i);return r.length>0?t?eF(r[0],t):r[0]:null}function eO(e,t=null){let i;let r=t?eF(e,t):e;return r&&(i=r.textContent||r.nodeValue)?i.trim():null}function eP(e,t){return(function(e,t){let i;let r=eM(e,t),a=[];for(let e=0;e<r.length;e++)(i=r[e].textContent||r[e].nodeValue)&&""!==(i=i.trim())&&a.push(i);return a})(e,t).map(e=>Number(e))}function eD(e,t){return Number(eO(e,t))}function eB(e,t){let i=e?.nodeName?.toLowerCase(),r=t.toLowerCase();return i.slice(i.lastIndexOf(":")+1)===r}var eN=i(3280);function eE(e,t){if(!e||!t)return null;let i=[];for(let r=0;r<e.length;r++)i.push(e[r]),i.push(t[r]);return i}function eZ(e){if(!e)return null;let t=Number(e);if(!isNaN(t)&&0!==t)return new U.Z({wkid:t});if(e=String(e).trim(),(0,R.xl)(e))return new U.Z({wkt2:e});let i=e.toUpperCase();if(i.startsWith("COMPD_CS")){if(!i.includes("VERTCS")||!i.includes("GEOGCS")&&!i.startsWith("PROJCS"))return null;let r=i.indexOf("VERTCS"),a=i.indexOf("PROJCS"),n=a>-1?a:i.indexOf("GEOGCS");if(-1===n)return null;let s=e.slice(n,e.lastIndexOf("]",r)+1).trim(),l=e.slice(r,e.lastIndexOf("]")).trim();t=eJ(s);let o=new U.Z(t?{wkid:t}:{wkt:s}),u=eJ(l);return u&&(o.vcsWkid=u),o}return i.startsWith("GEOGCS")||i.startsWith("PROJCS")?(t=eJ(e),new U.Z(0!==t?{wkid:t}:{wkt:e})):null}function eJ(e){let t=e.replaceAll("]","[").replaceAll('"',"").split("[").map(e=>e.trim()).filter(e=>""!==e),i=t[t.length-1].split(","),r=i[0]?.toLowerCase();if(("epsg"===r||"esri"===r)&&e.endsWith('"]]')){let e=Number(i[1]);if(!isNaN(e)&&0!==e)return e}return 0}function eA(e){if("pamdataset"!==e?.documentElement.tagName?.toLowerCase())return{};let t={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};e.documentElement.childNodes.forEach(e=>{if(1===e.nodeType){if(eB(e,"SRS")){if(!t.spatialReference){let i=eO(e);t.spatialReference=eZ(i)}}else if(eB(e,"Metadata")){if("xml:ESRI"===e.getAttribute("domain")){let{spatialReference:i,transform:r}=function(e){let t=eF(e,"GeodataXform"),i=eZ(eD(t,"SpatialReference/WKID")||eO(t,"SpatialReference/WKT"));if("typens:PolynomialXform"!==t.getAttribute("xsi:type"))return{spatialReference:i,transform:null};let r=eD(t,"PolynomialOrder")??1,a=eP(t,"CoeffX/Double"),n=eP(t,"CoeffY/Double"),s=eP(t,"InverseCoeffX/Double"),l=eP(t,"InverseCoeffY/Double"),o=eE(a,n),u=eE(s,l);return{spatialReference:i,transform:o&&u&&o.length&&u.length?new eN.Z({spatialReference:i,polynomialOrder:r,forwardCoefficients:o,inverseCoefficients:u}):null}}(e);t.transform=r,t.spatialReference||(t.spatialReference=i)}else eM(e,"MDI").forEach(e=>t.metadata[e.getAttribute("key")]=eO(e))}else if(eB(e,"PAMRasterBand")){let i=function(e){let t,i,r,a;let n=eD(e,"NoDataValue"),s=eF(e,"Histograms/HistItem"),l=eD(s,"HistMin"),o=eD(s,"HistMax"),u=eD(s,"BucketCount"),h=eO(s,"HistCounts")?.split("|").map(e=>Number(e));eM(e,"Metadata/MDI").forEach(e=>{let n=Number(e.textContent??e.nodeValue);switch(e.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":t=n;break;case"STATISTICS_MAXIMUM":i=n;break;case"STATISTICS_MEAN":r=n;break;case"STATISTICS_STDDEV":a=n}});let c=eD(e,"Metadata/SourceBandIndex");return{noDataValue:n,histogram:h?.length&&null!=l&&null!=o?{min:l,max:o,size:u||h.length,counts:h}:null,sourceBandIndex:c,statistics:null!=t&&null!=i?{min:t,max:i,avg:r,stddev:a}:null}}(e);null!=i.sourceBandIndex&&null==t.rasterBands[i.sourceBandIndex]?t.rasterBands[i.sourceBandIndex]=i:t.rasterBands.push(i)}}});let i=t.rasterBands;if(i.length){let e=!!i[0].statistics;t.statistics=e?i.map(e=>e.statistics).filter(ek.pC):null;let r=!!i[0].histogram;t.histograms=r?i.map(e=>e.histogram).filter(ek.pC):null}return t}let ez=class extends Y{async open(e){await this.init();let t=await this._fetchData(e),{spatialReference:i,statistics:r,histograms:a,transform:n}=await this._fetchAuxiliaryData(e),s=!i;s&&(i=new U.Z({wkid:3857})),a?.length&&null==r&&(r=(0,ea.Oh)(a));let{width:l,height:o}=t,u=new q.Z({xmin:-.5,ymin:.5-o,xmax:l-.5,ymax:.5,spatialReference:i}),h=n?n.forwardTransform(u):u;if(n){let e=n.forwardCoefficients;e&&0===e[1]&&0===e[2]&&(n=null,u=h)}let c=new eS({source:{extent:h,nativeExtent:u,transform:n,pixelBlocks:[t],statistics:r,histograms:a,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:s},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(c.ioConfig.skipMapInfo=!0),await c.open(),c.source=null,this._set("rasterInfo",c.rasterInfo),this._inMemoryRaster=c}fetchRawTile(e,t,i,r={}){return this._inMemoryRaster.fetchRawTile(e,t,i,r)}async _fetchData(e){let{data:t}=await this.request(this.url,{responseType:"array-buffer",signal:e?.signal}),i=(0,z.y)(t).toUpperCase();if("JPG"!==i&&"PNG"!==i&&"GIF"!==i&&"BMP"!==i)throw new s.Z("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);let r=i.toLowerCase(),a="gif"===r||"bmp"===r||!(0,m.Z)("ios"),n=await this.decodePixelBlock(t,{format:r,useCanvas:a,hasNoZlibMask:!0});if(null==n)throw new s.Z("image-aux-raster:open","the data cannot be decoded");return n}async _fetchAuxiliaryData(e){let t=e?.signal,{skipExtensions:i=[],skipMapInfo:r}=this.ioConfig,a=r||i.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:t}),n=this.datasetFormat,s="JPG"===n?"jgw":"PNG"===n?"pgw":"BMP"===n?"bpw":null,l=s&&i.includes(s)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+s,{responseType:"text",signal:t}),o=await (0,u.as)([a,l]);if(t?.aborted)throw(0,u.zE)();let h=eA(o[0].value?.data);if(!h.transform){let e=o[1].value?o[1].value.data.split("\n").slice(0,6).map(e=>Number(e)):null;h.transform=6===e?.length?new eN.Z({forwardCoefficients:[e[4],e[5],e[0],-e[1],e[2],-e[3]]}):null}return h}};(0,r._)([(0,c.Cb)({type:String,json:{write:!0}})],ez.prototype,"datasetFormat",void 0);let eL=ez=(0,r._)([(0,p.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],ez);var eH=i(36152),eW=i(72659),eG=i(23787),eq=i(43935),ej=i(17709);let eU=class extends Y{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(e){let t;await this.init();let i=e?.signal,r=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:i});r.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let a=r.data;if(this.sourceJSON=a,!a)throw new s.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!a.tileInfo)throw new s.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo(),this.tileType=a.cacheType,null==this.tileType&&(["jpg","jpeg","png","png8","png24","png32","mixed"].includes(a.tileInfo.format.toLowerCase())?this.tileType="Map":"lerc"===a.tileInfo.format.toLowerCase()?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=a.name?.slice(a.name.indexOf("/")+1)??"";let n=await this._fetchRasterInfo({signal:i});if(null==n)throw new s.Z("image-server-raster:open","cannot initialize image service");(0,ej.n$)(n,a);let l="Map"===this.tileType?function(e,t){if(!e)return null;let{minScale:i,maxScale:r,minLOD:a,maxLOD:n}=t;if(null!=a&&null!=n)return O.Z.fromJSON({...e,lods:e.lods.filter(({level:e})=>null!=e&&e>=a&&e<=n)});if(0!==i&&0!==r){let t=e=>Math.round(1e4*e)/1e4,a=i?t(i):1/0,n=r?t(r):-1/0;return O.Z.fromJSON({...e,lods:e.lods.filter(e=>{let i=t(e.scale);return i<=a&&i>=n})})}return O.Z.fromJSON(e)}(a.tileInfo,a):O.Z.fromJSON(a.tileInfo);(0,eH.O3)(l);let[o,u]=this._computeMinMaxLOD(n,l),{extent:h,pixelSize:c}=n,f=.5/n.width*c.x,m=Math.max(c.x,c.y),{lods:d}=l;("Map"!==this.tileType&&0!==a.maxScale||Math.abs(c.x-c.y)>f||!d.some(e=>Math.abs(e.resolution-m)<f))&&(c.x=c.y=o.resolution,n.width=Math.ceil((h.xmax-h.xmin)/c.x-.1),n.height=Math.ceil((h.ymax-h.ymin)/c.y-.1));let p=o.level-u.level,[y,g]=l.size,x=[],w=[];d.forEach((e,t)=>{e.level>=u.level&&e.level<=o.level&&x.push({x:e.resolution,y:e.resolution}),t<d.length-1&&w.push(Math.round(10*e.resolution/d[t+1].resolution)/10)}),x.sort((e,t)=>e.x-t.x);let b=this.computeBlockBoundary(h,y,g,l.origin,x,p),v=x.length>1?x.slice(1):null;a.transposeInfo&&(t={tileSize:[a.transposeInfo.rows,a.transposeInfo.cols],packetSize:n.keyProperties?._yxs.PacketSize??0});let I=w.length<=1||w.length>=3&&w.slice(0,-1).every(e=>e===w[0])?w[0]??2:Math.round(10/(u.resolution/o.resolution)**(-1/p))/10;if(n.storageInfo=new E.Z({blockWidth:l.size[0],blockHeight:l.size[1],pyramidBlockWidth:l.size[0],pyramidBlockHeight:l.size[1],pyramidResolutions:v,pyramidScalingFactor:I,compression:l.format,origin:l.origin,firstPyramidLevel:1,maximumPyramidLevel:p,tileInfo:l,transposeInfo:t,blockBoundary:b}),function(e){let{extent:t,spatialReference:i}=e;t.xmin>-1&&t.xmax>181&&i?.wkid&&i.isGeographic&&(e.nativeExtent=e.extent,e.transform=new eq.Z,e.extent=e.transform.forwardTransform(t))}(n),this._set("rasterInfo",n),a.capabilities.toLowerCase().includes("tilemap")){let e={tileInfo:n.storageInfo.tileInfo,parsedUrl:(0,eW.mN)(this.url),url:this.url,tileServers:[]};this._tilemapCache=new eG.y({layer:e})}}async fetchRawTile(e,t,i,r={}){let{storageInfo:a,extent:n}=this.rasterInfo,{transposeInfo:s}=a,l=null!=s&&!!r.transposedVariableName;if(this._slices&&!l&&null==r.sliceId)return null;let o=l?0:a.maximumPyramidLevel-e+this._levelOffset,u=`${this.url}/tile/${o}/${t}/${i}`,h=this._slices?l?{variable:r.transposedVariableName}:{sliceId:r.sliceId||0}:null,{data:c}=await this.request(u,{query:h,responseType:"array-buffer",signal:r.signal});if(!c)return null;let f=l?s.tileSize:a.tileInfo.size,m=await this.decodePixelBlock(c,{width:f[0],height:f[1],planes:null,pixelType:null,isPoint:"Elevation"===this.tileType,returnInterleaved:l,noDataValue:this.rasterInfo.noDataValue});if(null==m)return null;let d=a.blockBoundary[e];if("jpg"!==a.compression||i>d.minCol&&i<d.maxCol&&t>d.minRow&&t<d.maxRow)return m;let{origin:p,blockWidth:y,blockHeight:g}=a,{x:x,y:w}=this.getPyramidPixelSize(e),b=Math.round((n.xmin-p.x)/x)%y,v=Math.round((n.xmax-p.x)/x)%y||y,I=Math.round((p.y-n.ymax)/w)%g,_=Math.round((p.y-n.ymin)/w)%g||g,R=i===d.minCol?b:0,S=t===d.minRow?I:0,T=i===d.maxCol?v:y,C=t===d.maxRow?_:g;return(0,L.pW)(m,{x:R,y:S},{width:T-R,height:C-S}),m}getSliceIndex(e){if(!this._slices||null==e||0===e.length)return null;for(let t=0;t<this._slices.length;t++){let i=this._slices[t].multidimensionalDefinition;if(i.length===e.length&&!i.some(t=>{let i=e.find(e=>t.variableName===e.variableName&&e.dimensionName===t.dimensionName);return!i||(Array.isArray(t.values[0])?`${t.values[0][0]}-${t.values[0][1]}`:t.values[0])!==(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])}))return t}return null}async fetchVariableStatisticsHistograms(e,t){let i=this.request(this.url+"/statistics",{query:{variable:e,f:"json"},signal:t}).then(e=>e.data?.statistics),r=this.request(this.url+"/histograms",{query:{variable:e,f:"json"},signal:t}).then(e=>e.data?.histograms),a=await Promise.all([i,r]);return a[0]&&a[0].forEach(e=>{e.avg=e.mean,e.stddev=e.standardDeviation}),a[1]?.[0]?.counts?.length||(a[1]=null),{statistics:a[0]||null,histograms:a[1]||null}}async computeBestPyramidLevelForLocation(e,t={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(e,0,t.datumTransformation);if(null===i)return null;let r=0,{maximumPyramidLevel:a}=this.rasterInfo.storageInfo,n=a-r+this._levelOffset,s=i.srcLocation;for(;n>=0;){try{if("available"===await this._tilemapCache.fetchAvailability(n,i.row,i.col,t))break}catch{}if(n--,r++,null===(i=this.identifyPixelLocation(s,r,t.datumTransformation)))return null}return -1===n||null==i?null:r}async _fetchRasterInfo(e){let t=this.sourceJSON;if("Map"===this.tileType){let e=t.fullExtent||t.extent,i=Math.ceil((e.xmax-e.xmin)/t.pixelSizeX-.1),r=Math.ceil((e.ymax-e.ymin)/t.pixelSizeY-.1),a=U.Z.fromJSON(t.spatialReference||e.spatialReference),n=new j.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:a});return new e_.Z({width:i,height:r,bandCount:3,extent:q.Z.fromJSON(e),spatialReference:a,pixelSize:n,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}let{signal:i}=e,r=(0,ej.gh)(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),a=t.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:i}).then(e=>e.data?.slices).catch(()=>null):null,n=await Promise.all([r,a]);return this._slices=n[1],n[0]}_fixScaleInServiceInfo(){let{sourceJSON:e}=this;e.minScale&&e.minScale<0&&(e.minScale=0),e.maxScale&&e.maxScale<0&&(e.maxScale=0)}_computeMinMaxLOD(e,t){let{pixelSize:i}=e,r=.5/e.width*i.x,{lods:a}=t,n=t.lodAt(Math.max.apply(null,a.map(e=>e.level))),s=t.lodAt(Math.min.apply(null,a.map(e=>e.level))),{tileType:l}=this;if("Map"===l)return this._levelOffset=a[0].level,[n,s];if("Raster"===l)return[a.find(e=>e.resolution===i.x)??n,s];let{minScale:o,maxScale:u}=this.sourceJSON,h=n;u>0&&((h=a.find(e=>Math.abs(e.scale-u)<r))||(h=a.filter(e=>e.scale>u).sort((e,t)=>e.scale>t.scale?1:-1)[0]??n));let c=s;return o>0&&(c=a.find(e=>Math.abs(e.scale-o)<r)??s,this._levelOffset=c.level-s.level),[h,c]}};(0,r._)([(0,c.Cb)({type:String,json:{write:!0}})],eU.prototype,"datasetFormat",void 0),(0,r._)([(0,c.Cb)()],eU.prototype,"tileType",void 0);let e$=eU=(0,r._)([(0,p.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],eU);var eV=i(14111);let eY=new Map;eY.set("Int8","s8"),eY.set("UInt8","u8"),eY.set("Int16","s16"),eY.set("UInt16","u16"),eY.set("Int32","s32"),eY.set("UInt32","u32"),eY.set("Float32","f32"),eY.set("Float64","f32"),eY.set("Double64","f32");let eX=new Map;eX.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),eX.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),eX.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),eX.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let eK=class extends Y{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(e){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);let t=e?e.signal:null,i=await this.request(this.url,{responseType:"xml",signal:t}),{rasterInfo:r,files:a}=this._parseHeader(i.data),{skipMapInfo:n,skipExtensions:s=[]}=this.ioConfig;if(!s.includes("aux.xml")&&!n){let t=await this._fetchAuxiliaryData(e);null!=t&&(r.statistics=t.statistics??r.statistics,r.histograms=t.histograms,t.histograms&&null==r.statistics&&(r.statistics=(0,ea.Oh)(t.histograms)))}n&&this.updateImageSpaceRasterInfo(r),this._set("rasterInfo",r),this._files=a;let l=await this.request(a.index,{responseType:"array-buffer",signal:t});this._storageIndex=function(e){let t,i,r,a,n,s;if(e.byteLength%16>0)throw Error("invalid array buffer must be multiples of 16");if(eV.f){for(i=new Uint8Array(e),r=new Uint8Array(a=new ArrayBuffer(e.byteLength)),n=0;n<e.byteLength/4;n++)for(s=0;s<4;s++)r[4*n+s]=i[4*n+3-s];t=new Uint32Array(a)}else t=new Uint32Array(e);return t}(l.data);let{blockWidth:o,blockHeight:u}=this.rasterInfo.storageInfo,h=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:c,height:f}=this.rasterInfo,m=[],d=this._getBandSegmentCount(),p=0,y=-1;for(;p<this._storageIndex.length;){let e=Math.ceil(c/o/h**++y)-1,t=Math.ceil(f/u/h**y)-1;p+=(e+1)*(t+1)*d*4,m.push({maxRow:t,maxCol:e,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=m,y>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=y),this.updateTileInfo()}async fetchRawTile(e,t,i,r={}){let{blockWidth:a,blockHeight:n,blockBoundary:s}=this.rasterInfo.storageInfo,l=s[e];if(!l||l.maxRow<t||l.maxCol<i||l.minRow>t||l.minCol>i)return null;let{bandCount:o,pixelType:u}=this.rasterInfo,{ranges:h,actualTileWidth:c,actualTileHeight:f}=this._getTileLocation(e,t,i);if(!h||0===h.length)return null;if(0===h[0].from&&0===h[0].to){let e=new Uint8Array(a*n);return new K.Z({width:a,height:n,pixels:void 0,mask:e,validPixelCount:0})}let{bandIds:m}=this.ioConfig,d=this._getBandSegmentCount(),p=[],y=0;for(y=0;y<d;y++)m&&!m.includes(y)||p.push(this.request(this._files.data,{range:{from:h[y].from,to:h[y].to},responseType:"array-buffer",signal:r.signal}));let g=await Promise.all(p),x=new Uint8Array(g.map(e=>e.data.byteLength).reduce((e,t)=>e+t)),w=[],b=0;for(y=0;y<d;y++)w.push(b),x.set(new Uint8Array(g[y].data),b),b+=g[y].data.byteLength;let v=eX.get(this.rasterInfo.storageInfo.compression).decoderFormat,I=await this.decodePixelBlock(x.buffer,{width:a,height:n,format:v,planes:m?.length||o,offsets:w,pixelType:u});if(null==I)return null;let{noDataValue:_}=this.rasterInfo;if(null!=_&&"lerc"!==v&&!I.mask&&null!=(_=_[0])){let e=I.width*I.height,t=new Uint8Array(e);if(Math.abs(_)>1e24)for(y=0;y<e;y++)Math.abs((I.pixels[0][y]-_)/_)>1e-6&&(t[y]=1);else for(y=0;y<e;y++)I.pixels[0][y]!==_&&(t[y]=1);I.mask=t}let R=0,S=0;if(c!==a||f!==n){let e=I.mask;if(e)for(y=0;y<n;y++)if(S=y*a,y<f)for(R=c;R<a;R++)e[S+R]=0;else for(R=0;R<a;R++)e[S+R]=0;else for(e=new Uint8Array(a*n),I.mask=e,y=0;y<f;y++)for(S=y*a,R=0;R<c;R++)e[S+R]=1}return I}_getBandSegmentCount(){return eX.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(e,t,i){let{blockWidth:r,blockHeight:a,pyramidScalingFactor:n}=this.rasterInfo.storageInfo,{width:s,height:l}=this.rasterInfo,o=this._getBandSegmentCount(),u,h,c,f=0,m=0;for(c=0;c<e;c++)f+=(u=Math.ceil(s/r/(m=n**c)))*(h=Math.ceil(l/a/m));u=Math.ceil(s/r/(m=n**e)),h=Math.ceil(l/a/m),f+=t*u+i,f*=4*o;let d=this._storageIndex.subarray(f,f+4*o),p=0,y=0,g=[];for(let e=0;e<o;e++)y=(p=4294967296*d[4*e]+d[4*e+1])+4294967296*d[4*e+2]+d[4*e+3],g.push({from:p,to:y});return{ranges:g,actualTileWidth:i<u-1?r:Math.ceil(s/m)-r*(u-1),actualTileHeight:t<h-1?a:Math.ceil(l/m)-a*(h-1)}}_parseHeader(e){let t,i;let r=eF(e,"MRF_META/Raster");if(!r)throw new s.Z("mrf:open","not a valid MRF format");let a=eF(r,"Size"),n=parseInt(a.getAttribute("x"),10),l=parseInt(a.getAttribute("y"),10),o=parseInt(a.getAttribute("c"),10),u=(eO(r,"Compression")||"none").toLowerCase();if(!eX.has(u))throw new s.Z("mrf:open","currently does not support compression "+u);let h=eO(r,"DataType")||"UInt8",c=eY.get(h);if(null==c)throw new s.Z("mrf:open","currently does not support pixel type "+h);let f=eF(r,"PageSize"),m=parseInt(f.getAttribute("x"),10),d=parseInt(f.getAttribute("y"),10),p=eF(r,"DataValues");if(p&&null!=(i=p.getAttribute("NoData"))&&(t=i.trim().split(" ").map(e=>parseFloat(e))),eF(e,"MRF_META/CachedSource"))throw new s.Z("mrf:open","currently does not support MRF referencing other data files");let y=eF(e,"MRF_META/GeoTags"),g=eF(y,"BoundingBox"),x,w=!1;if(null!=g){let e=parseFloat(g.getAttribute("minx")),t=parseFloat(g.getAttribute("miny")),i=parseFloat(g.getAttribute("maxx")),r=parseFloat(g.getAttribute("maxy")),a=eO(y,"Projection")||"",n=U.Z.WGS84;if("LOCAL_CS[]"!==a){if(a.toLowerCase().startsWith("epsg:")){let e=Number(a.slice(5));isNaN(e)||0===e||(n=new U.Z({wkid:e}))}else n=eZ(a)??U.Z.WGS84}else w=!0,n=new U.Z({wkid:3857});(x=new q.Z(e,t,i,r)).spatialReference=n}else w=!0,x=new q.Z({xmin:-.5,ymin:.5-l,xmax:n-.5,ymax:.5,spatialReference:new U.Z({wkid:3857})});let b=eF(e,"MRF_META/Rsets"),v=parseInt(b?.getAttribute("scale")||"2",10),I=x.spatialReference,_=new E.Z({origin:new j.Z({x:x.xmin,y:x.ymax,spatialReference:I}),blockWidth:m,blockHeight:d,pyramidBlockWidth:m,pyramidBlockHeight:d,compression:u,pyramidScalingFactor:v}),R=new j.Z({x:x.width/n,y:x.height/l,spatialReference:I}),S=new e_.Z({width:n,height:l,extent:x,isPseudoSpatialReference:w,spatialReference:I,bandCount:o,pixelType:c,pixelSize:R,noDataValue:t,storageInfo:_}),T=eO(e,"datafile"),C=eO(e,"IndexFile");return{rasterInfo:S,files:{mrf:this.url,index:C||this.url.replace(".mrf",".idx"),data:T||this.url.replace(".mrf",eX.get(u).blobExtension)}}}async _fetchAuxiliaryData(e){try{let{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return eA(t)}catch{return null}}};(0,r._)([(0,c.Cb)()],eK.prototype,"_files",void 0),(0,r._)([(0,c.Cb)()],eK.prototype,"_storageIndex",void 0),(0,r._)([(0,c.Cb)({type:String,json:{write:!0}})],eK.prototype,"datasetFormat",void 0);let eQ=eK=(0,r._)([(0,p.j)("esri.layers.support.rasterDatasets.MRFRaster")],eK);var e0=i(88563);class e1{static get supportedVersions(){return[5]}static parse(e){let t;let i=new DataView(e),r=3&i.getUint8(0);if(3!==r)return{header:{version:r},recordSet:null};let a=i.getUint32(4,!0),n=i.getUint16(8,!0),s=i.getUint16(10,!0),l=32,o=[],u=[];if(3===r){for(;13!==i.getUint8(l);)t=String.fromCharCode(i.getUint8(l+11)).trim(),o.push({name:(0,e0.f)(new Uint8Array(e,l,11)),type:t,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(t)],length:i.getUint8(l+16)}),l+=32;if(l+=1,o.length>0)for(;u.length<a&&e.byteLength-l>s;){let t=[];32===i.getUint8(l)?(l+=1,o.forEach(i=>{if("C"===i.type)t.push((0,e0.f)(new Uint8Array(e,l,i.length)).trim());else if("N"===i.type)t.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,l,i.length)).trim(),10));else if("F"===i.type)t.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,l,i.length)).trim()));else if("D"===i.type){let r=String.fromCharCode.apply(null,new Uint8Array(e,l,i.length)).trim();t.push(new Date(parseInt(r.substring(0,4),10),parseInt(r.substring(4,6),10)-1,parseInt(r.substring(6,8),10)))}l+=i.length}),u.push(t)):l+=s}}return{header:{version:r,recordCount:a,headerByteCount:n,recordByteCount:s},fields:o,records:u,recordSet:function(e){let t=e.fields,i=e.records,r=t.some(e=>"oid"===e.name.toLowerCase())?"OBJECTID":"OID",a=[{name:r,type:"esriFieldTypeOID",alias:"OID"}].concat(t.map(e=>({name:e.name,type:"esriFieldType"+e.typeName,alias:e.name}))),n=a.map(e=>e.name),s=[],l=0,o=0;return i.forEach(e=>{let t={};for(t[r]=l++,o=1;o<n.length;o++)t[n[o]]=e[o-1];s.push({attributes:t})}),{displayFieldName:"",fields:a,features:s}}({fields:o,records:u})}}}var e2=i(1684),e5=i(71794);let e3=(e,t)=>e.get(t)?.values,e4=(e,t)=>e.get(t)?.values?.[0],e8=class extends Y{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(e){await this.init();let t=e?e.signal:null,{data:i}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:t});if(!i)throw new s.Z("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));let{littleEndian:r,firstIFDPos:a,isBigTiff:n}=(0,e2.cK)(i),o=[];await this._readIFDs(o,i,r,a,0,n?8:4,t);let{imageInfo:u,rasterInfo:h}=function(e){let t=(0,e2.FI)(e),{width:i,height:r,tileWidth:a,tileHeight:n,planes:s,pixelType:l,compression:o,firstPyramidLevel:u,maximumPyramidLevel:h,pyramidBlockWidth:c,pyramidBlockHeight:f,pyramidResolutions:m,tileBoundary:d,affine:p,metadata:y}=t,g=eZ(t.extent.spatialReference?.wkt||t.extent.spatialReference?.wkid),x=!!t.isPseudoGeographic;null==g&&(x=!0,g=new U.Z({wkid:3857}));let w=new q.Z({...t.extent,spatialReference:g}),b=new j.Z(w?{x:w.xmin,y:w.ymax,spatialReference:g}:{x:0,y:0}),v=new E.Z({blockWidth:a,blockHeight:n,pyramidBlockWidth:c,pyramidBlockHeight:f,compression:o,origin:b,firstPyramidLevel:u,maximumPyramidLevel:h,pyramidResolutions:m,blockBoundary:d}),I=new j.Z({x:(w.xmax-w.xmin)/i,y:(w.ymax-w.ymin)/r,spatialReference:g}),_=y?{BandProperties:y.bandProperties,DataType:y.dataType}:{},R=null,S=e4(e[0],"PHOTOMETRICINTERPRETATION"),T=e3(e[0],"COLORMAP");if(S<=3&&T?.length>3&&T.length%3==0){R=[];let e=T.length/3;for(let t=0;t<e;t++)R.push([t,T[t]>>>8,T[t+e]>>>8,T[t+2*e]>>>8])}let C=new e_.Z({width:i,height:r,bandCount:s,pixelType:l,pixelSize:I,storageInfo:v,spatialReference:g,isPseudoSpatialReference:x,keyProperties:_,extent:w,colormap:R,statistics:y?y.statistics:null});if(p?.length&&(C.nativeExtent=new q.Z({xmin:-.5,ymin:.5-r,xmax:i-.5,ymax:.5,spatialReference:g}),C.transform=new eN.Z({polynomialOrder:1,forwardCoefficients:[p[2]+p[0]/2,p[5]-p[3]/2,p[0],p[3],-p[1],-p[4]]}),C.extent=C.transform.forwardTransform(C.nativeExtent),C.pixelSize=new j.Z({x:(w.xmax-w.xmin)/i,y:(w.ymax-w.ymin)/r,spatialReference:g}),v.origin.x=-.5,v.origin.y=.5),m){let{x:e,y:t}=C.pixelSize;m.forEach(i=>{i.x*=e,i.y*=t})}return{imageInfo:t,rasterInfo:C}}(o),c=(0,e2.ee)(o),f=(0,e2.I7)(o);if(this._headerInfo={littleEndian:r,isBigTiff:n,ifds:o,pyramidIFDs:c,maskIFDs:f,...u},this._set("rasterInfo",h),!u.isSupported)throw new s.Z("tiffraster:open","this tiff is not supported: "+u.message);if(!u.tileWidth)throw new s.Z("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");h.isPseudoSpatialReference&&l.Z.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");let m=o[0].get("PREDICTOR")?.values?.[0];if(3===o[0].get("SAMPLEFORMAT")?.values?.[0]&&2===m)throw new s.Z("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");let{skipMapInfo:d,skipExtensions:p=[]}=this.ioConfig;if(!p.includes("aux.xml")&&!d){let t=await this._fetchAuxiliaryMetaData(e);null!=t&&function(e,t){if(t.statistics=e.statistics??t.statistics,t.histograms=e.histograms,e.histograms&&null==t.statistics&&(t.statistics=(0,ea.Oh)(e.histograms)),e.transform&&null==t.transform){t.transform=e.transform,t.nativeExtent=t.extent;let i=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new j.Z({x:(i.xmax-i.xmin)/t.width,y:(i.ymax-i.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=i}t.isPseudoSpatialReference&&e.spatialReference&&(t.spatialReference=e.spatialReference,t.extent.spatialReference=t.nativeExtent.spatialReference=t.storageInfo.origin.spatialReference=t.spatialReference)}(t,h)}p.includes("vat.dbf")||1!==h.bandCount||"u8"!==h.pixelType||d||(h.attributeTable=await this._fetchAuxiliaryTable(e),null!=h.attributeTable&&(h.keyProperties.DataType="thematic")),d&&this.updateImageSpaceRasterInfo(h),this.updateTileInfo()}async fetchRawTile(e,t,i,r={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(e,t,i))return null;let a=await this._fetchRawTiffTile(e,t,i,!1,r);if(null!=a&&this._headerInfo.hasMaskBand){let n=await this._fetchRawTiffTile(e,t,i,!0,r);null!=n&&n.pixels[0]instanceof Uint8Array&&(a.mask=n.pixels[0])}return a}async _readIFDs(e,t,i,r,a,n=4,s){if(!r)return null;(r>=t.byteLength||r<0)&&(t=(await this.request(this.url,{range:{from:r+a,to:r+a+this._bufferSize},responseType:"array-buffer",signal:s})).data,a=r+a,r=0);let l=await this._readIFD(t,i,r,a,e5.Z.tiffTags,n,s);if(e.push(l.ifd),!l.nextIFD)return null;await this._readIFDs(e,t,i,l.nextIFD-a,a,n,s)}async _readIFD(e,t,i,r,a=e5.Z.tiffTags,n=4,s){if(!e)return null;let l=(0,e2.vr)(e,t,i,r,a,n);if(l.success){let i=[];if(l.ifd?.forEach(e=>{e.values||i.push(e)}),i.length>0){let a=i.map(e=>e.offlineOffsetSize).filter(ek.pC),n=Math.min.apply(null,a.map(e=>e[0]));if(Math.min.apply(null,a.map(e=>e[0]+e[1]))-n<=this._bufferSize){let{data:a}=await this.request(this.url,{range:{from:n,to:n+this._bufferSize},responseType:"array-buffer",signal:s});e=a,r=n,i.forEach(i=>(0,e2.Dq)(e,t,i,r))}}if(l.ifd?.has("GEOKEYDIRECTORY")){let i=l.ifd.get("GEOKEYDIRECTORY"),a=i?.values;if(a&&a.length>4){let n=a[0]+"."+a[1]+"."+a[2],l=await this._readIFD(e,t,i.valueOffset+6-r,r,e5.Z.geoKeys,2,s);i.data=l.ifd,i.data&&i.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[n]})}}return l}if(l.requiredBufferSize&&l.requiredBufferSize!==e.byteLength)return(e=(await this.request(this.url,{range:{from:r,to:r+l.requiredBufferSize+4},responseType:"array-buffer",signal:s})).data).byteLength<l.requiredBufferSize?null:this._readIFD(e,t,0,r,e5.Z.tiffTags,4,s)}async _fetchRawTiffTile(e,t,i,r,a={}){let n,s,l;let o=this._getTileLocation(e,t,i,r);if(!o)return null;let{ranges:u,actualTileWidth:h,actualTileHeight:c,ifd:f}=o,m=u.map(e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:a.signal})),d=await Promise.all(m),p=d.map(e=>e.data.byteLength).reduce((e,t)=>e+t),y=1===d.length?d[0].data:new ArrayBuffer(p),g=[0],x=[0];if(d.length>1){let e=new Uint8Array(y);for(let t=0,i=0;t<d.length;t++){let r=d[t].data;e.set(new Uint8Array(r),i),g[t]=i,i+=r.byteLength,x[t]=r.byteLength}}let{blockWidth:w,blockHeight:b}=this.getBlockWidthHeight(e),v=await this.decodePixelBlock(y,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:f,offsets:g,sizes:x},width:w,height:b,planes:null,pixelType:null});if(null==v)return null;if(h!==w||c!==b){let e=v.mask;if(e)for(n=0;n<b;n++)if(l=n*w,n<c)for(s=h;s<w;s++)e[l+s]=0;else for(s=0;s<w;s++)e[l+s]=0;else for(e=new Uint8Array(w*b),v.mask=e,n=0;n<c;n++)for(l=n*w,s=0;s<h;s++)e[l+s]=1}return v}_getTileLocation(e,t,i,r=!1){let{firstPyramidLevel:a,blockBoundary:n}=this.rasterInfo.storageInfo,s=0===e?0:e-(a-1),{_headerInfo:l}=this;if(!l)return null;let o=r?l.maskIFDs[s]:0===s?l?.ifds[0]:l?.pyramidIFDs[s-1];if(!o)return null;let u=(0,e2.If)(o,l),h=e3(o,"TILEOFFSETS");if(void 0===h)return null;let c=e3(o,"TILEBYTECOUNTS"),{minRow:f,minCol:m,maxRow:d,maxCol:p}=n[s];if(t>d||i>p||t<f||i<m)return null;let y=e4(o,"IMAGEWIDTH"),g=e4(o,"IMAGELENGTH"),x=e4(o,"TILEWIDTH"),w=e4(o,"TILELENGTH"),b=[];if(u){let{bandCount:e}=this.rasterInfo;for(let r=0;r<e;r++){let e=r*(d+1)*(p+1)+t*(p+1)+i;b[r]={from:h[e],to:h[e]+c[e]-1}}}else{let e=t*(p+1)+i;b.push({from:h[e],to:h[e]+c[e]-1})}for(let e=0;e<b.length;e++)if(null==b[e].from||!b[e].to||b[e].to<0)return null;return{ranges:b,ifd:o,actualTileWidth:i===p&&y%x||x,actualTileHeight:t===d&&g%w||w}}async _fetchAuxiliaryMetaData(e){try{let{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return eA(t)}catch{return null}}async _fetchAuxiliaryTable(e){try{let{data:t}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:e?.signal}),i=e1.parse(t);return i?.recordSet?ee.Z.fromJSON(i.recordSet):null}catch{return null}}};(0,r._)([(0,c.Cb)()],e8.prototype,"_files",void 0),(0,r._)([(0,c.Cb)()],e8.prototype,"_headerInfo",void 0),(0,r._)([(0,c.Cb)()],e8.prototype,"_bufferSize",void 0),(0,r._)([(0,c.Cb)({type:String,json:{write:!0}})],e8.prototype,"datasetFormat",void 0);let e6=e8=(0,r._)([(0,p.j)("esri.layers.support.rasterDatasets.TIFFRaster")],e8),e7=new Map;e7.set("MRF",{desc:"Meta Raster Format",constructor:eQ}),e7.set("TIFF",{desc:"GeoTIFF",constructor:e6}),e7.set("RasterTileServer",{desc:"Raster Tile Server",constructor:e$}),e7.set("JPG",{desc:"JPG Raster Format",constructor:eL}),e7.set("PNG",{desc:"PNG Raster Format",constructor:eL}),e7.set("GIF",{desc:"GIF Raster Format",constructor:eL}),e7.set("BMP",{desc:"BMP Raster Format",constructor:eL}),e7.set("CovJSON",{desc:"COVJSON Raster Format",constructor:eC}),e7.set("MEMORY",{desc:"In Memory Raster Format",constructor:eS});class e9{static get supportedFormats(){let e=new Set;return e7.forEach((t,i)=>e.add(i)),e}static async open(e){let{url:t,ioConfig:i,source:r,sourceJSON:a}=e,n=e.datasetFormat??i?.datasetFormat;null==n&&(t.includes(".")?n=t.slice(t.lastIndexOf(".")+1).toUpperCase():"coverage"===r?.type?.toLowerCase()?n="CovJSON":r?.extent&&r.pixelblocks&&(n="MEMORY")),"OVR"===n||"TIF"===n?n="TIFF":"JPG"===n||"JPEG"===n||"JFIF"===n?n="JPG":"COVJSON"===n&&(n="CovJSON"),t.toLowerCase().includes("/imageserver")&&!t.toLowerCase().includes("/wcsserver")&&(n="RasterTileServer");let l={url:t,source:r,sourceJSON:a,datasetFormat:n,ioConfig:i??{bandIds:null,sampling:null}};if(Object.keys(l).forEach(e=>{null==l[e]&&delete l[e]}),n){if(!this.supportedFormats.has(n))throw new s.Z("rasterfactory:open","not a supported format "+n);if("CRF"===n)throw new s.Z("rasterfactory:open",`cannot open raster: ${t}`);let i=new(e7.get(n)).constructor(l);return await i.open({signal:e.signal}),i}let o=Array.from(e7.keys()).filter(e=>"CovJSON"!==e&&"Memory"!==e),u=0,h=()=>{if(!(n=o[u++])||"CRF"===n)return null;let t=new(e7.get(n)).constructor(l);return t.open({signal:e.signal}).then(()=>t).catch(()=>h())};return h()}static register(e,t,i){e7.has(e.toUpperCase())||e7.set(e.toUpperCase(),{desc:t,constructor:i})}}var te=i(43488),tt=i(86264);let ti=class extends(0,x.h7)((0,em.M)((0,eh.q)((0,ec.I)((0,w.N)(eu((0,ed.n)((0,g.Y)((0,ef.Q)((0,o.R)((0,n.J)(y.Z))))))))))){constructor(...e){super(...e),this._primaryRasters=[],this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=(0,u.Ds)(async(e,t,r)=>{let{save:a,saveAs:n}=await i.e(28627).then(i.bind(i,28627));switch(e){case tt.x.SAVE:return a(this,t);case tt.x.SAVE_AS:return n(this,r,t)}})}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){let t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(u.r9).then(()=>this._openRaster(t))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){let e=[new ep.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new ep.Z({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],t=this.raster?.rasterInfo??this.serviceRasterInfo,i=t?.attributeTable,r=null!=i?i.fields:null;if(r){let t=r.filter(e=>"oid"!==e.type&&"value"!==e.name.toLowerCase()).map(e=>{let t=e.clone();return t.name="Raster."+e.name,t});e.push(...t)}let a=t?.dataType,n=t?.multidimensionalInfo;if(("vector-magdir"===a||"vector-uv"===a)&&null!=n){let t=n.variables[0].unit?.trim(),i="Magnitude"+(t?` (${t})`:"");e.push(new ep.Z({name:"Raster.Magnitude",alias:i,domain:null,editable:!1,type:"double"})),e.push(new ep.Z({name:"Raster.Direction",alias:"Direction (\xb0)",domain:null,editable:!1,type:"double"}))}return e}createPopupTemplate(e){let{rasterFields:t}=this,i=new Set(t.map(({name:e})=>e).filter(e=>"raster.servicepixelvalue.raw"!==e.toLowerCase()));return(0,te.eZ)({fields:t,title:this.title},{...e,visibleFieldNames:i})}async generateRasterInfo(e,t){if(e=(0,f.TJ)(M.Z,e),await this.load(),!e||"none"===e.functionName?.toLowerCase())return this.serviceRasterInfo;try{let{rasterInfo:i}=await this._openFunctionRaster(e,t);return i}catch(e){if(e instanceof s.Z)throw e;throw new s.Z("imagery-tile-layer","the given raster function is not supported")}}async save(e){return this._debouncedSaveOperations(tt.x.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(tt.x.SAVE_AS,t,e)}write(e,t){let i=this._primaryRasters[0]??this.raster;if(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(e,t);if(t?.messages){let e=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new s.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e}'`,{layer:this}))}return null}async _openRaster(e){let t=!1;if(this.raster)await this._openFromRaster(this.raster,e),t="Function"===this.raster.datasetFormat;else{let{url:t,rasterFunction:i,source:r}=this;if(!t&&!r)throw new s.Z("imagery-tile-layer:open","missing url or source parameter");r?await this._openFromSource(r,e):i?await this._openFromUrlWithRasterFunction(t,i,e):await this._openFromUrl(t,e)}let i=this.raster.rasterInfo;if(!i)throw new s.Z("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",t?i:this._primaryRasters[0].rasterInfo),this._set("spatialReference",i.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,null!=this.sourceJSON){let e="Map"===this.raster.tileType&&null!=this.sourceJSON.minLOD&&null!=this.sourceJSON.maxLOD?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(e,{origin:"service"})}else this.read({tileInfo:this.serviceRasterInfo?.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),"Map"===this.raster.tileType&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles((0,h.YP)(()=>this.customParameters,e=>{this.raster&&(this.raster.ioConfig.customFetchParameters=e)}))}async _openFromRaster(e,t){e.rasterInfo||await e.open({signal:t}),this._primaryRasters="Function"===e.datasetFormat?e.primaryRasters.rasters:[e],this.url||(this.url=this._primaryRasters[0].url)}async _openFromUrlWithRasterFunction(e,t,i){let r=[e];t&&(0,er.G8)(t.toJSON(),r);let a=await Promise.all(r.map(e=>e9.open({url:e,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:i}))),n=a.findIndex(e=>null==e);if(n>-1)throw new s.Z("imagery-tile-layer:open",`cannot open raster: ${r[n]}`);return this._primaryRasters=a,this._initializeWithFunctionRaster(t)}async _openFromUrl(e,t){let i=await e9.open({url:e,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:t});if(null==i)throw new s.Z("imagery-tile-layer:open",`cannot open raster: ${e}`);this._primaryRasters=[i],this.raster=i}async _openFromSource(e,t){let i="the tiled imagery data source is not supported",r="coverage"===e.type?.toLowerCase()?"CovJSON":e.extent&&e.pixelBlock?"MEMORY":null;if(!r)throw new s.Z("imagery-tile-layer:open",i);"MEMORY"===r&&(e={extent:e.extent,pixelBlocks:[e.pixelBlock]});let a=await e9.open({url:"",source:e,datasetFormat:r,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:t});if(null==a)throw new s.Z("imagery-tile-layer:open",i);this._primaryRasters=[a],this.rasterFunction?await this._initializeWithFunctionRaster(this.rasterFunction):this.raster=a}async _openFunctionRaster(e,t){let i={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(e=>i[e.url]=e);let r=new ei({rasterFunction:(0,er.Ue)(e.functionDefinition?.toJSON()??e.toJSON(),i)});return await r.open(t),r}async _initializeWithFunctionRaster(e,t){try{this.raster=await this._openFunctionRaster(e,t)}catch(e){e instanceof s.Z&&l.Z.getLogger(this).error("imagery-tile-layer:open",e.message),l.Z.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0]}}};(0,r._)([(0,c.Cb)({clonable:!1})],ti.prototype,"_primaryRasters",void 0),(0,r._)([(0,c.Cb)({type:[f.z8],json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==this.bandIds?.join(",")}}}}})],ti.prototype,"bandIds",void 0),(0,r._)([(0,c.Cb)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,d.J)(ey.cl)],ti.prototype,"interpolation",void 0),(0,r._)([(0,c.Cb)(T.rn)],ti.prototype,"legendEnabled",void 0),(0,r._)([(0,c.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],ti.prototype,"isReference",void 0),(0,r._)([(0,c.Cb)({type:["show","hide"]})],ti.prototype,"listMode",void 0),(0,r._)([(0,c.Cb)({json:{read:!0,write:!0}})],ti.prototype,"blendMode",void 0),(0,r._)([(0,c.Cb)()],ti.prototype,"sourceJSON",void 0),(0,r._)([(0,c.Cb)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],ti.prototype,"version",void 0),(0,r._)([(0,c.Cb)({readOnly:!0,json:{read:!1}})],ti.prototype,"type",void 0),(0,r._)([(0,c.Cb)({type:["ArcGISTiledImageServiceLayer"]})],ti.prototype,"operationalLayerType",void 0),(0,r._)([(0,c.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(e,t,i){t[i]=!e}}}})],ti.prototype,"popupEnabled",void 0),(0,r._)([(0,c.Cb)({type:a.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],ti.prototype,"popupTemplate",void 0),(0,r._)([(0,c.Cb)({readOnly:!0})],ti.prototype,"defaultPopupTemplate",null),(0,r._)([(0,c.Cb)({readOnly:!0,type:[ep.Z]})],ti.prototype,"fields",void 0),(0,r._)([(0,c.Cb)({readOnly:!0,type:[ep.Z]})],ti.prototype,"rasterFields",null),(0,r._)([(0,c.Cb)({constructOnly:!0})],ti.prototype,"source",void 0);let tr=ti=(0,r._)([(0,p.j)("esri.layers.ImageryTileLayer")],ti)},23787:function(e,t,i){i.d(t,{y:function(){return _}});var r,a=i(86641),n=i(54748),s=i(94761),l=i(49443),o=i(94605),u=i(1662);i(37180);var h=i(57812),c=i(35313),f=i(31124),m=i(20128),d=i(93417),p=i(72659),y=i(89312);i(65223),i(3457);var g=i(64186),x=i(49176),w=i(61764),b=i(13677);class v{constructor(e){!function(e){if(!e?.location)throw new o.Z("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new o.Z("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new o.Z("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new o.Z("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new o.Z("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}(e);let{location:t,data:i}=e;this.location=Object.freeze((0,w.d9)(t));let r=this.location.width,a=this.location.height,n=!0,s=!0,l=function(e,t=!1){return e<=b.c8?t?Array(e).fill(0):Array(e):new Uint32Array(e)}(Math.ceil(r*a/32)),u=0;for(let e=0;e<i.length;e++){let t=e%32;i[e]?(s=!1,l[u]|=1<<t):n=!1,31===t&&++u}s?(this._availability="unavailable",this.byteSize=40):n?(this._availability="available",this.byteSize=40):(this._availability=l,this.byteSize=40+(0,b.Xw)(l))}getAvailability(e,t){if("unavailable"===this._availability||"available"===this._availability)return this._availability;let i=(e-this.location.top)*this.location.width+(t-this.location.left),r=i>>5,a=this._availability;return r<0||r>a.length?"unknown":a[r]&1<<i%32?"available":"unavailable"}static fromDefinition(e,t){let i=e.service.request||n.Z,{row:r,col:a,width:s,height:l}=e,u={query:{f:"json"}};return t=t?{...u,...t}:u,i(function(e){let t;if(e.service.tileServers?.length){let i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}else t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;let i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then(e=>e.data).catch(e=>{if(422===e?.details?.httpStatus)return{location:{top:r,left:a,width:s,height:l},valid:!0,data:Array(s*l).fill(0)};throw e}).then(e=>{if(e.location&&(e.location.top!==r||e.location.left!==a||e.location.width!==s||e.location.height!==l))throw new o.Z("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:r,left:a,width:s,height:l}});return v.fromJSON(e)})}static fromJSON(e){return Object.freeze(new v(e))}}function I(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}let _=r=class extends s.Z{constructor(e){super(e),this._pendingTilemapRequests={},this.request=n.Z,this.size=32,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new h.z(2*l.Y.MEGABYTES),this.addHandles((0,m.YP)(()=>{let{layer:e}=this;return[e?.parsedUrl,e?.tileServers,e?.apiKey,e?.customParameters]},()=>this._initializeTilemapDefinition(),m.nn))}get effectiveMinLOD(){return this.minLOD??this.layer.tileInfo.lods[0].level}get effectiveMaxLOD(){return this.maxLOD??this.layer.tileInfo.lods[this.layer.tileInfo.lods.length-1].level}getAvailability(e,t,i){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return"unavailable";let r=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return r?r.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,r){return!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD?Promise.reject(new o.Z("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i})):this._fetchTilemap(e,t,i,r).catch(e=>e).then(r=>{if(r instanceof v){let a=r.getAvailability(t,i);if("unavailable"===a)throw new o.Z("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i});return a}if((0,f.D_)(r))throw r;return"unknown"})}fetchAvailabilityUpsample(e,t,i,r,a){r.level=e,r.row=t,r.col=i;let n=this.layer.tileInfo;n.updateTileInfo(r);let s=this.fetchAvailability(e,t,i,a).catch(e=>{if((0,f.D_)(e))throw e;if(n.upsampleTile(r))return this.fetchAvailabilityUpsample(r.level,r.row,r.col,r,a);throw e});return this._fetchAvailabilityUpsamplePrefetch(r.id,e,t,i,a,s),s}async _fetchAvailabilityUpsamplePrefetch(e,t,i,a,n,s){if(!this._prefetchingEnabled||null==e)return;let l=`prefetch-${e}`;if(this.hasHandles(l))return;let o=new AbortController;s.then(()=>o.abort(),()=>o.abort());let h=!1,c=(0,u.kB)(()=>{h||(h=!0,o.abort())});if(this.addHandles(c,l),await (0,d.MU)(10,o.signal).catch(()=>{}),h||(h=!0,this.removeHandles(l)),(0,f.Hc)(o))return;let m=new x.f(e,t,i,a),p={...n,signal:o.signal},y=this.layer.tileInfo;for(let e=0;r._prefetches.length<r._maxPrefetch&&y.upsampleTile(m);++e){let e=this.fetchAvailability(m.level,m.row,m.col,p);r._prefetches.push(e);let t=()=>{r._prefetches.removeUnordered(e)};e.then(t,t)}}_fetchTilemap(e,t,i,r){if(!this.layer.tileInfo.lodAt(e)||e<this.effectiveMinLOD||e>this.effectiveMaxLOD)return Promise.reject(new o.Z("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));let a=this._tmpTilemapDefinition,n=this._tilemapFromCache(e,t,i,a);if(n)return Promise.resolve(n);let s=r?.signal;return r={...r,signal:null},new Promise((e,t)=>{(0,f.fu)(s,()=>t((0,f.zE)()));let i=I(a),n=this._pendingTilemapRequests[i];if(!n){n=v.fromDefinition(a,r).then(e=>(this._tilemapCache.put(i,e,e.byteSize),e));let e=()=>{delete this._pendingTilemapRequests[i]};this._pendingTilemapRequests[i]=n,n.then(e,e)}n.then(e,t)})}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;let{parsedUrl:e,apiKey:t,customParameters:i}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:(0,p.B7)({...e.query,...i,token:t??e.query?.token}),tileServers:this.layer.tileServers,request:this.request},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,r){r.level=e,r.row=t-t%this.size,r.col=i-i%this.size;let a=I(r);return this._tilemapCache.get(a)}get test(){}};_._maxPrefetch=4,_._prefetches=new c.Z({initialSize:r._maxPrefetch}),(0,a._)([(0,y.Cb)({constructOnly:!0})],_.prototype,"layer",void 0),(0,a._)([(0,y.Cb)({constructOnly:!0})],_.prototype,"minLOD",void 0),(0,a._)([(0,y.Cb)({constructOnly:!0})],_.prototype,"maxLOD",void 0),(0,a._)([(0,y.Cb)({constructOnly:!0})],_.prototype,"request",void 0),(0,a._)([(0,y.Cb)({constructOnly:!0})],_.prototype,"size",void 0),_=r=(0,a._)([(0,g.j)("esri.layers.support.TilemapCache")],_)},56239:function(e,t,i){i.d(t,{OE:function(){return c},Gc:function(){return d},Qg:function(){return f},Rq:function(){return o},gX:function(){return m},z2:function(){return u},ET:function(){return h},Vx:function(){return p}}),i(55066);class r{constructor(e=15e3,t=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,t)}decreaseRefCount(e,t){let i=e+"/"+t,r=this._cachedBlocks;if(r.has(i)){let e=r.get(i);return e.refCount--,e.refCount<=0&&(r.delete(i),e.controller&&e.controller.abort()),e.refCount}return 0}getBlock(e,t){let i=e+"/"+t,r=this._cachedBlocks;if(r.has(i)){let e=r.get(i);return e.ts=Date.now(),e.refCount++,r.delete(i),r.set(i,e),e.block}return null}putBlock(e,t,i,r){let a=this._cachedBlocks,n=e+"/"+t;if(a.has(n)){let e=a.get(n);e.ts=Date.now(),e.refCount++}else a.set(n,{block:i,ts:Date.now(),refCount:1,controller:r});this._trim(),this._updateTimer()}deleteBlock(e,t){let i=this._cachedBlocks,r=e+"/"+t;i.has(r)&&i.delete(r)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(null!=this._timer)return;let e=this._cachedBlocks;this._timer=setInterval(()=>{let t=Array.from(e),i=Date.now();for(let r=0;r<t.length&&t[r][1].ts<=i-this._duration;r++)e.delete(t[r][0]);0===e.size&&this._clearTimer()},this._interval)}_trim(){let e=this._cachedBlocks;if(-1===this._size||this._size>=e.size)return;let t=Array.from(e);for(let i=0;i<t.length-this._size;i++)e.delete(t[i][0])}_clearTimer(){null!=this._timer&&(clearInterval(this._timer),this._timer=null)}}var a=i(40845),n=i(33876);let s=new Map,l=new r;function o(e,t){return null==t?e:`${e}?sliceId=${t}`}function u(e,t){let i={extent:null,rasterInfo:t,cache:new Map},r=s.get(e);return r?(r.push(i),r.length-1):(s.set(e,[i]),0)}function h(e,t){let i=s.get(e);i&&(i[t]=null,i.some(e=>null!=e)||s.delete(e))}function c(e,t,i){let r=s.get(e);if(!r)return null==t?l.decreaseRefCount(e,i):0;if(null==t||null==r[t])return l.decreaseRefCount(e,i);let a=r[t]?.cache,n=a?.get(i);if(a&&n){if(n.refCount--,0===n.refCount){a.delete(i);for(let e=0;e<r.length;e++)r[e]?.cache.delete(i);n.controller&&n.controller.abort()}return n.refCount}return 0}function f(e,t,i){let r=s.get(e);if(!r)return null==t?l.getBlock(e,i):null;if(null==t||null==r[t]){for(let e=0;e<r.length;e++){let t=r[e]?.cache.get(i);if(t)return t.refCount++,t.block}return l.getBlock(e,i)}let a=r[t]?.cache.get(i);if(a)return a.refCount++,a.block;for(let e=0;e<r.length;e++){if(e===t||!r[e])continue;let a=r[e]?.cache,n=a?.get(i);if(a&&n)return n.refCount++,a.set(i,n),n.block}return null}function m(e,t,i,r,a=null){let n=s.get(e);if(!n)return void(null==t&&l.putBlock(e,i,r,a));if(null==t||null==n[t])return void l.putBlock(e,i,r,a);let o={refCount:1,block:r,isResolved:!1,isRejected:!1,controller:a};r.then(()=>o.isResolved=!0).catch(()=>o.isRejected=!0),n[t]?.cache.set(i,o)}function d(e,t,i){let r=s.get(e);r?null!=t&&null!=r[t]?r[t]?.cache.delete(i):l.deleteBlock(e,i):null==t&&l.deleteBlock(e,i)}function p(e,t,i,r,l,o,u=null){let h=function(e,t){let i=s.get(e);return i?i[t]??null:null}(e,t);if(!h)return;let c=h.extent,{cache:f,rasterInfo:m}=h;if(c&&c.xmin===i.xmin&&c.xmax===i.xmax&&c.ymin===i.ymin&&c.ymax===i.ymax)return;r=r??0;let d=i.clone().normalize(),{spatialReference:p,transform:y}=m,g=new Set;for(let e=0;e<d.length;e++){let t=d[e];if(t.xmax-t.xmin<=r||t.ymax-t.ymin<=r)continue;let i=(0,a.tB)(t,p,u);null!=y&&(i=y.inverseTransform(i));let s=new n.Z({x:r,y:r,spatialReference:t.spatialReference});if(null==l&&!(l=(0,a.VO)(s,p,t,u)))return;let{pyramidLevel:h,pyramidResolution:c,excessiveReading:f}=(0,a.kr)(l,m,o||"closest");if(f)return;let{storageInfo:x}=m,{origin:w}=x,b={x:Math.max(0,Math.floor((i.xmin-w.x)/c.x)),y:Math.max(0,Math.floor((w.y-i.ymax)/c.y))},v=Math.ceil((i.xmax-i.xmin)/c.x-.1),I=Math.ceil((i.ymax-i.ymin)/c.y-.1),_=h>0?x.pyramidBlockWidth:x.blockWidth,R=h>0?x.pyramidBlockHeight:x.blockHeight,S=Math.max(0,Math.floor(b.x/_)-1),T=Math.max(0,Math.floor(b.y/R)-1),C=Math.floor((b.x+v-1)/_)+1,k=Math.floor((b.y+I-1)/R)+1;for(let e=T;e<=k;e++)for(let t=S;t<=C;t++)g.add(`${h}/${e}/${t}`)}f.forEach((e,t)=>{if(!g.has(t)){let e=f.get(t);(null==e||e.isResolved||e.isRejected)&&f.delete(t)}}),h.extent={xmin:i.xmin,ymin:i.ymin,xmax:i.xmax,ymax:i.ymax}}}}]);