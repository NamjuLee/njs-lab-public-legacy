"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[15443],{15443:function(t,s,e){e.r(s),e.d(s,{AStart:function(){return u},NodeAStart:function(){return r},Solution:function(){return i},aStartPropagation:function(){return h}});class i{destroy(){}constructor(t){let s=[];for(let t=0;t<7;++t)s.push(new n(t));s[0].push(s[1]),s[0].push(s[2]),s[1].push(s[3]),s[1].push(s[4]),s[2].push(s[5]),s[2].push(s[6]);let e=0,i=[];(t=>{let s=[];for(t[0].visit=!0,s.push(t[0]),i.push(t[0]);s.length>0;){let t=s.shift();for(let e=0;e<t.connection.length;++e){let n=t.connection[e];n.visit||(n.visit=!0,i.push(n),s.push(n))}if(e++>100)break}})(s),s=[];for(let t=0;t<7;++t)s.push(new n(t));s[0].push(s[1]),s[0].push(s[2]),s[1].push(s[3]),s[1].push(s[4]),s[2].push(s[5]),s[2].push(s[6]);let u=[],r=t=>{if(!t.visit){t.visit=!0,u.push(t);for(let s=0;s<t.connection.length;++s)r(t.connection[s])}};r(s[0]),h()}}class n{push(t){this.connection.push(t),t.connection.push(this)}constructor(t){this.visit=!1,this.id=-1,this.connection=[],this.id=t}}let h=()=>{let t=new r(0,0,0),s=new r(-1,1,1),e=new r(1,1,2),i=new r(-2,2,3),n=new r(-1,2,4),h=new r(1,2,5),u=new r(2,2,6),o=new r(-2,3,7);t.neighbors.push(s,e),s.neighbors.push(t,i,n),e.neighbors.push(t,h,u),i.neighbors.push(s),n.neighbors.push(s),h.neighbors.push(e),u.neighbors.push(e),o.neighbors.push(i)};class u{}u.TYPE={Manhattan:"Manhattan  ",Euclidean:"Euclidean "},u.strength=.01,u.distanceManhattan=(t,s,e,i,n,h)=>Math.abs(t-i)+Math.abs(s-n)+Math.abs(e-h),u.distanceEuclidean=(t,s,e,i,n,h)=>Math.sqrt((t-i)*(t-i)+(s-n)*(s-n)+(e-h)*(e-h)),u.gePath=(t,s,e)=>{let i;u.typeHeuristic=u.distanceEuclidean,e===u.TYPE.Manhattan&&(u.typeHeuristic=u.distanceManhattan);let n=[t],h=[],r=100;for(;r--&&(void 0===(i=u.propagation(n,h,s))||!i.length););return i},u.path=[],u.propagation=(t,s,e)=>{if(!(t.length>0))return u.path;{let i=0;for(let s=0;s<t.length;s++)t[s].f<t[i].f&&(i=s),t[s].f===t[i].f&&t[s].g>t[i].g&&(i=s);let n=t[i];if(n===e)return[n,n.previous,...u.path];u.path=[];let h=n;for(;h.previous;)u.path.push(h.previous),h=h.previous;t.splice(t.indexOf(n),1),s.push(n);let r=n.neighbors;for(let i=0;i<r.length;i++){let h=r[i];if(!s.includes(h)&&!h.blocked){let s=n.g+u.heuristic(h,n)*u.strength;if(t.includes(h))continue;t.push(h),h.g=s,h.h=u.heuristic(h,e),h.f=h.g+h.h,h.previous=n}}return}},u.heuristic=(t,s)=>u.typeHeuristic(t.x,t.y,t.z,s.x,s.y,s.z);class r{constructor(t,s,e){this.id=-1,this.f=0,this.h=0,this.g=0,this.x=0,this.y=0,this.z=0,this.neighbors=[],this.previous=void 0,this.blocked=!1,this.id=e,this.x=t,this.y=s}}}}]);