"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[99288],{99288:function(e,t,i){i.r(t),i.d(t,{Solution:function(){return n}});let r=new Float32Array([0,.5,0,-.5,-.5,0,.5,-.5,0]);class n{async initWebGPU(){if(!navigator.gpu)throw Error("Not Support WebGPU");let e=await navigator.gpu.requestAdapter({powerPreference:"high-performance"});if(!e)throw Error("No Adapter Found");let t=await e.requestDevice();this.ctx=this.canvas.getContext("webgpu");let i=navigator.gpu.getPreferredCanvasFormat?navigator.gpu.getPreferredCanvasFormat():this.ctx.getPreferredFormat(e);window.devicePixelRatio,this.canvas.width=this.divHost.clientWidth,this.canvas.height=this.divHost.clientHeight,this.ctx.configure({device:t,format:i,alphaMode:"opaque"}),this.size={width:this.canvas.width,height:this.canvas.height},this.device=t,this.format=i,this.initPipeline(this.device,this.format)}destroy(){this.divHost.removeChild(this.canvas)}async initPipeline(e,t){let i=await e.createRenderPipelineAsync({label:"Basic Pipline",layout:"auto",vertex:{module:e.createShaderModule({code:"\n@vertex\nfn main(@location(0) position : vec3<f32>) -> @builtin(position) vec4<f32> {\n    return vec4<f32>(position, 1.0);\n}\n"}),entryPoint:"main",buffers:[{arrayStride:12,attributes:[{shaderLocation:0,offset:0,format:"float32x3"}]}]},fragment:{module:e.createShaderModule({code:"\n@group(0) @binding(0) var<uniform> color : vec4<f32>;\n\n@fragment\nfn main() -> @location(0) vec4<f32> {\n    return color;\n}\n"}),entryPoint:"main",targets:[{format:t}]},primitive:{topology:"triangle-list"}}),n=e.createBuffer({label:"GPUBuffer store vertex",size:r.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST});e.queue.writeBuffer(n,0,r);let a=e.createBuffer({label:"GPUBuffer store rgba color",size:16,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});e.queue.writeBuffer(a,0,new Float32Array([1,1,0,1]));let s=e.createBindGroup({label:"Uniform Group with colorBuffer",layout:i.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:a}}]});this.pipelineObj={pipeline:i,vertexBuffer:n,colorBuffer:a,uniformGroup:s},this.run()}run(){var e,t;this.draw(this.device,this.ctx,this.pipelineObj),null===(e=document.querySelector('input[type="color"]'))||void 0===e||e.addEventListener("input",e=>{let t=e.target.value,i=+("0x"+t.slice(1,3))/255,r=+("0x"+t.slice(3,5))/255,n=+("0x"+t.slice(5,7))/255;this.device.queue.writeBuffer(this.pipelineObj.colorBuffer,0,new Float32Array([i,r,n,1])),this.draw(this.device,this.ctx,this.pipelineObj)}),null===(t=document.querySelector('input[type="range"]'))||void 0===t||t.addEventListener("input",e=>{let t=+e.target.value;r[0]=0+t,r[3]=-.5+t,r[6]=.5+t,this.device.queue.writeBuffer(this.pipelineObj.vertexBuffer,0,r),this.draw(this.device,this.ctx,this.pipelineObj)}),window.addEventListener("resize",()=>{this.canvas.width=this.divHost.clientWidth,this.canvas.height=this.divHost.clientHeight,this.draw(this.device,this.ctx,this.pipelineObj)})}draw(e,t,i){let r=e.createCommandEncoder(),n=t.getCurrentTexture().createView(),a=r.beginRenderPass({colorAttachments:[{view:n,clearValue:{r:0,g:0,b:0,a:1},loadOp:"clear",storeOp:"store"}]});a.setPipeline(i.pipeline),a.setBindGroup(0,i.uniformGroup),a.setVertexBuffer(0,i.vertexBuffer),a.draw(3),a.end(),e.queue.submit([r.finish()])}constructor(e){this.divHost=document.getElementById(e),this.canvas=document.createElement("canvas"),this.divHost.appendChild(this.canvas),this.initWebGPU()}}}}]);