"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[32809],{32809:function(t,e,i){i.r(e),i.d(e,{CalciteIcon:function(){return s},defineCustomElement:function(){return r}});var n=i(18717);/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
 * v2.11.1
 */let s=n.I,r=n.d},18717:function(t,e,i){i.d(e,{I:function(){return d},d:function(){return b}});var n=i(68060),s=i(1706),r=i(4366),c=i(88941);/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
 * v2.11.1
 */let a={},o={},l={s:16,m:24,l:32};function h({icon:t,scale:e}){let i=l[e],n=function(t){let e=!isNaN(Number(t.charAt(0))),i=t.split("-");if(i.length>0){let e=/[a-z]/i;t=i.map((t,i)=>t.replace(e,function(t,e){return 0===i&&0===e?t:t.toUpperCase()})).join("")}return e?`i${t}`:t}(t),s="F"===n.charAt(n.length-1),r=s?n.substring(0,n.length-1):n;return`${r}${i}${s?"F":""}`}async function u(t){let e=h(t),i=a[e];if(i)return i;o[e]||(o[e]=fetch((0,n.K3)(`./assets/icon/${e}.json`)).then(t=>t.json()).catch(()=>(console.error(`"${e}" is not a valid calcite-ui-icon name`),"")));let s=await o[e];return a[e]=s,s}let d=(0,n.GH)(class extends n.mv{constructor(){super(),this.__registerHost(),this.__attachShadow(),this.icon=null,this.flipRtl=!1,this.scale="m",this.textLabel=void 0,this.pathData=void 0,this.visible=!1}connectedCallback(){this.visible||this.waitUntilVisible(()=>{this.visible=!0,this.loadIconPathData()})}disconnectedCallback(){this.intersectionObserver?.disconnect(),this.intersectionObserver=null}render(){let{el:t,flipRtl:e,pathData:i,scale:r,textLabel:c}=this,a=(0,s.a)(t),o=l[r],h=!!c,u=[].concat(i||"");return(0,n.h)(n.AA,{key:"cc43afdebd39df596be0a30677a9be5ba0db4fe0","aria-hidden":(0,s.t)(!h),"aria-label":h?c:null,role:h?"img":null},(0,n.h)("svg",{key:"a40833fc10f8bb7f287eb0c75f7437cb18880603","aria-hidden":"true",class:{"flip-rtl":"rtl"===a&&e,svg:!0},fill:"currentColor",height:"100%",viewBox:`0 0 ${o} ${o}`,width:"100%",xmlns:"http://www.w3.org/2000/svg"},u.map(t=>"string"==typeof t?(0,n.h)("path",{d:t}):(0,n.h)("path",{d:t.d,opacity:"opacity"in t?t.opacity:1}))))}async loadIconPathData(){let{icon:t,scale:e,visible:i}=this;if(!(0,c.i)()||!t||!i)return;let n={icon:t,scale:e},s=a[h(n)]||await u(n);t===this.icon&&(this.pathData=s)}waitUntilVisible(t){if(this.intersectionObserver=(0,r.c)("intersection",e=>{e.forEach(e=>{e.isIntersecting&&(this.intersectionObserver.disconnect(),this.intersectionObserver=null,t())})},{rootMargin:"50px"}),!this.intersectionObserver){t();return}this.intersectionObserver.observe(this.el)}static get assetsDirs(){return["assets"]}get el(){return this}static get watchers(){return{icon:["loadIconPathData"],scale:["loadIconPathData"]}}static get style(){return":host{display:inline-flex;color:var(--calcite-ui-icon-color)}:host([scale=s]){inline-size:16px;block-size:16px;min-inline-size:16px;min-block-size:16px}:host([scale=m]){inline-size:24px;block-size:24px;min-inline-size:24px;min-block-size:24px}:host([scale=l]){inline-size:32px;block-size:32px;min-inline-size:32px;min-block-size:32px}.flip-rtl{transform:scaleX(-1)}.svg{display:block}:host([hidden]){display:none}[hidden]{display:none}"}},[1,"calcite-icon",{icon:[513],flipRtl:[516,"flip-rtl"],scale:[513],textLabel:[1,"text-label"],pathData:[32],visible:[32]},void 0,{icon:["loadIconPathData"],scale:["loadIconPathData"]}]);function b(){"undefined"!=typeof customElements&&["calcite-icon"].forEach(t=>{"calcite-icon"===t&&(customElements.get(t)||customElements.define(t,d))})}b()},4366:function(t,e,i){i.d(e,{c:function(){return s}});var n=i(88941);/*!
 * All material copyright ESRI, All Rights Reserved, unless otherwise specified.
 * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.
 * v2.11.1
 */function s(t,e,i){if((0,n.i)())return new(function(t){class e extends window.MutationObserver{constructor(t){super(t),this.observedEntry=[],this.callback=t}observe(t,e){return this.observedEntry.push({target:t,options:e}),super.observe(t,e)}unobserve(t){let e=this.observedEntry.filter(e=>e.target!==t);this.observedEntry=[],this.callback(super.takeRecords(),this),this.disconnect(),e.forEach(t=>this.observe(t.target,t.options))}}return"intersection"===t?window.IntersectionObserver:"mutation"===t?e:window.ResizeObserver}(t))(e,i)}}}]);