"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[76605],{76605:function(e,t,s){s.r(t),s.d(t,{execute:function(){return r}});var a=s(94605);function r(e,t){let s=t.responseType;s?"array-buffer"!==s&&"blob"!==s&&"json"!==s&&"native"!==s&&"native-request-init"!==s&&"text"!==s&&(s="text"):s="json",t.responseType=s;let r=t.signal;return delete t.signal,globalThis.invokeStaticMessage("request",{url:e,options:t},{signal:r}).then(async n=>{let u,i,l,o,c;if(n.data){if(n.data instanceof ArrayBuffer){if(!("json"!==s&&"text"!==s&&"blob"!==s||(u=new Blob([n.data]),"json"!==s&&"text"!==s||(o=await u.text(),"json"!==s)))){try{i=JSON.parse(o||null)}catch(r){let s={...r,url:e,requestOptions:t};throw new a.Z("request:server",r.message,s)}if(i.error){let s={...i.error,url:e,requestOptions:t};throw new a.Z("request:server",i.error.message,s)}}}else"native"===s&&(n.data.signal=r,l=await fetch(n.data.url,n.data),n.httpStatus=l.status)}switch(s){case"blob":c=u;break;case"json":c=i;break;case"native":c=l;break;case"text":c=o;break;default:c=n.data}return{data:c,httpStatus:n.httpStatus,requestOptions:t,ssl:n.ssl,url:e}})}}}]);