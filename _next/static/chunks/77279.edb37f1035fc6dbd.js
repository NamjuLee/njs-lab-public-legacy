"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[77279],{46049:function(e,t,i){i.d(t,{h:function(){return o},z:function(){return n}});var r=i(81519);let n=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[0,0,0],i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[0,0,0],n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],o=r.Ue(),a=r.Ue(),s=r.Ue(),u=r.Ue(),h=r.Ue();r.vc(u,t),r.aC(o,i[0]),r.gT(a,i[1]),r.QO(s,i[2]),r.xJ(h,n),r.Jp(e,o,h),r.Jp(e,a,e),r.Jp(e,s,e),r.Jp(e,u,e)},o=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[2,2,4],i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[0,0,0],n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[0,1,0],o=r.Ue(),a=r.Ue(),s=r.Ue();return r.G3(a,2*Math.PI/5,e,.1,100),r.zB(o,t,i,n),r.Jp(s,a,o),{viewMatrix:o,projectionMatrix:a,viewProjectionMatrix:s,cameraOption:{eye:t,center:i,zoomMax:100,zoomSpeed:2}}}},77279:function(e,t,i){i.r(t),i.d(t,{Solution:function(){return u}});var r=i(81519);let n=function(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,r=e.createBuffer({size:t.byteLength,usage:i,mappedAtCreation:!0});return new Float32Array(r.getMappedRange()).set(t),r.unmap(),r};var o=i(46049);let a=()=>({positions:new Float32Array([-1,-1,1,1,-1,1,1,1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,1,-1,1,-1,-1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,1,-1,-1,-1,-1,-1,-1,1,-1,1,1,1,1,1,1,1,-1,1,1,-1,-1,1,-1,-1,1,1,-1,-1,1,-1,-1,-1,1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1]),colors:new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1,1,0,1])}),s="\n// vertex shader\n\nstruct Uniforms {\n    mvpMatrix : mat4x4<f32>,\n};\n@binding(0) @group(0) var<uniform> uniforms : Uniforms;\n\nstruct Output {\n    @builtin(position) Position : vec4<f32>,\n    @location(0) vColor : vec4<f32>,\n};\n\n@vertex\nfn vs_main(@location(0) pos: vec4<f32>, @location(1) color: vec4<f32>) -> Output {\n    var output: Output;\n    output.Position = uniforms.mvpMatrix * pos;\n    output.vColor = color;\n    return output;\n}\n\n// fragment shader\n\n @fragment\nfn fs_main(@location(0) vColor: vec4<f32>) -> @location(0) vec4<f32> {\n    return vColor;\n}\n";class u{async initWebGPU(){if(!navigator.gpu)throw Error("Not Support WebGPU");let e=await navigator.gpu.requestAdapter({powerPreference:"high-performance"});if(!e)throw Error("No Adapter Found");let t=await e.requestDevice();this.ctx=this.canvas.getContext("webgpu");let i=navigator.gpu.getPreferredCanvasFormat?navigator.gpu.getPreferredCanvasFormat():this.ctx.getPreferredFormat(e);window.devicePixelRatio,this.canvas.width=this.divHost.clientWidth,this.canvas.height=this.divHost.clientHeight,this.ctx.configure({device:t,format:i,alphaMode:"opaque"}),this.size={width:this.canvas.width,height:this.canvas.height},this.device=t,this.format=i,this.initPipeline(this.device,this.format)}async initPipeline(e,t){arguments.length>2&&void 0!==arguments[2]&&arguments[2];let i=a(),u=i.positions.length/3,h=n(e,i.positions),c=n(e,i.colors),d=e.createRenderPipeline({layout:"auto",vertex:{module:e.createShaderModule({code:s}),entryPoint:"vs_main",buffers:[{arrayStride:12,attributes:[{shaderLocation:0,format:"float32x3",offset:0}]},{arrayStride:12,attributes:[{shaderLocation:1,format:"float32x3",offset:0}]}]},fragment:{module:e.createShaderModule({code:s}),entryPoint:"fs_main",targets:[{format:this.format}]},primitive:{topology:"triangle-list",cullMode:"back"},depthStencil:{format:"depth24plus",depthWriteEnabled:!0,depthCompare:"less"}}),l=r.Ue(),f=r.Ue(),p=r.Ue();p=(0,o.h)(this.canvas.width/this.canvas.height).viewProjectionMatrix;let v=e.createBuffer({size:64,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),g=e.createBindGroup({layout:d.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:v,offset:0,size:64}}]}),m={colorAttachments:[{view:this.ctx.getCurrentTexture().createView(),clearValue:{r:0,g:0,b:0,a:1},loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:e.createTexture({size:[this.canvas.width,this.canvas.height,1],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}).createView(),depthLoadValue:1,depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store"}};(0,o.z)(l),r.Jp(f,p,l),e.queue.writeBuffer(v,0,f);let U=e.createCommandEncoder(),P=U.beginRenderPass(m);P.setPipeline(d),P.setVertexBuffer(0,h),P.setVertexBuffer(1,c),P.setBindGroup(0,g),P.draw(u),P.end(),e.queue.submit([U.finish()])}destroy(){for(this.device.destroy();this.divHost.lastElementChild;)this.divHost.removeChild(this.divHost.lastElementChild)}constructor(e){this.divHost=document.getElementById(e),this.canvas=document.createElement("canvas"),this.divHost.appendChild(this.canvas),this.initWebGPU()}}}}]);